{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "905f2204-57b5-4589-b2d7-4d8b817b2609",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9b240612-0632-4847-b51d-fc3dc10e8a74",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e78617c1-817d-45ce-9384-fc76e5141a20",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dba66eba-9177-4503-9c91-42a42b0ae23a"
                }
              }
            ]
          },
          {
            "id": "b08c73f4-9fd0-4bc6-b77a-e4696cd69a01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f4e39eb-453e-43d4-a6c3-92ad8cee5e28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "22dbf52e-b44f-4102-ada1-8230df61e3c4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bc305fb7-a80e-41c7-a4bb-720434201bd6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "50e71924-8413-43f2-b021-615af0ececa9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd02e563-43f1-4c56-a186-084c75cf5024",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44cd45b8-609d-483c-9505-053f4cc83e63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91b1b82d-57af-4003-bf34-278ff005403a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03620dd4-98f2-45ea-a17d-b56076681904",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1810ddbd-0809-49ad-a7aa-6b93121b3288"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9a55c90-5cb1-48a1-8369-b2b1e1d72b61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "912dd1a3-5cc2-407a-8ed1-bb15924c944b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6909442a-32f7-4f62-82e7-063db9defd05",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fc89077b-8c01-4a80-877c-f684d494d3d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9398bc27-1a19-44a4-a50a-5c71d363c746",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21d87d97-c811-487a-9dbf-0c9b7c86585a"
            }
          }
        ]
      },
      {
        "id": "e5753a40-0e6a-4e9c-ae77-08270a3beefe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8461ba6e-0102-4006-b415-40ca083f8353",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbf89011-6c80-4945-9d68-a601398f9a7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57833f59-d6bf-4091-bc5f-e58e7561108a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f55831d-efa6-4512-bed2-b89e965c4b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6db0947c-a6dd-46fc-a92e-8a13c8cd2b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b8a7b1-6dba-4f34-bcc3-9f1c23db812f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35071f39-de95-416a-8219-b678c8c1909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c8ef0da-ec45-44f6-b859-d39a16200010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c03d23-1458-426e-b5c3-060387bcbfad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb142b-a9ac-4f6a-9850-f0fc714d4f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3b31fd9-e67f-458b-84ac-e1282ec6605c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6bc303b-ac1f-4227-8e47-4d521ab7e4e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4a75a84-a8fc-4a82-baa1-b98c065ad49a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0769eda1-597d-4192-ab4c-33e1b68eca15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61375211-16ba-41f8-ba5a-c3d9b723c7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64257b70-3cbb-403c-9f05-1b040a401dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00658c68-f71e-45c1-aa55-a9377fe605e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ebefad55-4ad7-42f7-ad07-2160e8258ce9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9bf2048b-9c98-4dcf-8edb-98386326e2bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9c021a7-0ce8-492a-ae73-038824b21af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "07aecbfc-4db5-49b5-adb3-876356e163b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6391040d-6c5a-49fc-8aeb-8e74cdea3e75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3cda9faa-967a-47cb-aeaa-269b6b547c9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb0d4fbb-adcc-4987-9f88-a83f5dca75d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f83e89f-754d-4395-a27a-44ad0bcaf405"
            }
          }
        ]
      },
      {
        "id": "05b33a1b-5609-4b0b-b864-fc8b754c90ad",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b41a87a0-1fc2-4712-95f9-d862a96fed7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "276c0788-59a6-4f54-ad17-61825a873d24",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4c1c7a10-cf96-45d7-b3b2-3cc3ec1dd4d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986add84-4732-4b69-bee3-035a98add6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8931829d-267d-4237-a25e-cd5b34d66479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23844af5-94f3-4217-b1a5-8bf39a005539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b18f2e5-ca48-4df9-8f99-24ccea95ba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63633d9-0d3a-4791-bb32-96085a343d18",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f26f08-3246-4107-9d7b-d0a6c5d5e105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f53dcc-e25d-4939-a4dc-6b4d664ce822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a56ad-b6e4-4591-a004-bcfc1fab865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e512ed-4436-442e-a39a-535ba7a1f708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025cae24-5adb-42d3-a251-a2bfba4609df",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b870bd48-4537-457f-ac87-b126ba5dede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a068848-95cd-46ba-a88a-c7a9686404fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b967dba2-81c3-41f9-97ab-c85f29349da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edb44a34-5ea0-4534-a299-7b21fd95fa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34900dc-dd89-44fa-9c94-ae42fe618dda",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e2177e-8956-433b-ac2f-85c769fcf0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f48fc60-3c72-4f8c-9aea-20eac317ecbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138c3b85-e9a9-482d-869d-eabe5a32c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baeaf028-1ddd-4009-b3ab-604b6d49c823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04f649d-5740-43b4-8d0b-7d31cc2350a2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c5447-c006-41b6-b3c3-9244f1d61a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87d9dd5-c281-4133-ae0b-2ef6cb34c2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b2a651-3832-46c1-9ec8-fc931e05f832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9025a69-4f50-4135-b591-970b135e8d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbde8837-095f-4e9a-8aa7-6f6b8407630b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7084eac5-038d-4e22-8be8-972880fd4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa930a6-d188-4632-bae3-a35a413fc9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e120d3b4-9e8c-43a9-8444-80dc499c3137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c3fb367-b2f1-41f8-b295-c06a4766cf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1f5b52-7c04-4824-a358-4cf857da3cc6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bcc275-5465-467d-b6a8-41ec7662a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bd8ce0-f9c9-4521-a194-492c985db448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240fe7b9-1fd7-40df-9676-a56d56a3f333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff3a538-5c9a-49c0-9d3f-a573eec33d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebc745a-e066-467f-a8ed-2bb51264d4d4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6982ebd8-2c2a-402f-9a1e-4d3f7ceb281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9974a5cf-a49b-45a1-91d3-b2ac133b4956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a2ac3c-48b0-4cd2-bdbc-c59dcafea976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736753d6-14f0-4fe2-82ac-cd9640b5c2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6280bb6f-b234-4e14-bf13-0c2a3dd04a02",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edef525-3743-48da-b660-90c224b253fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ade501-07bb-42bb-a819-55f4ac859946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24e5c40-e4bd-46a3-a06e-35caef1ead88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11360a25-d885-4af9-beb9-6e0eb20058b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e17b0eb-7621-4951-8bb3-f86ebd2ffe22",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c864c09c-6dda-4678-98d9-0eb72620ad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a428c6d5-016f-41f9-aebc-d4bd961f4e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabd1739-83ae-498a-bbed-25e95c90cf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d84062f4-ef19-4e53-87af-23b346c7a82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3415a41e-75b3-4d09-9415-3f1b806613c8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b514f72-48f9-4d4d-8b2c-d3d516cb9cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e093eb6-fc4e-4aad-ab16-99f29b507e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bf1f94-41ed-43fe-8134-821071573128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e294ff-3faa-4c0f-a47d-e565f2416b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f7baed-c514-441b-8f77-261f610b427b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ae745f-cbd8-41a2-b3e4-c3c59ce3b710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8acb6e-d9d7-4823-a652-c7072024c3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4809b3-f6e6-42f6-af22-5b4f25e6aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f1da4ad-b2e2-4dba-97c8-9480f79ff893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908812da-e24b-40d6-a6ec-702a136353d6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a3c274-7c80-43c2-bf26-37d4d0990e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19c7435-5b42-4b0e-8010-cd893e185548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8c40e5-0af9-402a-8044-7cc0a0cd98f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458a6de4-3aae-4eb1-a0e8-7ad391fe5e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd5e0f4-c2a9-4624-b361-ece6c40a33b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085f178e-b341-4a24-87bc-690d131aa931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62894af7-c05b-4c44-9266-857229c81286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8f9e8c-f67d-476b-9618-7b55ba5741a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8baaf8f5-3fd7-43e9-88f7-d7209a2c07e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37208f1d-1835-4972-b192-a5ced9601d84",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959ac227-c8b4-42ed-bce5-41250e93c6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5842a2-6126-49e0-a372-7038188a1dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48454c32-41ab-4aad-a77d-ba4e8de1870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19c44e8b-79ec-4f0e-83e2-f49b93c8dc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049b3bf4-277d-4608-9716-75f9936f8d59",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673d7629-0aeb-484f-8422-4a26cc68ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55a7eb4-b6f2-4e40-a741-2997ade33437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e603a78b-9f80-4ef3-ba42-67ad3ed1a387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7fc75a9-7086-4322-bd38-0ab439739d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c26ae6-08f2-46e8-a2b7-2c6ad69df80f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a61f17-58c7-44b4-9948-85ccd2c974bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce0f0fc-4f2b-43b1-909f-9f6673978c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8339dd36-20a6-4309-b1ed-ad798b120323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0200b5a-da17-4238-90eb-6457d752954d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ed73fb-f3c1-4b97-9ffc-872fdebd0314",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24579ed3-ce1d-4d8f-b459-e107a346b49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afab2a61-6a2e-477a-b7de-2a3a0dede4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1958619d-0f8e-4da7-8035-5e6db05e07b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "667199b5-300a-4711-9be9-c3b3b540ee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ae696b-02b6-46c3-a684-9c265e17a0af",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc1627b-6b96-4a30-880d-300e8bf1c105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cfb51d-420a-487a-8486-e7a90423c286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05084ab8-7a2a-4f42-942d-30f4baede035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a0f407-c4c5-4787-87a4-22ec98d466c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f262e1-4768-4a3d-aed7-5a7ae63dfff6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca0f102-01fb-4497-adb5-cd6792f71399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52ceea5-8c17-400d-8802-3c2c90d5856e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e1eaae-781e-49ea-bb83-f08cea224716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06118dce-00fa-4034-a90a-6d8bf47fedc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6638eea4-4df0-4e6a-9c5f-46fa4d44b897",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeaaf28-2c88-45a8-8f5c-6d98a6558419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930bda2b-9262-4af2-92f7-e0850e879c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396ead71-dcdd-4f00-a180-1fcde65fd3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0123daf0-7450-4f90-9e5f-fa2b2047a7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cd48aa-23aa-4791-835f-4c5846e82045",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a9169e-6b26-4f8a-bb19-a838873237c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd612a9b-c415-4fa6-bee5-b419dc3ab40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c9fb62-b6b0-4279-86dd-3e476f089cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cf667d-94c7-4aff-981a-6e2ee9fdc739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022fbd14-a296-4cca-af70-9e562f0a639a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773a9ffa-ddd3-46b2-941f-407e32f3d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b55681-c550-4351-b380-4a0fc0b93e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16547bb8-8e6d-45f1-b67a-4f18242a265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51957139-3ca2-4d8a-8ef3-626373671f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20331e52-71ce-4e88-bdec-ed22e2c31667",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6516b28-c556-4bf9-8f39-64acaadda685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f9f74f-9eb2-4cfa-83ab-2e9b56f2d95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323cdeb0-693b-48e1-876b-1a1fb43dc0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4779de67-9c7b-4bc3-9d7d-a3c14801ce9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbc6517-37b8-4a3f-bb64-6765d2fcadb3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aca5fc-9d09-4cc3-ac62-36d380688db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2182c5-8efa-4426-a781-50bfe83fb876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c112b18-617c-468a-9151-d46b89ae744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "555d1612-7594-47ba-b4fa-362f8f49597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e032ff-7965-4ce5-ae2c-533689cf1dee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9375c23d-f118-44f1-ab1d-e29f022eec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5806be60-677b-45f9-9b74-c975b21354a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0806ed-d0ed-49ad-85ae-7f967617c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52aa8d9a-c8b9-4098-af62-488b130df306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568528f8-e0f3-4b0d-8102-7422a139d06a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31933235-2217-4950-9eec-86fa579166a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4da38a3-314d-4766-82d5-b51538f5a024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59961209-ccce-4852-9028-d7112bfdeea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21676ce0-c48f-4073-bf8d-1dca3e1378dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399bcd93-e81f-472f-bec2-5bafc748f345",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7cca3e-7b82-4656-8d5d-b9488f95d090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6473f5e-bc44-416d-a27a-a7d76799dca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b143f1d8-d0b6-4ef6-aca7-0fe89fb299e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44daf19-523f-4f60-b287-583e373cd67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd02408-5ba0-4cde-89e3-d10672fa3366",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d29c317-974b-4431-97e5-e92e97646677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be454f4-6bca-4885-8bbb-df897355b839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945a489-49eb-49e3-ad88-90f8a6fa29b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2561df5-9b87-4fcc-98b7-7576674c23ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09e6cbf-a1a2-4a45-981a-9ff60558a9e3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af07a7b3-fffe-478e-80de-650824aaf3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3751213-f335-4113-b574-39b120602499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2001246-c81b-4aea-bae5-751bb486b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8fc930-b420-49fa-a72e-547fe7a3da15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128cf3a8-4d80-4f0e-835f-56a69c9192ab",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7681127-0cdd-4e6c-80aa-ffcd89f40298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e71c380-68f6-43ee-b3e4-235970c439da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c96120-230d-4683-98e8-71578792f8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27592d7-74fd-495d-bb3f-88f6a15653b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d574bc9b-ad91-4730-8849-db81efca6454",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3662a6c2-9d5e-4182-9abd-9951fac532d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63c21de-325a-40b0-bc61-446adb9a8c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cc1778-854f-4179-bef4-2d63b7434bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20d19dc-82d9-406d-8457-76e9676d45f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3b703b-d26d-4cf6-9951-2ee358492178",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582379f8-bcdc-4c71-b55a-ea10633735e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec0d904-e56e-428e-9393-68d146b95ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8692d31e-862b-4380-9ff3-5d9b98fa3d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91638e75-3cd7-4fad-85bd-529c2e9f2031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8877883-ca30-4215-b03d-12a9e96c56e4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73e8f54-4c76-4d67-a3d1-706a7a230b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcb3564-883a-4c34-b39b-08a689db5be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2f256d-e3cd-49c3-a030-dc044c789a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f018897-ccfa-4a58-82ce-540bfc4315e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f7191d-cbcc-4244-96cf-bd3f9cddf38b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e538a0-892e-4409-ac57-e3aff4319e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78da52ff-a3db-4a79-acf4-f421313ee48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5aefb3-4057-4c93-8f31-1536fe037080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b8371d-35af-4acc-9b09-67bb3487c8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a297e33-999b-48a3-aaeb-a79ec53d505d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b07cef-7137-4511-a652-66a8e84872e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaabd312-754e-450a-a7f9-b4e3e9901c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeed4a0d-d431-4fe6-b5b0-6d7cf4f32735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8b84ae-6cc7-467d-8c70-f960bb76ae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec583e5d-aa75-4796-b0d8-817d904d16fb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e53f861-b228-40af-beed-ade4dbaf0d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7163647f-c754-4828-b428-602e3913d9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18846071-8c70-4b69-bff9-1f84f5389837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ca8c0f-62a0-4512-83c0-02a1fa27d704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e0c4ea-8a03-4ac3-934e-1c7f16fe61db",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b080c6-a151-4df7-888b-a3161964adfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d172cc24-408d-4eab-ba80-11b9a5d5aab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df358ef3-2af8-4b36-855f-37093256d62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56ba44e9-af1d-4096-a8a9-a37127d8127b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759f6f3-a697-4154-b79d-9b56cf1f61c8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd27e64-f993-45b5-ac51-b04b5d460145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a07f4af-04f3-493f-a366-f738b144e84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b49b7d-11d5-45cd-bcee-1c5e42918504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5ab589-b079-4482-a124-5edcd1c47895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f63b7a-806f-4cba-9cab-688cb06effdf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53202c-0498-4a74-beef-2a5932a61d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f896064c-6565-4231-a1c7-fda285a3ea37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be504b77-ad53-46dd-9f45-6e3d2aa730b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f441fd-520c-4061-891b-489b67ec9c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e467e2e3-43b0-449b-aa77-8489320a5b30",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce180a2-f7f6-4e31-a9cc-bdd06e03274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a99122-cd6a-4f1d-bd7e-c8ba0e9d832c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbdb7e1-9294-45a4-9241-5b4fd193352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d683d9b-46d1-4502-963a-4decc8b59ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e63314-0de3-4de7-9433-678e612f9820",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e231744-0c69-46ef-9681-86e6117cb730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315fd690-febd-422e-8190-f08a70733f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e651665-c65a-45e3-9d43-ed15a3b3ceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ffa3b9-9d2c-49f9-8984-a464f0472120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d489ca7e-85c7-4ee9-b302-cc9789168b0c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1687b382-96d2-4d99-b668-4833822f3201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee11b53c-3f23-4888-a878-955041590296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e91cb6c-c7ef-4127-afa5-5a30ea3e2ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0053433-42c3-4ebd-9048-25dedc191eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f328f9-bee9-4f0d-990e-f011e4db6401",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484e3cb1-939c-48cf-b78d-4976124f489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa57ab6-83be-4ffc-84f4-e6a2bc041a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5976822-3008-480d-b8ab-bcad38857f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a27ddc99-e38d-445b-b921-a42e2af28c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511a659e-1b63-4155-ac44-09fc2cb94ec6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f78e74-e42f-4f80-8a97-49b73550fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c26215-3b56-4ed2-acc5-9510f9f9f387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4e6711-5c48-4f32-834e-d6ef5303f921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdb1d3d-afed-4d3c-958a-b6a54fe5cc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7501ecd-cd34-42e9-b07f-ecabddd920d2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930e913d-6502-4080-8dc9-ba1d17765288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79fbffc-836d-4f5c-8ff7-0ea02a108b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fba3ef4-7df7-461b-b08a-7b88d37823c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb217999-7e8e-4945-8873-3754692a095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9885ab78-c2c3-44ad-98cc-f243ab6c3879",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256010bc-e1ba-42be-a4a3-d414d6e567a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef97fc8b-9147-4ecb-adc7-672030b84d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a75292e-dd79-4c92-a348-42f469062eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a07269-2e83-4129-818c-20dd8a0600b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a840b62c-f4dc-45fb-b34e-eca7108ab2a5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa2531-2a40-476a-a323-c6aecbb3d980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23fba78-66d6-4e7d-9017-488ce3dfc2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28260df9-2f15-4fb0-99d7-8c05ebb5f77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9460f85-73ca-4fd5-8f0f-508f0df22c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec62e5a-c135-47d9-8a50-48bf375426e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c4f410-7c64-4a32-abd0-51d164ad2086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f9d451-5ebf-4712-822b-a72aa799ec8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8310ea5d-50c2-487f-949f-ddb81a0fd859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d7d2ef-920d-4870-bb50-a6e3fd323f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d8db5e-1f49-40d9-9dab-2669ceced28c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebb1968-f419-405d-8740-ba90d8555770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5dee35-2cc4-4ec3-9305-032fe8b2efee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d9ff6-a906-4e83-bf1b-02092ba8975f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2493558f-542f-4772-bba4-7cce994aa323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a38bc9-eb4e-4d89-9e84-71b28874f1f3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20b78f-76e7-41e4-8be3-b1931c5c0aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad5aaf4-5e5d-43fe-b7f7-7da420e63f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbbc48a-2eaf-45cf-8cea-9b4c4552246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0448da-e7b8-4e38-9d52-ba0bc22e47bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fc2312-4c7f-4496-bff9-16e318102531",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1f5b03-4ce4-4dec-a722-044d0a64e3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f6972d-a5ad-40e5-bc39-21300bba292e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af53a44-7904-4740-bd10-2bd7f0474a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe48c58-34e8-4822-b739-a1bd6e914754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae162db-efd6-4588-8485-6828c193a82f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d331c9d-acc9-4b35-a1d4-5d6f0965e899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc27b3d5-2b91-41b2-a772-30664bfa0ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aedd46-daf8-4d44-869d-c67640bb0a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bee654-c0dc-4f09-805d-9b52ad1b1109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e741f9-62c3-4907-9fc6-501aacf619de",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091dfc15-22cd-480a-99be-fa7712941860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e2d80e-3b57-4c7d-aeb0-dab1d1d711a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545b1d3c-9e4c-44d6-9d0a-e2cfb23ac5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da18013-d81d-4bcf-ba16-2b354dcee803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14e95e0-2c5f-4af6-a120-df0e09fac4ba",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e9f749-f83c-49bc-94fe-503a15429362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55f79c5-210c-4fd8-87a9-d71c7b349468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5261c08e-042a-435b-bd63-e6d8ca4c211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb8d26f-68b7-4eec-aaf9-42dc14fb3e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b5fbaf-d29a-421b-9f16-38225ecdfaea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795c27ed-3c93-45e4-ba2b-a13f01dcfd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8da26ff-4113-44fe-b49e-484e57133ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2ea770-1d07-42f4-9e01-c38eaeec5c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e3403e-5574-442a-a51d-a158ecac272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60e0b30-9230-42cf-87c9-40efb0191815",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c85524b-f9ee-4906-9017-00c4c973db30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036d9abc-fe85-4f3b-b6cc-40e9673b7133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d53d2c-0063-490b-b1ad-0b4cb62746ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7a8fdd-13ad-4e02-bb4a-5e9b981073eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a5c45c-2285-469c-ada6-e039a8646b7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6ba75b-f4b7-4447-a41a-ef0292de6c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78df1a40-1abe-46fb-b8a5-506ecc272146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0142aa-4ab6-4acf-b647-3e8d11c81c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b25f8f0-f5c1-4aee-b45e-012ab4896e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12872645-76f4-42ff-9f6d-9e1f16197e8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6778fa17-f736-4716-8186-f11a76c0f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7b0a93-71cc-4bd8-a349-04ceaba84a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee589cf1-54d0-4576-aeb7-0f7585f041ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "47cac42b-2b26-455b-bac0-342dec3809a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0af5aa0-3bbd-406f-8dbc-8d57a73bf6f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a14db3-d2f6-4a50-aafc-c8d09198d004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aafecb7-0d28-4de4-847b-59ec0183aece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e90ccb-26ec-4c4c-812a-4460fad1c004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f50475e-9a89-4b57-9a63-d3b817620916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a748aa-6724-4dab-bfb8-f4249f30bdc6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30078f92-4411-44ef-81ea-b9986368b930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa557c87-b717-4e10-81ce-50b2149155d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb501de-a10e-47ab-affa-e9319edd5d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea9efed-b816-4cfe-a7ea-c357aefe2ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2dea7-5bee-4712-85f3-4722ef536e44",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4981d25-6160-42b8-8aa2-9a71c757bafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcd5a67-55b6-4d59-915e-fca5e8e2bb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff46f08-373e-47b6-8cee-d2656c781aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b28be61-82ee-4244-baa1-e6fe0cac940b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ac76fc-3f4c-4faa-a366-935da523b0a7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1118753-3934-4f5c-b23a-524767edf194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5aeb2de-52d8-4ab1-bde5-ea54d4f17a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6952d6a7-47e9-4bc0-b570-6d97bd81e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7c2e20-3e38-42de-8f4f-dfae4858fb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ff3b0a-e98c-46e1-ab1d-77fe973883e3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df34503-1ed3-49ee-9c59-98c3e7ec4647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb53ea9-9444-42bf-bce4-02c339198598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96109d9a-ca89-4206-acf4-dbd58f779467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea93e1bc-910c-4675-a26a-cebabcbcd864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2c550e-8889-452b-9d6f-0c5351fec5bc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cdc69c-1fd7-415b-a189-4fd3f434a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6452a6-f767-4c57-9a56-338a36983665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4aafbe-12d7-4ae3-8e20-9a91dd1c2b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fd8ec2-b7e6-4ad7-8f90-5ae0cad398b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4503655f-f0c7-46a8-849e-3b0788c4f1ff",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f293c-7670-4e19-9866-6c765d38fdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffabd410-bbaa-4d0f-8f8c-fed79e93d778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27877eac-f6bc-4f0d-9f14-2fecf2a09f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a88220-03d4-4351-8cec-5db0b4458ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e595d12-a49d-4176-8062-d55e42344195",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e95d240-58e4-4f83-80c9-e462d312a40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd1bb20-31a0-4aea-94ef-bf925cd27bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef96a9c-0131-4774-9a64-b3e08d09ca7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52b7ade9-b603-4fe4-a7e0-f78c4edddd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8234f7cb-a2ed-499d-bde1-351ff4f31779",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48825a2c-76f9-4811-ac98-f71a4f908692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c746ba-0b33-4760-889a-c941f54791f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0db5db-81c8-44af-acdf-6dff304bf6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc2cfa0-69de-4a58-9714-2936ce4c812d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195d27e5-a5d9-48dc-8fcc-f3368746a384",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfaa2e9-5a9b-4f65-9beb-6f0d569f3331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efb00fd-6dba-48fe-a6bd-cac5bcba1e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc60a9-7af5-49b9-be46-e4e735181709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a640409-78d8-4c1c-91ac-855777221a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb5a455-b454-4106-9731-fb54ddcc36ef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41b1ba-28f9-4f24-87ee-7799f32877e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ea6c65-7bdb-4f90-aba8-9a929a8c354b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99af6426-9118-4db8-8279-bb2331b1164d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9199353a-2cb2-4a2e-b89b-20b65d79a737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0a45d3-1c2d-4fe9-8c40-f48c36cdf228",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903a1797-8798-4efb-bf93-7a64bef4b52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b73a05f-a9ae-4f1b-aacb-061847323494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bce2b9e-fe88-4217-98e9-0088e266ad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13bcfd9-eee9-43bd-8fc4-b16019934732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657f2f28-a6b0-4876-ae4e-8ee19972b5b5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7efd6c5-625a-4a0c-9b06-cc6c854e6e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6a21eb-d14f-4a7d-b63e-abdf482a6378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d0f6f3-6040-46bc-b636-4f07f5cb5994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbaa1ec-6559-4938-91c4-d162ebfa7fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ccb85e-ca69-442f-bd68-71f8b0288b5d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db0772b-2995-47bc-bca8-99ab1825481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d7eade-6fb8-4670-9af1-904c1107f238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8721a91-eb3d-474c-8739-b1242c121275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48be0ce-3c12-400b-8b74-b554b539d5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71732dd-340a-4953-8a10-0c813c983b6c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4561c475-bbc0-4c48-ab4d-b5177379310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319b43a4-8765-4fb8-91f9-05f3449e9878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88b6274-5796-4797-9c31-fe4479e7279f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aed3b2e-c338-4a18-906c-b86e2a0224e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d01c38-1b61-4a67-a192-8f92387d729d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acbb3e9-06d2-409e-81e0-d9fc8e61e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792935db-4fe4-4f05-90dc-69f9f9dd98be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df419833-e9e9-4622-a333-17e6cc487f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "423ce1bd-6ad8-40ef-87e3-832a6b2006aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e263d864-1cfc-4ee0-ad2f-ab02d9b99925",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7081b852-5ba7-4865-821b-d63eb6cea765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9969d9-2ad1-4f7b-a049-a11d7516ae75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad77a8aa-5826-439b-84e9-eca521efa77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7835701d-42ad-4fc9-a307-28c5f7499845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbe0360-d7de-485c-b097-9d5f7b2e7f8b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a37b93-27aa-439e-9dcc-a4d04c055854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d853d85-b5e6-4153-a789-1f4bb2a5ef48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3510fe35-82a3-45e2-9ab7-9638e186c21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2055e22b-756f-4c1f-90c3-35ba089b7c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec427de-ca67-4127-b538-0ff9135e06c8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8715f06-8717-4ab5-b308-640f4fd19c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a91e73a-295d-4b9d-b87d-f75b531c67b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d62d07-7873-45d8-b768-1e9bfd42c02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18c61e5-b35f-4ae3-a749-ed7577258801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811a3130-6133-496a-8f97-7e829affc9f6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477d8bb4-88ca-440f-adad-e15931ebc1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f910459-efdf-485b-8de7-141175e6c8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01637a4-2708-44bf-9571-b4f176b301b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a1bd03-8da5-470a-b7cb-f19c920d6fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f24596e-a309-46cd-9028-34ab689a5d4d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80785931-f759-4211-838d-fcb523e3637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1162d7-fdcc-4e07-b514-de50cbca9ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa4298b-25a8-40de-8bc7-6e1461974435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "098d830b-fdb6-4ae4-aed5-a4e47e5578c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcee9dd-f0f6-49d3-9270-67338bdf1029",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299a9a56-776f-4695-b28d-d4af22e7142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab39a5a-2a29-4699-b9fb-42d4eade0411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6067c6-d5db-4dd0-a5fb-b187d1efb43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4e255c-73eb-4f9d-8432-8322418a8398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac69184-a093-4aef-8136-4043c316c5a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1729a946-2d7e-4006-8d2c-9579927fc785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f157445d-680d-4e79-8711-53d22de29ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be7e8b4-1620-4149-8b64-b75e18855344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f13f125-075c-4137-bcb3-43abe70032d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8100b0-bace-46b5-bf32-a74fb4b0cede",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4008524b-c6e8-4df6-94b9-c9dd26825857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc01a2d-3ab3-4d9a-af41-4f48dc2ffded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed09637-67bc-4193-a250-8c574e9c9dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a479c42-3eec-491b-8f67-b1df7f6a3560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ade9e1-8e1c-48bd-8896-ffdfb59bceb0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fca2c6-ced4-4b79-a4de-2f64b49a277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e5b854-f5f1-4309-9284-b48f5d12772c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca273eb-821e-4fb8-bbd7-1fa0c52b4ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9093079-5d11-4460-85a1-1373058a6574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2786a96b-e6a2-4c18-9578-7f5a57f9a093",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444b514b-2e4f-4492-bc98-a384ffc134e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c658583-3711-49ce-94b2-8695d16c0879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6dba84-d151-4928-b1cc-e3823c97360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05eae56a-5917-4f41-a3dd-5f3149c79032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d783a4ab-f196-4f34-afa6-79f34d39303e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183f268b-b6a5-4fcb-bd8f-e73edcc1007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b06475e-8060-4aae-bdf9-152d7260fdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6acb5f-f211-4bc5-8882-75cb4989faf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5f9036-cbd4-4b67-a093-b3c13df1a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddffb80-2b60-465f-b104-47aa264cc7d4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd20fa-98b1-4c20-aa65-bd8d63ef0966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de222069-ae7d-4d05-869e-024c6949b343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b4adac-1777-447f-9198-09f9d72c7377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "664fbe67-dc39-4f21-9eda-b8bc6a516725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425c59a2-159c-4827-886d-feafe2132bb4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c125579-fb08-45c5-a56b-b3f5d4a0b093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d40846-e841-4c58-ab9e-592f657f68b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c95f0af-10de-4a3e-bfb1-2185e74559ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9204e85-ac77-44cc-abea-f5547733c502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b88f95-09dc-4811-b095-29b1f68e7fd5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c839e2b-51f1-4115-b239-3c0e9f2f5e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858e6973-4697-41b6-b217-16f8e14d31cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a535dbee-0903-47c5-8d8c-aadbe0e8f425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf44caad-dd2c-4c10-9c93-825884e537a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aa60bb-5f41-4f46-8b8f-63e28d7ecf6f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b348211-9880-42a9-aeb9-f21e06169e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61afffe9-c95d-498a-add3-c19095fc3ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f48fec6-7284-4d7c-9911-05b12dd58337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fae29288-cf7a-42c9-a08d-74506324c54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f3f89a-ca4d-4d53-a4f2-1de7d068de4a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8750561-8c29-45ea-bd4f-789b4f92efe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22314fb-fc1e-4f5b-9625-c1e213891e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675a45c1-9865-41d8-9141-40b24b344b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5a6d7e-9492-49f6-876e-7a3056e72642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af4db0b-8619-4a49-b6da-6cfd962831ed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d871bf-1809-4e49-a115-f96e8dd9b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a5fc1939-1351-4a25-b48b-d941c9dec3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981717f3-5b3e-4364-ae09-22471bfe3bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c46534c-b29c-421d-99ca-5e7670d9359d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de5c4074-d898-4221-b893-562b1585f6d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d18a538-c0ba-448f-8cc0-7e33a1e15f80",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6b3d55-8b58-4ba4-8539-ed8346fca5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96ea8649-5aa9-4363-a10b-ed6b7917e4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abca165d-5760-4dc1-8629-88061a0f9582",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51219a35-1dd8-4d0c-93d3-c4d4b565c6c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d9d2721-0292-46df-8737-e0cb9bbb62aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09b7e1f5-7be2-42e3-8012-571e64609ffc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5248ba87-d6d0-40f9-8f63-e123be4046c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28028275-8186-4710-b692-0a2d9b900455"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ac710fa-a469-4bed-a83f-c46f309df23b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f59c8df-a9cc-48eb-8cf1-24e512fc7a2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9a28700-bdc7-4030-929b-8a842e49c5fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bae4a5e-2b36-4e75-a690-cdc8142d5b90"
                }
              }
            ]
          },
          {
            "id": "0e34850c-8968-4cda-8ba7-cbd7f4ea95d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b34d07b-0c24-428a-85e7-eddae3e19b32",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "450875da-32ca-4881-8ce6-eac314c046ba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a576777e-0af6-4088-9faa-2437ec504e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ccff5ae-f58c-44de-a2e6-493efd978b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7327c80c-8b91-4770-995f-8140d915e69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1547cf9b-ee00-44a3-a2b4-5ce0edb575c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bf6a084-844a-4168-a793-a636ed4083ab",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a38ab07-0c91-46fc-967b-079dc49a0716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d89ed6e-6d40-491c-a87a-7b799336ecad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39f98a76-1e10-4a52-8516-0607ea03f5ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c41b2a60-c729-4241-bf91-0e752170c9da"
                    }
                  }
                ]
              },
              {
                "id": "e8b10430-64d1-461f-a2b8-958a81aab9dc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88ebbf45-ff03-4177-af50-357394be775b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db0599ee-ffe8-4ec4-9572-eca793d53da5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7f33af1-9981-4530-a4a4-fec858b8dfb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3f33f7e-dc04-46ab-9325-ba4cdb7d4921"
                    }
                  }
                ]
              },
              {
                "id": "5c610623-6701-4ed9-af04-8e5d5bd6020c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "096f1111-3ecf-488a-9919-f9de46bb7008",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5cc4a85-7ba2-4bb7-ab4e-7d8847118eec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3bdcc0b-ac8a-4e6f-b3e1-bc182a3ed9bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a392dab-1229-443c-859a-e42f8d426f5a"
                    }
                  }
                ]
              },
              {
                "id": "10c862d3-c772-4841-8914-a25fdfb75bb3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "628d996b-c0a7-4120-b253-1fdf597a564b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f381066-2ba1-48cb-9089-8f91c8fff28a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4133cda-bd99-4ab1-94b1-d72e832f47d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c0ef5eb-c3df-43ef-bfd1-6798221e9051"
                    }
                  }
                ]
              },
              {
                "id": "e603cebf-59a2-4e1a-a447-e431f2ced811",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "211c9825-9b78-4805-aa79-9e16eb2e264f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2deb15a-2106-4176-b52a-824016a51f96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48337433-2d88-426e-bc1e-8e34e3aa6258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "16cd2f97-d7c5-4947-84e9-0ac3eb63f4ba"
                    }
                  }
                ]
              },
              {
                "id": "fd9ebf98-ebe7-4ff5-8b06-4bd2d8c2ea11",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef5aaa19-c0fa-48a4-be3d-d1edd9384acb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81209d91-b853-489b-accd-b98ce5393e1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7adb3c49-12dc-43e7-8f28-3a378ca95ebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57ebffae-2ed4-48d8-ab37-433c8ff6b7f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8b9be76-e901-4c92-b86c-e365dda4cec6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "726c0862-3091-4005-a812-605bf4df5672"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54a569fe-3e7c-411e-a2d6-aebf8e03c644",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8668a8fc-2b47-45ca-bbfb-8c1f4f4ef1f2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84ca2297-47e4-455b-95e3-aeafdc78113a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8934272a-a7f6-4eba-9111-02788290aab4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b70896cd-9016-4350-9bdf-57088dce2267",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d29ecd35-9fd8-4ded-92fe-54c1de9ec58f"
            }
          }
        ]
      },
      {
        "id": "44ac709b-bae6-4c0a-a561-acb0ee26f3d4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4c8965f8-c13f-4d20-af9f-cf4e659a1d2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02f8cec2-c9a7-44b8-959e-e583d9128912",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "730f2e65-a15c-4670-b0d1-87e3cce80c19",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeed5d41-d7d7-4184-ba54-19b2e962e0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2aed37c-0cff-4993-8777-7a83236957d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be86d8ec-c39d-481b-aec4-6792217d7230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba2d7e1-8b50-4cdf-9a36-8081f866f9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c49d29d-b9ea-433c-a0f3-f880d3480e21",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b4b9a2-a7e1-40ec-86ca-395e6b9756c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18faf311-5662-491f-9e36-3215a559404c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3da3e0-b5cf-4774-94df-22c829eaa834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff85dae-76af-4ecc-a9fa-632066fd0c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314c40b7-cd09-4026-976e-95baedb17ea2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa9e645-6707-4841-b5e8-f38beb33d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0823a9-84a5-47c9-b372-9b81e1e5b668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad60ca2f-8f91-408b-8274-fa22baec5524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc32d94-f2f9-47be-937f-43e89c7dbbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e79a2b-2d58-4662-a103-25d5c5168b72",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e019e85c-0da7-4776-bcd6-70bb5094c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6bb949-8ad2-4a0b-9715-874bcb4426c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f6d3c6-e53e-44ce-8170-0fc325ba645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4327c2-848b-4dd1-b95c-39d0c0c7001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c3be6-cf38-4e24-81d1-ed4d8379f9c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656a88d9-f634-4efb-9403-14f4404d4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a77512-a1a5-4b73-9c1f-6af732594268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbea3055-ac0c-46b2-8506-25bb7c54dab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "748620ec-6d82-47df-96dc-cb49e4d66bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292b069-5f41-4f17-9bfa-352997401d51",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0512c21a-5e40-410a-a883-b7eb49867bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9db065a-4d82-4eae-adce-bd0c6c63bff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e849dfc5-3e02-4d6c-8222-fb93e847a30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b88d0f3-a396-469e-9d91-4c3eee556b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feb6cd4-814c-4be8-9d19-81e76277dd00",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b26597-97fc-4adf-9ad1-ea974badcb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f878d7-7737-43aa-ba23-82795e104099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d028618b-bd84-4110-8302-d78f0e22a25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb79b6b-a168-4c65-b534-62629c11d922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2422bfb8-06a4-490f-8f48-a6817b706bc7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f4add7-f38b-4d9a-9e7a-7cfb58939b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef603e20-0a3c-482d-b227-20e3d2e96610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03af9c02-c6a4-486f-bf4f-e54e07ba7949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5837bbab-d0aa-4a8f-b573-1818f6aa0ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dceaab6-47cc-4009-8f0c-ffcd16c90e14",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349cc88c-d3cb-47cf-b402-c1862e224111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aa50f7-be1e-46f8-a7c1-b3c66d8273b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f5c1bb-e518-4b8a-9988-719c0e1e19ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "307ab149-5a23-4ff7-8df0-8fd47a8f5f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e60f40-cfe3-4710-a164-0424d24c0278",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68dc5b1-12ec-4228-b80a-25c6ca6aaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b00c22-d696-4989-8934-7fb6b402a761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885056a4-7aef-4d3b-96bf-d1d4d07ecdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37704de-e16f-4329-bbca-8bc06f349bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9112543-3ca8-4dc9-9dbc-3d154d87baaf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26502514-fb9d-4072-bc8d-9e02d3f2ad8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87553be8-9ba1-4e42-8617-995dd432ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a2a2ca-6ccc-48a7-b47e-c05313a3d42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54eb75a5-c120-46b0-b4b0-8726740e89d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6537c44-a5fc-482e-9758-bd5b9bb26ded",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd15a606-d798-431d-9978-56b257b72cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd245a7-1669-4896-9294-291ce61bbb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e47a74-d3da-4f93-8384-7084d75361af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e53b89bb-c5ab-4066-a305-277be3cd76dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74be2b5a-5a45-4923-b226-cb5b6efdca9f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d01b07-49d1-40c7-a1ee-cfb3fb29b3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fb6370-4f63-49b7-84d7-cd0c39901cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444f6a7-2ae5-4e9b-b742-823db171734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "203725f4-cb10-44c8-8a2c-9766acf8be0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbb6529-139e-4192-8f65-595b2a7ef93f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402ca14e-05bd-4f5f-bd42-08147b0a9e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35f0efe-9e41-4640-a697-8a17e9656027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc350b4b-0afd-4055-a145-9c50364682a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe2f4d1-8326-46e8-aeea-c3d7ae5d3868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583188da-a85e-4d97-a52c-e3747043a0ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a61532c-fa8a-46c3-ad3b-851485e5755a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83532e68-25a6-45c3-b308-02135fd23046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa80ea6-7cc1-4296-a6b4-08c6195e11c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b226558-29c9-4dc7-bd1c-585b24c4f53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ee701-97b4-4918-999c-a4f0aef166d2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa88e666-ffae-471e-a77d-ebebf7697efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6a2baa-d139-4282-9fca-97d0f0b4ee2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c37fc9-ebec-4c2f-be1d-bfe3090a1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31152268-155b-492a-a46b-fc60c428ec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a4d897-c921-4778-abd7-0c2d02e5c8fc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f429892-d340-4060-b04f-d048876444fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7fceb5-fc90-4bcf-969e-e781bba8e06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c314b9a7-b7ba-4658-8dac-0b481a9463d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "193db1ff-64be-413c-8931-08b0852c1626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b4edb4-74c0-4fd3-a3d4-c6678072baa9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e16c989-abb6-494b-9671-0e12c40bc84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ff7a42-89a1-4225-a71c-521f68844b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a3cc3a-167c-41cc-a9d0-dac5e0b4d23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35115e2-ac66-45c4-864f-0405f3cf4129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56000543-7e17-4010-8979-622f9975ee3b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a810ad0-7c6b-4b83-92ab-5175027623e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73be43ae-8846-4697-a5be-89e0920c1d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06495715-5eb6-45c8-953d-5db5869a1dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72db5eb-642f-4c18-9301-35916468e474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97701f48-8b48-4ff2-9ddc-08b8b78c7195",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9637e64-6407-4370-86e0-b3b9fac57c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf63e56-56a6-47a3-876f-db75451af76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd3afcf-754d-40b8-b5b9-21a54ce9dcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d30875-9f52-488e-813b-9bd29051d114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a229690d-2fa0-45a4-a1b2-33195b857149",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898f83ee-498a-40f9-a747-f4fb263d6321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e357846-6ba3-4ffc-a6cd-3fcf162a4959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa6dd1d-0abf-48a8-94ad-13a061243803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69df18c-223a-4ec4-954b-5bc1697ca8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1135dc7f-27bb-48b9-b8c1-ff699b2af318",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3e7a97-07d9-48fa-b069-3cec285765ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1d083b-4f85-4014-a16d-1b8ba6452e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef7ffdd-2d4d-4719-89a9-1d0b18343034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d0b67a-ef3a-4f71-9891-73bc7ab41fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aeacb1-5e48-4b7a-a70b-82cee9717616",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df825d-c45e-45ba-b1df-5283e4d9b101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676cb0aa-6b6a-4584-8b72-2745c845f5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d4116-fc47-48f9-9fd8-f9da2ffd0469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "918048fb-7b45-41ad-88f4-e553b096b782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9ff3cb-42b8-4587-9d99-98d63860ce0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9c784a-c94e-4ee7-b359-5748d514a313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338baf85-48d9-4799-88a3-3cc06078228e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c6d05b-ca92-4895-85b7-0383c3ce0c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c08b4b-6f7c-4af3-bcfa-afa551747bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af449b0-1765-4c15-ad9d-ddf1109ad206",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7349212-5cc4-48a5-802d-eed0949222f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a455b56b-f944-4304-a061-e302f7614178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919ccc74-62e1-4782-a6c5-3b3ad7399d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176454ef-e2ec-49df-a83a-0674f1a66993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ad5b6a-11e2-4b33-ae27-573b08a7bcbd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e60e702-aab6-4979-924e-2f60d32b400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88331a7-7558-46ae-aa03-fa770b2f2070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1ec22d-82a7-4b80-982a-7ff8e71ad2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fbf11a-a5bc-4c72-82dc-fec789f050c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c8b6df-8a20-4ff2-b221-e2c9f25894ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceb14dd-2a85-415b-8d58-d065badacebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7896724-f044-4411-b2eb-adbf3a78c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905784fd-65c0-40a9-b2ac-751202cfd7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1308905d-cdf0-4504-9b1d-e413881d86a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9ac04e-10b2-449b-a014-2b6996c1563e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5ead84-7e73-4f77-bf99-fd376c38bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23255cce-8de4-45c8-87d4-64ae6a89e794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2af8976-ed5f-405d-a013-aa5d69c56c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbd69f4-7287-47c6-8f29-65d5b3891e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad075066-1f09-4999-bde9-5e28d8ca81c2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bb0d7b-469b-4fee-ad19-14859e4c073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c27a8d-b0f1-4d48-81df-90d71fd4b78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c930f09-2fdb-4426-befc-6e6d5eadfb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e66937-f5ea-4379-98af-421e2d64118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4fc9ec-5cac-4eba-8d14-8d302db54f3e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7231f1-9e72-4400-a304-b2000c6f520d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab4e1e7-6297-4cf6-99cb-30250130b8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046b92b6-9747-455d-a68d-85386b216671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458cecab-4dae-415b-b7b4-fd3e80f43aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0828ee5e-31b6-4efa-8b56-c07735ae35d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e527144a-4a01-47b1-b7b3-8aed8c612158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfc7cc3-7b2f-49b4-973d-96b15ddb2ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25399e85-ec79-4096-98d0-98ab70f29cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9aa416c-3878-4a5c-b5be-db32871793e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e67c37-c0cd-4b7f-ac76-e09ede51b09a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac6e379-f701-4cc7-9be9-213f846ddc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca3aa88-adb1-47b2-a47f-68294f850632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba14d5a-a15d-4c25-afd7-47caf8fad2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f2acbe-580b-4795-8e93-3aa0b3d05f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9098967-b11c-42c6-87a0-b657dfde9878",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd5ba33-14c4-4ace-b556-abca70bb71ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b969a4af-dff7-4863-b2bf-5802d6a1d393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b53b77-9d98-4205-ac6f-61bb48b74c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85201e27-e27c-4d66-90d4-0e7a07d6e3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0ffb0b-7d27-4f0e-a4b9-5c8e7195c469",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d50fa00-c86a-4add-bd9a-a6230b1024e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded64de0-c3a7-4827-97f5-5f8ae36ef702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f6367b-d844-4da3-b29d-0f77d881ce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4524db60-9195-4dff-aee0-e60342ec008c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c2a6f3-7796-488f-b903-1407f8f81e78",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb11965-c744-463b-9049-0c982678587b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0489792-eebb-456b-8d4f-a3c9febbed53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effe73fa-25e0-493d-86af-6db810a75b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "becf7bb6-daca-4fe1-aed5-4845a596b389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d087de6a-6c0d-4c85-aabe-15bd67f0b037",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe113f8-f5cf-4bc4-8acd-ef9650f7b2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ef96f2-42e7-4708-b62d-d44146046dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ffc4d0-51cd-4ebd-bfa2-8e01c81bf955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7a6e73-fb73-40bc-8df9-0e9712a8babe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11ac963-2995-4940-a157-4823a1e6bcbe",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dc54d7-ba26-4217-94aa-6afd9045e626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a5f79f-f897-4d27-a05d-e15b3beac436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74169d3b-174c-486d-8eb8-04b70228f808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd851cc7-7aa6-4e13-965d-dab750a0ac18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb8fdac1-3edb-4c57-93cc-cea0d5d129b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08048568-45e9-4b30-bb42-32209485b5dd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70730e4-d5f3-4cd0-a652-9da9e71fc7a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "db229029-ea2e-4553-a261-073ac1f3b51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4252980-ef68-4e12-b3f5-8d98442ee30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da0ceb63-257a-4e1f-9e9b-390d45b48ef0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d108d045-64a1-417e-aaeb-5f6b020a567a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05a219d-43ee-4e48-add7-8d75e17d28d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bfe6fc3-c6b6-46b0-9ab2-93e7ccd7b002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0bae13c-86cf-43ba-8206-81e7643af22e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94e4bbf7-227d-4dda-a64c-bec99c380aef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4ab31b0-941c-4c4f-a535-bae1d9cc553b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ac89cd6-a502-4b3b-aa73-5df3661dd02d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f77c3585-b593-42c4-a9ac-8ff9c1252087"
            }
          }
        ]
      },
      {
        "id": "52001cb5-d3a9-430f-9859-dc92794d0219",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "76569f68-71c1-4351-8ead-f84f22153e3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5864d932-acf3-43ed-9c5a-a2b60c9f58c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da08342c-d000-4acc-b13f-00accd29dc28",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e22905-ee95-47a0-bcf5-d19fe09643b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f8b858-2c99-4bde-8cd2-bf3308577a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2fb582-5e34-47d0-80c1-51634021e9fe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831c0288-5244-409e-a6d9-74cb177b3e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf06c84-76e8-4146-b688-be325ff62128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df885a1c-3dcc-46a5-973f-533837ccf1d4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564a74d-b8c6-4cc0-af54-c4fd171f7671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa9f061-d801-4eae-8b37-eeb4aeff94bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2278af6d-2ccf-4aac-902d-60cedc9daa49",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7945d2b-12b0-4029-be6a-f2e84df1067f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778c2db7-de2e-409b-9542-c7a2f61a6cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5520161-fce0-4b43-8c52-a1d42b62affc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c7727f-c5c9-41c2-ae06-92f5f18a8d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047e21b7-d35a-4049-beba-57c467618cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ccca0c-86d5-4b79-9db6-eafc330ccb9f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e933b297-612c-47fc-9e17-b5dd7d2e6ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157509c9-8e05-45c8-84d1-fb90fab28567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93178a94-2a79-4d78-b5e6-bc6bff30b672",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124e2cd9-03fb-436b-82fd-6374eaaeb2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f427ea-2862-47fd-9a3e-eff45069a8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c1510e-82c6-4926-979f-891f5dfa8f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248849da-e18c-4aa1-be65-cf7335debc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc00aefc-310d-42a0-b882-088696fedd5b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48eb2ef-614b-4b83-9b79-7a6661165dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af920ca-22b5-4a60-bcc5-5f18cc2b6a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438cae4a-7601-4068-92b1-4171c51d9173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ac1089-9812-463e-be73-d4b07aed499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca52190-6bb1-42c1-85ce-c5fde5e96b31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1c1f65-2bd4-41cd-8c36-8be5b35a6d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c4234f-b85b-4720-96e7-408bcb3c7bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344fe037-04a0-4a35-a2a6-44c8a54728e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6bee39-9228-4a8b-937b-2df3a89f2132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883d7750-d41d-424c-8806-d948a544646d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b43494-1db0-412f-8014-e7ccf5b49831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b4af965-eac3-4b47-9a38-78be812b9efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4338759-3e1e-478d-9793-4c632de1bc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9080b7fe-d784-4b17-8cb3-c27317bfbd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a7978a-b48c-446c-adac-89bf1e6c8558",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fd0170-1e5b-4b84-90b1-3786e9690a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4094c681-f10c-4b18-bbf3-cfa4f33a85d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9907ca91-1b07-4b8e-b4e5-be544f00f269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6709462d-b10d-4c98-adc2-751ab9c2b5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8edade-344c-411d-b72e-28eea710e2dd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288441d2-b844-4adc-b4e1-b42dc9323cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d7a1c4-d2a4-4bec-9cd4-a8c77ae7a43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4343dbb3-d937-4c92-ad52-5430e6117858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28852884-ca35-4afa-ace8-064426df8fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442ce664-2e64-44b3-911c-dfe237ba23fe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16b6cbf-e3c9-4d89-b7d9-8f8668383168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578e509c-e45d-444c-a487-836f8435d35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2948d67f-7032-47cc-8f52-ac1734d2e433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8477694f-412e-428c-8332-2ba6fc613b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2adacdc-a067-40a3-a886-c2dcc76deae2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfb2eff-fb14-4e56-b9a5-c247b02e231a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39dc5ee0-430c-4ee6-a362-e95aab26798e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1729a405-4459-4ef2-8ece-d31928d4795e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af94a9b-5acb-4411-a1ef-bd67094d457f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509021cb-862b-4151-8188-3bc237662ffb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec97b35-8ddd-42f4-ad6a-dffb9a9a7970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8372de-3f99-4acc-a0c7-679e92f919b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7469bba0-920f-4ac2-9b8b-89365f33aff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc44b57-d94e-4dae-9256-be04b70e35cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd167ff1-4501-4f14-be43-33872ee709e1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e79434-be87-40b7-8b43-acccba35e1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae7ceb8-6f74-4c76-8dc0-344ca089cdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1273e9-da90-46d0-a25e-d607f1be1e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf19437-ed3b-42b8-83f0-4649932f1134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75262073-6ecc-4b46-9d6d-f38d71832005",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e88704-6f97-4390-9f62-7ac32fd3d56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6757d5e-3629-4615-85d4-8e1e7f6ef1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36634465-e90e-4b9e-89c7-fea74e262c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46afa58-896c-42f3-8c53-e8c403694b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a083039-6828-4bc8-8c24-ffb7dec8d672",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0551379e-19ed-4ac8-bb70-09dd9b8357ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc4d5bb-27f5-45a7-ad64-da1a4cc9273b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c185059b-cea8-447e-aba5-aa9ec08615c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589185e6-ccc0-4ad2-aacd-3612a2e0d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2014bb3-1211-4cab-b365-fdec42e4635b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f2491f-7b12-4435-b68f-6c5656b60d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e209d57-e671-4041-a225-6fbe4b9e2666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb2515e-c8ac-4d7b-82bf-03a652e840aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94c2006-cebe-4054-abd7-712b501d16b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7e37f9-0726-4adf-8468-2240561a088c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014ad2e2-9928-4792-b375-989d70240933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca63fa30-8389-41b0-bf6d-c0da08f5dd41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d02af87-c68e-402a-9ce5-8fb411342c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bc594f-f26d-471d-9447-9e6dc02b6f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60b98ce-c973-4cb6-a9b8-ee5e4271765e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03a87e3-dc60-483e-8b94-83f3362c487e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27c4f6e-7738-4ad3-ab9b-423db28f498e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de27ff0-f661-4bac-ba1c-e4f849c0826b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef8cd07-423e-4757-990d-7b8c60262564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1535efe-c72a-4382-891f-a4bf8d60688c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178ac4d2-f557-4f30-9154-97462e9d20da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71d4623-728d-445d-b39c-03d160d9f51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee0ddff-ec43-4089-b682-23ff736c5bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d3cdbf-5aeb-4b5e-8da7-1edfea441887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d05650c-002f-4caa-8a0b-38e982bbfc1d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f881eb-bb44-4edb-8940-be5c4dda702d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44330d1-2fdd-4a57-9a8b-5659ca476e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a99a49f-025e-44bc-8fb0-5fbb121762da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a65cc9-d4b9-4070-9e58-9b7c7bba2856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36338120-73fc-4dea-8ba9-cfb4d1e8d5a1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64578473-232f-4e26-b6e2-dbdb67970a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe6e747-2bcd-4665-86a8-8e00cc39ed55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0c2505-2b22-4296-97bb-62c8e85da518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d40cb5-0b2b-47fe-a1a7-3ce3d83b5fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d7ac7e-7a13-4538-bcbc-15825fec3332",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c124f3f-d113-4304-9e0d-29c247cf2fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bba1d47-b93d-4023-b06b-ab6655d25828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78df0c61-e623-46ee-8b84-5c0ea0ee7ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1692a85-c518-469a-833f-9e3c77501801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d59bc19-d66e-4c89-b6f9-240f0c4a3df3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7793609-a5f1-415f-9372-f7b5b9443007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84a203e-4ac9-4e25-82c4-2de56d5188d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03264408-46b3-477e-8593-43bc264f6b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd87ea6-61f2-4e82-b4a2-a58e5bcf70d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e34299-6844-4a88-86cd-2c87be418607",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a537399-7b2f-4952-8dd0-f0bf151dfb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc62d3ce-98c0-4b6a-a660-407126d39e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ddf95-7115-4095-b020-5155dda03c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afe71a7-e472-464e-890c-2a950d104aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4243bf-d954-45e5-956a-1cb3a6b4a60a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e25d24-ee1d-4831-88da-eeca0a9dd548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9530f189-13c5-41a3-8f03-9c7c2a02c96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8400bf6a-b069-436f-8572-170aa77f44e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8010d7ef-bf56-4650-9c68-b8b90dbd4731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de5e3fc-6133-4994-abb5-a94a878fb2ff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204444f9-06bc-49ba-92bc-a3113c511a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10e68b21-5c1e-49a8-977f-f02e44a59be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea85cca-7108-4f57-a1d1-e45981edfd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79009435-f9bf-44e0-a158-2e529979ce13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722786a9-4a76-4f7f-9bad-9c04bcbb5e92",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f60a43-d478-43f4-b88a-0dcb0b91f224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5e97c3-0d43-434e-ad5e-d7b94e6632a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11517b69-34e6-4491-ba0a-20a2e90ea892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e2b1f1-529e-4abd-a1c4-6e71fabe1929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e86d58-a65c-414c-8baa-79b9d0435fd1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a19e14-2d0d-4274-87bc-f06915fe599f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1791f1e5-d1e2-46f0-86da-04a07c1fb85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0b5c6a-236f-411d-8d5c-6bfcfaf5e509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09343c09-724e-42cf-ac46-04811ceb0877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c047a8aa-617f-465b-9a16-b276775b052b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91780b7f-3334-4ab4-9b8a-b65fae3c9125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0f0112-0ad8-4c30-988d-f4aaa0a80b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedeefb3-ba6e-42e8-8c36-e30d6d480e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74230050-ce7f-491f-b229-c162a6062eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db203872-ae14-490d-86e7-51e75efbb12c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50daa9a3-69ef-4ce1-aac9-e751898f392b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70aa450c-299e-4b37-a027-77ff6eae6059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67046dc6-dec0-4a6b-8c5a-0f1f78a44739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffee860-6551-478f-a064-31c47c7a6b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ecb00c-facb-4c8d-a5d9-499c288412c6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ea6cfa-073b-40ae-bd6c-020fc6f16985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eb508c2-1990-443a-8a42-29950fbc9a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92154eed-859d-457b-8dfe-cd7a90b5681c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c676ce55-8e99-4d8c-bb80-efeec36048d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77432421-e62b-4566-ad51-e9dad4192c9f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d98d8f-61ac-4d4f-9d88-2275306ee387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794dc5f4-bff4-40d9-8863-4edbdfb6ba22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4375b-285e-44b5-aa9d-7860d20706f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e379432b-ef8f-4cf3-ad6b-dd6330569482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfe639f-ad86-4db2-b29e-3a07ab80dbc0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519d012f-2d1d-4da6-96c7-43b6f7c5f849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d9b20f-aec7-4d6d-87d5-75ade3bbc6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf93a1-a357-4e2d-97bb-89c615844a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075d4fb6-fac5-46e4-a6c2-eda90badb840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13418815-e593-4803-a3ec-0d81b975977f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6021317-41c5-4579-b52d-4b2fa8f6b1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aef2f6-34ae-4998-a79d-73740d47ee5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7029e1a4-f33b-4e29-819f-f6cb84b4ecba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a18a46-8e62-4e21-81e2-bc421ef44a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92189596-5f3b-4654-a057-67f2d51c2bb8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6315730-13e0-40e7-87e2-e34f36eeb53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05aabf7-a863-4ee4-bae4-06616e7825b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74fe40a-a956-4ac4-afae-b2cb59920765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b34bc3-8939-4185-9e62-a7bbbaa8b6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4844bf0-90c7-42fb-84d1-c8dddb17bd72",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d51bad-6cb9-4689-bba4-fbfef6d01e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e971e45-60bf-4f4f-aa34-e6cdedf84390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc0a63c-acac-4d39-82a3-693f7aa2cb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0b75a7-96b6-4317-984c-15ec4ce0ad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba06585-8aea-413e-92bd-31f54050833b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fcfac3-674a-43f0-a261-e77ce45a48aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac61e16-05db-4633-8007-592d745ecb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6ddba9-44fc-4785-abac-203cbc28a35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f905012-261a-4d56-851c-813ce756fb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334a3436-a295-4674-b0e4-4f0ee997782c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c99e2-f860-4444-ba06-9502e08c59bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23fc278-810f-4fae-b647-1e0a8f0d5b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6721f9c0-f899-4645-9869-9a10443be2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b39b90-b520-48bb-9879-41cff5ec4275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa7c528-2ee6-4f31-b2d8-7087ec83ea95",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74275b96-8fdf-483b-b042-0df9bc0744e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e3a06f-5d05-4656-829e-f8801d324b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdce5224-44c3-4288-92cf-6133c3dfe65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542cf0c8-cc1e-4e30-8dcb-f8f57f6f1e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead25340-7bbb-421d-99b5-6a6a69cc615a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98564720-ef0a-40ab-b3e2-97a66c0d58af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7b80f6-0bce-41fe-a7e9-ea07fa360027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c45f25-a35e-4dc7-a2ce-ac9c277a682a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256cc432-7456-4103-8349-0791b1b259cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df452cce-b56d-4cb0-b288-01d89ed97b08",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760e0cc4-5486-4b24-8905-343d5ee582c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870f3d9e-c410-4457-befc-f1b2f0ef73ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de92924e-297f-4bfb-9cb6-7abc1b3f7df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3237ed-f3a5-450d-baa9-3aff897b1738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772f009a-c705-432a-b14e-ac6b4fc6370b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b2349f-8b2c-469b-9e7f-8a8abe7e8b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf382982-95b8-4719-8a22-f16accc664bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eccf44f-dcb7-4956-971f-887880fa7464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d735166b-c8da-4d1a-99b9-08b6ead3b9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12533a77-7437-4526-b3ac-17f7b16e7989",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4cb2e4-000c-4553-88d8-d7ff11ad8bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ab2c77-0782-441e-a037-61ba448afcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8540598d-2540-413b-8d09-87b1c1f69237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3b9b1f-056f-4ce3-80ff-8ec1281478c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03492991-e1c4-485f-a181-2559d216396b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc91cd67-917b-4694-9527-39c4d71d3f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9e91f0-26ed-4d0c-b0eb-8ba8908cb75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fefecb9-7fc1-4b60-bacc-1d4f88dfe3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abf1fec-71cb-4d8a-8236-1dbc941dad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e51348b-53d8-40f4-a4c8-3a2ff5cec10c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea1db5-0ea5-4621-80eb-97643edbd826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e0a709-854f-44aa-a13f-eb571814144b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a751e-5f7a-41f7-923a-90838ff8d6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6577edf1-b91a-444e-90ef-4fd79f811b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626524b2-1dc8-4acd-9293-ffb7938bef66",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae17a7a-13af-4d4e-8f10-f300898a1d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d6a655-57d9-4807-be4a-96de25b5fd15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bff359-d984-4ece-bccd-5957c4a8dc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f445234-3796-4b35-8d2e-4a78ff35746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9228c2d5-f85a-4acc-a2d2-338f2f14447a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa1a7f-cc13-4375-bb74-de0467f5d7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000884ae-a5e9-4d2a-bada-8910ea9a3d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e95d100-dabd-452b-9fe7-207c6b64123a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea049838-8922-4630-88d6-a088b91152c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f769c11b-ca7d-499d-8922-dcecb9d46827",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f80e8af-91b8-479f-8a05-3cf1d00f305d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a0d1fd-e67b-4176-865b-fe1c2ee116aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf9febb-5503-426f-ae21-addad0dbd2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e720b40-4474-4983-8ee6-68d6b7c1b182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f2cf7b-58da-431c-9bcc-453536ebd506",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c126d2-f9cb-42f1-8858-d349549e0ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0413a20b-4758-4afb-9b41-65fc29170f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a7fef3-48d4-4f01-8407-f669510969ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ff596f-abce-490a-8b1f-894719850de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82c7a92-6cac-4afb-bf56-f69072b0d7f3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9d0ccd-287f-4dac-9644-fcd9391915ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c402fff-48cd-4930-849a-d3fa881b7870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f479bff-45d2-4505-a8aa-60a1ad40d0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d973504a-5481-474e-a514-b97f88675af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051f17f8-1412-44eb-a04f-df602f2dded4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4633449e-2143-4f8e-880b-afff23d9706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b6137c-7c60-4fbf-b594-1a7450b659ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadc30fe-02cc-435a-b044-34d243db25df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b732d6-c354-417a-a3fc-97e7f2aae07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8e1615-40bd-4481-b610-5e353a16b0cc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc668b2-4d3d-4193-a190-ababf4029ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af734bc6-9e79-421d-81d2-8bd13b523277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df383855-d6c6-4d44-8aef-b4d3f6be2e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc852e1-9e2b-47dd-99a0-51daab1b4f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74617f6-0b73-4e0f-aa07-c4f732194ef3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2558828c-b7fb-4f68-b8ef-1052e1b2aaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c905f77d-9669-4472-a83a-ea0a9bf3351e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3c193f-17f4-4830-a9bd-6a281c329115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ea4a65-1493-43d8-9ec7-c6ffb01818ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6d7012-ce95-4e6b-8c7c-e9743c97adb7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513a0811-3550-4f9f-82f3-e725c501bed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e258a2-ba15-43d1-9abc-976f91a4dcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cac420-1fd6-466c-adc5-f42476dbf9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e8e1f7-a0e3-4e11-a03b-3da532f04eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c7bee-b056-42e6-b99e-ab8d70b254dc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83766292-8d09-4cd8-801e-fcb7db82dccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e7e4b2-d291-46f7-ac94-c5b42dc681b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5d346d-21bd-4b92-9b87-eb8538fd2869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24d92aa-69bf-4396-886c-7d7690798103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a065f457-b905-44db-821e-013267fba703",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f20eb6-7fcb-4c4a-8a99-72d5662fac97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0be8aa0-2921-44ae-b6e3-19da08b74360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531bdca1-39cb-4e4f-8ebc-82c6f1d66596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4732bcfc-b831-491b-b6a4-ad3bbff3fa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c152d3b9-1ac5-40af-919e-d00d7e972992",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1d5c9f-41c7-4a30-bef6-c0cc4532fe58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4c2ff2-f490-4b7b-b3a4-db78abe9b310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b3eb32-05e5-47c3-b0d8-7b77b015b9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c9f8ef-370d-4a63-b2cd-6547479d30cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d15ba63-e560-4b74-b602-fd300a4ff3d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ca3973-a776-40bf-bc8b-4a6db78828d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00327cb-29e5-43f8-8c40-922ba00d2592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e869e0f3-508d-410e-af45-32be21f6c17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa3a3af-710d-40d1-85c1-e199a80c73c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1d0d2a-eaba-4b7a-9ccd-e57875efcb00",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eadb29-8b22-4453-a5ec-f906e556c605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad95ba10-df25-4a37-864c-af8c6cc6847b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81ef8f1-1f73-4e06-9251-453595ea9e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d13b4b-4b38-49c0-83ec-bfbaec20439a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9decbc6f-4796-48ad-b0a8-92e4868277e7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b46f0-f984-49a5-a083-dbe86baac0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6be907-3d99-467c-ac82-88806337db87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1815e6b6-f88e-4dc2-8cd4-e7ccaa09697e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21a95fe-3521-4f16-acb8-9020aa0fd595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a5a15-fcf7-4b9a-9c08-6771075630b7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778c05c5-2190-45b7-9124-6952bced85ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee16b628-81b5-49da-a0a8-97dd0b0b9912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04b9f22-fb7a-4fb8-81a1-a56f0bd86f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a75e63-c7ba-491d-ae35-c2189e7b4c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c92b9d-4576-4584-84e6-df84181f3a2c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd48a6b-9205-4666-be99-08c97639cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe619ea7-df8d-4de8-b6a9-ac5418a8ea00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eff383b-b94d-4b38-b1b3-3392bfdab81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a0747f-2dca-4ddf-bb9a-bdb1590c7977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea9cfd8-0886-4529-a2e8-ef451fb2e6c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0206c02-5da0-49dc-aee7-e50c05911362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2424ad80-958e-415f-aaa9-d5073c475fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d6f8c0-1b72-49cc-82de-4de9b1abe277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc794e9-de06-4280-bf31-17cb5453050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed92048f-083e-4da3-b8df-06171904feac",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db833206-88a2-467d-b243-9a31236afdec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5aa6f60-7af6-4c59-bc6b-92d353b03ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddd3bef-37f1-4097-8c62-b6e7918ba6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b1f37d-5d9f-4107-a5b3-7c70eac3fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d417730-8c33-4ca1-b010-d52bbfb7ad6e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f635997a-fb50-46d1-90f4-17c8a10c8e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a714de-d878-433a-a54a-cdb748eca995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea577293-fabc-408d-b04d-364528aa8006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c217c1b8-07af-4d43-8710-0eab6808af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c132046c-465f-4c64-ad5b-d4781ec10382",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98b6955-8027-4293-bf27-b1629d5fbfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e9ab9d-9609-4b3b-af47-18e5f19c55ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e8731a-773b-465b-8b32-b4cefa0afb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8520623f-256b-4331-98ee-5eeeb98e87db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c948fd85-5e76-482e-bc23-68e871ac788a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d541e0-eadf-4df8-87bf-634a15c5bb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846ae7af-37f9-490b-b3f5-fe6e5d669b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e988d04-cd51-424c-b402-495ed5cf009d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93418125-483a-47f6-9825-ccb0537b12e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2e380d-f184-4404-8968-9a2b57c1cd17",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56802ae9-9647-45ac-ab3a-e3fd641df4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410c25e7-0a6e-4c8f-9adb-4d1bfd4a9936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf7cf6-2ee5-4922-af12-88697ee5ddd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7ba733-7007-42e7-b0d3-9e821115f52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d046d85c-81f5-4ef6-9354-36f3970455fe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ae671b-a324-41c5-8813-91d118bf5e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41438f7-f581-4a1d-89ab-22faeb2e1caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1565e69b-da06-41dc-8de3-c6e0d3cd9853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f3fca2-90a4-4ab0-988a-23336a38f8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac2f317-aee0-44ab-a9e4-2c0991539819",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a291ad3e-5f85-4723-8c05-ce2d64c9d558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21749799-b7df-4cae-9116-b7f4417157c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce324ca1-33e0-4cf5-9857-81a661a318a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05090546-7c27-4183-b00f-f3b8e9057f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb45baa-dbb3-4549-88b6-9f1421b08d23",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1232acc3-acb7-424f-bf48-5848623146d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8274484-18ac-4428-b0dd-fa0395c9559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804c34a3-2378-461f-a3e0-52854a286f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530499df-9bea-4150-b400-b20bfc3ce5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e071d19-bfaa-46f6-8701-4621d71d7497",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553f69d-7c03-4e35-9f2e-4afb02617628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4b1592-e244-4bce-bbe4-9f03cfdbfabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bab2241-66d5-4bd9-a15d-0419b652029f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963f77d5-4878-40fe-b27a-567ec7a9aceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1149fee7-0d2c-4053-9f6e-10fcc501d940",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480f3aa8-e922-48d0-b4b2-53184dc9d82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e7c64b-87bb-49af-8bec-41bbf14ae39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d7864-5e4a-4ad4-8a0f-7395c2d96cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a1a32c-281a-45fa-b70e-6da44a3d0048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4189036-2c99-4688-858d-7afe980213fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bcbdfb-326d-4123-b063-9cc1abf90277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818465fa-3d59-407f-abc1-d6e6c21664f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27afa17d-6802-4c08-8708-1929abdaa36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c581df27-127a-4c01-b51a-dc97c66925c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7405c8a-7c11-4fd2-9084-0b0d8ff217a4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3163824-ce46-4db6-bb0a-c7d132b07199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b2396b-8937-49e4-b667-9625a570e4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372e017-eaee-43a5-9394-db85ab4a6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afdffb0-3706-4499-9055-06d13a4993b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf8bc84-c524-4679-88d0-7bf529f173eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a46ab9-5ec8-4c42-8462-25f6d85a711d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b08bfb-c324-4da8-b139-60014c706107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e61c9b2-e66a-496c-a314-3b4d1fb0738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565611fd-2d2e-4afa-bc32-bf4d3d79d351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c95778-d881-404b-9a57-c80639b1eec0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d48b8c5-321a-4918-a3f8-af1b75f3dca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bfefad-95b2-4e5a-a208-a0e9040aaede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b84a9e1-435c-49af-b2bc-0e412a14d794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd66cf1-be8e-41c8-9b76-f5fc1e7fb529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd25f2f-41a6-409a-a56b-8f0a3540d971",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0899bb-3c5b-4bfd-ad95-90f0f594698c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e67d936-34e2-4c60-83b3-e8dcbf6ab02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5929f30-dc79-4c4e-a15d-c2aa5fbda394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f4b1db-ad42-4a24-ae15-bd738374836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7228223-5914-47d6-a3e5-3225a22042a3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaffc02-b84e-45c2-92a5-de358ba80ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1a2458-acbc-413c-b281-093987a01843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a8942-5ff8-4ec3-a3e2-7c8750796a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b7031b-74a7-4325-92a9-a8db562218fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f92c14-ae85-4bda-a03f-989a278789c5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831cccec-3a79-491d-a1fe-ebb37f6c7c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4e5797-e052-49eb-a712-a74f1bf73dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210aa2b7-32c7-4558-a838-49ec34697656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51bf75a-829b-479f-bdc0-b0f87aef3a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b5b31a-416c-48bf-97ab-afba654a611a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b24e10-5b60-427b-bcac-32e1e330a2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1da7867-3ddd-40b4-877d-14a25c2bd01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f44e12-ffa8-4724-a17e-c2db0ae605c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c397a9-0a8f-4f01-a008-54fa2aeae598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d224eaf-74a9-48d1-9952-da2a9f5195f3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42018c71-fb04-4b60-ae40-c86a9e3f5c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec48c74-0eaf-4f74-898f-4b4281a4a1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fd32d3-098e-4e54-82a5-d4ec97b6a44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434834fd-e1a6-4450-a9da-0dd74806bd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2861cb-5455-43eb-b92c-b4f01d5f84c0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bfce63-af4d-44c4-8fb5-a3703e198d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9eda1a8-b1b7-43da-b363-1a102774d2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4a9304-fcea-427f-b168-85438e00ffa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16daf6f8-ff42-45fc-8be4-73957baf0e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef8a518-ac43-4155-bb72-8df4448bb438",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ec7a86-0214-4f91-ac18-cf00639dd0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561e46ea-8013-43fe-a6c9-a6e13a69c711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f365018-99de-41a7-baf6-13962f45a2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c061014-9289-497e-b865-d88b06f6923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c835a3a-9cf0-4e71-b57a-3930d95ce00e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65545124-7f99-402c-a972-40667d84715a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41272b1-ff5a-4f68-9457-5602a159d03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2a33ba-9297-4fbb-845f-d40e0da76ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02da474a-7288-44f0-a11f-9149826d5d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04afa61c-d72b-4493-a67f-377df173a638",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e1848a-f23b-42c1-bb06-d1550a536dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca23750-aa1e-463e-b099-55713bc24f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024c5357-911f-4bed-aab3-e4c406d4b79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c41df4-e168-41ae-88d3-34ef142a9d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ac43b4-fe00-4e4c-a4c4-1d337f9f4dc1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de765e8e-58bd-4aea-8b1f-4b6317b256e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8b66cb-9bbc-4600-a266-991cb63da372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2283e590-3cca-4777-b208-8dfdd96b813d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d9585f-073f-45af-a022-cebf5bf4a691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c27e5de-6ca5-4430-b61b-21f931a1ce82",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f5ceff-5127-4d5a-9b63-70882c088125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe08fc6-6428-4614-981e-47c12bf7d8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fb861a-00fd-479d-a844-a0814429867b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6136d66-f742-4faa-8941-28bee190d08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2385df9-7812-4701-ab92-ae420b89cc15",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8daa6fc-219c-43c9-88b7-62240ec2681b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045aa048-ae6f-4fa7-9e5e-174b5f521b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f5c3d5-2410-4fb6-8aa6-c5f2c728da9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f30ea2-7e63-45f8-85a4-3f4df8fb56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742024dc-7ba7-4a52-bb9e-910e18f0bef2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c26b59-a9c0-48a2-89ea-626d91019a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f36126-0d76-4838-b7cc-ae2ac9de656d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7990d7b8-1acb-473c-87e5-2247485def31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa90bea8-71a4-4f97-8065-0dc00d018452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40cff9a-1e67-421c-a3f2-41aeb70eb5ee",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53e860a-82a0-4fa0-9b92-9e889ec93c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2438df0-6172-43c8-ba63-8d5beac82e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fded4aa-bd9d-42e9-969a-d74b0f9254e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058c52f1-eeaf-453d-8bcf-5063571b5112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6582e72-39a1-4dd6-ab17-7d93ce85cd16",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a38f99-5e25-442e-ac02-8dc28241e3f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf095d2-4c9a-41dc-98d0-605123b0f8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed9f6a5-936b-4ee4-b9e1-2bf35444888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f2de0f-ec05-4125-945c-ae3116dbc628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d83067-596b-4193-a6fa-cd19ec870f7a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262f801d-8233-42f1-b11e-31391937ce52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b1b924-98ba-47cf-9902-0bc8003038dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31464b36-f51d-42dd-864e-20e65ee29315",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffe2748-8721-4652-9eb5-a7df99a7f534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02030f-f8ce-41d3-b065-f3d34aa133a0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2712191-e167-440d-8e61-ad53b62861dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcffdb5f-de8e-40c7-a591-9eb450cef495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eff5dc-12aa-411f-8e07-150770ad6b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd925bc-825c-4e02-bb37-8583f0585073"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d93807f-1857-4dbf-b369-e5b1bc4e3152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9386bdad-f6bc-474d-91cb-79722cd026ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08d90fda-9cbd-4447-9cad-ac96f9e7c740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0371b568-2119-4345-b5ae-a5bd33e0017a"
                    }
                  }
                ]
              },
              {
                "id": "4a738caf-dc56-4bd6-a38d-893d0339c267",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c7f3b23-d671-48c2-92dc-93bf07a66658",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5698cdc7-d773-4141-9ce5-306c399f31c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "91eeb7e6-fd1e-4938-ae7e-645d6129e265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b824981e-cc5d-47fd-a6cc-a7831e1c9157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e4815b0-8d64-4be2-847c-10a6f4a0ef6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e126808f-ddb8-45dd-a76a-5aa00e1ae7b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f3c765-65a2-41c2-a568-ad9397695084"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3aadfe35-6778-430b-a68b-697dc221a49c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34d8cec7-241d-4c0c-8f13-6bcc04be627d"
                    }
                  }
                ]
              },
              {
                "id": "8c86a2b7-6ca4-441c-979f-a1aefa4a9411",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1545fe95-078e-44c4-b7d3-76f0e22dc715",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a70e7c0-82ff-4dcb-85f9-265f396ca288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "66d7a998-1f61-4df6-aef5-f294c48bc284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d22e92f-097f-41f1-b0ad-17bb229d2c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda00352-8ece-49ae-a452-7a70f6ea9f23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74aeca2a-4ac9-46d8-b996-96c79d5e5500",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b10cdd2-da2f-4dde-90f6-9694e23edb52",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4d54a6a-a56f-4dcb-9753-bf418bca274e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0628212-fc93-4e20-a867-3bef4d7f22dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89799ae1-7da9-4896-bfed-c0021e601d5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a5ceb68-9b8c-40cf-b856-f07b12b202d4"
                    }
                  }
                ]
              },
              {
                "id": "e1a12fee-8e49-4099-b8c7-664fa5aa0a3b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f53d681c-5761-4447-a0c8-8e304b18c01c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ec3cfcd-7d55-4d69-8445-4d01abddf7c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17d5dca9-f386-4dc7-8d44-6d18287c3f2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66f0f117-10ff-4747-9bb7-6ca969cb1403"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cc26686-813c-4312-8fc9-33fc8501bc7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e8bd356f-77ab-49b0-89bf-4f6bc663a3de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6db5160a-2d1e-4ae4-b733-6585ef74f841",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64c4f3d8-01aa-455c-8da6-6319610f35d7"
            }
          }
        ]
      },
      {
        "id": "0be8b0f0-f050-4185-a6d5-f0e0c6bfb3c6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a599c01d-96f0-4a01-bbdf-1d0370df5380",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76c3259d-4201-49f9-a962-dc8c36c9b762",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76cf5411-de67-4f96-a4a0-4005fb33b448",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08be290-1f9f-4067-9ea5-21fa57ac783d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e0966b3-4a62-4a33-a214-fd796f06e2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4e9132-52d3-4e7c-8726-b4dfed93ec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51b3bf94-625d-4ddc-8f8b-c2eb44b4f11e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fa914dd-1ad3-4741-96bd-e2a2162a4248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebf09893-ad21-4cf7-b799-a38fac3edb7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9e4607-f94b-443f-bb18-c190d4e172b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54dbfc8f-5b38-47a7-b382-35f1bd80a1bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64b38184-6e73-4e0b-b8f8-dbb04a35a47f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3c339f78-02e3-48fd-86de-961d7ecfaf07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bdef668-cdb0-4b36-b4a3-b8e092597051",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "765c2a6a-994d-4f4e-b713-d6ad4c6f7c17"
            }
          }
        ]
      },
      {
        "id": "ce0c2132-2acb-453b-8051-23a6fd6dc311",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b2218576-67f7-440a-85d8-c1907815a1cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "faa3a257-21af-40b3-b13d-2f4e77b1967a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f2b2d53-b490-4964-8723-49467e0b1ea7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4007368-d178-4ab5-ae9f-634a536ad104",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9680cca4-b69d-4e40-913d-fa1a41949f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714f57ad-656a-42dd-8784-085bbda44428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bfb2409-4bc0-4691-b875-0de2a2271577"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccde6e97-11f8-4cae-a7cc-dddffdc6fa6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ba62c8-ef43-44e0-9092-a39cb87c7add"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f50bd22d-c0e8-4a9d-a2b6-2d59b64ff254",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4be8479-3096-4123-853f-c0c3c4707de8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f679821a-3369-4cbb-8cd9-6a742a224294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf6f4c62-b21a-4796-9592-8fcd9d853328"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc0dbe5b-e08c-48bc-a2c9-a30683fedb2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "923df1c3-6386-4053-9431-8716336a7819"
            }
          }
        ]
      },
      {
        "id": "dfb42249-de6f-48d5-a6c5-111ffd21d242",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd3ceb7c-ca5d-49fb-9009-00d7fb066620",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c071741-3776-415d-9184-c2e51c26a549",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f40aefeb-decf-4731-bf92-b16245d38cd7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f036e0-c61d-436d-97cc-5fa1a42eca6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e55c45fa-21c8-45f5-8515-01c5f6bf8fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40465130-c0ef-4e55-ba7b-c3b45d73e36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39057253-0495-4073-a168-469f010e9152"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5542c00a-646f-42d6-92d3-933cb78df10e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b544aa8-0a39-48c5-b4f6-50fc8d63b864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cac69fbf-113f-4446-a60a-02cd02bde629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab4c0ab-3b71-4611-a201-1cc92322bb6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78a24048-9816-46ae-88da-0dd0db0121ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27f00f6b-910e-4b00-9a94-5588ae053fbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c830e5d4-60ff-4b48-9389-5fcd309e32fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2319c6e-107f-4688-abdb-5e3749b9c401"
            }
          }
        ]
      },
      {
        "id": "4b94d891-3f2d-437c-b624-0bb39b60c1d6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb3d9de1-2ef9-4aa6-ad2b-7bdbe75c45c1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6292811-6ebf-456a-af49-b112a8d7ac6c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6ebe8bed-5385-4e25-8ead-756271d55306",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49df5795-72ee-4486-ae41-889193cc3857",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d8769af-a0f4-461e-ac8e-f07d962799d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.380952380952376,
      "responseMin": 7,
      "responseMax": 232,
      "responseSd": 18.146824962946763,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721263148894,
      "completed": 1721263163992
    },
    "executions": [
      {
        "id": "9b240612-0632-4847-b51d-fc3dc10e8a74",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cfba1b7a-9879-4061-898b-468dbf5903e4",
          "httpRequestId": "9a73c364-08a9-4361-b597-25c9e641cd4a"
        },
        "item": {
          "id": "9b240612-0632-4847-b51d-fc3dc10e8a74",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9e180193-4fe1-4e90-8240-5fd34ba14c70",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "b08c73f4-9fd0-4bc6-b77a-e4696cd69a01",
        "cursor": {
          "ref": "b9fee7d6-1332-41b9-94f2-3e43f9ebfd74",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a10efdc6-a8ba-4bf8-8212-fec760a176d5"
        },
        "item": {
          "id": "b08c73f4-9fd0-4bc6-b77a-e4696cd69a01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8e94680a-74db-43a8-8bfb-3f1438f3cc3c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "cd02e563-43f1-4c56-a186-084c75cf5024",
        "cursor": {
          "ref": "6c338d63-c17e-422c-b4d7-d452fb0f9257",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7e9c7397-c8f8-4936-8721-ef07e70cfe34"
        },
        "item": {
          "id": "cd02e563-43f1-4c56-a186-084c75cf5024",
          "name": "did_json"
        },
        "response": {
          "id": "d1b5444d-4569-4a35-bd99-a16572fec9ee",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57833f59-d6bf-4091-bc5f-e58e7561108a",
        "cursor": {
          "ref": "c64fefaf-97df-49f4-ae35-69251ce615f4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "709ec53f-3512-4276-9814-8515ff8d534a"
        },
        "item": {
          "id": "57833f59-d6bf-4091-bc5f-e58e7561108a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4265bea9-deb6-4d2d-b80c-1b89622309f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57833f59-d6bf-4091-bc5f-e58e7561108a",
        "cursor": {
          "ref": "c64fefaf-97df-49f4-ae35-69251ce615f4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "709ec53f-3512-4276-9814-8515ff8d534a"
        },
        "item": {
          "id": "57833f59-d6bf-4091-bc5f-e58e7561108a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4265bea9-deb6-4d2d-b80c-1b89622309f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b8a7b1-6dba-4f34-bcc3-9f1c23db812f",
        "cursor": {
          "ref": "0b59ff75-0f8d-458c-b30e-280fd6fc276d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "16bb3e6d-9902-42e3-b0b8-ddec39f9fe68"
        },
        "item": {
          "id": "73b8a7b1-6dba-4f34-bcc3-9f1c23db812f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d40b4052-513a-4121-8c89-bd5b543adca6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c03d23-1458-426e-b5c3-060387bcbfad",
        "cursor": {
          "ref": "328f6089-dffc-4686-8657-3c2e3a041043",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8d73c3e3-2927-4bf4-8350-8c1e866ad76b"
        },
        "item": {
          "id": "30c03d23-1458-426e-b5c3-060387bcbfad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b4a74e8-5901-4160-afd4-90bdddc9c218",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a75a84-a8fc-4a82-baa1-b98c065ad49a",
        "cursor": {
          "ref": "c6148497-35ca-4afd-8ceb-ab09fc798f13",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8aada777-1a14-4aae-826d-17b0bc4611e6"
        },
        "item": {
          "id": "e4a75a84-a8fc-4a82-baa1-b98c065ad49a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0147c0b9-758a-4fef-be1d-92a46529b9e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf2048b-9c98-4dcf-8edb-98386326e2bb",
        "cursor": {
          "ref": "4cf8dda4-f88e-4c8e-9473-42eb48e63961",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4d03aa33-bb51-4eb8-a079-99bac554dc33"
        },
        "item": {
          "id": "9bf2048b-9c98-4dcf-8edb-98386326e2bb",
          "name": "identifiers"
        },
        "response": {
          "id": "9757c2c0-d64d-4201-a26a-cbe8b7394c8f",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1c7a10-cf96-45d7-b3b2-3cc3ec1dd4d4",
        "cursor": {
          "ref": "96c90204-ed85-4f02-a15b-8cecbff72ae5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "155598a0-84fb-49f5-a213-e4838167ff11"
        },
        "item": {
          "id": "4c1c7a10-cf96-45d7-b3b2-3cc3ec1dd4d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a70419ad-5458-4cea-9e7a-e4a5b6d0d93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63633d9-0d3a-4791-bb32-96085a343d18",
        "cursor": {
          "ref": "1e72e17d-9887-4fd4-9c47-bcb7439263da",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "174236fa-e143-44e7-8552-dffde8e7fbe2"
        },
        "item": {
          "id": "d63633d9-0d3a-4791-bb32-96085a343d18",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a574ccb5-02af-4c4a-8270-5408f3f7674e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025cae24-5adb-42d3-a251-a2bfba4609df",
        "cursor": {
          "ref": "5619d68f-ef90-48b7-ae85-32595c6457f7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a0913930-a923-475a-9c38-8caa88d3a26b"
        },
        "item": {
          "id": "025cae24-5adb-42d3-a251-a2bfba4609df",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "68186d31-1405-4a81-a52d-7f60853d1fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34900dc-dd89-44fa-9c94-ae42fe618dda",
        "cursor": {
          "ref": "fdf47faa-00b0-433d-ba76-0d724563e6b1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f9265041-6305-4786-b747-b544fca3cd72"
        },
        "item": {
          "id": "c34900dc-dd89-44fa-9c94-ae42fe618dda",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c124cd8f-53a2-4f5a-a88c-293cae39189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04f649d-5740-43b4-8d0b-7d31cc2350a2",
        "cursor": {
          "ref": "f1f994c1-efaf-4be5-a1e2-7fee7d92e9b1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "53a63e08-d265-4061-97ef-c1a15e0a79a5"
        },
        "item": {
          "id": "d04f649d-5740-43b4-8d0b-7d31cc2350a2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3499e855-384f-4a40-9d82-aa4d5a9b7184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde8837-095f-4e9a-8aa7-6f6b8407630b",
        "cursor": {
          "ref": "bfc73600-21fd-44c0-b700-083b8a74b021",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9800438f-07d8-451a-b250-528d549bdbb8"
        },
        "item": {
          "id": "bbde8837-095f-4e9a-8aa7-6f6b8407630b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb5c0b32-6954-4cb4-bbd4-51441ab5cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1f5b52-7c04-4824-a358-4cf857da3cc6",
        "cursor": {
          "ref": "9f3f2ab6-01c3-44c5-b723-edec9f7ce0fa",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e5617581-3a47-4bda-ba29-784a1fc984af"
        },
        "item": {
          "id": "af1f5b52-7c04-4824-a358-4cf857da3cc6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ea0eb8e0-8f8f-4200-b96f-1df24baf3263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebc745a-e066-467f-a8ed-2bb51264d4d4",
        "cursor": {
          "ref": "85542d8e-5a5a-4f90-8d40-775f43be6a6e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a031eb7d-981d-4226-acb2-387570de7a52"
        },
        "item": {
          "id": "8ebc745a-e066-467f-a8ed-2bb51264d4d4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0b6e88eb-4a55-42a3-ae23-7cbdae3c689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6280bb6f-b234-4e14-bf13-0c2a3dd04a02",
        "cursor": {
          "ref": "7d6b578a-8b75-4eac-94fe-ddb44613ddc6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "563a4708-0098-47e0-9985-343b42c4d05c"
        },
        "item": {
          "id": "6280bb6f-b234-4e14-bf13-0c2a3dd04a02",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "55becc6b-eaf1-46cb-a265-35c1415ce14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e17b0eb-7621-4951-8bb3-f86ebd2ffe22",
        "cursor": {
          "ref": "b1408796-5a9f-4918-ab35-a31efa77182a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c11b4f58-a368-4b54-a20c-1504d3f200b4"
        },
        "item": {
          "id": "6e17b0eb-7621-4951-8bb3-f86ebd2ffe22",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "04a8d1d6-f22e-4485-a5e2-ec56ed3461f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3415a41e-75b3-4d09-9415-3f1b806613c8",
        "cursor": {
          "ref": "d97fe5dd-303d-4e37-af88-c8026980a39a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e9339858-2bde-418c-9ea7-53d51d7a422c"
        },
        "item": {
          "id": "3415a41e-75b3-4d09-9415-3f1b806613c8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d7dfdb48-7a4f-4a22-8359-f1ef152d559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f7baed-c514-441b-8f77-261f610b427b",
        "cursor": {
          "ref": "9275dfde-c61c-48d6-86be-ffa512de609c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "08099167-59ff-48fd-9dc9-e6d24d523db7"
        },
        "item": {
          "id": "93f7baed-c514-441b-8f77-261f610b427b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dfb4aceb-cb38-4f3c-a278-1c8a05e75ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908812da-e24b-40d6-a6ec-702a136353d6",
        "cursor": {
          "ref": "3e7cedcc-dd5f-4259-aecf-f958c2e7806d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bbb363cf-f5a0-42ba-81a3-4be3eca308b8"
        },
        "item": {
          "id": "908812da-e24b-40d6-a6ec-702a136353d6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8f0a358c-18c6-41a8-8879-354e877419c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd5e0f4-c2a9-4624-b361-ece6c40a33b6",
        "cursor": {
          "ref": "ffcb0810-e2f8-40a4-8988-266bf451ab70",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4d01d516-e7f2-4e00-a518-e29da98a9b3a"
        },
        "item": {
          "id": "ddd5e0f4-c2a9-4624-b361-ece6c40a33b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d926eabd-c1d1-48d8-aa79-39660789414a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37208f1d-1835-4972-b192-a5ced9601d84",
        "cursor": {
          "ref": "79be9556-b41d-4938-8d77-ebc1612a64ca",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5716e131-d8b5-4e98-a5ec-9332617d66f2"
        },
        "item": {
          "id": "37208f1d-1835-4972-b192-a5ced9601d84",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "93554167-b00b-4e31-8a06-4e7a6a66c2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049b3bf4-277d-4608-9716-75f9936f8d59",
        "cursor": {
          "ref": "2ed71ea6-edbd-429b-b840-6203f88b76cb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "69604575-4458-40f4-b42d-84a80d69ea68"
        },
        "item": {
          "id": "049b3bf4-277d-4608-9716-75f9936f8d59",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bf1c0e0c-d2f0-4953-b598-e132de3cb9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c26ae6-08f2-46e8-a2b7-2c6ad69df80f",
        "cursor": {
          "ref": "86686ebd-702f-4083-bcc1-4b377bd21db9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0ff7642a-9d24-4795-a316-95550054dff2"
        },
        "item": {
          "id": "42c26ae6-08f2-46e8-a2b7-2c6ad69df80f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d1071d9e-17db-4556-8bec-52f0a05ab5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ed73fb-f3c1-4b97-9ffc-872fdebd0314",
        "cursor": {
          "ref": "49b28188-3cf6-4ed1-ba3c-753a9a7315d2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b263391b-c458-4143-86f8-fb1d24dd8b43"
        },
        "item": {
          "id": "09ed73fb-f3c1-4b97-9ffc-872fdebd0314",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7281201b-1d3d-4433-9dcd-237424795b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ae696b-02b6-46c3-a684-9c265e17a0af",
        "cursor": {
          "ref": "45aed559-dbef-47c5-94b6-c31f4ef82eb4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5a7d5d01-e83b-40da-9bde-0da78b85dc7b"
        },
        "item": {
          "id": "33ae696b-02b6-46c3-a684-9c265e17a0af",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "229d9992-317b-4593-8805-9f5c1e045705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f262e1-4768-4a3d-aed7-5a7ae63dfff6",
        "cursor": {
          "ref": "a0891bd1-f187-4b8e-87c8-46ce9e686eb8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "60f94eed-4c0c-43d4-8d0f-adde23b5bb89"
        },
        "item": {
          "id": "f4f262e1-4768-4a3d-aed7-5a7ae63dfff6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9d83270-81cf-4b90-81be-043e6af48653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6638eea4-4df0-4e6a-9c5f-46fa4d44b897",
        "cursor": {
          "ref": "37f8fbd0-cf15-401f-9c64-22a9f0590c7a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e86e6616-7e8d-4fd0-a0d4-e19919a40da8"
        },
        "item": {
          "id": "6638eea4-4df0-4e6a-9c5f-46fa4d44b897",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "676b1bf6-ef0c-4dca-9aa4-8028bf250a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cd48aa-23aa-4791-835f-4c5846e82045",
        "cursor": {
          "ref": "eed80fee-8c05-4615-bb9b-5f39ad2f396c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a3866548-9fc2-4027-87b6-e739b6cbf48f"
        },
        "item": {
          "id": "c0cd48aa-23aa-4791-835f-4c5846e82045",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e74a459-eb99-44a5-b543-b153105da37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022fbd14-a296-4cca-af70-9e562f0a639a",
        "cursor": {
          "ref": "509e5d12-fd33-4d9c-9041-d98fbd365566",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "491f8285-76a3-44af-b343-1467a5962df4"
        },
        "item": {
          "id": "022fbd14-a296-4cca-af70-9e562f0a639a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fb0ab1ea-553b-45ef-adf9-c07a975c1b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20331e52-71ce-4e88-bdec-ed22e2c31667",
        "cursor": {
          "ref": "79df3c15-b735-4333-9e5d-bb585f214b99",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "290f6e39-a90b-4a9b-9bbd-416de9ee11cb"
        },
        "item": {
          "id": "20331e52-71ce-4e88-bdec-ed22e2c31667",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "27a2ab68-4f29-432c-9a8f-6fe6f00feaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbc6517-37b8-4a3f-bb64-6765d2fcadb3",
        "cursor": {
          "ref": "a05e8a08-6ca3-4ee1-b1d8-be4549551377",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "626fe695-e8e3-404b-b9ea-a633b6b62d6b"
        },
        "item": {
          "id": "8dbc6517-37b8-4a3f-bb64-6765d2fcadb3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cda24e28-4638-4ac0-8446-6c68913a4d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e032ff-7965-4ce5-ae2c-533689cf1dee",
        "cursor": {
          "ref": "7db675ca-0121-4060-8737-b87fc59aa544",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3286301c-e7a6-4b3c-a808-dad3b5662e97"
        },
        "item": {
          "id": "34e032ff-7965-4ce5-ae2c-533689cf1dee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7b1b0898-5092-49f3-bd96-1c836c5ed76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568528f8-e0f3-4b0d-8102-7422a139d06a",
        "cursor": {
          "ref": "25b59cce-eb06-4708-9f5b-741648c48178",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1de3a120-cf99-4899-b2fe-058fdbbf3609"
        },
        "item": {
          "id": "568528f8-e0f3-4b0d-8102-7422a139d06a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e01ef98-ea71-4b14-bd1c-cdf8bd9f9718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399bcd93-e81f-472f-bec2-5bafc748f345",
        "cursor": {
          "ref": "8d5e7b37-b244-480f-8928-8b3c09bcc08f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9fffa2e3-6d28-4005-bbd7-0f71f81d65c2"
        },
        "item": {
          "id": "399bcd93-e81f-472f-bec2-5bafc748f345",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "893a059a-3643-4dc6-a67c-36cec5a0d843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd02408-5ba0-4cde-89e3-d10672fa3366",
        "cursor": {
          "ref": "af8ce18e-1d27-43cb-8693-ba1f678b397a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "425e14a8-001c-4b3f-b9a0-5b903ac0f9b1"
        },
        "item": {
          "id": "acd02408-5ba0-4cde-89e3-d10672fa3366",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c5e77a57-84a7-4ca2-aca1-3bd1a591b310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09e6cbf-a1a2-4a45-981a-9ff60558a9e3",
        "cursor": {
          "ref": "7b056f1f-b4e2-4aab-b22b-dedcb61e8358",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "79ca4b08-27de-404c-a7e4-a4243c0051ef"
        },
        "item": {
          "id": "e09e6cbf-a1a2-4a45-981a-9ff60558a9e3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "79cfe2b7-73df-4792-b6d9-d7cb67b9157f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128cf3a8-4d80-4f0e-835f-56a69c9192ab",
        "cursor": {
          "ref": "6e2231a6-c7bf-472f-a37f-bf867ec32bcf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db792a41-3e3a-4faa-a280-a5ecd9e722a3"
        },
        "item": {
          "id": "128cf3a8-4d80-4f0e-835f-56a69c9192ab",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a84262d0-5ca4-4996-b937-b1793478e559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d574bc9b-ad91-4730-8849-db81efca6454",
        "cursor": {
          "ref": "edb7a772-6c5a-4a0f-b6a6-b1c5ae5c9c1c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "299e5d76-ca62-46dc-9048-b3eb38fd34ef"
        },
        "item": {
          "id": "d574bc9b-ad91-4730-8849-db81efca6454",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "68b77fbb-4d9f-4a46-8c16-0a260905bcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3b703b-d26d-4cf6-9951-2ee358492178",
        "cursor": {
          "ref": "e6e43ffc-4308-43d5-8c1a-05d52b6ea0fb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c2d6b78f-18f5-48b0-bfe4-e4f95b32aac6"
        },
        "item": {
          "id": "bb3b703b-d26d-4cf6-9951-2ee358492178",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6bd4f1ee-9745-4296-ba17-8a7a9071919e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8877883-ca30-4215-b03d-12a9e96c56e4",
        "cursor": {
          "ref": "52026ddd-d5cd-4bb4-8826-0d16d5f83b12",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5a3fbf0b-7733-4e5e-b56e-291bce5bcad2"
        },
        "item": {
          "id": "b8877883-ca30-4215-b03d-12a9e96c56e4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4cec767c-1d3c-40ae-ac83-b8cb73056bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f7191d-cbcc-4244-96cf-bd3f9cddf38b",
        "cursor": {
          "ref": "6df2b9cb-a948-43aa-8de0-c7c140a8eb08",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b9f13346-5b0f-4c41-81c1-3fa8331f514a"
        },
        "item": {
          "id": "30f7191d-cbcc-4244-96cf-bd3f9cddf38b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "403b1251-d080-4e1f-bffc-e4c338d522fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a297e33-999b-48a3-aaeb-a79ec53d505d",
        "cursor": {
          "ref": "a206fe4b-d283-4186-92f2-2c268623cccd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e2e84d24-2e2c-4d33-9d18-4546593f0298"
        },
        "item": {
          "id": "1a297e33-999b-48a3-aaeb-a79ec53d505d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "faf668c3-c924-471e-b1db-5894277e50f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec583e5d-aa75-4796-b0d8-817d904d16fb",
        "cursor": {
          "ref": "a8ba3830-4591-4c70-82b1-d35dc4ea870f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "83738666-ebd9-4b64-923e-503597e163c0"
        },
        "item": {
          "id": "ec583e5d-aa75-4796-b0d8-817d904d16fb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a5de3943-e5ed-4c86-a15e-ba1536c50698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e0c4ea-8a03-4ac3-934e-1c7f16fe61db",
        "cursor": {
          "ref": "a57a7117-ac8b-42f6-b35c-0d59662fd432",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "52220c65-f8d4-48a9-9313-8eb950fa8ddf"
        },
        "item": {
          "id": "d3e0c4ea-8a03-4ac3-934e-1c7f16fe61db",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "04f277df-5215-4746-a9b7-e33007c297f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759f6f3-a697-4154-b79d-9b56cf1f61c8",
        "cursor": {
          "ref": "3daae3ce-8be3-4a6b-b200-3a763cd2c6bd",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "95b553e6-81cf-4583-a3a6-651ca1016467"
        },
        "item": {
          "id": "9759f6f3-a697-4154-b79d-9b56cf1f61c8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "649cb2fb-4452-4725-84c2-acc3e44d37bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f63b7a-806f-4cba-9cab-688cb06effdf",
        "cursor": {
          "ref": "5983fb8b-c358-45fd-b3c6-398a3ce4aa6a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "206c2dd7-66a4-4751-b613-c0b728063a95"
        },
        "item": {
          "id": "d6f63b7a-806f-4cba-9cab-688cb06effdf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "40f57bf3-2c64-4c46-a01d-d45c4766fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e467e2e3-43b0-449b-aa77-8489320a5b30",
        "cursor": {
          "ref": "6fe43b6b-fff9-4135-89a9-1544331681ac",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0b39ec1c-685d-451b-8623-ec5c5e05bb34"
        },
        "item": {
          "id": "e467e2e3-43b0-449b-aa77-8489320a5b30",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9e31702e-0ace-4525-b587-61e8a26c77e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e63314-0de3-4de7-9433-678e612f9820",
        "cursor": {
          "ref": "4be60716-7f7e-4177-b997-40b89020795e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "723f380e-7299-4b93-94ce-1336622bec49"
        },
        "item": {
          "id": "c3e63314-0de3-4de7-9433-678e612f9820",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1c124684-ac87-40e6-9804-f59af348c688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d489ca7e-85c7-4ee9-b302-cc9789168b0c",
        "cursor": {
          "ref": "af578b34-37af-4631-a6e4-1059f471f4de",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e81de5b0-d61e-49fc-95e6-dad6da4c8e33"
        },
        "item": {
          "id": "d489ca7e-85c7-4ee9-b302-cc9789168b0c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0961404e-c984-43db-8c6b-259c318f8468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f328f9-bee9-4f0d-990e-f011e4db6401",
        "cursor": {
          "ref": "b18743b4-a6a2-40e0-b89a-26414caf5766",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6c0dca98-faba-4279-8b39-f94df25b86a0"
        },
        "item": {
          "id": "c7f328f9-bee9-4f0d-990e-f011e4db6401",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fc47c5ff-f781-441c-85df-ce128333c352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511a659e-1b63-4155-ac44-09fc2cb94ec6",
        "cursor": {
          "ref": "a6dafa45-8dee-4081-8abd-fae0d5d04c88",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "01e31262-c9fd-4854-8889-54e08fe2034e"
        },
        "item": {
          "id": "511a659e-1b63-4155-ac44-09fc2cb94ec6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8cc3ee30-8b0d-444e-bfa0-aa63bf07d72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7501ecd-cd34-42e9-b07f-ecabddd920d2",
        "cursor": {
          "ref": "e7783d65-64c4-4709-b6b2-9ddc4c38fb73",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "462081c5-b0ad-41fd-9771-b5771313e03f"
        },
        "item": {
          "id": "f7501ecd-cd34-42e9-b07f-ecabddd920d2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a704da90-9700-461c-acbd-91332ed486de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9885ab78-c2c3-44ad-98cc-f243ab6c3879",
        "cursor": {
          "ref": "36878e79-3cb5-48f7-9203-11702c27da9d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4c21169c-cb5a-44c1-a200-a1756fdb61ff"
        },
        "item": {
          "id": "9885ab78-c2c3-44ad-98cc-f243ab6c3879",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1e1c41ee-afaf-411b-a270-c077c823891b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a840b62c-f4dc-45fb-b34e-eca7108ab2a5",
        "cursor": {
          "ref": "f34b3267-6be4-461e-aad1-261a380350cf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9502621d-8bf2-4665-bf20-5b48bbf49b50"
        },
        "item": {
          "id": "a840b62c-f4dc-45fb-b34e-eca7108ab2a5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7af7961f-039e-410a-8524-da82391018d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec62e5a-c135-47d9-8a50-48bf375426e1",
        "cursor": {
          "ref": "5790ba8f-f057-4e57-a57d-07c5bfa3ae98",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2879ca4c-d2ed-41a9-bb4c-b86d397020dc"
        },
        "item": {
          "id": "8ec62e5a-c135-47d9-8a50-48bf375426e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72508953-6e36-4617-a849-e147ea57f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d8db5e-1f49-40d9-9dab-2669ceced28c",
        "cursor": {
          "ref": "4ef73f31-f3fd-4f9f-9c19-1587ebc99999",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f3fee666-0542-43ba-878c-f028b078e043"
        },
        "item": {
          "id": "95d8db5e-1f49-40d9-9dab-2669ceced28c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1e63b97b-7e14-4687-8485-dab4fe9f39bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a38bc9-eb4e-4d89-9e84-71b28874f1f3",
        "cursor": {
          "ref": "86a371d4-f1d4-4554-87e1-e797eac453d3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c4caff84-f93f-4334-859a-8b92f4b10ee2"
        },
        "item": {
          "id": "62a38bc9-eb4e-4d89-9e84-71b28874f1f3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5ef0d8cd-edcb-44e4-80d1-abffb95273ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fc2312-4c7f-4496-bff9-16e318102531",
        "cursor": {
          "ref": "0f1fa3ee-c201-4a97-90dd-1e8d15e1d2d5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "77725aff-7d34-46ac-97c8-53671f62101e"
        },
        "item": {
          "id": "c7fc2312-4c7f-4496-bff9-16e318102531",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "feca91aa-e1c7-48c7-bc69-99af339f53e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae162db-efd6-4588-8485-6828c193a82f",
        "cursor": {
          "ref": "8c5b9118-9045-4263-b5cf-27522926b4dc",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5f3359a6-2dce-45d4-aebe-c7a16c21d1a9"
        },
        "item": {
          "id": "4ae162db-efd6-4588-8485-6828c193a82f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f211ce10-bdeb-4cc3-9ed3-fc4b4808d5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e741f9-62c3-4907-9fc6-501aacf619de",
        "cursor": {
          "ref": "8aab037a-ee03-4d5a-9ac5-14985a12687d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d095c7f1-494b-4b7a-8344-9b3f2aa68ce8"
        },
        "item": {
          "id": "41e741f9-62c3-4907-9fc6-501aacf619de",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0c1dd312-b09e-4dfb-bbf7-5bc097cd6acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14e95e0-2c5f-4af6-a120-df0e09fac4ba",
        "cursor": {
          "ref": "aa7984be-3272-4a50-af1f-17f5a260febe",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f32fdb5d-b1cb-4c20-931a-3cf9d8e9ffa4"
        },
        "item": {
          "id": "e14e95e0-2c5f-4af6-a120-df0e09fac4ba",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aa2c8af5-5723-4e1c-a4c9-e13fa862015b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b5fbaf-d29a-421b-9f16-38225ecdfaea",
        "cursor": {
          "ref": "1863bf15-03ee-4fad-8616-2d7ade36e8d9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "354455da-4022-40e9-8abb-3298e51768c2"
        },
        "item": {
          "id": "81b5fbaf-d29a-421b-9f16-38225ecdfaea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5863e1dd-ccc4-43d6-8443-3ce5cb092b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60e0b30-9230-42cf-87c9-40efb0191815",
        "cursor": {
          "ref": "7be02307-9439-4b07-a1b1-edfb28c1c4ef",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b15fedc9-cb9e-4b19-b302-94008d3f6878"
        },
        "item": {
          "id": "c60e0b30-9230-42cf-87c9-40efb0191815",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0d3d4900-31c7-486c-950f-b54efea11b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a5c45c-2285-469c-ada6-e039a8646b7b",
        "cursor": {
          "ref": "0b930a57-2234-4d83-aecf-25b572511a13",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "feea2623-899c-4e44-b790-e2268065bc20"
        },
        "item": {
          "id": "d0a5c45c-2285-469c-ada6-e039a8646b7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a1940f86-e9d7-44d1-9ad2-06c0de488b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12872645-76f4-42ff-9f6d-9e1f16197e8f",
        "cursor": {
          "ref": "c6200dc0-9faf-4637-abc0-33bb1aa28ac5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ad5be4cc-f743-4354-afbf-cace0f04c0d2"
        },
        "item": {
          "id": "12872645-76f4-42ff-9f6d-9e1f16197e8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4c55dc9d-4970-49f8-ac78-6c19b419516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0af5aa0-3bbd-406f-8dbc-8d57a73bf6f3",
        "cursor": {
          "ref": "a3640971-3ba5-4b8c-9baa-f2c4b31e1493",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "23fbfb06-c3d2-434d-8fa5-382d2cb85e39"
        },
        "item": {
          "id": "c0af5aa0-3bbd-406f-8dbc-8d57a73bf6f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bbe9b322-8f4f-4046-b55d-848c80bd2ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a748aa-6724-4dab-bfb8-f4249f30bdc6",
        "cursor": {
          "ref": "fc94070f-df6f-43ec-8444-f2c84865f59f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bc7e71db-7121-4e70-a7ea-cab670e09866"
        },
        "item": {
          "id": "21a748aa-6724-4dab-bfb8-f4249f30bdc6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5b131a53-7f59-4b24-aedf-baf1771fac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2dea7-5bee-4712-85f3-4722ef536e44",
        "cursor": {
          "ref": "86c1a5d7-18a0-4439-8486-31a7dd035f7a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "37e457cc-0cb0-43e6-b666-6be277a5034a"
        },
        "item": {
          "id": "bea2dea7-5bee-4712-85f3-4722ef536e44",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "781a2fa3-8044-4eb9-be7f-41a8c8818583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ac76fc-3f4c-4faa-a366-935da523b0a7",
        "cursor": {
          "ref": "8d996bf8-1e28-4b41-9a9d-bad56a632983",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bdcda331-b6a3-4e31-aa51-7b930de84356"
        },
        "item": {
          "id": "58ac76fc-3f4c-4faa-a366-935da523b0a7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "faba0a7b-7233-4c5a-ac4f-5a695549010d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ff3b0a-e98c-46e1-ab1d-77fe973883e3",
        "cursor": {
          "ref": "4ded43d5-c27b-4a17-884c-a2422ce26456",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "662d48f6-b061-4aa5-9675-b3e98985911b"
        },
        "item": {
          "id": "48ff3b0a-e98c-46e1-ab1d-77fe973883e3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81d89271-4ce4-48d3-8827-73adec853a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2c550e-8889-452b-9d6f-0c5351fec5bc",
        "cursor": {
          "ref": "7a4a7bdc-b4e4-4d99-9593-a7d68016e5b2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "51605f4b-ccc4-4f46-bcfe-8a40d8f49167"
        },
        "item": {
          "id": "8e2c550e-8889-452b-9d6f-0c5351fec5bc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f2f3d8cc-3ad8-4bc1-8ebb-22e1b5803abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4503655f-f0c7-46a8-849e-3b0788c4f1ff",
        "cursor": {
          "ref": "af9c7b5e-abd0-448a-8e19-a125d63fd23c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6320c1d7-567a-443c-9881-d1303ede9b41"
        },
        "item": {
          "id": "4503655f-f0c7-46a8-849e-3b0788c4f1ff",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "63105e5b-a703-4627-abd8-0e7115e932de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e595d12-a49d-4176-8062-d55e42344195",
        "cursor": {
          "ref": "14bba667-77b2-44e2-aa82-fc568c257fe7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8062b288-e352-4eed-ab16-40d00bbc3524"
        },
        "item": {
          "id": "5e595d12-a49d-4176-8062-d55e42344195",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "009541da-7728-4779-90b7-98582ca33f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8234f7cb-a2ed-499d-bde1-351ff4f31779",
        "cursor": {
          "ref": "4a1a0173-4538-4a4a-b6c9-08fae2263311",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9b589b58-ff91-48f3-ad7f-1dcb23661122"
        },
        "item": {
          "id": "8234f7cb-a2ed-499d-bde1-351ff4f31779",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "09334007-d294-4136-b5b1-0b4b671158cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195d27e5-a5d9-48dc-8fcc-f3368746a384",
        "cursor": {
          "ref": "09fdd6ad-8e47-4aa6-aad2-1b7b82cd56a3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "edc2dd8c-f44c-4060-8e9d-6ad6f534fafe"
        },
        "item": {
          "id": "195d27e5-a5d9-48dc-8fcc-f3368746a384",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2cf784e0-1e7f-4441-a1da-3c6aad2d890c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb5a455-b454-4106-9731-fb54ddcc36ef",
        "cursor": {
          "ref": "76caa86e-813a-4344-bf5c-d1576bc75996",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8487e6f6-0148-4b2b-b42d-fc31c82d56f8"
        },
        "item": {
          "id": "7fb5a455-b454-4106-9731-fb54ddcc36ef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a8b24bb3-1e09-4c3e-8d29-c82a73674d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0a45d3-1c2d-4fe9-8c40-f48c36cdf228",
        "cursor": {
          "ref": "6d7da472-4a13-4ec2-a8c2-2c52564b071f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3c178aee-fe7e-4152-af80-fb9c6bbad3e1"
        },
        "item": {
          "id": "4e0a45d3-1c2d-4fe9-8c40-f48c36cdf228",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "907d2926-9366-4e84-89a7-f3687b003a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657f2f28-a6b0-4876-ae4e-8ee19972b5b5",
        "cursor": {
          "ref": "55fa5ce5-3442-4379-bb6a-f877449d6d14",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8f0401d1-8a89-4ea6-a325-1e09eb02c97b"
        },
        "item": {
          "id": "657f2f28-a6b0-4876-ae4e-8ee19972b5b5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f88258df-ff29-4ebb-82f3-75ef73b37834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ccb85e-ca69-442f-bd68-71f8b0288b5d",
        "cursor": {
          "ref": "0fcde1b3-b6de-4c08-98b3-ae86b2684ec9",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ef892c1b-a76f-4683-8e90-2fcfe938924e"
        },
        "item": {
          "id": "14ccb85e-ca69-442f-bd68-71f8b0288b5d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e447a72-9297-4bdd-b65e-4c5a05f17740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71732dd-340a-4953-8a10-0c813c983b6c",
        "cursor": {
          "ref": "c58dc45a-509a-4b0f-a919-e0696d223421",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8ced12b8-e694-4d51-ac25-fb78c054781d"
        },
        "item": {
          "id": "e71732dd-340a-4953-8a10-0c813c983b6c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "537c8cbc-e5f6-4937-95c6-a5e4df6d4aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d01c38-1b61-4a67-a192-8f92387d729d",
        "cursor": {
          "ref": "ff10ff5f-9e05-41b2-beb7-08b538388dcd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "889881bc-1a8d-4478-aef2-d5578b6c389b"
        },
        "item": {
          "id": "35d01c38-1b61-4a67-a192-8f92387d729d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "13943596-4bb4-4204-b44d-bc45fbd4d659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e263d864-1cfc-4ee0-ad2f-ab02d9b99925",
        "cursor": {
          "ref": "0a41f940-e9d2-452c-8954-3f46a19f7642",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4fe78053-42e2-40b0-975f-2d4acbb8ca34"
        },
        "item": {
          "id": "e263d864-1cfc-4ee0-ad2f-ab02d9b99925",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b1f4335-b08d-4183-85a2-f6e071b1cd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe0360-d7de-485c-b097-9d5f7b2e7f8b",
        "cursor": {
          "ref": "7250e9bb-8ed8-421e-8104-6da8e2a981d2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a70410df-01ba-4171-9d2e-57986d66e66c"
        },
        "item": {
          "id": "cbbe0360-d7de-485c-b097-9d5f7b2e7f8b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "63881319-237e-4e6a-a543-9862a600fae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec427de-ca67-4127-b538-0ff9135e06c8",
        "cursor": {
          "ref": "8588601e-57ce-4de7-894a-38df3cd094c2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f9c82e24-cf74-4f49-8303-56e0374e20ae"
        },
        "item": {
          "id": "1ec427de-ca67-4127-b538-0ff9135e06c8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7e210b83-ff60-4326-a44d-b8d1ab044657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a3130-6133-496a-8f97-7e829affc9f6",
        "cursor": {
          "ref": "695b2ed1-0bf9-4460-98de-7226a0f0b7ba",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b723a289-3686-487f-928e-906fd3a38d3b"
        },
        "item": {
          "id": "811a3130-6133-496a-8f97-7e829affc9f6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6e463b4f-ed16-470c-8558-d591b7fa5b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f24596e-a309-46cd-9028-34ab689a5d4d",
        "cursor": {
          "ref": "ccf3a160-adb0-4804-a086-a1be7de57fe1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "477fc79a-5caf-4006-b329-578a9eb7827c"
        },
        "item": {
          "id": "1f24596e-a309-46cd-9028-34ab689a5d4d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3872f442-f388-45be-8e62-e4d3ff0446b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcee9dd-f0f6-49d3-9270-67338bdf1029",
        "cursor": {
          "ref": "6782251a-65d4-4fdb-81e5-dc9540c318df",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a320ac2a-c98a-4166-84d8-fff47dfbfdc3"
        },
        "item": {
          "id": "dfcee9dd-f0f6-49d3-9270-67338bdf1029",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1833e43c-f7c4-499d-b9a4-d24847a609e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac69184-a093-4aef-8136-4043c316c5a2",
        "cursor": {
          "ref": "04605c09-4cea-43d6-8445-bb8003b40e02",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "84e08b78-dc91-4e6c-ac0a-328230c02e4e"
        },
        "item": {
          "id": "bac69184-a093-4aef-8136-4043c316c5a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ab3be560-2d4e-4fa3-9b29-ad6789a80bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8100b0-bace-46b5-bf32-a74fb4b0cede",
        "cursor": {
          "ref": "c03c6195-96db-497f-b4e5-3b4d1898684e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "66c64872-bab4-4ec9-a5e2-ced41b5148ab"
        },
        "item": {
          "id": "1a8100b0-bace-46b5-bf32-a74fb4b0cede",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4fded609-244f-4566-9a53-8f6d7d3f7cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ade9e1-8e1c-48bd-8896-ffdfb59bceb0",
        "cursor": {
          "ref": "b13152dc-5c7c-47d3-aa0a-019211698ca7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "695bc1af-add1-4efe-a8e7-7a0207869f38"
        },
        "item": {
          "id": "a5ade9e1-8e1c-48bd-8896-ffdfb59bceb0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa82ab11-b941-49b6-b784-a0ee5b85bdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2786a96b-e6a2-4c18-9578-7f5a57f9a093",
        "cursor": {
          "ref": "ad74e26a-23a6-47ad-b072-f9ef183d6636",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8dc53fe6-83e3-4adf-a3c6-fee21d50320d"
        },
        "item": {
          "id": "2786a96b-e6a2-4c18-9578-7f5a57f9a093",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b724b039-e3d8-45eb-8f51-d8d247607d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d783a4ab-f196-4f34-afa6-79f34d39303e",
        "cursor": {
          "ref": "9618be21-6a28-4472-a815-70a1b08c5424",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0c97e69a-e9fd-4f21-85b8-1b6ac937134c"
        },
        "item": {
          "id": "d783a4ab-f196-4f34-afa6-79f34d39303e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "48b03736-95bb-4059-a170-43c0c6c171cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddffb80-2b60-465f-b104-47aa264cc7d4",
        "cursor": {
          "ref": "12a3c4d8-3c85-45da-9336-a45722f1f4f5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9be83d7b-5812-4827-b72c-f5065d2a3f05"
        },
        "item": {
          "id": "2ddffb80-2b60-465f-b104-47aa264cc7d4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "43cfa638-d608-4d30-9e3f-cbd92e798206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425c59a2-159c-4827-886d-feafe2132bb4",
        "cursor": {
          "ref": "833a4742-af92-46c4-a548-f031b488ae76",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3ff5d988-2c61-4477-a1d4-f1c688cc1c2e"
        },
        "item": {
          "id": "425c59a2-159c-4827-886d-feafe2132bb4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5abac5a8-c187-4136-b3e3-43bc09bd45fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b88f95-09dc-4811-b095-29b1f68e7fd5",
        "cursor": {
          "ref": "cc7dc35b-fe1d-4804-81cb-87a0c9227ecb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "16a26e7c-67bc-4722-aa04-aa75de8527fd"
        },
        "item": {
          "id": "c0b88f95-09dc-4811-b095-29b1f68e7fd5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2a62b9d5-7583-49de-b4cb-fd7512cfd616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aa60bb-5f41-4f46-8b8f-63e28d7ecf6f",
        "cursor": {
          "ref": "7ced79f7-b788-4a1a-a585-1f873229a8e3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ae4e9cbf-91f4-4637-85d6-5bd082a71ee8"
        },
        "item": {
          "id": "d5aa60bb-5f41-4f46-8b8f-63e28d7ecf6f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "40710035-635a-48e2-bf2f-d609cf6672af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f3f89a-ca4d-4d53-a4f2-1de7d068de4a",
        "cursor": {
          "ref": "6e977236-ed8f-46c0-9fcc-aa3fcf214ae2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6dbdd291-e969-47d3-998d-4b34abd2871f"
        },
        "item": {
          "id": "b0f3f89a-ca4d-4d53-a4f2-1de7d068de4a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "447597d0-8adc-4689-916a-cdb04480141b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af4db0b-8619-4a49-b6da-6cfd962831ed",
        "cursor": {
          "ref": "2b1021b4-5a47-4a28-b675-bf8ebde1a68f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8988cc2e-358d-4be0-8b97-bffca5e08fcf"
        },
        "item": {
          "id": "5af4db0b-8619-4a49-b6da-6cfd962831ed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "223f43eb-e0e9-45ea-ae57-9b0a554ad76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d18a538-c0ba-448f-8cc0-7e33a1e15f80",
        "cursor": {
          "ref": "2897e442-69b8-40bc-a8ed-0b1428772f6d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ea789130-c3e1-4fef-8083-1188cef69bbc"
        },
        "item": {
          "id": "1d18a538-c0ba-448f-8cc0-7e33a1e15f80",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5b674721-5d4a-4254-98cd-a27681545036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450875da-32ca-4881-8ce6-eac314c046ba",
        "cursor": {
          "ref": "32a9b0b9-adca-43ed-82dd-eb629892fb44",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0751f213-d31c-4ce7-8661-9b15086ae127"
        },
        "item": {
          "id": "450875da-32ca-4881-8ce6-eac314c046ba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ded75df2-6b3f-4f86-a03e-b5bff1c170d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0bf6a084-844a-4168-a793-a636ed4083ab",
        "cursor": {
          "ref": "4e00b1ae-201a-40f7-a6f4-c5c54ccd7084",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "86ff16d7-b7ac-4693-b2b2-529035b11f18"
        },
        "item": {
          "id": "0bf6a084-844a-4168-a793-a636ed4083ab",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cebd0913-f7e0-4718-98fe-2cb600f60292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e8b10430-64d1-461f-a2b8-958a81aab9dc",
        "cursor": {
          "ref": "c57e5393-d26b-4e78-ac57-b1746c02cec0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7298321d-d160-43ca-98a6-b18d0a00637a"
        },
        "item": {
          "id": "e8b10430-64d1-461f-a2b8-958a81aab9dc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6ec51797-db13-482e-87e6-cff92f98e156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5c610623-6701-4ed9-af04-8e5d5bd6020c",
        "cursor": {
          "ref": "6f7ada8f-cabe-4c57-95ac-7abd4fbb2d39",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fb1828d0-13b6-46be-9e67-bcfbdfd48486"
        },
        "item": {
          "id": "5c610623-6701-4ed9-af04-8e5d5bd6020c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "459b821c-48f5-4cc0-ac29-8a7450b5d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "10c862d3-c772-4841-8914-a25fdfb75bb3",
        "cursor": {
          "ref": "091aaa13-febc-4a1e-bfdf-82c8d86fa121",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "345131a2-16ab-478c-9642-526a19234ca8"
        },
        "item": {
          "id": "10c862d3-c772-4841-8914-a25fdfb75bb3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e89d942a-fc3a-4322-aef9-74ae0f3c19c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e603cebf-59a2-4e1a-a447-e431f2ced811",
        "cursor": {
          "ref": "215a4fc7-6f8d-4087-b598-e8850a9d9c95",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d5cf9d01-ab2d-4937-b965-b3327e5454b4"
        },
        "item": {
          "id": "e603cebf-59a2-4e1a-a447-e431f2ced811",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cc9613b2-76c7-425e-bf82-b2cd1bc25a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fd9ebf98-ebe7-4ff5-8b06-4bd2d8c2ea11",
        "cursor": {
          "ref": "a9b26822-dc59-4ae3-8c07-5528345e2704",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9d13a7ac-ad47-4f7b-bff0-b3f830a4f1da"
        },
        "item": {
          "id": "fd9ebf98-ebe7-4ff5-8b06-4bd2d8c2ea11",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2a068dd9-ee71-460b-b83f-b41dc02d96bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "730f2e65-a15c-4670-b0d1-87e3cce80c19",
        "cursor": {
          "ref": "ecf39666-cc9a-4f36-8471-f217c8015b2c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "afd900a6-00e5-4717-96e2-b0e82262e93b"
        },
        "item": {
          "id": "730f2e65-a15c-4670-b0d1-87e3cce80c19",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "edcf0e2e-4fde-4fe4-9087-6392a92de04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c49d29d-b9ea-433c-a0f3-f880d3480e21",
        "cursor": {
          "ref": "810ec4ee-8a47-463c-834a-9808d1fec9a6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fc0b9ad0-39c5-49c3-ade4-5a06a93a8d05"
        },
        "item": {
          "id": "0c49d29d-b9ea-433c-a0f3-f880d3480e21",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2cec7364-c8c2-4a63-a2b2-c5a601af9fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314c40b7-cd09-4026-976e-95baedb17ea2",
        "cursor": {
          "ref": "4e82d395-069e-4860-b1ef-a14f7e381b7f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "67398769-8b0f-4652-881a-aeb5cf794571"
        },
        "item": {
          "id": "314c40b7-cd09-4026-976e-95baedb17ea2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b34ece4c-6b36-499c-8f5f-6ca2b01e8ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e79a2b-2d58-4662-a103-25d5c5168b72",
        "cursor": {
          "ref": "0eaad4ca-aa72-4187-ae5a-cefa98ac6776",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2104f3df-7c2f-4306-96c9-a3ef05d608c0"
        },
        "item": {
          "id": "08e79a2b-2d58-4662-a103-25d5c5168b72",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5f363eec-75a4-4082-b8fd-3268f4624deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c3be6-cf38-4e24-81d1-ed4d8379f9c9",
        "cursor": {
          "ref": "71185c0d-4e3a-482c-8a14-04f665f1612c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "43408df8-4d0f-41ef-a21b-ade140d2aecc"
        },
        "item": {
          "id": "a91c3be6-cf38-4e24-81d1-ed4d8379f9c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ce8500dc-04aa-475b-bc49-48cde34965ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292b069-5f41-4f17-9bfa-352997401d51",
        "cursor": {
          "ref": "7859a372-8051-483b-9891-7ea200c55b70",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "64fc845e-9bdf-4c4e-ae54-b00aab5bcda4"
        },
        "item": {
          "id": "7292b069-5f41-4f17-9bfa-352997401d51",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "01d89b7c-a2c6-46e0-8d00-f05942ccdbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb6cd4-814c-4be8-9d19-81e76277dd00",
        "cursor": {
          "ref": "3a186d74-bff8-482a-ac91-da2429946766",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "96581aa5-c598-4b03-8a73-fc9166dbf5f1"
        },
        "item": {
          "id": "3feb6cd4-814c-4be8-9d19-81e76277dd00",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2792f30-0f6a-4ddf-bc5e-02367b3995fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2422bfb8-06a4-490f-8f48-a6817b706bc7",
        "cursor": {
          "ref": "3292669f-307d-4be6-9d5f-ed5da0729f64",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "df1bd194-1b04-4c1e-b899-79b1e10d8ff7"
        },
        "item": {
          "id": "2422bfb8-06a4-490f-8f48-a6817b706bc7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3bcd763-40cb-4b70-822d-3f7f0bc2f9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dceaab6-47cc-4009-8f0c-ffcd16c90e14",
        "cursor": {
          "ref": "0623f9f1-4f4a-46ff-bde0-81c3e2865fdb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6b4fcf3d-6d3e-4ba1-8663-2587e086518d"
        },
        "item": {
          "id": "9dceaab6-47cc-4009-8f0c-ffcd16c90e14",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b183a49-276f-412a-88d7-649ca17694b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e60f40-cfe3-4710-a164-0424d24c0278",
        "cursor": {
          "ref": "6aab9da8-1a21-49be-be34-9ac2ffb5c14a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a4973af2-dd78-471d-810b-a70438ec2139"
        },
        "item": {
          "id": "82e60f40-cfe3-4710-a164-0424d24c0278",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f60f21a9-0505-42cf-b3e8-0e9dd3a9a832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9112543-3ca8-4dc9-9dbc-3d154d87baaf",
        "cursor": {
          "ref": "6ad4ff9d-f45f-4062-81f1-a995337ef01b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ae256f16-3fc4-4bcd-82ce-ee290983c4cd"
        },
        "item": {
          "id": "d9112543-3ca8-4dc9-9dbc-3d154d87baaf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "79279924-04e5-4c54-9fe5-22f14c9a7884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6537c44-a5fc-482e-9758-bd5b9bb26ded",
        "cursor": {
          "ref": "2fb36db8-f97f-410f-8809-c0ec7974489c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0a299eca-f81d-4e84-ac60-802038057d81"
        },
        "item": {
          "id": "b6537c44-a5fc-482e-9758-bd5b9bb26ded",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4e1a4354-f520-49df-9e17-5a07b6e19a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74be2b5a-5a45-4923-b226-cb5b6efdca9f",
        "cursor": {
          "ref": "7b4b6f37-c891-410c-96ee-0ff838a3605c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b271cb76-2e56-413f-882a-9281610c2257"
        },
        "item": {
          "id": "74be2b5a-5a45-4923-b226-cb5b6efdca9f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ab4119cc-3d22-47e0-a277-409a8b2ae49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbb6529-139e-4192-8f65-595b2a7ef93f",
        "cursor": {
          "ref": "0ead4d5a-0d48-49a6-b106-4d60052d72f3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bab6a47e-ef3e-45e1-867f-c794e499bf19"
        },
        "item": {
          "id": "dfbb6529-139e-4192-8f65-595b2a7ef93f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5408da56-a8e6-49c7-80d7-34544b1a8798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583188da-a85e-4d97-a52c-e3747043a0ac",
        "cursor": {
          "ref": "c5e7314f-6bf8-40ea-88c7-3d2bc04e7d14",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "385bcbb4-b488-48f2-8b5c-309cb70df532"
        },
        "item": {
          "id": "583188da-a85e-4d97-a52c-e3747043a0ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43b7ac53-b7df-442e-a843-a96a85d1a7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ee701-97b4-4918-999c-a4f0aef166d2",
        "cursor": {
          "ref": "b608f1e2-9fc4-43e5-a411-da6c90a16e35",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1408c38c-4da6-4229-bb49-900c1f9dcdb4"
        },
        "item": {
          "id": "d39ee701-97b4-4918-999c-a4f0aef166d2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8bc0ca5b-81df-44d9-a247-e1e921a3d1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a4d897-c921-4778-abd7-0c2d02e5c8fc",
        "cursor": {
          "ref": "591b5d50-7f11-4218-9335-53de6e2a3983",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f653f686-3864-4916-8e04-de910d33fc6f"
        },
        "item": {
          "id": "b2a4d897-c921-4778-abd7-0c2d02e5c8fc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "00e63e3a-39e0-46e0-abef-b4d085867144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b4edb4-74c0-4fd3-a3d4-c6678072baa9",
        "cursor": {
          "ref": "1f1602d7-6598-498b-921b-910ea4dcbf66",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6978b868-6b9f-484c-9e01-7def8b0dfdbc"
        },
        "item": {
          "id": "d5b4edb4-74c0-4fd3-a3d4-c6678072baa9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99ed2436-cf6e-4413-a4e3-25609990c5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56000543-7e17-4010-8979-622f9975ee3b",
        "cursor": {
          "ref": "ff622bf4-0f8c-48f7-b632-eec676b66617",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "adf06748-2bbb-4578-bfda-219d60976e41"
        },
        "item": {
          "id": "56000543-7e17-4010-8979-622f9975ee3b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "56d1aca6-405a-4576-b2b4-34adba58b19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97701f48-8b48-4ff2-9ddc-08b8b78c7195",
        "cursor": {
          "ref": "dfa07d35-513a-4e3d-acfa-0e948c62b7d6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78e440a3-2c9f-463c-ac09-f2ee653b12f2"
        },
        "item": {
          "id": "97701f48-8b48-4ff2-9ddc-08b8b78c7195",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a639c02-8eaa-4297-88b1-cdcd0e0a0e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a229690d-2fa0-45a4-a1b2-33195b857149",
        "cursor": {
          "ref": "a7a2130b-459c-48bb-be5e-dc5c97608747",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "07834820-616b-4ff3-a401-e3354a95232e"
        },
        "item": {
          "id": "a229690d-2fa0-45a4-a1b2-33195b857149",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "16479812-285b-43b7-8511-01489eb22c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1135dc7f-27bb-48b9-b8c1-ff699b2af318",
        "cursor": {
          "ref": "4e331883-21a3-46cc-a171-3474799f1b58",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c0aada44-b4b7-4926-8885-288d1d91ca21"
        },
        "item": {
          "id": "1135dc7f-27bb-48b9-b8c1-ff699b2af318",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dabedc30-5578-450c-a205-35eb9ca7cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aeacb1-5e48-4b7a-a70b-82cee9717616",
        "cursor": {
          "ref": "30903391-6637-42cf-a020-e1fdc9aec2d9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "369ad139-a58f-4b00-9267-c8491f9c5075"
        },
        "item": {
          "id": "74aeacb1-5e48-4b7a-a70b-82cee9717616",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "633da33b-f6ab-479a-a1ea-a1f4ea10505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9ff3cb-42b8-4587-9d99-98d63860ce0f",
        "cursor": {
          "ref": "f2a39d10-2f97-4c38-a5f7-f21a5fde82e0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e462f08f-afd7-4e37-99d3-377dc24c3c37"
        },
        "item": {
          "id": "ea9ff3cb-42b8-4587-9d99-98d63860ce0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "862122b4-e0bb-4a52-ac4b-3dc0f369a9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af449b0-1765-4c15-ad9d-ddf1109ad206",
        "cursor": {
          "ref": "04186730-e9a3-4d0d-8b8c-d4f943d94e10",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "703bc38d-d57a-4c09-8df7-131c2dfc9e1f"
        },
        "item": {
          "id": "3af449b0-1765-4c15-ad9d-ddf1109ad206",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6628e581-38f1-4d67-8ba0-6cd81e834ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ad5b6a-11e2-4b33-ae27-573b08a7bcbd",
        "cursor": {
          "ref": "80f550ed-269f-4a12-abff-55f29b3c59a5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2803d32-a100-4e0b-b90b-6e190baa865f"
        },
        "item": {
          "id": "79ad5b6a-11e2-4b33-ae27-573b08a7bcbd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83e648cf-7169-409d-b0ba-abc1832e829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c8b6df-8a20-4ff2-b221-e2c9f25894ae",
        "cursor": {
          "ref": "9c3332b3-b97f-4792-b37b-99453b02e024",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c8bc2900-9b7c-45ff-b550-cb61fffe1d18"
        },
        "item": {
          "id": "d5c8b6df-8a20-4ff2-b221-e2c9f25894ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "acb22321-4cc2-4629-aeb5-a6a13bb1819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9ac04e-10b2-449b-a014-2b6996c1563e",
        "cursor": {
          "ref": "5023621a-26e6-4adb-9684-c61b90fe2a11",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9ee2a715-378c-4a3e-845d-0ef7206d0649"
        },
        "item": {
          "id": "fa9ac04e-10b2-449b-a014-2b6996c1563e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4abff44b-2195-41d6-8f55-6caf25423aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad075066-1f09-4999-bde9-5e28d8ca81c2",
        "cursor": {
          "ref": "18541de8-2f28-424f-8d74-7ef7aeb204e3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fc4396e2-1453-424c-b5e0-3cb396d4742e"
        },
        "item": {
          "id": "ad075066-1f09-4999-bde9-5e28d8ca81c2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3da30cdb-1487-4c8c-9251-8f17d36181c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4fc9ec-5cac-4eba-8d14-8d302db54f3e",
        "cursor": {
          "ref": "42290634-c111-4d4a-b50d-763f64afc082",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0fe9a8ab-a126-4d26-aeeb-fcfb677370b4"
        },
        "item": {
          "id": "1f4fc9ec-5cac-4eba-8d14-8d302db54f3e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "937b83b6-1d88-48d8-ae4d-a49ad6937eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0828ee5e-31b6-4efa-8b56-c07735ae35d0",
        "cursor": {
          "ref": "df5eb09e-5805-4131-8517-b8c4be59755e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1a484bc9-7166-4c26-a6ed-3556b9b020b0"
        },
        "item": {
          "id": "0828ee5e-31b6-4efa-8b56-c07735ae35d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "970ef721-4251-481f-98d8-1904c1265072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e67c37-c0cd-4b7f-ac76-e09ede51b09a",
        "cursor": {
          "ref": "af9121a2-8382-43c3-8b3d-9779c8e0eca8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a7eee4e1-0772-4dff-afda-cb43fc90559f"
        },
        "item": {
          "id": "91e67c37-c0cd-4b7f-ac76-e09ede51b09a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "361b64a8-1d0f-46f7-8d7d-a73a86120738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9098967-b11c-42c6-87a0-b657dfde9878",
        "cursor": {
          "ref": "63a5da5c-1a66-4906-9bdc-9d577cd735d1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8f11a4a2-d765-4f0d-9f4a-ede50a0c44b0"
        },
        "item": {
          "id": "b9098967-b11c-42c6-87a0-b657dfde9878",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "039ad069-fe57-4487-85a2-b7ad0a0f3a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0ffb0b-7d27-4f0e-a4b9-5c8e7195c469",
        "cursor": {
          "ref": "608ad0e4-87ae-445e-9328-0780a9a1bb8b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "98ffa3ea-ee23-4dc7-93f8-d8f02f1e1470"
        },
        "item": {
          "id": "6f0ffb0b-7d27-4f0e-a4b9-5c8e7195c469",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c1e7d5a2-77ae-44e4-b39f-7e86dcd9df74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c2a6f3-7796-488f-b903-1407f8f81e78",
        "cursor": {
          "ref": "b9725628-3f3c-4df5-8a22-407bca6d191e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "16c9b515-1f87-4a26-be24-044a8b16239c"
        },
        "item": {
          "id": "73c2a6f3-7796-488f-b903-1407f8f81e78",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dc0fc494-5921-4dc8-acf9-d70381706d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d087de6a-6c0d-4c85-aabe-15bd67f0b037",
        "cursor": {
          "ref": "65a54e55-87d3-432a-bbd6-dcb18420f851",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c809db4-b163-40ce-975f-a06383c37407"
        },
        "item": {
          "id": "d087de6a-6c0d-4c85-aabe-15bd67f0b037",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7400eb49-6ef0-4030-bdc7-acdf56ad3704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11ac963-2995-4940-a157-4823a1e6bcbe",
        "cursor": {
          "ref": "82af04b9-0cec-4992-a752-0d27a74c2ffc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b57d9750-c496-44dc-80f6-acc7bb09847d"
        },
        "item": {
          "id": "a11ac963-2995-4940-a157-4823a1e6bcbe",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f308e07-c6d0-4ca9-a48b-7aa10b6c205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08048568-45e9-4b30-bb42-32209485b5dd",
        "cursor": {
          "ref": "a9877830-0f10-40f4-a4b2-70fde096f18e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4cb4b6d9-009f-4d1f-b5c1-ed98278e0903"
        },
        "item": {
          "id": "08048568-45e9-4b30-bb42-32209485b5dd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1f703864-c44d-425c-885d-88b97c992de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da08342c-d000-4acc-b13f-00accd29dc28",
        "cursor": {
          "ref": "82824042-c579-4b4a-8bf1-3a83016263a9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "060a623f-5572-4abf-83f8-76b9e9162191"
        },
        "item": {
          "id": "da08342c-d000-4acc-b13f-00accd29dc28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "58a4fe8e-f516-4eb7-923e-e77222d7fcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2fb582-5e34-47d0-80c1-51634021e9fe",
        "cursor": {
          "ref": "42f6ea95-2531-4fdf-be40-9b1355365eca",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9a079447-926d-4512-b7e3-6437e9940440"
        },
        "item": {
          "id": "af2fb582-5e34-47d0-80c1-51634021e9fe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d9bdf1ba-383f-4e25-8faf-14e66f574ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df885a1c-3dcc-46a5-973f-533837ccf1d4",
        "cursor": {
          "ref": "f2eeaf1e-2d47-4752-a532-bb963dd65fa7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b20285c8-ebed-4fd3-b532-4ab62b031aab"
        },
        "item": {
          "id": "df885a1c-3dcc-46a5-973f-533837ccf1d4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "664c67b7-5634-4f10-8505-f383d317ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2278af6d-2ccf-4aac-902d-60cedc9daa49",
        "cursor": {
          "ref": "6d61aa86-5e32-4610-a5d8-396bb0771acf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19246f70-8074-4e89-98d2-1123d7f50fd6"
        },
        "item": {
          "id": "2278af6d-2ccf-4aac-902d-60cedc9daa49",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3075ea88-52a5-457e-88a9-2ef654412b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5520161-fce0-4b43-8c52-a1d42b62affc",
        "cursor": {
          "ref": "7da1d65e-9bfe-47d1-b2ed-566a89c7a426",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "19e169c1-523a-4ca0-9c60-948c76263c8f"
        },
        "item": {
          "id": "d5520161-fce0-4b43-8c52-a1d42b62affc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b98ec92b-d5c5-4be8-a664-cc1af0e56cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ccca0c-86d5-4b79-9db6-eafc330ccb9f",
        "cursor": {
          "ref": "6e1d3c7b-b1ea-48dc-b4bf-089b0db921ba",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bd7337c8-1d82-446e-9a1e-ad8b3f77be9a"
        },
        "item": {
          "id": "a2ccca0c-86d5-4b79-9db6-eafc330ccb9f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "12215228-1032-46d2-975e-bbad8d38b46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93178a94-2a79-4d78-b5e6-bc6bff30b672",
        "cursor": {
          "ref": "e794bde2-4690-4832-a2e9-98e2e79a640d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "174c8ae5-98de-46fb-b890-7e1dd194bc46"
        },
        "item": {
          "id": "93178a94-2a79-4d78-b5e6-bc6bff30b672",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ade5dd3b-ed87-4c90-a4bb-82682f05713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc00aefc-310d-42a0-b882-088696fedd5b",
        "cursor": {
          "ref": "c7928d76-b337-457f-b135-7b2da1105f1e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8fe3308e-eb94-4131-916d-5201e74ac9d1"
        },
        "item": {
          "id": "cc00aefc-310d-42a0-b882-088696fedd5b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ea01a5fb-e686-4fcd-aade-52b409a61927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca52190-6bb1-42c1-85ce-c5fde5e96b31",
        "cursor": {
          "ref": "4bccbfaf-1776-40e2-a347-d81bd415b043",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7e34e738-afc3-4c7f-9801-f677a02c30c0"
        },
        "item": {
          "id": "cca52190-6bb1-42c1-85ce-c5fde5e96b31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7e2b2ac0-84dd-4ade-a031-59f56a1ab17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883d7750-d41d-424c-8806-d948a544646d",
        "cursor": {
          "ref": "06e60675-d5b2-4600-84a9-374739fd4c4a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "233e1a0c-37d3-4d4d-a2c4-de88e8b2de18"
        },
        "item": {
          "id": "883d7750-d41d-424c-8806-d948a544646d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "edb41d49-7224-472b-9b82-e0d9b77afa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a7978a-b48c-446c-adac-89bf1e6c8558",
        "cursor": {
          "ref": "a50c497a-505c-4819-bbec-0b10f8c9dd00",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "14e4b2b5-fe01-4802-89a2-7b58f524a9b1"
        },
        "item": {
          "id": "15a7978a-b48c-446c-adac-89bf1e6c8558",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3175c641-1cf2-4dca-91c1-4b19989dea99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8edade-344c-411d-b72e-28eea710e2dd",
        "cursor": {
          "ref": "03bcf45a-cd1c-4e78-81ad-b4e0c01785df",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f3dfba8-8b1d-41d3-9d5e-364fc355adc4"
        },
        "item": {
          "id": "7a8edade-344c-411d-b72e-28eea710e2dd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "66771d06-3c1d-4bab-b467-d08ab2cdb72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442ce664-2e64-44b3-911c-dfe237ba23fe",
        "cursor": {
          "ref": "f84d6226-f69b-4fe8-9496-1865e04904e7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "da6458f3-aaa8-49f6-a727-65ad3c78600d"
        },
        "item": {
          "id": "442ce664-2e64-44b3-911c-dfe237ba23fe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c5305252-eca4-4ccd-bc0e-518141cf6c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2adacdc-a067-40a3-a886-c2dcc76deae2",
        "cursor": {
          "ref": "fcc72b46-47f4-484c-9712-b173e4b32d96",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "11d072ad-bffb-463e-a6ee-a70e225b6abc"
        },
        "item": {
          "id": "f2adacdc-a067-40a3-a886-c2dcc76deae2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "99cf5e31-25b5-41f8-abc1-ef5b03b8a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509021cb-862b-4151-8188-3bc237662ffb",
        "cursor": {
          "ref": "2be6e0af-d8d4-457e-83de-2d1b5e71dcff",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e2474df8-ea54-4e6a-babb-766538f4b1b8"
        },
        "item": {
          "id": "509021cb-862b-4151-8188-3bc237662ffb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "95f7e718-9fea-4659-a77b-37e62a3ee024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd167ff1-4501-4f14-be43-33872ee709e1",
        "cursor": {
          "ref": "13967b5d-a1c3-4a1a-a2d9-9d72f1d81100",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "df17c0ba-6a79-4fb5-b65e-951e9846b4a2"
        },
        "item": {
          "id": "fd167ff1-4501-4f14-be43-33872ee709e1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "14f0e578-eba1-4931-a480-164092218644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75262073-6ecc-4b46-9d6d-f38d71832005",
        "cursor": {
          "ref": "1e92fb89-8517-4547-a275-37f5309e8334",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9efab306-106f-44eb-96d2-34a08d417d05"
        },
        "item": {
          "id": "75262073-6ecc-4b46-9d6d-f38d71832005",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e711d3da-f458-432a-a5dd-07a3e6c19d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a083039-6828-4bc8-8c24-ffb7dec8d672",
        "cursor": {
          "ref": "bd853deb-3f22-4114-8c52-b707a66e8e66",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8c27e148-f165-4a04-9d0f-8ed7ce5db8c7"
        },
        "item": {
          "id": "5a083039-6828-4bc8-8c24-ffb7dec8d672",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d7e2877f-758a-4cc8-84fe-80f598abe818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2014bb3-1211-4cab-b365-fdec42e4635b",
        "cursor": {
          "ref": "3ec6eb99-c552-428d-b8e1-cf6a2ec58047",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7d7fe75d-9fc4-473b-8fcd-a11b3a23739c"
        },
        "item": {
          "id": "b2014bb3-1211-4cab-b365-fdec42e4635b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "acf97a95-8e4b-433c-929c-8de34da0d3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7e37f9-0726-4adf-8468-2240561a088c",
        "cursor": {
          "ref": "733b141f-e0b5-4b63-9195-c7ba4004f762",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9a51a248-a5b0-4a27-96f2-9e21830de7bf"
        },
        "item": {
          "id": "cb7e37f9-0726-4adf-8468-2240561a088c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4467b64d-ee87-45d1-8322-82c6a77c914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60b98ce-c973-4cb6-a9b8-ee5e4271765e",
        "cursor": {
          "ref": "0382695f-fd5f-4c47-a302-9da51e531725",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "15f0a1f6-6707-4420-b16b-1e88a7086220"
        },
        "item": {
          "id": "b60b98ce-c973-4cb6-a9b8-ee5e4271765e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9a826db3-a7ca-418c-b92c-d5e3660dd52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1535efe-c72a-4382-891f-a4bf8d60688c",
        "cursor": {
          "ref": "e03525c6-35bb-4d78-811a-ef0cb67274f4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "268cab34-3afb-4b8d-a947-727533c29ebb"
        },
        "item": {
          "id": "f1535efe-c72a-4382-891f-a4bf8d60688c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3a02a0ea-fabb-43f8-a8e8-69d63607a6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d05650c-002f-4caa-8a0b-38e982bbfc1d",
        "cursor": {
          "ref": "03aa42ac-c87a-4a09-8fd2-c95dc6d86f95",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "98a70bc7-87bd-47f2-80c1-428e0e1ce52c"
        },
        "item": {
          "id": "2d05650c-002f-4caa-8a0b-38e982bbfc1d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c876f381-73b3-4a77-9e2a-00584bad7b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36338120-73fc-4dea-8ba9-cfb4d1e8d5a1",
        "cursor": {
          "ref": "c92d32e9-7362-4dce-8322-aa874a741afe",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b2650c67-174c-46f3-8135-8af12dd222a4"
        },
        "item": {
          "id": "36338120-73fc-4dea-8ba9-cfb4d1e8d5a1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ec3a0cd5-e3a9-460b-bd6b-54f57d277070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d7ac7e-7a13-4538-bcbc-15825fec3332",
        "cursor": {
          "ref": "a2a81fec-968d-4556-8d6e-798baec6af0d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af2e0852-3bf9-4fb4-bb7c-4f2aec1b294e"
        },
        "item": {
          "id": "21d7ac7e-7a13-4538-bcbc-15825fec3332",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a6e89a3-e126-4a05-a085-7a1ba9a6c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d59bc19-d66e-4c89-b6f9-240f0c4a3df3",
        "cursor": {
          "ref": "af9fe23f-977d-435b-b7dd-2c0be0d2591f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "59c557bc-b9ea-42c4-b264-7f3208a3a298"
        },
        "item": {
          "id": "1d59bc19-d66e-4c89-b6f9-240f0c4a3df3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8edde959-af76-4c76-9095-aab6d52c16d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e34299-6844-4a88-86cd-2c87be418607",
        "cursor": {
          "ref": "04552670-725a-4988-80b5-1c9bb89613a0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ac25ee6d-0d98-4d6d-8bdc-7131f0fa28fe"
        },
        "item": {
          "id": "97e34299-6844-4a88-86cd-2c87be418607",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2e6dd7dd-ca1d-4067-8a79-2d12257ef887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4243bf-d954-45e5-956a-1cb3a6b4a60a",
        "cursor": {
          "ref": "2a404543-6037-4094-97fd-c27e256aeca6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e1b6c37-fa79-4e27-9e09-756233037659"
        },
        "item": {
          "id": "1e4243bf-d954-45e5-956a-1cb3a6b4a60a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "42d88b02-8f83-42fd-8c45-2eddf922fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de5e3fc-6133-4994-abb5-a94a878fb2ff",
        "cursor": {
          "ref": "c72311ea-39b9-4d60-a2b3-aca4744b8d8a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "401d10bd-5321-44ae-9732-2aefd2305c2c"
        },
        "item": {
          "id": "2de5e3fc-6133-4994-abb5-a94a878fb2ff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a09426a5-6e33-4b2e-af73-34cd2bd81796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722786a9-4a76-4f7f-9bad-9c04bcbb5e92",
        "cursor": {
          "ref": "cb520004-d3ba-45f6-ad9e-b92f3062990c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f9bc1094-5b94-4e26-b667-c1b15cb01056"
        },
        "item": {
          "id": "722786a9-4a76-4f7f-9bad-9c04bcbb5e92",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c9c80827-02e4-4877-bc9e-40d4c97f12bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e86d58-a65c-414c-8baa-79b9d0435fd1",
        "cursor": {
          "ref": "88cd065e-5278-4eb6-9ced-5b63f681e00d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f211a2bf-dbaa-4840-92f1-0032370aadef"
        },
        "item": {
          "id": "b1e86d58-a65c-414c-8baa-79b9d0435fd1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "450a650a-f7e4-407e-ac00-b5ad767d9615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c047a8aa-617f-465b-9a16-b276775b052b",
        "cursor": {
          "ref": "930aa1f3-e202-4c1d-a678-c2d99d4a4456",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f56c3bc3-bca4-408f-a3af-b5cc31ecee68"
        },
        "item": {
          "id": "c047a8aa-617f-465b-9a16-b276775b052b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "373cc667-1718-4d21-837e-5cf0a04b924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db203872-ae14-490d-86e7-51e75efbb12c",
        "cursor": {
          "ref": "27ee2a8c-c58e-44d2-b457-515bc2783d8a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "103a5251-71e0-4005-922c-ac1ad67d4180"
        },
        "item": {
          "id": "db203872-ae14-490d-86e7-51e75efbb12c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "07d1372b-cdbd-4ace-829e-e707ad1fc5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ecb00c-facb-4c8d-a5d9-499c288412c6",
        "cursor": {
          "ref": "a85007bd-7537-4642-9551-257e0e9abf3d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "15345600-ee1b-47ee-81cf-d18a9b9b6f01"
        },
        "item": {
          "id": "f7ecb00c-facb-4c8d-a5d9-499c288412c6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aeeb0d16-ebf5-4f10-a707-ec2864b246f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77432421-e62b-4566-ad51-e9dad4192c9f",
        "cursor": {
          "ref": "6b631455-4bee-4bb2-a85f-fafcfb928898",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7c3571d4-73b2-4f14-bd45-7f1d9f0fa75e"
        },
        "item": {
          "id": "77432421-e62b-4566-ad51-e9dad4192c9f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0fd2f9f3-f76a-4ad2-bef1-284d9949b4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfe639f-ad86-4db2-b29e-3a07ab80dbc0",
        "cursor": {
          "ref": "ff5c03dd-7a3d-4f70-a2a7-131183c20980",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d05e749a-c478-43a9-bcef-fdba75cfae79"
        },
        "item": {
          "id": "7cfe639f-ad86-4db2-b29e-3a07ab80dbc0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0ed18a51-c3f4-4313-a4e5-8da3dee15a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13418815-e593-4803-a3ec-0d81b975977f",
        "cursor": {
          "ref": "baa7480c-194c-42e1-a3e3-c3625512cec3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fbee2a95-04eb-4300-a935-8942b654e29d"
        },
        "item": {
          "id": "13418815-e593-4803-a3ec-0d81b975977f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1febb35c-1250-48e1-ab45-39e3cca2f7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92189596-5f3b-4654-a057-67f2d51c2bb8",
        "cursor": {
          "ref": "2c7e591e-f5f7-404f-abe2-6d2f9774629d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "150e9a32-7f77-4032-8297-0eafab2136c0"
        },
        "item": {
          "id": "92189596-5f3b-4654-a057-67f2d51c2bb8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f74f86e-bb9c-470e-a461-9a1e979ccbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4844bf0-90c7-42fb-84d1-c8dddb17bd72",
        "cursor": {
          "ref": "d4309b14-b9a9-4378-bfc0-7e1aa0cd3ef3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "355e955d-1723-4aa5-b6a9-92497926a2ec"
        },
        "item": {
          "id": "d4844bf0-90c7-42fb-84d1-c8dddb17bd72",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1f08b2bc-790c-4b44-b454-90f3bac8517d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba06585-8aea-413e-92bd-31f54050833b",
        "cursor": {
          "ref": "67f56149-8d38-49a0-a349-1722efd634a0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "320a3665-4152-432c-acda-a47cb3e19dde"
        },
        "item": {
          "id": "3ba06585-8aea-413e-92bd-31f54050833b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "73abdf69-a65d-4898-8b45-165c1c8e2ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334a3436-a295-4674-b0e4-4f0ee997782c",
        "cursor": {
          "ref": "2ba02a90-a8e6-4c58-a438-01cf067c76e9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "89a89b44-86e5-48fb-8db3-c3e9085d8629"
        },
        "item": {
          "id": "334a3436-a295-4674-b0e4-4f0ee997782c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "45947361-c060-4618-904b-d83f2ab0bb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa7c528-2ee6-4f31-b2d8-7087ec83ea95",
        "cursor": {
          "ref": "d32455f9-6ce0-4c07-b2c1-34f255b1fa11",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "836e156e-0115-405e-891f-5e632cde4ed5"
        },
        "item": {
          "id": "1aa7c528-2ee6-4f31-b2d8-7087ec83ea95",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "77e7f1ea-4bc2-49cd-939c-51d45d4e4860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead25340-7bbb-421d-99b5-6a6a69cc615a",
        "cursor": {
          "ref": "334287e2-316b-472a-bbca-82a58d791f1a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "03139c43-1b68-42a9-a6fb-7265d4aaabfe"
        },
        "item": {
          "id": "ead25340-7bbb-421d-99b5-6a6a69cc615a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9497887a-3e85-4fa9-9500-5fc51f83d7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df452cce-b56d-4cb0-b288-01d89ed97b08",
        "cursor": {
          "ref": "09c674bc-4bc3-4bc5-9685-2fd7794e2303",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "250c27c8-05f1-4dfd-bec6-a43055f765e8"
        },
        "item": {
          "id": "df452cce-b56d-4cb0-b288-01d89ed97b08",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b6949d75-7ca4-4398-b974-22df66570b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772f009a-c705-432a-b14e-ac6b4fc6370b",
        "cursor": {
          "ref": "f9ac3d6e-e620-48e6-b98c-4b0aa6db09ed",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7ec39d41-5129-49d1-831f-9dd2a2e8b454"
        },
        "item": {
          "id": "772f009a-c705-432a-b14e-ac6b4fc6370b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f541bbea-128f-44a8-a900-f40c7a8e293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12533a77-7437-4526-b3ac-17f7b16e7989",
        "cursor": {
          "ref": "574dd86a-5afe-4536-9816-a9dc191c334b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bacf1e2a-23a3-4e71-a3da-882605c5097d"
        },
        "item": {
          "id": "12533a77-7437-4526-b3ac-17f7b16e7989",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4f05bcac-7811-4f25-b94b-fe94f5c30d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03492991-e1c4-485f-a181-2559d216396b",
        "cursor": {
          "ref": "6bd215e3-8071-42c4-bbed-9c38e4cf5dff",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "80c3ce4f-a8e2-45f5-bce4-aa97ca5f5312"
        },
        "item": {
          "id": "03492991-e1c4-485f-a181-2559d216396b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "da6a78a4-fae3-459d-bb0c-f7102e0bbecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e51348b-53d8-40f4-a4c8-3a2ff5cec10c",
        "cursor": {
          "ref": "a340a22d-204b-4859-a409-a849c5c30de8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1b18fd17-827b-4aee-888e-87fdc088d4dd"
        },
        "item": {
          "id": "3e51348b-53d8-40f4-a4c8-3a2ff5cec10c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5a9bfecc-4925-49f1-a20c-e94058ddb82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626524b2-1dc8-4acd-9293-ffb7938bef66",
        "cursor": {
          "ref": "d94c5929-2710-4f61-8818-4622bf5928f5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "56352ff8-053e-4c19-83b5-701af88e8cbc"
        },
        "item": {
          "id": "626524b2-1dc8-4acd-9293-ffb7938bef66",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fc8df19b-1c79-4a28-921c-55677350b101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9228c2d5-f85a-4acc-a2d2-338f2f14447a",
        "cursor": {
          "ref": "cdaa6992-8d63-4d4c-9f42-f12336703678",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cde0e53d-8e01-4e7b-a5e8-5e94c1e3b142"
        },
        "item": {
          "id": "9228c2d5-f85a-4acc-a2d2-338f2f14447a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "95e6e5ed-2470-415f-92d6-e359b5589b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f769c11b-ca7d-499d-8922-dcecb9d46827",
        "cursor": {
          "ref": "d272ae20-1c9c-4169-b774-74d2338b1011",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7091d9e8-1147-48e6-85af-55cbbed8a85d"
        },
        "item": {
          "id": "f769c11b-ca7d-499d-8922-dcecb9d46827",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "62ce4201-e834-4209-8854-bee869221324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f2cf7b-58da-431c-9bcc-453536ebd506",
        "cursor": {
          "ref": "ef926b03-5512-41cc-93a6-bb4cd040efdd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cf15d597-b254-4621-b3ce-4c1880e7bad9"
        },
        "item": {
          "id": "74f2cf7b-58da-431c-9bcc-453536ebd506",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12191f47-7a20-43ff-976b-e5940f0d04cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82c7a92-6cac-4afb-bf56-f69072b0d7f3",
        "cursor": {
          "ref": "045b9dd2-429c-475b-bf0a-5ba776c046fd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c143aaf3-09ab-4ec0-915f-09129fc6e73c"
        },
        "item": {
          "id": "a82c7a92-6cac-4afb-bf56-f69072b0d7f3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0b4d23dd-c118-4374-a95b-62aa7b2bbb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051f17f8-1412-44eb-a04f-df602f2dded4",
        "cursor": {
          "ref": "ff4465e3-214e-4f11-a5f2-22f55cbde37f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0455e3bf-cd83-44a1-94bb-c970f9d66ace"
        },
        "item": {
          "id": "051f17f8-1412-44eb-a04f-df602f2dded4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f1b482d-4ffe-477f-883f-6a0f0a889ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8e1615-40bd-4481-b610-5e353a16b0cc",
        "cursor": {
          "ref": "ce49eb7f-21ed-474d-b623-72c01e02b389",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dc3a1745-9dac-40ef-a9ae-bb5dcbf23a2b"
        },
        "item": {
          "id": "db8e1615-40bd-4481-b610-5e353a16b0cc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2c329372-a36b-4607-8ff9-26fd2fa4912d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74617f6-0b73-4e0f-aa07-c4f732194ef3",
        "cursor": {
          "ref": "49653b7e-8f1d-4ee1-96c0-0e40eb30e05e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b480c8b3-1e79-4959-8352-138302c64322"
        },
        "item": {
          "id": "f74617f6-0b73-4e0f-aa07-c4f732194ef3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aaf41210-ab89-43e3-bc96-93b3c86d79d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6d7012-ce95-4e6b-8c7c-e9743c97adb7",
        "cursor": {
          "ref": "35ca103f-8a72-444b-bfae-4e57fb6b7991",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "35130f7f-f37e-4af0-bf14-4e7c0208de63"
        },
        "item": {
          "id": "2f6d7012-ce95-4e6b-8c7c-e9743c97adb7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d9fc3f6d-ac3b-4a71-be06-6b68df2460d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c7bee-b056-42e6-b99e-ab8d70b254dc",
        "cursor": {
          "ref": "9f389ec1-10ba-49c2-a63a-ec43dcf449d5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5c4c6c91-e952-4a66-a3b5-20f013de8f86"
        },
        "item": {
          "id": "4e7c7bee-b056-42e6-b99e-ab8d70b254dc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0967cf62-1bd8-43b5-80d4-268334cbebd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a065f457-b905-44db-821e-013267fba703",
        "cursor": {
          "ref": "8038a532-b5ff-4c9d-8fd1-2a121e1d6d3e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1ec31ac9-45d2-42dc-bfc4-31431b7b72b3"
        },
        "item": {
          "id": "a065f457-b905-44db-821e-013267fba703",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ccf33136-4cac-46d6-8f99-eda743969f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c152d3b9-1ac5-40af-919e-d00d7e972992",
        "cursor": {
          "ref": "5a2d7ef6-733a-47f9-91fc-892b75e57d62",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "acd4d47b-dd12-4c52-a362-d8f9856b7e01"
        },
        "item": {
          "id": "c152d3b9-1ac5-40af-919e-d00d7e972992",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7d714161-3b2f-4302-99de-2306c804e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d15ba63-e560-4b74-b602-fd300a4ff3d6",
        "cursor": {
          "ref": "87d4baf7-d0c6-4272-b07a-ad478e66539f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "895a2249-0d57-4a39-97ce-da5704e61852"
        },
        "item": {
          "id": "7d15ba63-e560-4b74-b602-fd300a4ff3d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "996c8eb2-43a6-46fa-a9a1-69226f82ed07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1d0d2a-eaba-4b7a-9ccd-e57875efcb00",
        "cursor": {
          "ref": "7bc58fbc-2f53-4aab-a3c6-d108e90b6be3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8adc6251-ca4e-422a-9d1e-200ebf01faf0"
        },
        "item": {
          "id": "fb1d0d2a-eaba-4b7a-9ccd-e57875efcb00",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02772efe-e49b-42eb-baf1-2a048c82d3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9decbc6f-4796-48ad-b0a8-92e4868277e7",
        "cursor": {
          "ref": "2b193d1a-15bb-4e5c-baae-a8518d03ab12",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ea293377-3521-4275-98d6-e97f08afc987"
        },
        "item": {
          "id": "9decbc6f-4796-48ad-b0a8-92e4868277e7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2ca18b60-9828-459d-a8a4-ba59061b0df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a5a15-fcf7-4b9a-9c08-6771075630b7",
        "cursor": {
          "ref": "b28d14ba-634a-43e1-9af5-f27d2084d574",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8b1d885e-462d-4847-a358-c0dd9bc0790f"
        },
        "item": {
          "id": "979a5a15-fcf7-4b9a-9c08-6771075630b7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20ccbc7f-b6e9-4a79-b67f-aa76283661c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c92b9d-4576-4584-84e6-df84181f3a2c",
        "cursor": {
          "ref": "4190ffa3-0329-418f-82f7-14f16b1e308b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9a1c2d76-b76e-48a8-a3e0-a04b8eec591b"
        },
        "item": {
          "id": "85c92b9d-4576-4584-84e6-df84181f3a2c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c5ba22d2-2fe1-4e05-8370-775af5410367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea9cfd8-0886-4529-a2e8-ef451fb2e6c4",
        "cursor": {
          "ref": "8703e924-73db-45d1-ba94-ace5fe4415a5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "80107307-16af-434f-8926-db9e89c2a29f"
        },
        "item": {
          "id": "5ea9cfd8-0886-4529-a2e8-ef451fb2e6c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c10ec88e-8deb-499a-b828-b108a6fd15a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed92048f-083e-4da3-b8df-06171904feac",
        "cursor": {
          "ref": "3e891b84-51b8-4633-9ee2-ec153c24c2ec",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "12e12bab-e91d-409f-b92d-049e9583e6d2"
        },
        "item": {
          "id": "ed92048f-083e-4da3-b8df-06171904feac",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2bca445a-ca31-4a20-afbc-81e8a7400fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d417730-8c33-4ca1-b010-d52bbfb7ad6e",
        "cursor": {
          "ref": "71853037-406c-4d24-bd95-1f7522c7931a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "87bf80d7-bbff-4cf4-b770-69e6c5d4fd41"
        },
        "item": {
          "id": "4d417730-8c33-4ca1-b010-d52bbfb7ad6e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "637ba815-7354-4047-bd69-8667141e96b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c132046c-465f-4c64-ad5b-d4781ec10382",
        "cursor": {
          "ref": "92d8c111-9852-4b5b-bdc6-1f9a55ed9f65",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f6e009d2-c44d-4dbc-aeb2-56907f59d777"
        },
        "item": {
          "id": "c132046c-465f-4c64-ad5b-d4781ec10382",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8dc5d69a-d494-47eb-85d5-d90982f68447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c948fd85-5e76-482e-bc23-68e871ac788a",
        "cursor": {
          "ref": "4b426b72-41b4-4cd1-b900-7f43ecb689f1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3e1bb683-a5fe-4871-9ce4-e1670061ee36"
        },
        "item": {
          "id": "c948fd85-5e76-482e-bc23-68e871ac788a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4102ae5a-5864-4d83-bedf-71732a805a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2e380d-f184-4404-8968-9a2b57c1cd17",
        "cursor": {
          "ref": "43c2dab1-1c67-4b36-b08d-cb8ed5ed2eba",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a6c9c1a0-5fe9-4ca3-aa6d-0428b4557d47"
        },
        "item": {
          "id": "2f2e380d-f184-4404-8968-9a2b57c1cd17",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5c178fec-0662-47f2-b7cc-7503d0d37024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d046d85c-81f5-4ef6-9354-36f3970455fe",
        "cursor": {
          "ref": "eef794fd-745c-405e-be1b-42729cf6b8ae",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef2405d0-803b-4e40-9f08-9ad5d6de1964"
        },
        "item": {
          "id": "d046d85c-81f5-4ef6-9354-36f3970455fe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "14e5f924-c189-4eb2-950b-e1198ab9958d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac2f317-aee0-44ab-a9e4-2c0991539819",
        "cursor": {
          "ref": "7ce7d2c9-09f4-41ee-8969-870221c35b52",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6535ab0f-08bc-4459-86e7-51cb2df94c43"
        },
        "item": {
          "id": "1ac2f317-aee0-44ab-a9e4-2c0991539819",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fda74928-908d-403a-bc40-566ea018bca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb45baa-dbb3-4549-88b6-9f1421b08d23",
        "cursor": {
          "ref": "bed3876b-1cc6-4c01-af04-8df59d1a58b3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "965090cb-9d2f-497a-8b6d-7b0b47db5445"
        },
        "item": {
          "id": "9fb45baa-dbb3-4549-88b6-9f1421b08d23",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c5db3b24-55ab-476c-8af1-6ca219e1f89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e071d19-bfaa-46f6-8701-4621d71d7497",
        "cursor": {
          "ref": "2aa2f480-50db-420d-8bc9-15c5fda26cbf",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fca089bf-b965-4cf2-b84c-8c2a7a9a4fa0"
        },
        "item": {
          "id": "7e071d19-bfaa-46f6-8701-4621d71d7497",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2f2a86ce-d4f4-41aa-a137-aab677a4ea2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1149fee7-0d2c-4053-9f6e-10fcc501d940",
        "cursor": {
          "ref": "0e113f20-57ae-46b0-9783-f655c955aade",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7b733d52-62b3-4009-a667-02be223d99c2"
        },
        "item": {
          "id": "1149fee7-0d2c-4053-9f6e-10fcc501d940",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0d2aac1e-9acb-476f-b887-c4b5e9afbd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4189036-2c99-4688-858d-7afe980213fa",
        "cursor": {
          "ref": "59b6ac8a-29ed-4080-b60c-56b14f266210",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "33fb0b13-ad68-4506-aacb-fe94a2a2109d"
        },
        "item": {
          "id": "d4189036-2c99-4688-858d-7afe980213fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "82f5b606-37ce-485d-9871-66375b24078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7405c8a-7c11-4fd2-9084-0b0d8ff217a4",
        "cursor": {
          "ref": "26d8e55c-c511-4f84-be12-7e29d6d9f939",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "226f6503-11cd-4a6a-a60f-c0ca3fad962e"
        },
        "item": {
          "id": "b7405c8a-7c11-4fd2-9084-0b0d8ff217a4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3f3f7390-d284-4399-a812-baa017dcbd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf8bc84-c524-4679-88d0-7bf529f173eb",
        "cursor": {
          "ref": "6b50366f-baa1-47ce-9ed4-2ff5c1bcffaf",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1da83a80-9232-48d6-ac32-38549519f931"
        },
        "item": {
          "id": "fcf8bc84-c524-4679-88d0-7bf529f173eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "85dda756-3390-4cf8-a585-8faf797495c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c95778-d881-404b-9a57-c80639b1eec0",
        "cursor": {
          "ref": "7f740448-adf9-489b-820a-4a91a4c71133",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "19e38fd9-ec0a-46bc-a5eb-5bc9386eae6e"
        },
        "item": {
          "id": "52c95778-d881-404b-9a57-c80639b1eec0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e71a558b-ab3c-453f-871e-a3f624ab2adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd25f2f-41a6-409a-a56b-8f0a3540d971",
        "cursor": {
          "ref": "db36584b-329f-49c9-a362-332300638a97",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d817752-7373-4b46-b5a7-26f3870c0250"
        },
        "item": {
          "id": "6cd25f2f-41a6-409a-a56b-8f0a3540d971",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e13c07fe-f4e7-4f2b-80fd-9a8af1a374c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7228223-5914-47d6-a3e5-3225a22042a3",
        "cursor": {
          "ref": "400ab440-1cca-4ed0-9fb1-879009652bb5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "28486f9d-2c4f-4366-9b3b-ef3ecb0fef96"
        },
        "item": {
          "id": "c7228223-5914-47d6-a3e5-3225a22042a3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad2299c7-a666-4050-ab2e-9749689788ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f92c14-ae85-4bda-a03f-989a278789c5",
        "cursor": {
          "ref": "d92b71d6-b326-49c4-b9d3-f7d987ad38a7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f287f481-7149-4045-b7e7-47a47a9d1f35"
        },
        "item": {
          "id": "58f92c14-ae85-4bda-a03f-989a278789c5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8e53b676-e1f9-4050-8e1b-c6c9aa4a5110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b5b31a-416c-48bf-97ab-afba654a611a",
        "cursor": {
          "ref": "87a299d9-c017-4fba-9ed7-196e1118564a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b59c7ae6-b86a-4d7e-9b64-f4c4491bb564"
        },
        "item": {
          "id": "46b5b31a-416c-48bf-97ab-afba654a611a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "498bf169-9db7-40ca-8b64-f08666f79f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d224eaf-74a9-48d1-9952-da2a9f5195f3",
        "cursor": {
          "ref": "af635651-26e0-4601-bef9-214877d6fab3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0c3d4ae6-b380-46d8-b2dd-5f68605856ab"
        },
        "item": {
          "id": "3d224eaf-74a9-48d1-9952-da2a9f5195f3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dbe739ff-14e7-4a98-a792-eeac839e8c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2861cb-5455-43eb-b92c-b4f01d5f84c0",
        "cursor": {
          "ref": "1ddf6cf9-6edf-44ac-b54c-17392311f199",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "53f492d3-0a45-469f-80c4-8048ea6b3081"
        },
        "item": {
          "id": "cb2861cb-5455-43eb-b92c-b4f01d5f84c0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e4ab8be8-df11-4d48-abe2-07ce493157fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef8a518-ac43-4155-bb72-8df4448bb438",
        "cursor": {
          "ref": "26755d4f-5d06-4b26-a591-c72b6259dd34",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "204988a9-00e8-4849-9790-a2f8176f9a4c"
        },
        "item": {
          "id": "aef8a518-ac43-4155-bb72-8df4448bb438",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "01aeb575-5c5b-47ad-b1cc-3f5d8f384ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c835a3a-9cf0-4e71-b57a-3930d95ce00e",
        "cursor": {
          "ref": "f554da19-9b9a-495c-aac3-9c3190454ba2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "963cc92d-eaef-41f0-b027-f972a3bd429d"
        },
        "item": {
          "id": "3c835a3a-9cf0-4e71-b57a-3930d95ce00e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ec632216-b244-4def-b2b9-5390a91993f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04afa61c-d72b-4493-a67f-377df173a638",
        "cursor": {
          "ref": "764bd9c0-9b1b-48b3-bee4-adc3271399c9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "28535c20-cad8-474e-b9a0-d0a355f115d3"
        },
        "item": {
          "id": "04afa61c-d72b-4493-a67f-377df173a638",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "84ea2749-9b10-4e35-9e66-f492b34ee46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ac43b4-fe00-4e4c-a4c4-1d337f9f4dc1",
        "cursor": {
          "ref": "781d8f7e-492e-47b5-bc55-e33b6a8d1ea0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "daeb8557-021e-4bf5-89ff-8178f001ffec"
        },
        "item": {
          "id": "22ac43b4-fe00-4e4c-a4c4-1d337f9f4dc1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1af2d62e-a76f-44b2-81f8-9cc7d1c65b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c27e5de-6ca5-4430-b61b-21f931a1ce82",
        "cursor": {
          "ref": "a1eb4173-024e-4bcb-8748-26fd22b37b04",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f1be5894-ab0d-48a8-b692-ca8202865674"
        },
        "item": {
          "id": "6c27e5de-6ca5-4430-b61b-21f931a1ce82",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "049b3d8f-71f8-4b5f-adba-d48e862af1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2385df9-7812-4701-ab92-ae420b89cc15",
        "cursor": {
          "ref": "900a78f4-f949-43a0-8e2c-0978e65ceb56",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9590d965-b8a8-4779-9b49-709152a8e1bf"
        },
        "item": {
          "id": "b2385df9-7812-4701-ab92-ae420b89cc15",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bca9e03f-7607-4645-91d4-55b9207984a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742024dc-7ba7-4a52-bb9e-910e18f0bef2",
        "cursor": {
          "ref": "7170916a-7a94-4fc5-81e1-e12bc3e2ef51",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5479dfd0-3b9e-4e51-b0d9-1b77e3e87bd8"
        },
        "item": {
          "id": "742024dc-7ba7-4a52-bb9e-910e18f0bef2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d6aceedc-1207-4ce9-b664-6271fa446ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40cff9a-1e67-421c-a3f2-41aeb70eb5ee",
        "cursor": {
          "ref": "d9d6691e-7190-4419-b8bc-3c9703d55e85",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c6e400b-65e0-4a1c-90fe-bfbbc8f66cc3"
        },
        "item": {
          "id": "d40cff9a-1e67-421c-a3f2-41aeb70eb5ee",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a677bbd7-c62c-44b5-bf84-a360a58909a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6582e72-39a1-4dd6-ab17-7d93ce85cd16",
        "cursor": {
          "ref": "965ad9a8-e3c6-4569-8161-a8c2898b0aa5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5d842e9e-2dbe-48c4-a283-8744aa8da8f2"
        },
        "item": {
          "id": "c6582e72-39a1-4dd6-ab17-7d93ce85cd16",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "71a01ed9-8bd1-4e2a-a846-ca2e8f9edf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d83067-596b-4193-a6fa-cd19ec870f7a",
        "cursor": {
          "ref": "cd0f48ec-f18a-495b-b508-ce2c1717d32e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52add08d-9a51-4c68-856a-773c849ca413"
        },
        "item": {
          "id": "b9d83067-596b-4193-a6fa-cd19ec870f7a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b897f489-159e-40a6-af29-da0ce6fe1f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02030f-f8ce-41d3-b065-f3d34aa133a0",
        "cursor": {
          "ref": "ef71e1f2-2c2a-4e79-8c6c-31b1a674712c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1b573930-690b-41fa-88cc-e2b6ca5ecf69"
        },
        "item": {
          "id": "fb02030f-f8ce-41d3-b065-f3d34aa133a0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "30bdb770-b5c2-4451-961c-f589d536049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7f3b23-d671-48c2-92dc-93bf07a66658",
        "cursor": {
          "ref": "b8f032a0-55b1-4a1a-9a22-bf8e5fca11b8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d47ac2c4-4913-45e9-91e0-7583247f7abf"
        },
        "item": {
          "id": "1c7f3b23-d671-48c2-92dc-93bf07a66658",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8e96b3b7-14d6-4995-809c-d505733b7cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1545fe95-078e-44c4-b7d3-76f0e22dc715",
        "cursor": {
          "ref": "a6d31f26-4ea6-497e-87ba-c2565e3d792f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d89e8c6b-ec24-4a6d-a171-c977c9abed23"
        },
        "item": {
          "id": "1545fe95-078e-44c4-b7d3-76f0e22dc715",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fa67346e-8baf-497f-b2a6-6c524e394451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "1b10cdd2-da2f-4dde-90f6-9694e23edb52",
        "cursor": {
          "ref": "95c87722-0079-4571-8fd5-b43e58941b79",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "17f1c7f2-b203-49e1-83c0-d48e689ed571"
        },
        "item": {
          "id": "1b10cdd2-da2f-4dde-90f6-9694e23edb52",
          "name": "credentials_verify"
        },
        "response": {
          "id": "70a469a0-3122-4f14-b44e-6f103891de9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e1a12fee-8e49-4099-b8c7-664fa5aa0a3b",
        "cursor": {
          "ref": "58d5f6b6-38d4-4636-90c9-c7987024730d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "31ca7742-129e-4bea-b701-3b4b1f9ed566"
        },
        "item": {
          "id": "e1a12fee-8e49-4099-b8c7-664fa5aa0a3b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93628d35-96bc-4d64-ba6d-53fe7a100d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "76cf5411-de67-4f96-a4a0-4005fb33b448",
        "cursor": {
          "ref": "130c9b4c-a956-48f5-980b-86d5fdb314c8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b133ab1e-e169-47b3-9d3e-60c8cd3e9009"
        },
        "item": {
          "id": "76cf5411-de67-4f96-a4a0-4005fb33b448",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a409738a-1d4e-4833-9c30-0997aab4d52e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cf5411-de67-4f96-a4a0-4005fb33b448",
        "cursor": {
          "ref": "130c9b4c-a956-48f5-980b-86d5fdb314c8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b133ab1e-e169-47b3-9d3e-60c8cd3e9009"
        },
        "item": {
          "id": "76cf5411-de67-4f96-a4a0-4005fb33b448",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a409738a-1d4e-4833-9c30-0997aab4d52e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2b2d53-b490-4964-8723-49467e0b1ea7",
        "cursor": {
          "ref": "b61615ac-2da1-4988-a44c-95285af5da5b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "95e11661-1797-4bb2-bbd1-64ead5855a60"
        },
        "item": {
          "id": "6f2b2d53-b490-4964-8723-49467e0b1ea7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f8e5c6d0-001a-48ec-bcde-7ead4a2b21d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40aefeb-decf-4731-bf92-b16245d38cd7",
        "cursor": {
          "ref": "42dfed9e-9c40-4e9f-aef8-750fddc55249",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "22806631-5e4b-4824-86ab-b41c0ebc0bf7"
        },
        "item": {
          "id": "f40aefeb-decf-4731-bf92-b16245d38cd7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f61ff03f-d7f2-45f5-8258-f5858895ab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}