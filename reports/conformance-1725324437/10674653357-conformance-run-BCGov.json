{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bd5586ea-cedd-4e9f-ada2-18e968c53104",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7d02f2d6-daf1-4e3f-81b4-714e2dde6c9c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d483007b-82a5-43ac-8c6e-17146cb1c265",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5ae30ec0-bb9a-472a-bec6-49ea2fb31f4f"
                }
              }
            ]
          },
          {
            "id": "10ea33c7-2743-470a-9b4e-002d77a52f7e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b385bd69-a3ab-48d3-8d91-92066e715650",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ed68454-c94a-4334-9308-7a3af4cdcc25"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "79f4d876-06fb-4957-8fc1-f78184958585",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a5c3c75-3e28-4f94-b502-67e3ef720804",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b49b5d87-d9e1-4727-8c9c-e6856013710c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e5f834e-fa30-48e1-89a4-2a6946d80ef4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df9ba69e-e94f-440b-972d-588965ddb171"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "823e7a1b-89e4-4f0a-aa5a-8cfb2cdac2dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5a6eecf-4e30-489b-9411-1a81eb120d05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f30ed538-f42a-4bba-8924-3fecbc11492f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5dc0ad7e-84e3-4667-8666-be6c7556cfa0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a4a670f-878b-47f6-8326-ecd2e4657751",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6e4afa20-2bb5-40a7-a31f-f16b04a86c95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61fce6bd-b07d-4804-8337-229fbe587f67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e3d7a1c-b643-435a-b773-d1bf9a9c9f34"
            }
          }
        ]
      },
      {
        "id": "f7a39b7c-b83d-4f32-918c-7ed351a5eec0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dae7e26c-faaf-43ec-b268-a8743bd0cc90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14e231bc-27e0-4dbf-b04e-0474a7c93f81",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "364a32e0-d9a5-491f-9df4-20e43504e978",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52527a7b-f608-4758-80b4-335b5d231e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "568212d6-d281-4648-a1a9-aa4e56662355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b52616c-5753-49f7-bc47-3cf72d8bf3c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70db7f8-909d-4dd4-a3cd-b890f6c2e5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "881394ee-3057-4807-a89b-c8f6f8b42b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8a48c5-d8a4-4908-8adc-9940724a7c4a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3f05f9-5e4b-4595-b308-de8a55670265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90dffcaa-ea0c-4888-8e90-a9e0351edc65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70018922-de8a-488b-8e03-6778a914ea9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5c0a55d-4450-437c-bf6d-4fb4584b1972",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c3f331-cc99-4353-9202-ce3d0c620840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf45233e-4349-4076-a03c-9938c5c6c51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cefd75-f86a-42dd-bd38-5884f1d19919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8145915f-8c87-490f-be91-7d70ea19390d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c27036eb-73f8-4698-872c-4bc9e1ec4e36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "981f96aa-3fb2-4688-9c93-999aff53a4fa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81540fd1-4b85-4301-b42c-0171fff547e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "77c87ef2-fd48-42d4-82ee-11fb415937f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5898bb02-04a3-4a77-978d-1ff0a8fe890d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0b58d4fa-bf94-4cbe-9fc2-e93c8a4bd6a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afce6522-c33a-466d-abb8-37bd37dfbb73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bc705bd-0edd-41b0-bc9f-2ae334b0f8e5"
            }
          }
        ]
      },
      {
        "id": "cef169cd-6932-4556-87a8-f8a344086c90",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1c676dc9-a2f7-4a95-8fb6-3e7cc0cff0e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c094af1e-1a09-4743-92ea-24c643e4960d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3945ddc0-b41e-4f84-ab36-8d6ecdb6e489",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcd28b0-8723-48bb-9557-c1d9d07bcd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3002a7a9-827e-4117-91cc-7311e6429150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7dd452-453e-4bbb-896a-f521fb829053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a699d88-2fba-4cf2-bc1a-fb8ff97edc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a9494a-063e-4c55-aec6-e7c64babb4f8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7a3151-10ec-4b0a-93d4-2a0fc7eac146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feab858-8585-46f3-ad1b-10fde6c0b6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f2549b-9fd1-411f-a59f-d78b7cbdf0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e70cf84-1a1c-4051-8720-31c70be4c62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f5f441-1dbf-48bd-8de8-d7dc49a3a1a4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6089834-28e4-476e-be1e-4f5503423dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69ee45b-558d-42d9-9f4d-d51cf8f8c8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe210ef-c127-419d-9d4b-5ef3c507a21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd04b28-512b-4556-bfb4-113a6bf740db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af709f1-6ca5-42d1-8ad5-fcd8bc5c0f41",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85be5515-e391-47c5-8de4-ab33c939c232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7644f8d5-c132-4698-8412-f36db47c1505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f911b4e9-e7bb-4617-a1ab-965bb6af35dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee16e7cf-074d-4df3-8a41-c251d5ec3eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da616a6-17b6-4bf1-90b9-1531a502cfee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4435b8-dfbb-43dc-a54c-285e17abd777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c308349-fc45-4789-ac21-d0e536a373b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2f66c3-0de6-41ad-b757-f1571afdc1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c2f08ef-8410-4af8-9a04-4e95f7c8345a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a350488d-96e8-4ed7-8872-ff231d34d12f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70cfc71-fdac-42af-9485-923770ea5454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14203401-eea2-4e89-b249-41e9800c8e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0de801-5d82-4a31-9332-a34e1d7a3558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47ae8c83-3886-4879-9a86-6646e10a6d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d765314-b4f0-41ac-ad28-036e17843557",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6055e0-16db-434b-a6a8-500c98fd3c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d91b584-03b5-4e40-8ac4-4b6018361bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492384b8-8c46-4518-9f2a-ff88a500cfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ac8083f-d5df-46f6-b8f1-c715f36c560d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f77159-0e1f-47d7-942a-612dd26f48ac",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bea436-4e55-455a-8aae-75d90bc27368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdca279-3637-4767-b331-ef747ac21a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6871a37c-b7db-48d9-8fbd-441b099751a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba63a92c-2bf4-460d-838c-f35c654ff3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa76f3-612e-481a-aeed-e5315291df2f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465a8629-132f-426a-9829-927d9b50685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30df0cb6-1a19-4dfd-97ce-820278fbfcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67028e5-a78d-4d2b-b676-3de6cf12b040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b997800e-83b7-4e4b-a950-840022b1e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5291b9b-189b-46e6-bf25-0b9993b4faef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fdc0cf-69e7-46b2-b553-6d0d8ae745e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2709c578-fbba-4be8-8cc9-cd5d09a89c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6985aa3b-4f13-4c2f-b713-7f0aa4f3b363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d31c2eb4-f8fe-4365-8f9b-dd668e5e610f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b3ffa4-7c3b-4ffc-9d04-11f8a691004a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe86497-d48f-4f0d-995c-0009ce0f13e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b88473-6ab9-45fc-a313-748c242b794c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86b1738-b48b-41de-a2c0-803eb1920e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35fa635-36cb-4b94-a174-27d53943673f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a29094-734d-4a5d-9523-20bbf0ede5f6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a203295-965a-45c4-8010-6362c89c6df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32153f5-dacf-473c-b1a8-c0193e970fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d6d2ee-847e-425e-a6f4-cf865ca933f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0be34727-79a8-42cf-83c1-8b8e62cac0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffe2591-8fc9-4bf6-8dc0-eafd02cc079b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5529a508-3c51-4a96-961d-0f837d2acb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253391f3-f9cb-44ee-89de-620ece817348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9eda62-94c7-462c-b943-e5ef73abc232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acbe06fb-3328-449c-ad9f-6e24bf2c10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1131040-03f1-4328-a801-b9656fcbe974",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db682f2b-e86e-4ed0-b9ce-322b722a7a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20764059-6b75-4b5f-a65f-695158fbf71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9cfced-e4ee-449b-be87-7e66fa39abf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d45cae6-4c43-407b-83eb-a8c5fafe0fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddba7be-5bc6-43a4-8cef-bd1042c89476",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0321bf56-daad-4d7e-b1b7-11b1203b5ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1953b51a-277b-4791-b54c-fd9bbf3db568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f8ecbf-e18d-4f02-85aa-9ad6e8700585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89f6d767-ea4d-4448-b2dd-963b165f82fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a737e8-c108-4489-9e71-1e7756dcbebf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61b39ad-872d-4f48-96df-fce658002b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbedb336-259b-4500-99a3-59dd57598b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a52fea-6d5d-4771-a7b2-89defd475cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8ac1805-9d0c-4cb3-bddf-7c48ef2f1702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545f7627-4173-411b-a643-96b7e905c0c4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9258e07-a940-452a-8da0-5b3c42c1c89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e66f20-3a4b-4988-8c60-c3feb30cd093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c49de3d-863b-434f-b4ae-d90337700ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26ff2634-c3aa-44aa-a0c9-9019be4407ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d310f05-c3cd-4083-bca5-62bb93f3f278",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d6aea-de62-43e8-9849-e83b611a5e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51253754-7506-4047-8574-330a8eb6df47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfd7f32-d8c6-452d-a227-2409204ae621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "827f873a-3174-4b30-807b-1b838692d13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83794b7e-65b4-4abf-9918-bed5345160b6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed275ea0-49c7-44b9-b132-9573b1b0bffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b05d37d-9853-479f-9e45-7bda47f2050a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36bb391-32f8-4dd0-934c-9901f2412b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b221af71-db61-4ac9-a14d-812acd75a16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf2962b-64a6-488e-b1f2-a44ada95ce2b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18af2de-446a-460b-8baa-065aef1ac5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f96e231-3f1d-4ef0-b2d3-dcc62bbd6550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e432d00-f5dc-461c-8600-edf382553ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47fbf0f5-9663-4acc-9593-548c546c5aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09426de-e315-4f51-9012-27fbd912cbf5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f542ec3-ce18-4779-aa89-d919cfe6733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6d2185-e89c-4a17-8b1f-196c4ef027a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dedf578-8553-4198-a13c-8e8eb9267b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2609ab-8b15-4843-81ef-d79989d35c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ab40bc-3eb9-455b-b900-e28706652663",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced7b55c-e73a-479f-aca1-0bac15913be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d460c0e-5521-43de-ad6e-15667ff93e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044daeee-4ad2-4aa8-a094-fb5ae7194f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4df97a6-48d3-4a9b-ab24-0df904b948ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeb9335-9d2f-47bc-b8c2-cc93a3d32364",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8aa8f2-8afe-43c2-83cf-1f89f55ca67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc91e46-5fe0-4726-97ca-023124b2f995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ac66d7-607d-48bc-9ae1-7a2e805290bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f8b4c7-4ca4-4577-8189-35464a3c77a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87076b55-2b4d-463f-8d36-3a35527fbb6e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e20258-f456-4882-a7f3-6f2b0404392d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6643def3-f1be-4e2c-8688-aadad7a655ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012a3b12-7e5d-40f5-be5a-73b243cd049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "38664e21-1ea9-49bd-a0a1-a8870041dfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fe4bc0-e01b-4bf3-9e2a-2766583c43a7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19168310-0f75-451c-8d87-33f530f4a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddeb871-6251-4f74-99df-bbdad4243157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50472fb7-9f68-4b9e-9030-525deeefc408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64ff5c5-852f-4128-8228-f34d12a6b25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e318974c-05ef-40e4-a766-595306ab85cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c250f8f-9072-4e24-9b69-5a86aec49b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72acc962-4710-4f6b-84f1-7c710a7d0aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb967e6-bd8f-413d-b9be-e25208c9aa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43611278-d624-418a-9299-ecf7eedd8bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a7b23-0ccf-4046-91bd-448e1003fa23",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed856a69-ff45-4203-b001-1524acd5bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41072014-7e2d-404f-b197-3daed2fd7d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca75fcaf-2826-4dfc-8460-d9fbc436522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93e11c7-d8b2-40fb-a8f4-7791a7803853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2ac350-e7b8-4b32-b23d-b9d6d0a43ec3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59ee8ab-043a-4d48-ac9c-1c39fee48df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f273cb-0720-437f-95b8-4f5b7c7b1d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40713342-1054-4b9b-8d2d-e6cb575faec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "383189cf-245d-4270-aead-674dd4db5331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c0d59a-c909-44bb-8754-36f11c6f3cd3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407a024f-2710-4dd9-b776-ade3a38d6085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e58285f-4476-4c09-b897-991ff5a1fa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efd9d12-3adc-4672-9ff2-f4525c1867e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47dc739-64a3-4f50-92c0-578c463ab311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848eec5d-2280-411b-b2bf-d5b8f598c9ed",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd3de9f-e775-4de1-9c5a-a1fadc44a769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1ebbb6-5bb6-4477-b07e-fe750a748f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b87f09-1f60-4503-b0ad-4f82c6e09a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5bd6e1-1a56-40c1-9761-5e792ddf4b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f932b325-ad01-4741-9622-b92bcfeac77e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bd80aa-5c10-44ba-9441-872a0239800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904babc6-4aad-428b-98ca-794e6df61ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318fa389-e9db-4fe9-bec3-59be3f1b5063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6864b2dd-e8cc-443b-9a9e-ce26cd46cebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ea1015-4476-4111-8024-98a6849b3f16",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2999c1b-fe89-4088-8f2a-2286e631f764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fcbfaf-046e-41a5-ad1b-c2b26e37976a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cddaac5-5fe6-4e3b-85f7-12c1be1133bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "346094b0-2330-470e-bfcf-2d70d185e4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba961352-a0d8-4d83-b2c2-c9f9df31ee77",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565a1fff-4510-421f-b9bc-ff9dca61cfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07bc6c0-ecc2-4a66-9b41-e5a5e6198150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed87858c-bfd0-4faa-8975-f2613192b7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6dacef-cd61-4cda-808e-71fdc2c9fa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eece825-7457-431f-a509-1b3b147b7e4e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924dc837-2e9a-45f8-8512-8b0331257b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8517fb12-eab9-43bd-bbbc-58231a110221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a12cb4-1af7-4162-9ead-526359169aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77959d09-3a4a-44ad-b1d8-e66a5f0b7fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcd1c9d-fd74-4e4c-ac00-558f699121dd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a3e71-0924-4458-95cd-4237a6a29f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3220f816-18d3-47e3-a9f6-223e72f82892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b08620-dec3-492a-9940-f791b63cc493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "25a5c545-a499-44d6-8f6c-63055efe1375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8255a38-28a4-4fec-b920-450ae503c2ad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc97a64-2338-4641-9efa-b58583924e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d34b77b9-858e-4e1c-9738-e654dbe36914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baddf1d-1a1f-4f2b-99e1-a97fe8c63761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "242080ba-06d8-4759-aa71-3cfc47923f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653c396e-aaf2-4a8e-b05f-b3cf51304360",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd992a0-81a9-418d-9b9a-167c51f33918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37ed08c-5c56-410a-bc88-69237e42c576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6345b198-fc92-46dc-9a76-54376a37feb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2266f23-9a7e-4a66-9a0d-b0135f3593cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb14a9ca-1655-4a3d-a004-d791019662c0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47896d1-0dc1-4d78-991f-8509656dacf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b389263-79aa-4ae1-b3a4-1a01ff682fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537bdb63-1a0e-49ce-b2ea-1a871381fa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "484f23ef-fae6-426c-a8d1-8a1fa03eb2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0147b677-6152-497e-b896-e484cce1837e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c5410-1d8f-41bd-a9c9-7bc388fd0793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a2a9a4-0541-4603-b16a-d09baa09ced6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630d2e57-1f02-4db2-88bd-183067014516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5469ba6d-cf29-4f66-8380-35fba46aebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0628bcf1-5c26-4b6b-b1a8-4dc3f089b917",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75cdbc6-19a3-4740-b565-3b70d5fbef19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90ded53-278c-4e69-8729-998058e71309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23feb384-9ffc-4d90-8004-a8e2867ba3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d29f64-7d15-4550-9103-0555502c51ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432d901b-cdf4-44b5-86ad-56310ed1da4d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbdb272-9f91-4753-9d1e-9eda55eed0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a6580d-c4b3-4720-99bc-680d246bcfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077279b2-9e2b-40c0-924a-7cabc9431532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7c37f4-7752-44b1-845d-a3a6a32fa8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbe710d-8867-4ef0-84b9-b6639b10fac8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c25afdf-f349-4ab1-b964-b3c251cdb16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e76973-e358-4fdf-ae9a-8b8d9d8b8a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec38c0f-9134-420c-96bf-866a69fca04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7c682281-16b4-4530-9fdd-a228e4cd49c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782d41d0-1169-4d66-b006-f9066fbe67ec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c686533-e78d-4e08-b294-edf12fbfdc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea8e4d8-3fd5-4a70-b084-16fbeb0f6939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f15a12c-4536-4dc4-ac24-c0485667d26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e39e330-054f-4ca3-bd7d-3ced80774aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9178dcaa-7fd8-4665-a68a-be6ed64e8ea3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1430ea12-7c4b-4220-a76a-40713b1d1330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb9e27e-805b-4db3-9138-652c6a5df379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70696ba3-a2db-47d1-9729-7332b5f32a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f55fcd-a95b-43ad-aeac-bb0d03508f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588218d4-bd60-43d4-8742-eaf569dcefae",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6d36bb-33cd-4cb0-966c-fea0ebcb039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7171909d-f737-412d-80e9-12771f795c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0ea95f-aeae-4c4a-a6fc-7ffaf71a9580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb4a86e-95b7-442c-98c9-21ccab18f26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62289805-61f4-4cb8-8034-b57db3b09402",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29ce80b-d773-409b-8207-145e77630df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6a391b-ff0d-43d2-a5f5-5e1115fc8fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cab267-8664-4fb9-8e86-7d1967b6b5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70db8144-f329-4292-a537-1026c22b7f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde89e20-3d7c-4138-92a5-2f7dc471111f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99f1d49-75b4-498f-938e-1acada9af5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d55f6e5-44f2-44e7-aff9-0576a9e080dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cb3465-bfdb-4f67-8f3f-73b89437fe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7ee64a-bbb3-4b6f-bf1f-f929d01711fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d367b55-42bb-46e6-bd8d-6772db3ff4c1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cc2e24-1dea-4228-bfba-b073eee6366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c984986d-5ea8-4ccd-a89b-5bc17dfb7338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2205d80e-2950-4369-a933-bec4b63b297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5703f16-52a1-4e5c-b4ed-9909f708bf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78da20be-6f70-44e8-8f9d-2d0086ad6df7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f0a1bd-cb78-42ff-b385-46e00630d015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206abb48-9416-454b-86c2-62276696c07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95912e2-f926-4215-8b9c-ae8f4fc63cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "284182c0-9d99-4a96-8288-67a5924de075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c07ce9-0508-4a68-b1ee-d6021a4d8b57",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada2147e-17d4-4557-a30d-93b737b8db6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882734e2-05f7-4195-b5c1-2b64736115cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e078f7df-c292-41e7-bc6f-e949f616130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f74b26de-2e16-411e-bace-5873086c905b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef818c06-963a-4871-bce2-6170a39a7b7d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4a4bc2-6be7-440e-bd37-6b023f648534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedb68fd-f6eb-40a1-bc3b-037bccad7107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f06b68-06c0-4407-a9a1-3fe8844bdfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a872dd0-bb81-46b6-adad-2d0e4648d15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09684f1f-fad3-47ab-8725-ca177134a232",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8d8527-04cc-488c-ac1c-02fe5d95b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7380f61-8e4c-4db1-9ef7-0f4815d33e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61dae31-9a62-457a-b393-10b0708619c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76c568a-1e6f-4ddc-8584-0c8870d88661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edda177-5111-4df4-a57b-e01bda5afeb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb7083e-44d9-4e64-9322-708889962196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c2d626-d027-496f-ae58-b7e0a492a66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d573201c-7e2b-4f5d-bb56-14f2351e4e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca81a5e-5f96-417f-82c2-2b9606deb214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ed3d6f-7c8b-4877-b827-32da4c7ba6cd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbb41ce-503c-4e1b-87c1-5b5ec262124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fb7ae4-1f29-4ea4-a2a9-56d506738b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5a3ceb-2091-45ab-a526-56a24328ee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2269ef6-ba17-421b-8646-4efd0918b6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce4230a-7930-476d-8481-027422369ba5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39919c-d351-401c-8bb8-7418462878fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7b4a31-ad1b-4c7e-97f6-b1765f5aba18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831240f9-facb-4c9c-bcda-abf5ffa6949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8659eceb-5cab-4117-b835-039b3f14d437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2bef40-e496-4c7d-9448-6157173b05b2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e5538b-8d17-44ca-85bc-9a4eba17aed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caebc077-2ea1-4e2d-aec2-e544693a27fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4e9788-dae8-4e5d-8394-2dd994bfac74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4839365f-4037-40d8-b1db-f0ce1a142209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8db3e6-de34-4aa7-b32a-516a310f2d3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3e197f-dbf5-4409-98e6-9cc6226a951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2736cca-f576-4cc4-90cd-06564febaa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb21cbc9-58a8-4336-850a-8cc300bc3bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5875b51c-206c-48f2-a7a6-55dd8b70fe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597fea4e-5ec7-42a0-a9e1-4441093cbbd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea1bd06-1105-473a-9f54-0f88336d4420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e9cb6f-4933-42d1-aed8-ef91136431c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42631efa-2339-4971-bffc-4fead8d70ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "256abdc2-a858-4b0b-9812-12310b182dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868946b8-9794-49e3-98a4-d4143b4b3f8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19978f62-2812-4e9c-8cc7-49359788601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a85697a-6bf2-4561-be4c-b87fc410d75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77143f89-1c8e-4831-9d63-137f80ab557d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dae05e83-0f3d-453e-aa7d-ddb5c26f98c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7c9cb5-fa84-4b74-923e-37a34f456d97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f81ed5-29d2-491f-8032-5d4db23079f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cdd5b5-b76a-4658-a6a3-038e93f912d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e84006-a4d3-4d7f-afc2-fbdb91130c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "322e0456-db24-490b-b49d-0a73a49aee17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792678de-bacd-424c-8af4-2e893cf69912",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5caedd-cd4e-4f27-9721-9a5bd0e257ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa7cf24-dfae-4be5-8736-57adaee3478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8877648-c053-48f9-8a8e-1a8eabe4ddb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f33235a-8270-49a3-a42b-8ead0e90896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275ef8d0-b463-49d1-b6bc-392f0eef3243",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f5038-6cfa-4c6b-99ab-0c577ccf0c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47501f34-5c27-46fe-843a-d2591d42582e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de407002-e1f2-42f4-b929-87fdb38f4d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4dee0f-1f4b-43fe-81ca-80ed3531ca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84967a45-bdcf-471d-937a-aff50dbe1c18",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dcf3e4-bb8b-4db1-aeca-0509e222d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c98d9c-3727-478b-ab96-65dc7e120cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa2716e-70f8-48f9-9ebb-4005b7d5d7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "548ea45c-f3b3-4157-9b7d-db099a12b801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b34d9a-5538-46e7-9c41-fcf054b8d1db",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989cccd8-72ed-48f3-8262-8e6d84d1a851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c25ebb4-0e0e-4bba-9bae-adef025503c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef1fedb-4983-4442-b5d1-d9060f6794ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "562063b8-8917-4cf5-b333-d59ba291945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bd09c0-9159-422e-9374-b1387bbc1c5c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7caf7c-3d0e-48fd-beed-15f5d0a8d9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d475c758-a39c-4f18-aad1-69de301528c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b3d986-08ee-4636-8d6d-069fe6d2b1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48912091-c26d-4519-babb-7f0541f138b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4061ff-fe01-4712-b65e-055c94a1a49c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c136873-0787-4137-807a-58adc05773e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98f75de-af35-4a0d-94b5-3690055daadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccfad87-cf7d-499e-a179-df2badf53a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc2721f-e233-4477-8923-2e1a490d5d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686817c5-b38f-4323-bab1-8a4e18f7a7c6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e19fa7-047d-49cc-8324-368de979a03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288d03dd-cc17-4e6b-8cb3-b938bf710207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c603a873-421f-4d60-8fc6-287c31e93cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e7ac0-339c-4c6d-9cf1-7825950c2269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d6b4c4-8c0e-4d8b-a64b-812c7d39ae7d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49639b3c-cb6e-49a3-a033-9110faeb6c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5506dba-641f-4850-824f-310b0b2331d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df78718-5b5d-4012-8093-0f77b29f3a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c40dc58-9457-4703-9ec6-2423d8f22d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14697b63-9811-445d-b462-a9d91c038706",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff30b3b-f4ca-48be-9c0a-2d0959312de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f1314b-6265-4586-8b52-a9d508317c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac3237-7cb8-4dae-93d1-a793ec1593a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fa2586-5a9a-4f86-8a0c-0be4ca2885c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addde1e1-f450-4ba0-99a2-6d357398429e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934732a9-7c11-4066-a68e-d71d27448dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31155be9-e3a7-46ec-ae12-e850b1ca748a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076f3f1c-6f16-4fff-b76c-317ebbf9e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9aeda4-ad88-422f-b069-b3fe9f24f960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58bac57-bd2f-49cc-bb63-3e4196985690",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dda805-1dfc-46cb-9007-8b964a85d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b32112-a79a-4182-9477-e6f366297225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85de2aaa-d14a-4a73-bd30-d37d418e663c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d830104-32fe-43c0-b9c1-ec81296dc749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494ada72-3a56-40d3-9ea8-940bbfcde6ad",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c61e69-8647-4379-aec8-1d9fc9ec18cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad640af0-9f61-423a-b488-bb35995d2ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87fff14-27a3-46ce-a77a-953f5d9aeda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1528bc4-76d3-4a0b-ade2-4581c55f9850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ae7392-6e2c-489c-a07c-55f16aaf9a0c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3edc94-c877-42af-b002-a7e7f053280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e0920e-258f-48e5-aced-3ee16370150a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4e95ef-ce4f-4f92-89fc-ca1109c73e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4266fac5-65ad-492a-b1a4-aa78e1126e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cd20fb-f0e4-404e-85a4-e9806904a303",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5915ab31-11f3-4f88-9c2a-30a897b8517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ce60bb-4c55-49eb-9a51-905ba4c0f183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e675b55f-5cad-479b-80fe-fdbcb997bf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39a8699f-8962-474e-a6a0-ad0515956598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840ca1da-1db9-4463-988d-942c19486ac7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c7335-58e8-44be-b1fb-bd7f29b2db5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cdf2f0-1543-4b8e-a259-d7c2747dbefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54cfdfc-e1cb-47cd-8521-92cdded5db7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e986aa8-6c0d-4d68-87d8-9af050a2733b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff134b2d-321b-4efe-859b-2d24dc602077",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb1b893-ed68-45b5-b597-eca686827143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d0a77b-b417-4c71-984e-ab9dd8905ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f64f11-ec1f-4353-89a6-cc056a9f5582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "707ef298-370c-4cbb-87a4-7d2d07e7e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54826e84-d331-4c23-8caa-252b1fb1d94c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56964249-4484-43e2-b0bf-c3857eacf0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59169f89-af9d-4d2e-946c-d5eea33c6c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc7fd05-6327-4bb4-9772-553b47a50d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c21ca86b-5c3b-4951-989a-8a0672610985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54004cc2-452b-41ce-b468-5a2a9eaa1cd9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb84b64-c1ce-43bb-8ed4-452adbb245d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd6ee7d-3db0-4ae5-bcb9-400a7f69bd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73191788-637a-4f8c-9e5b-ece08d034122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d89ddd9-0283-4713-9e84-ab57708651da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0aea93-06be-4462-b598-0910079720ca",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1469768c-a355-4795-a631-c874929c1805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c694f8-ee39-4648-a65e-60fb169db5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af5666b-f50e-421e-8649-45447aaadd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "047e2461-ce08-4ca2-895b-4792a4d1431f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04d5b03-faa4-4bab-93f9-fafead3f1f9b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1863e25-04e7-4705-8145-13e33d57e903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f54bb5-94e7-478a-975b-340fbfa50a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea94e1d-ae96-40da-84da-0d928337ce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "075d078a-d7fa-4022-8065-6f26017c1486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ed67c1-3d22-4282-9ce3-d704ba51c4ad",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169852aa-fe9f-4f8f-a3b7-57f0c4089d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdaed32-06a3-4ad6-bc00-75eb78cacee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a42fc7e-456a-4df6-a70e-eafee171ee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a80f1a6-b00f-4073-a39d-7ac910453073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb5eda-b792-408b-9ff5-a5b728ffd312",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c839e3a-3f47-4fe3-8666-66cddad1c81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6a4cfd-6152-4d73-a13b-489f5858afc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0b70e7-8e75-47cf-ac2d-bf07a3d672d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1932e833-de97-434a-a0b4-f65a8cd569cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b050b2-9b10-43ab-9849-65e6c3fe1f7c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a979e608-76fa-42be-b7c1-28e2abf5188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822492c1-63e5-4930-9f37-339032236c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e5e996-b411-4ff1-983c-26d1dd9b9483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52691f2-1c47-4d87-88a8-c2dc3c6b1c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2371ee-bf11-471d-921f-fee655cbb648",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41f2dcf-d68c-46f3-9bfa-60437ebde9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7268ff22-ecb6-4ece-a18f-4ca7c093e7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d719559-aa61-4068-a019-87764eab8a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b24b22e4-3b76-48f5-bb8c-6becc41da343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faf10c1-41ba-4120-bfbd-64eb87fdefc5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad22efdc-c1f7-4dcc-b6de-539ff341960a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d786230-1ea5-40d6-9a3a-58553e3acd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a06312-aee1-4407-80ed-e5bf0bb94136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1db8b23-9054-4125-bf2a-5d3f2dad6a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be65ee8d-a6fe-4bbb-878d-cca503443bd0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb2df40-4e71-4a86-b7f7-788d8a111433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9547e70b-9646-4c42-94d5-3f7b74e0afef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da27d2c-bc88-4125-88ed-24dea9b573f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7ae23f-44e2-4dc1-ab87-726d889848bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a72506-3c06-4621-8cbc-50cc297f5066",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b3c6e-d6fe-4c0f-9c5f-bc6f56b0b745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c009c8be-7631-48bb-99e9-276767ad6e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934bf707-65fb-43fc-bb1c-a2decc57a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "035de101-05ad-46e1-b045-f4f390215f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786ec827-e2bd-4eef-9675-8afd9d1f75c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fe7c7a-8930-48f9-a5ec-9ed1d414eac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf9fd43-2d26-4cb5-ae81-c34621d8b31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c14c4c-ca2a-46fd-8040-1409f6145b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa08642-6d05-4e74-8270-9e294724adaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e868de-74e5-4d66-91b5-e06da3ff47f1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e69ec2-3af6-47bf-a7ea-0b3ef9098703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192fd7fb-a933-4dd7-bca1-877b5c3d811f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121c594-421f-46c6-abe1-9e3a9cabcecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8dfb1f-538f-49b6-afd9-48220747eb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f104933-fe8b-41f7-ab84-a5c6523f5bea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d8ddb6-9023-4191-8cde-4f7cb5dd2c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38755be2-269a-4ebd-8be9-e27a1f6a5f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66b0ed1-1ca7-4bab-96dc-b78bb9467649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36df6fd-ddea-40ea-b2ec-6c472da88b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c42f6e4-0423-4874-8af7-feb9d4c56cb1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d701e-dd03-492b-8a07-9bddb9815250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2dbe14-a399-4ab1-b32a-bf8e8ee70107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218fe9fb-4a8a-4ee1-af43-191d48f75282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4230a8-f081-4725-9868-0595f19ffce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f8cb26-8542-4e7b-b441-4fc2cb30c110",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782eac6f-7b81-4d9a-b5bd-595381f490be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "adc5896f-56c3-49c2-8f2d-74e8ddd2b5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cab5f4-2254-4888-b9a5-4cb3d5a2e5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcc407b-3ca2-41b9-99b9-c171f579af93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "895f47c8-e54c-4719-a8f3-b63d137854dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75d2b305-54fd-4e0d-9cc5-c3ac6cff1c86",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a49c0af-2d16-4100-8f57-98010b35422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de0dbac0-557a-4223-b5f4-5f55ef667e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b698bfd-eaca-4da3-9554-4c06f4dbbb81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ff7eeb6-8354-4571-90c4-4b9a3f61eaa3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09c33d4a-ce56-4db9-8a1e-c8546655f8c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b881f0b-1576-4b13-8b45-67b915da2030"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6de601-a3b2-4185-8748-33ac4c2977d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee76fb87-e948-4ffd-913b-e03b9388f3d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "751d316c-b0cf-4e9e-881c-4903e215aa3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3086dc4d-f5a1-4434-a193-37140891cd92"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd532ae7-753b-4dcf-8739-2ced68630c77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fa204d4-31db-42d9-b916-44cd4462b57c"
                }
              }
            ]
          },
          {
            "id": "97d8bf34-3845-482b-85ee-bf3b03f6fa18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac9bf9af-1daf-4b73-80d1-c9c711dc6bb8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ee1fc0d1-3ad7-4d39-968c-dbb51365d481",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5472cc-dd79-473e-b04e-ed8ee664dc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "66e8b216-87fc-4783-ad84-d8268431afcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf5064-12d2-44d7-ae22-5daef0bc4129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294d86ab-689e-4e16-b892-d3b8e2059447"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1716ea67-50ae-4bc4-81ec-76213069faf6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "035687b6-0d8f-447f-84e6-cc1b985320fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e617136d-2b17-41b4-8a37-a80212a6a81f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf11312-f532-4e81-9f7e-fbaee2a54a74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa83228f-9cc1-4cac-972d-5bd83bac76f9"
                    }
                  }
                ]
              },
              {
                "id": "28c380cf-3138-4804-a171-12ce10606503",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e864c490-4bd8-43cc-871a-3876746a0c0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc05096b-3ab7-47c8-a7c9-7b78130f56d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8783b57d-18d6-417f-ba6f-abfb20f19c86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fae71431-bd82-4799-8a5a-0d2da562d00b"
                    }
                  }
                ]
              },
              {
                "id": "28848052-0798-4b58-8daa-9b21342cb21d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a768bcd-63b0-4f0a-b2d5-d1fbb4f56f94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cda2d90-229d-4a0b-844f-d428366987d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70033536-4991-4e8b-8e2b-2278501db6e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d5c3378-6979-47a9-8591-1b5923d55c7b"
                    }
                  }
                ]
              },
              {
                "id": "ed925098-d1fe-4701-9348-c8037dd0bde7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab1b4a72-bdaf-4412-9339-5f8b98dc5cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd7c258c-eed0-485e-b324-72f0ec600d7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f68ffb8-7b6b-4065-b36d-6395870cc9f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c678e27-a9c5-429f-9788-6f33a5166291"
                    }
                  }
                ]
              },
              {
                "id": "5414c3e7-4796-42e8-8942-3a59a99e6de2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e54c971-d2f0-4b1d-816c-2ec2659cc582",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae3313ab-7442-4622-9d31-3c7a65a73cf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09fd58d0-825c-498a-aa48-59a7d3c46d41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a2545685-0b25-442e-80b5-c749975b5234"
                    }
                  }
                ]
              },
              {
                "id": "90613ad2-b05e-42ea-8500-41c9cf472479",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db408ed6-c69b-4df6-a2df-0c2a47c66709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a79d26bc-e5c6-4438-a407-1ca371059dce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adea70d0-545f-4556-8b03-9b6215f91416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53b44ddf-945c-4d1d-a5ae-0bf540d5d656"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cffb1b5b-d4d9-4d3e-b9cb-5feaab3606ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95881dfb-a687-4e43-87b2-e163d9594bdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5ce3f46-8fac-4312-a825-9ae34af735a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9dca875-2578-49bc-b157-510e4dbbf689"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7004d7a-0078-4135-9ffe-9829f9bcc8f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "49b1159e-15d8-48cf-90a0-f1f93606cec6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93b2b1df-e2cd-41e9-896d-fd2dd18fa0a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdcd8ee5-c475-4649-ad38-2947405fa0d3"
            }
          }
        ]
      },
      {
        "id": "25c055ca-a36b-4216-b5ba-e2eda5a70c34",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d08ffee-7ee3-4fbe-947f-ec46f0f08d66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de1e2204-3476-43ad-952c-7cdf5d586e08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a068b6e-2dbb-40e5-baab-f8c54f736859",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf7cf89-8173-4f38-aed5-4e50fea7f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2038a3e-2d3e-4f25-973f-0af0825c07cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5e8bbd-1078-44a1-9c5b-1232589c1192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "554e8495-f9c1-412f-b0c4-a5fc596930d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5109abd0-d3f3-4bbb-9172-032652a44ca8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df675918-4e5a-4243-8336-c7a29706ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a256fa-bd8a-41c3-8f34-aa1290aa33e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93e9c84-4b27-4e87-b85d-641e5f7206c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff151a2-9fc3-493d-9963-a002b088fbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410b605-bc92-4159-9166-0a06d2294bea",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cd51bb-ee42-47b6-8ffb-775d9f49c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abe22d6-8148-4139-b24f-9a3fb786740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6345be-e1e1-487b-92fd-3f6a82aed0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2946cb-3f77-4d7e-8679-0973ab95e248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e082ef-5544-43fb-861e-776c98bce749",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f7ef41-cdc9-4e82-9963-e60480880c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c34c0be-2c54-44dc-9022-05c32db67c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d5926e-ad77-4f8f-af45-493b90156469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae8720f-e1fc-43db-be7c-336e460f6e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45422c8-9caf-4514-a47a-5ec7b1b676a7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c76b908-e4d9-442f-abf1-d23b3fca1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085a7254-1c5b-43e1-8580-b6605fc476d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630d0c50-afca-4116-8119-ad9f8d795d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be796830-321f-4f75-a99e-a1124935b14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd595f44-2d3c-449f-87aa-d09c4d8a4969",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17527425-5def-4b92-b2cd-f4acce63737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5e5987-ea3d-4da7-b0e7-6f49af9bfef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72ca88d-c6d2-4a9b-b8a2-c183927d88c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99729426-0d84-4935-97f9-921cfb55272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b73670c-0a38-4256-bde0-b973d06bf240",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2593c4c0-49e0-49c0-a332-3229b5b1f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6170718-da05-4764-a8ca-f3cbdee0df4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdec8f62-151c-4ab9-bac2-36dd5e487543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ba2943-f4c7-4b37-8474-48eff8e625b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0a8157-be2d-487f-9bb6-a0be25564825",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad0346-94dc-43eb-82c2-54726792aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b9105a-04de-4841-9145-082eb41b8a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67d2961-3ac3-42df-a93f-9903f43223dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3e7c96-fe06-41ec-a744-ca9ad41fcc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec644eb-9b2b-4338-a977-a654a52b693f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2372d5-cc69-4ea6-b466-fa0b6a783eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a824f20-7996-4f91-a80a-2a5978ce1cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2441888b-4904-421c-8037-33bac673a686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f69562b-ea8e-447f-9206-53e8a84d7336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf3ad0c-ce6f-4fc9-812c-1e197fcaa528",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094dcb9d-459c-43a5-9b35-215e65ea2287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18954b3-5c3c-4c92-b0eb-9fd14aeced47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f252d97-3e46-4c5a-9131-143f04f7567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d188e16b-470d-46e7-a0cc-277934d02d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635efa72-647b-44fe-8007-fe6027cd6164",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b07561-a2bc-4eaf-b5e2-3a54bcb0fb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d3a7e0-364a-4426-8ae3-f3a10339f20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb342703-220b-4702-b132-0cd1e78f7c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffefd8a-b4f1-43bf-8edb-9e3b3ee48e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb022562-de81-478f-bd05-8e74e18bd092",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b8bcd3-091d-49de-aa50-09e4720478bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248decd0-b90e-42a4-94e8-5875b5f3ad73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d732958d-db3d-4613-b9b5-f891fa768bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d2d193-3f74-40ed-b377-b042d4cfc91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dd465f-aadd-4075-9bd3-a4b0fdf32035",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85604bc-0b0b-4d3a-a148-48f7e192b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d05e33d-46b0-488c-8010-1b8e669ccf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9810c96-2371-4d1e-a7cd-27c7ce7a96ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87100611-7a65-4933-8611-55e0fd30e255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7268844c-d471-48b2-9e7b-8fe3e988ad02",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885502a-46ce-47ad-a746-58a06d44555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d54ac3-3010-4f2d-be4d-3312edb1b039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8e90aa-fe5f-4d0d-8857-809ceb5a2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98113b2-a7cc-4afe-a121-436821c7ed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2f46b7-9c11-4a05-975d-b41d0b3958bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a69e882-3b10-4da0-8f68-550fe17c8faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219d970b-d0e6-4c11-af9a-c0d2627c02d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1b2f2c-c8d4-41a1-abfa-26d5f2d57bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7d24a8-451a-46f5-afed-bb5ffe79a50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d365b4-954a-41f1-aa9c-33996c743fb0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d589c2-1016-42e4-80f0-8d3f06417d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caca38e-f889-4ae1-87f5-1e3bed444bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd702108-149b-4bcb-8419-78a6824da3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba3386a-02ef-41cd-bf1d-74611905c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718d6993-c015-44af-ae45-a4c0d1400f86",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a46476f-c969-4039-80e8-b7f1c2671531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509b3e23-89a7-4c56-9d25-a86bf813395b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c991bdfb-ef29-43ae-aad1-069ff7661c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7585c1-5cc6-48c4-b7a4-61b3fa6bb3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d74692d-ba0b-4f55-8552-4339435dd591",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34bac44-af27-476b-b5f0-1547b9f10111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199fca66-1876-41f9-94c5-238f974019bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ce91b-3785-4732-b833-e3293a9c66d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69eb3c98-7c48-4be9-8699-ef96a7804f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e95cda6-4c36-48b0-b678-6674e650c2da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e14e7-ce7d-4546-8906-42a7186b2ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a274d8-8f27-4e56-a550-fc3f30bbd8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd51c00a-b0a1-4d03-93da-d35e7ae551df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0c3a01-888f-4e0c-839e-2cdf2d17cd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a6ccef-5865-4156-95c9-d482dc7ca391",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba92726-92f6-4fe4-9565-ee0811ff19f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811a14c0-4917-47e3-88ab-2efe7ce20293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88473b5d-e1b7-4fa8-b26e-90cdaba45212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc738ada-be0f-41ab-b663-6cf428f622c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798e5be4-6588-4ad7-842a-7fd7e117cb8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537d8bf5-1f99-44e0-bba4-1b6c3f814e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2aafd49-afed-4f7f-a272-5e563439fa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2853c3-57e2-4a8f-905c-38b11b836ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7612ff46-222f-41aa-8163-5ffdbd058f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c912b829-4106-4705-9045-32a53b70f902",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116f157c-34be-4a3f-a778-6b1c1f8a835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565039d3-b332-46d6-9797-48e6769d7b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e17dec-fba8-483e-a207-5a72c1eb6791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df85277-c4f2-411f-a400-e6df4dd26df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd96307-2245-4a46-95fa-aca6e62d346d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51e1f8b-88cd-4e05-a3ff-3e76cd51329c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42a786b-f724-4954-b874-01158b6f099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1d18b3-685a-4e7b-bb2e-7c0147293d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ec301b-ab61-4739-9262-f9bff09695cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229e735a-6c33-4bfd-9686-300100c5ced5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5603c8a6-a14b-4b5c-a1e6-63bfda01572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c0bc19-897d-4122-b185-0fba1eaa3f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4967be8-d6ec-4e99-b076-ec6fee7e0ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56ee0b2-5f7a-4a79-ad61-e490deca7adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a0881c-8c58-41cf-bb46-9c442eb9eb42",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d499c7f5-39f8-40cf-9d5a-c94e51c12532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4513ba-0c47-4c9b-9e2a-25052495f43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b25d168-e0ca-46e4-ba28-e5c03c6685f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6db0dd-a076-4751-bfaf-f3e4f7a0472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da187ea-b7a7-40f6-8250-e117ab69c1df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4863b3f5-d38e-4f2a-882c-0aa5058f107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174bcbf2-7fd9-4513-9e05-67fbd6440c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fb0c3a-f976-4652-bb71-c65c878226a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee7562a-b233-4504-a87c-e75304d8f8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9822d3e-4758-494f-90fa-2a79972409cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c92d0-37f5-427b-a93a-f7236ab0cc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e348679-8829-4a05-8939-9ac8adc061cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e50cb48-4cda-41fa-ad19-742434d89ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e825f68-f7a0-45ef-9d31-d794838f8be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a0b72-fdb1-4d02-af3a-3a77a12a8e9a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6dc4d0-1695-4e1a-a699-f460f5f90512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cc143d-a781-43e5-a994-1c5f6628d205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7df6ad2-e5a5-45f4-bb73-198ab211b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52f22329-81eb-4a0b-a2a6-09867f39301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d088527c-ae66-40a2-b8ea-45e7c55d4a59",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa307df3-4a5c-4699-b77b-f71512b7ea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca5906c-d3dc-4d90-9841-6811529aa1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a2b7e7-8628-47a9-a134-7f6d74100d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a95ecc1-7c8c-4a83-8a3b-833bc6ad78db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e8a94-1f28-4247-997a-f646ff0cc303",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ac9880-a1e7-48b6-a177-8df73ce5bf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48e3f17-15cf-4967-b674-50bac8389d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31716c76-5c4e-4a2a-b7e8-b658b125bd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96a3059-3324-43f1-9a6f-343eee545956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddde65c-9821-4651-88a6-f46e5e7963c0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdcda72-9665-4ef4-b96e-1e233134e19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c208b4-263e-45fd-bf57-a5d7a20f33f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71902029-c96a-4c49-b7c0-6809a824bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36df076-0d6e-4ca4-ad63-cc3c88b66149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837a60db-d086-4008-ae54-97307d24bc01",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b1b910-85cf-42df-9a5a-ac3659949e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6949eb2c-52cd-4f8f-9e99-89711e5493aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cc9f9f-bbca-4661-ad50-d738361b5c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc8a21e-b3cd-4023-8ec4-93b451b2e497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f10c3f-93f2-46bc-a6aa-45ad5c51c8fb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6689072-8e34-4447-a3f6-8b174066b58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254a37c8-f258-499f-81eb-3b03ccca4569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2407cda-f70d-4816-8764-12a0f5c0693c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7887683f-6b6b-41db-82ae-b4b6a2b9b4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3371067-288b-4863-8817-6ae490eec829",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bfe3f4-00e2-4525-a56d-422693079a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17400568-bd19-465b-8739-4a9777767862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1360148-938d-4b3f-86e6-a71855a7ff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fd47dd-773e-4225-94d0-94bf738ab36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ad4cc-7df5-46a7-942c-a92cafe788ba",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1479b2a4-05b7-430a-baaa-d178d6b5feb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3c6eb5-3047-410e-ace7-5e5734a8273a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a531549d-0d54-44c1-93fb-95c16b82d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c850427-a218-4a7e-936d-c9f113492c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272d3789-45d3-4b0c-b8f5-b34c38c7e897",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5699a949-9d1e-4628-b47f-e8b0848141c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5bb817-3d87-4752-9f1e-a1083a65c664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53377e22-4fd1-4ce2-8f49-8a233a41189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92817669-581f-490a-a562-9972a385fa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8053c226-e5e6-4bcc-9b47-5623ad1e4373",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48556592-e7cb-4dc7-af03-7a7471c7d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efee06c1-4b5a-456a-9fd7-545d4aa22059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021028d5-6180-4a0a-8c0a-5bae2459923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a493c10-e361-44c2-8639-6cae557939ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5b68a51-d73c-473f-95d6-2f9ff069b3cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cde62be-081f-4261-9117-45efe49471a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c64001-4eea-464d-aa40-6fbb513b8c81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "16c5baf2-c05e-478e-8176-dd65cfdef9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68609dd3-1807-4a00-a2ee-d441bcbeac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aacda439-cd54-43f7-ad42-c7b861723cf1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feaa44c4-217b-4a9f-8c36-8aa5af8304d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "986bcf58-af46-4cc5-aeb8-a7cdb3dbb8bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e063b57e-405d-48f4-8317-226621fceeb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a159e7c0-40de-4137-9dce-40a35bd1f6da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "206e2886-720c-4e51-9755-3dacf26ad8f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "caa63a13-7281-4913-acd3-e39782dc0831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41baf05f-a660-4aab-bfe3-7d8cad9eafe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80c87886-6486-4204-ac54-99b25f82c7f1"
            }
          }
        ]
      },
      {
        "id": "7216d099-8b20-456c-8771-b6e19b685fbb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "34152998-041a-4f2a-8cc4-78fba296619e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd3ed6ec-4083-45d0-a584-a933148cb9d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0f98e00-e1d3-4c26-aa38-4ab06f787eda",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5259e8b3-99a8-4501-9fdc-f1244ce2e28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c939b0-0e78-4775-977b-359453c66267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212475fb-4527-4100-ad1c-c73a8e6a97d8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553a0abf-cfaf-4ebb-b9b9-dacb23daddfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818f0559-f4cb-4e47-a551-dc19fc7d2eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a24c72-65a4-4929-9ea8-b2a85b2366b4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0487b3c1-2846-4924-95f0-af55b0db1c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea809c9e-87f9-4e7f-9cd8-4e41a74c0fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc92a564-4086-4664-bc74-4ba2071ca61e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868b92dd-9192-4f72-a568-7f5f5c872055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb053e5-18ce-45cd-9b9b-8fd829e2b5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586fb3d5-7a6c-462c-bc13-2168573811dd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cbc283-d45f-4221-a7a3-619e4c6cad7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f7ea22-6813-4f07-90b4-f4618bbad8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41c9c34-42f8-4e9f-92b4-08b2a4b18fea",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31d9aa9-4a79-488b-b232-1070a32dc792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e215ae66-5038-425f-a0db-70a1709e5d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7d6a11-ed21-4b98-b4c5-7ee96a5b3e07",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176a7bc0-7a74-4ce7-a0a5-d4e18d18e6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e019457-d727-4f48-9e7c-717536399e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6c27ab-7d4f-4b1a-b884-290b05b40e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4b484b-cccd-4709-b673-c5bf6f99a310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa058ff-27c9-46b2-8538-166079376f62",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2b703c-273d-4bff-9dbb-32cc89982ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cc05e9-0c66-48bf-956a-0bf39e98f954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6b2b7a-bf1a-401a-806c-3f8f043aa7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f42de5-2eda-4a46-bb4a-da511cf740d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47226823-8503-4704-86de-755939ba536b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcdd426-95ee-41be-9605-be902c3d3639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68dd5fef-2e88-41ed-be46-3a1cc73d8836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b928cdf-b9f7-44eb-b765-65aa87238b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cf4bef-309e-43a7-8773-8e68c8daea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03b5f92-ef2f-4b74-b79c-34afdbc490b3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968c9045-2106-4410-9f84-716e9c87678e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c8c1dc-0ff6-4456-8faf-034a43fb7476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fc470e-bcf9-40fe-98a6-56b41b5876a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a31394c-b6da-427c-8bb0-994a0d3e3a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c10af5-dd2e-4b6d-aab8-2fdccf6c87f8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b190d03-16b1-4fcb-97f2-1c4a6d181564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7003b360-a98d-4693-a892-3fe2f4b2ab71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3255923a-b7d1-4b45-a089-58fa67342d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d018ef3-e9a8-42c7-8777-ef78675425d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b2bae7-c86b-4d9e-a926-607dde268d3b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819630d9-1b35-4163-937e-f913df8604ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fd2b58-fef9-430f-8f73-857b3139610f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47250ad7-381e-4784-b0f7-d47551c0514c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f7c324-be98-4db9-a9b3-280372f1fd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f96ac2d-4e54-4ac4-bbff-1bfc41431991",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4bc9c8-4883-44a5-bed9-b1b59c67b521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910830b0-e15d-4179-b9b0-569086c262e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c7618-65ac-49f4-a6d1-766f798b06c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80aa9dc2-78b5-47b1-970a-374a0f258cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673511fe-2a13-45de-96f1-0e06e63ec2a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3836ea4e-af20-412e-96fd-1b35cf20695d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b720f10-a56c-4d77-837f-08bbad1c7105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd35baf2-3bf1-4605-9216-186662d2c33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c43a0f-0867-4e20-b673-f6fb190baddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11e1167-d058-41fa-ab74-bb6fd69ffacb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae29529a-6863-444b-9e28-57bfd0031a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdd143f-7858-4de5-9a98-796ac6e4f8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691f7ff8-a05b-477a-9c01-4a64fd74847f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a21308d-c2d7-4461-b8bd-41430f959797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22cafef-fa35-43fb-960d-2f5d4b06e8f2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4228dea-863a-4ff1-9bbe-cf033d332f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc4e05b-7dd1-4e78-b6bc-7f7f4256a81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27272f50-fc61-41d9-80a2-3dd9b8831203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2e5446-0ded-486c-ac8b-d9f1f6dbd8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacefece-562f-47ce-8b85-9440a987da17",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64573f1f-9c74-4fef-b360-be521442dc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e4d7d9-1d92-49be-a9b3-41720159798e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b41b34-71e5-4424-aed5-f08d75ebcfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b58aca-aa4c-46d4-8091-996726df56a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d800905d-6270-4362-a549-0287c2f0472e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443cc3e4-dbbc-4a3f-9a8e-ebaaa6bc0186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a9a85b-186c-407e-b02f-060014fe6161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ec30e3-5179-454b-bfd8-b72b2f1e637d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112e6804-54b5-4138-89f0-40782ade7c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f8ca3e-2b8b-4e28-aa41-fd20f6a7eac2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13e998d-fdfb-44a1-92e2-9e5be52db399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288b06f2-5642-4b24-9d18-0a3f726e0456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cf3bcb-7d4b-4db6-b170-7b537316db26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2607b8-69ba-4ca0-92df-c5b1b7088919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f5988a-8cca-49ae-bfd8-c3d94d0997d4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947c90c5-960e-465d-bd89-2371c5733026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fdacf6-399a-43d0-926b-acc50f1a61e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2394b039-4f8c-4eb5-a7a2-b7c1376eeff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e060f6c-9501-4c96-b5a1-f21ff5c6eda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8336c310-2227-4dd1-bde5-ab8e679b126d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54f3f1b-640c-46aa-b1e4-59194f9ddcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e47f430-4402-4122-8e3f-73c4424942a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60e5a9c-df0b-4292-8296-ab6abcb798f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8409c10-28cf-413b-bd71-ad6be5046fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb333eb3-b56b-496a-8acc-32f644193428",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400bbb23-39c2-48d3-8d04-3bb5d60179f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e691734-7382-45a4-83ad-f63d551bc58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca56b70-352a-4728-a24e-ea14cadff8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ac68d9-eaaa-4148-82dd-e69ba099530f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b9e75d-e18e-4d5f-9798-2544b58ec622",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9808905-b275-404c-aa0c-db1988bdcd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66e1412-b64a-4c84-bba4-13c228a85ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d795fe-7cc4-449f-8987-b59bf0bd2d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c194fcaa-62d0-409e-90ab-4a03197132ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5027459-6033-4507-97c3-c8854ba6b480",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5355eaf6-a9b4-4f55-9b90-bb353b1487aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b879bb53-e51a-4126-9455-cd8eaa3f67f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d4f1e2-f608-4ea1-85a2-0f19fca1b0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53873b36-2a12-4c08-a111-42ecef861b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adc1fb1-3fcb-4247-921b-261f657b64da",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4faca9-87df-4d49-9fc6-4309b633426e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10a52c4-3f89-482b-87c4-2c795c5a9c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b10d91-e764-4004-9d52-d5018f5003e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a1bfc7-1c9a-414c-813b-404f07b9cf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb0b69-a9a7-48f9-8283-245497c7a83a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210dbbfa-4fad-42e4-9822-956e34e4590e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb231d9a-3719-4029-903c-d4c8af17a36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda5ab0-3571-4252-a66f-5552ab389162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cc5362-e115-498b-83f6-789db7652aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68546ef1-10ce-40f8-b161-b50b82ddadbe",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a35aca-7f5d-43c7-a69f-9bc88b5e6de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fc5a47-1027-4fba-ba20-b116c6463594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263146f3-df51-47ae-b78b-c686f616db48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d381629a-0f66-4e38-be85-3e056abfc2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95485bd1-3edd-4760-a921-8feee3f3a060",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c3dfcd-af18-4ffc-b300-a6c622b6b757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c490c7-9d1a-4a72-8d5c-abc4381a9bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ecc1d2-6639-40a5-aa1a-4d9c79d17322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8709bc6-33c3-460a-afe5-e1247963594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726bc5b6-dbfc-4644-a2cd-aca088e55511",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9406d80d-046c-4587-a76c-00b637ac75c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce8590ca-65b1-4210-bdc0-1c3aef44d46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c34ecf4-44e2-43fc-a7dc-ad5b0972307b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089d221b-f1b4-4d1e-9f8f-ed9701d07c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada14df7-9767-431a-8da1-6d48506c4923",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7d1aed-1667-47af-8544-b796b49b4d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa56d70-82f4-4e4a-b75f-01f272d46d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156e8570-e024-4267-ac94-f3b855589a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a1691f-bd2a-424d-ae5a-0bce642bf2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58266631-b581-4f1e-9a1b-27163b11d5a4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e18829-cfcd-4328-8cc6-9d7c1e912369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c31469f-7845-4bf3-9ff1-5121d338ba7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376d1ed-a8ec-4620-ba22-ec603a531a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7543c7-e451-48f3-9a29-05c4f046ea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6429a48-3a5b-4d5b-b5e4-41951fd128d1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab88cdef-7c53-4922-a23c-ac50d905b031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2416b000-0861-411f-b014-07f4b1f16e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecdecc5-073c-4e64-b645-a1b1aad24c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ee306c-1421-4158-ae39-e9adb97ae115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b10e92-3d70-459e-b6fb-fbebb5303491",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569013ee-a9d1-448c-b102-a701df7dc2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "907cce7e-2b99-445c-ae18-dd1a72514987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160ebec3-c00c-45ff-bb08-9cc11f2fb7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588e04ea-f18d-4b60-9af6-404a8e03fa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789f9306-e1fb-41f4-9c2d-7484508c33cb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e5f2d0-a39b-4ccb-9a54-ac480504e667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea25a74-77f2-4b66-af90-1fa733ca5828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612f3e52-14fa-438d-87ac-53653948123b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0e7527-571a-4394-97ea-ab9ff9d343c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d935df4-ad0a-4df5-828b-a1d9aaea553d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1b2383-3c5a-4ccc-abda-6689deb07fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522e607a-5d48-4a27-a4a6-24dad6d5eb32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda5e9db-3d11-4051-bac0-9005d74ec119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10129b5c-cb0f-4ba8-9d13-af65bf63531d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c56930c-743e-4af5-8de8-a879cddaf5b4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63dfcb1-6fe8-4ad0-bf79-523d4ebd2498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e69d326-4f2b-43ef-9592-a70f535d882b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca961bf3-1e63-400c-895d-41c17153b782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53251cff-cb7a-4621-ac86-0703e8b5d882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce1426b-fb98-466e-a202-829859c89206",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b36cad-6a09-4bec-be9f-20be292efb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb9d259-db61-45c0-b2f5-e04dbcb89b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f304e63d-efc1-4205-8e44-39b5f8e8e55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a266153e-9efd-4abb-9d07-74cf4f28932b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158283d8-0d19-43e0-8080-39aeaa0a8455",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaac2b4d-395d-4912-a586-1a4c83364d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ab1580-3efe-41eb-90cc-af60fd18f5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2a9b0d-8a16-4fc9-a84c-1f4145d5dba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca9e682-89cd-4fe2-ab22-f2f2e40156b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e02bc75-9bb0-485a-8d7d-8d252cbd3d8a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302dde21-0732-4d1b-8b5a-16c60d22c1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af50d34a-1e71-4fb5-aa91-f63b9f88fbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ca8aae-8d64-4232-93a3-b8aaed065ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9291ff-59d2-4768-b26d-64c858a6174c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43e18d9-0548-427c-93c6-38964e749c88",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2445f1a-8119-4901-858b-12e447d9a09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1698d11-fc61-4a25-9374-1ec422dbc1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc02c2c-66a8-4ff6-8e74-cda8fc58d08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1035d0a-cff6-4872-8bb5-cb159fc90cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee96c398-b677-46b7-bece-42d4159a578d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a71f288-df03-4236-a2c5-9da79f5f7a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f35e92-adc8-4159-bd44-f7fa83ac7cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b765796-bb9c-4aed-8527-803167674036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1a0a9f-e4f4-443f-9f16-30ebc13cc06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4074c36b-e52c-4733-ba2d-d74bfb460c08",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3cd1f8-5852-4724-a257-7c0cbaf8db55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2083fc34-4711-4cb0-99d7-db9653dd8a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2370cc15-a380-4fbc-835a-35437a5482ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a21fde4-aa78-40b9-98d4-765c657b3841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a1139e-18be-445a-a70a-4e899048d117",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca9621d-ed4a-4e7a-9fe9-e52f6b16906c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693851c5-5c7d-4602-8d73-f94d13b858c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b11179d-d01e-47a4-8617-69dca5ad8401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3917b29-606e-4693-a0c1-62039c1db3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcefc2a-12b7-48c6-b545-49bd90b28ce1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238854c0-adc6-43b2-85d2-e0fd860e65ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7da2daf-25ba-4f34-89b9-3096c44e622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c4e048-329e-4fc7-96b8-828561ad59c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa37409-246b-4f8d-813b-50caf68fa012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285fa983-cfdf-4eed-b54d-78144d4c4406",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572f71f9-6413-409c-8e23-d90417ad5f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2625010f-c366-46db-b13e-c8e080d0dec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83a4399-502c-4c64-9beb-7df4ae801e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca56571-9a57-445b-8b1b-8b39cf35534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff93155-e2e9-4758-9248-fbe839b1316e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f378045-4f86-4dd3-96ff-29bcdee25001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09353f01-c71a-45a6-a3fc-b8ba97fa8ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fc0ee1-b015-4d78-8b4f-3956ce379abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec650e6-7ec6-4364-999f-763d0a9d522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d8f7f4-654b-4827-b7a6-6d0cf29bca4d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bc1f21-4a09-4567-86c8-4e5ae3862cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4da006-c4ad-4870-ba31-5a910ac07764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230a515b-0999-4a8d-97a7-46e942b9df4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4644f6-155a-4279-8a8d-f1f0948fd055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a4e09d-7e94-4bc4-85ec-4e5a970c7c6d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924191bf-ed7a-4f6d-be55-911930c788ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0ced3f-a8a5-42bc-b0fd-5871db0b81ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6a815-69f1-4253-8e88-e443c78a0ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead0d03e-0eb6-4542-b86d-76c83450c6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d4f4c4-7f37-4ef3-8403-57d1886fb5b4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eee3d2-4a2a-4ee2-89f3-2050130df8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dc500f-6ca3-40b2-bd19-25bbe13eeb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bdcc01-2db1-417e-93c3-53d104198f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad12cf9-f86d-4d57-881d-118330be23d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056e12f5-2b47-450b-8705-5daba4d94f4d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a19ca7-4fe2-4b45-943f-54ed73e0249f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990473f9-962a-4735-b789-305ea13ba329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1549a015-119e-4022-8513-747fd640f8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7928b27c-a7a1-421b-81f0-abc2f5b8f663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0f14d7-b05a-42c4-a848-e272b6808067",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cebc95-6113-4a0e-855c-263956559605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46078f3-7b5e-412b-9b69-ae06a3548661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34696a15-d2ea-490f-955b-c7ff3f14ab5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aecaac-97d8-409e-a647-276a52d11f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1c2e8d-c91c-40f0-ba90-ebe3f3e9e187",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045ceacf-793d-4f33-af4a-60fbc1d0824e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63b7b23-8c2c-413e-826f-5179c6bf583c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810ebec4-1ba0-4300-8a5a-591dcb4aadd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8934336c-8675-45d9-b8f8-e96a678c8c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f3b990-3838-460f-b970-1ec958a0008e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e52e279-b0b2-4a77-8d4f-d9388a653892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61652fa6-46e3-4f6d-b069-a31f4a68ba09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff0c33a-8629-446a-a3ff-25cf3356e7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abffde33-8e6c-4da8-bf8d-570b4cb5451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d0df4-3cc6-4667-9547-04294d320f6b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afa820e-f112-4589-af9e-95c4bf9df4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac5d90e-f234-4d6d-95ea-239582313b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cbd0db-5940-49fa-80e5-3b2df8c352ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a9b295-8fef-43e4-9f84-a8910e7a5bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327271d1-bdf8-4116-8903-b0cbab468179",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0324671b-0975-4200-bef2-6464c56da38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6d763f-56dd-49fc-818a-c397e5492b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df4efe8-7f31-4ce4-a7dd-9f7e9ba15a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094b51ed-baed-4434-9f9d-f79feb17c3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31247728-877f-4304-8abe-bac90920fb05",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956585df-2d5a-4645-acef-ae5315728eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9334b4cc-1f1c-4084-962b-4b0412d7285c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c774e49-2ca7-424e-a749-dd3ad2bad5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe010e2-1710-4d46-826a-91e2b4e734c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541af8f3-03e9-494d-b26c-a3b8ed5e903e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e97ae-c121-4927-b9a5-69b61e3ca348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee65dad-ea2f-4742-acb9-28b773724804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3484ce49-5cc0-4f7b-83fe-d1552e2f0992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616fe5d0-1e24-40be-95fe-7b6b243d6e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94d9438-db00-49a3-be52-4111daafdef8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b69f28-70ac-4eb5-8698-06e642642c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158f1d18-0ae7-4833-b5b2-750f9de24d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409cda24-257d-42d1-b84b-5bf852bdd389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17e24e8-ae58-443b-bd73-675748e68acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983c1c1-d8c2-4a6b-bc10-f251dd99a22e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6379b6-aaaa-469c-9cb2-66af4770df51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0232e2-0b8b-4212-ab0a-95502d2fd4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891f1452-1983-43c9-bfe8-b2af3189ea18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42732957-ae31-4fa9-bec8-6511c7d98d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bf0c8f-c4dd-46f9-a14b-a019f08b9d90",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15400e58-dc8a-4b99-92ee-a07b6f189000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613f753c-ebb2-4722-9c6b-3fb18564b2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5f438a-f594-47a6-920d-8123f7b6b63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7948c1-96c2-410f-9865-40a23d4e5408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e9cc93-542c-44f8-8c2a-d565fda3655b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6a4f94-84fb-4ee1-882a-55403c6bb57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9d60f6-66f6-4c31-8aa6-786918746c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b44e8e-8225-4f51-b84a-08c09d52585a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513fbbfd-3ff5-48b1-9c03-a4b2823ad723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfc5953-c66f-489e-9017-007412ece54c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ebe22d-7c5d-4c67-9094-cac43d75457d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985a0f51-3a88-4313-b8da-b8ec0a84335f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b505d8-3b21-45dc-9247-0dfbf9eee0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf84655f-61e0-4cc8-a6c4-14f1fdb854ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8e6c11-1ed0-479c-844e-3441423a0225",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efdddff-630d-41a4-8e56-f3911a592b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a52ffc-d91b-425a-8e9b-62da9628dab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3577bb5-a496-44b9-afae-30293eaf3c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf414f8-2bd1-4218-995d-3e2bb742cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1f843d-1940-44dc-89c6-940d18087d3e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b7bade-bdc8-480a-8ded-beaa2f7e52cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb3805f-4217-45ff-99e4-b6b0a9d6aa0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe26f50-a4ac-4095-9c9e-d2e1204c8456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42120f9-eafe-43ca-a291-00dc92effc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349cf2e1-7cfd-4311-91f7-fed871e16ea3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae964d7-3b11-417f-952c-58c9c1d7da62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ed6c37-1857-46ec-b9d2-263fe6637862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9545dc60-2b89-40d8-a030-c94bb03b0146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5728980-ec13-4ae3-9290-dd227d02c61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89174be2-67f4-40c0-b9f5-d811ffedba77",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25a6531-2f70-4d8f-9202-d9f10dc2ab47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a6ed7b8-938b-44e4-8d69-180877102681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b387c1-6141-4b3a-b240-f6419917c703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8b80b5-4a76-47e2-a41c-04ad050bcab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1091f9-5dfd-4d2b-b3f8-25015d351b91",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942355a5-784c-45bb-b4ce-8899173f20cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e70664e-1a59-44ec-94cb-2a739cbc210c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011aa22f-1f0e-43b2-92b5-652fed5e878f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f51712-5452-4204-b26d-51e612f3bbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f3a90e-b14f-42c6-896f-6713fa91d5a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb804f6-dc16-403a-888f-5c996feabab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46ea9c2-a7de-4d59-8a9f-bde263a7d369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdcd9a7-9f13-48ea-a26c-3042bb7eafe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842fa52a-e773-4f8e-b5cb-10d294007f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a41a2f-2a5f-4464-b403-e653ad6beb7b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a425bd-6ab2-482f-92ec-87c279d51a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe7f0a8-a383-40fe-9c78-a3effceef892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6476d4a6-2f1f-4821-bab4-72e07375ddd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2b9b45-93b6-4c4c-bf60-766ed03eab42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317d037-72fa-42a2-8e7b-0600d69c6c6f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f54fc91-1902-462a-8a76-85dc4a63e4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40232b62-4109-41b4-b869-fed842e2a626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fef71c-8e2e-4a57-b157-e8c26ac81f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c100186a-bff9-4778-b555-196eee9cc0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e65f2b-646d-4ace-adea-b675943f7704",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83936b02-dc88-4ca5-9c5b-4724e57f3566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d7f72c-53f2-4b96-b9d2-7b21d3e7bce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b6dda1-eddd-4d3a-b1c7-9815f6a70f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0f554a-4ecb-4f33-b1f6-8c421f698ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3846889f-7df1-4271-b98d-ad1cedc6c472",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de563c1-8832-4b94-a991-a2092d187a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8c96f0-a8ad-4e0f-a60e-60188cc3a33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bf8b1e-81d7-497a-a1e4-47ae08ae82ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62645f18-2533-4d52-89bd-0deb9f848be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb82c42a-d652-49f0-8685-827262c0ef2f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0bdd2f-6266-495e-aa38-adbb53001a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bdc7462-9830-43d1-9794-19818a5e2cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc69828a-5c40-4be8-8f8c-e3064cdde0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98fd586-76e5-40be-9c8c-0c28ac266d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b1ebf2-fbc3-4ec8-851d-fcffaa0e71c0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734d4636-37b0-4ae2-9cdd-f7e15b61e3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b594ee1-04b6-4e03-8140-2697556ffc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7d852f-a456-428f-b8fd-2cf7abc8a021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734edc22-6866-4a99-a322-a697b284e487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ef7df2-dbf2-4e25-989c-3ed631e0b07b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58161ee7-de05-42de-9ff6-874b2cd6c657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace33125-4471-4f29-8715-446f649f0c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2553005-322d-467f-89f0-682a5f4811c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca55eb7b-21fe-433c-a88e-9e105f7b78d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75062a08-98bf-4962-a71e-3c6c362c6ac9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb1a18d-4104-45be-921d-f2b9eaecfc1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d38f2d6-fd64-4ed9-a63d-d1591dd9106d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39f9da-1011-4820-9d1a-939e68d543f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed2738f-6537-4ddf-b777-42c644a7a085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf547fee-1868-4b3b-8a19-667ce3cf5faf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a8f32f-a339-4d97-bfc3-86062ca8137e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa57d60-ad0c-433a-9557-fdfd72df56c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d51de6-ca68-41d5-a8ad-f4af1cb8368d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173979df-ea95-43d5-bb42-e918a2bed791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d02d7c-17db-4a25-988a-438f4b1643bc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c3cdff-cd33-4991-b7cd-ead77ee7bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b1c47e-b579-42ea-93cd-1ec1491ffe4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7123d5-33c9-4e8b-96dd-0a9efb975b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b69b17-279a-49a4-9b51-1e251dfdc7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3c00d1-64b8-432f-8457-d5ebda9694eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01c9508-acb4-4d44-832a-0d4d7d241d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbc4f51-87b1-42ea-9490-4d2d02f3a728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67819c71-7740-4e2a-a4c7-52cb9511e71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fda3b0-8925-4c47-9ef7-2ca882cf93d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9c9d2e-60d2-4e15-8b2a-fbe65aec8936",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8be13a-389b-4020-9ff4-ebcc2dd4ba53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6484797b-2dea-4475-90b3-69e30166ab24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c54b18d-5c6b-4637-b6ca-0a7482f50d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60325a94-2f50-424d-8977-fa6a18a7f517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7176fd8d-d1e3-4d1f-9068-171028770670",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d79e3c-f4fd-4d83-8ea7-49dd48d45f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e649da-dbce-4a98-bb25-a0e51c54c67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0205428c-67b0-47ad-8511-fe03feab3c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8706a4d3-9499-4148-8cb6-50c769548b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca60892b-45f6-4d37-914d-e483ccfc2dd5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672f19a7-d331-464f-a74e-9ea785e2198c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97283a6-a4b4-4ef7-a81f-fe3e0277ba37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065e9bc6-af58-46e4-9569-1982952f0842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38627340-2950-4709-b7e3-8deda42a93dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e86eb23-b67f-4bc3-b515-c263d0f1582d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4875e8d5-7a61-4180-be7d-ca8848626bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5c4496-a3ad-4df5-bd8a-5dc305092696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b2d3df-0f8e-4d46-9201-9ef472b4031d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b64458f-f5fe-4da9-b8dd-50b440f33148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7fa4a6-0314-4aaf-8f78-87d8ab780be2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ebd61f-7953-41e4-a77e-1dde19f4749c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb2a5e5-d434-47df-a635-6025a249f54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284cb2b1-0e4b-4117-b96f-04a59aa596d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8d2bfe-69cf-4bfa-b1f9-f27716ba7e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f815ead-57bb-4b3c-b4ee-fa5dff6a4928",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3cde1e-fa8f-4b41-a9c6-2d6a3d0bb23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0cf798-7070-4ff9-8cfb-d3be241cc9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe8ce29-b019-44bf-a799-2957695a40e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed3ea06-2168-4db1-a90e-a7ab4ee2ac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121d66bf-2b55-4221-b198-af730f4dbf3c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82684e45-5185-479c-a0da-45512f0697d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d757184e-72f4-4134-95aa-e890d2c49568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0793eec-ad69-49e0-9208-911b11af1611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaf5436-f3e0-406d-b2d5-e40a2f4c5203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a521778-be2e-4afa-9819-27653f609310",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aad53b-8451-458e-ac4e-a917879f65b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525a1032-6733-45f7-9951-0e6e53a3414e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c574e1b-36ff-431e-9b68-2f322793b32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3da0cd-e1f9-4232-ac78-c4d93c4605fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c34752-89c3-436a-861b-f23abc878634",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c442d-b8fb-43e9-be34-895500884e21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc3bb04-2aa6-4bbb-8115-99a1c36c0521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58ccbe9-baff-4588-946d-b8d8271ae904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701e8dce-1cad-4999-b3f5-7ff2d10764a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115dd1c8-de5f-425e-87f7-facc9fc2d543",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0753eba-2fbb-46ce-8da5-0aa03131057b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab90c104-7740-4eff-b5d9-c764b9dd4082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8e80aa-db94-41b5-84ea-7940e499115d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac206582-06c4-4036-a809-654c9e3afb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6892f601-ead4-49cd-9f83-661a09379811",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b7dd67-7ca0-4e42-9f4c-7e5f4ba81787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a52b2c6-4440-4b37-87cb-77f9945cbc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2df6522-5d22-459c-9cc4-6efc942eca6a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7099f95-a509-49da-856e-5f2e8d490a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a192053c-be39-4832-955d-2aaa53ea8bc7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6d5eab-86b2-49d2-8c22-932b700967ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19840a12-1e12-4b87-87da-68b78bebdccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd41256f-eac6-428a-9019-1260a5ec2004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514be6e9-709d-4479-9f09-c253c60c6b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259373f1-621e-4aae-b87e-2a489aa442c8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50588b11-2f0e-4489-8d20-67000b980b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ceb4dd-2574-417f-b03e-221dafa60020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825fa996-5d6e-435c-9541-14dcc47a2cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a91164-eca1-4a3c-a060-248667bd6c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08397e9-3370-432a-8b96-8465ce30044f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a833e344-c434-4a54-85ec-ac0a7e56d935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5981ef4e-964c-4b71-9bb6-cab1426418ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2423481-717c-4ee1-a43e-22484b120808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536eb3c3-b053-4323-a0dd-ad51e05c59e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2562ea8b-7bcf-4416-becf-1df262757370",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c0543a-e5c5-4588-ba87-d7ccd535fe2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9cc5ae-846d-4085-a536-09556bc043b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3682e1f5-9077-4c66-9a90-76f25897bef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f91f31-f62e-4082-858d-e1a82bba6fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a3ced2-f20c-4540-8954-970eb5be1fed",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4453a827-987b-41b2-bb5a-dc1adf3b607d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0998fd03-0b9c-4288-94fc-a3c210e56f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495df2b1-1a7e-426d-b77e-91c742e763cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db117fb7-751c-46fc-8311-f70be402f025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5d9500-d25d-4e7f-a47e-2298a42cd620",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b2679f-a5e6-4017-afdf-6f636a80e9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37639ee5-892f-49a2-bfb9-4a2f228ee9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c46cb5a-470c-4561-99be-ec34fe2c623e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fe6058-c94d-4726-8ccf-8d1774c2ed41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3d2873-2c30-4031-8bed-7253833005ac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bb5569-517a-4676-b5e4-6cad28136e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5930b6d1-6e61-47ec-ba72-09c109360868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd3d889-eaf5-480f-bdd4-61ed0ef0dd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a35c35-5a0b-4ee6-aa42-55ea75f6a688"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02c30930-0a7a-4a33-ae2b-7a1f927d1518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "306799a8-8963-439c-a0b3-836b8f6aa93c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63fc53dd-5680-4a3d-a29b-b8a9d1599a13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bcfe27e-b45e-429a-b26a-0ffe25c56517"
                    }
                  }
                ]
              },
              {
                "id": "6368d30c-061d-4db9-963b-5da14cd67177",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94440e33-7d29-42be-84e1-c7c11b5d220c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405670aa-94fa-4e6f-9f64-5ea0fb569c5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "49461e37-9c71-4cdd-8e79-9f37206363d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56313446-5453-420d-a734-b51fdf0fd0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d7d0430-e1cb-48a3-8281-0335b424ab9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bb5a136-6508-49ee-a17b-867a3da3a5ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e29be70b-b341-4cd6-8b10-7d85da3c872e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ec2513-61c0-4388-bc3b-d56caa7325b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6005012-51a9-4211-84b9-dd15ac7d752b"
                    }
                  }
                ]
              },
              {
                "id": "b6dac248-8980-49a5-b721-c765d9c386ff",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "77ee0bc6-88d2-4e53-b79b-d01b19c4529d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e48727-d962-430a-a9e2-471b38d25684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5a08fcc5-6afb-48c8-9cf4-d30b02002268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3139492-3e65-4aa5-897f-1b1c0c8eb871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230f84c3-872f-49cb-829d-0bdb3573cb9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e22aad72-4c5e-4b42-ac62-c61199663189",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1c6d1c8-b491-4a97-bc82-839dab60821c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eec9a72-0e05-4633-8775-9b7a1b95196a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c8002117-9f62-4bd1-ae7c-48babc78c0d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa37e526-a7bd-42a9-929d-b069be11f58c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2be97317-44dd-43ee-88af-ae2f663ef066"
                    }
                  }
                ]
              },
              {
                "id": "6f2e2fde-a0a0-4837-a49e-46384441fc7e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "930bd3ee-932b-448d-acd9-5e0c1112a1bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8785e5ac-6706-451d-8a1f-a1a7c849ece1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb1f6f7e-0412-4a10-b39b-c96aae16b112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e523e725-35f5-4088-ae7d-393954eacb24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c239b630-6514-43f1-8192-f76bf73d4da5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4e0436ea-8bfa-4c9c-bc85-d78692bcbd63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2249775a-e722-4f75-a18e-a1584db31ade",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd3794be-84a8-452d-a36d-f812b672dbaf"
            }
          }
        ]
      },
      {
        "id": "0cc339dd-ce8c-47ef-828f-75c959c07985",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2bc39bc9-e9dc-4391-99ce-14423c616152",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4ffffc8-4f85-414e-bb08-91bb05826ea8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4425888d-5790-4666-8ad1-d157857360e4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d2c1aa-da7d-423b-88f4-8220eb255abf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0406aeff-2cbc-4a25-b8f1-d26185b9859e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9e7c5f-0656-4439-b81a-1744bb238c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc4b2057-9c07-4c82-a341-c39a3382c64d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33018c5b-485f-4af0-802d-64c0ef671bd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4182487-b318-4b7b-8533-8daf1f603bd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fda8b430-7fba-4eef-9e75-880775c09430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2c32400-bfe1-4332-a351-ada53e032cac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dceb3399-0cb7-4b4d-b220-29e0a1542bc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9ae21bb-6682-486a-80bd-149ac88f5e42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "056e9467-903a-463e-88bc-82d631f32202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e13b01dd-7ca5-45d8-8629-d18f90613fa0"
            }
          }
        ]
      },
      {
        "id": "2ad7f9d2-1e81-4f3a-bdb0-3e52b33dc9f9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2bb0946f-d636-42eb-8233-b82fd81df88f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6688dba-3f7d-42df-b09b-9bc0a774f1ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0776efbc-2c77-4e7f-920b-d68433394a0e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e0899a-9256-4fae-917d-9dd6b1a8d395",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad379aec-8cb3-422e-a424-b680f81f5645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6524c813-d5d8-4a63-a1ac-f9d172de15b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87fb4d3c-73e3-4adc-b5f5-2861af87d4d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9025fe-f68e-40f8-b868-aa330e0a1093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04388509-1f7a-4b90-a256-0deca655640f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0646dfed-ecfe-44e9-a630-eeacf8a81202",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31781cec-5cf8-4b9f-8e15-062c82771b70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a685055-cd98-4055-b10d-ff4a410196f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60be6067-ff06-4d2c-b7a0-645cb8716c1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a6a194e-46de-4118-8174-cf951cd9c11e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "381dff97-1cc1-4513-98c9-60d397ac6541"
            }
          }
        ]
      },
      {
        "id": "0876a0dc-4d71-43d3-8131-9f7a7cdc2e5b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "979def7b-4171-44d6-b3df-60023cfc7f8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc084e36-8de7-4050-9bf7-5c0d0d129e87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be1179d5-d6ee-4db4-8ae0-305a1a2ddeaa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8886edc-ca77-464e-b75c-4519da63974d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7465781-7cfa-4824-84e9-d184edca6532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082d710b-668c-45e0-bed6-ce66f9939d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cac41ad9-264f-4692-8e0a-0bbc9d7a8766"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a6be1ab-54fe-4926-ab8b-4833057dcfa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46cdf4f8-0326-4faf-8629-bd1439ac1c37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac687273-50ce-48ee-918d-45cade0b81eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e731bdd1-2e1e-4e54-9474-ea1cf36194b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d61d4b0b-40c9-4e82-b822-2e1880619c0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81a61895-e275-4b7e-bb51-a1e9fbca3724"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e522087-661c-4c0c-bf67-52e9c94a61ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "279e34cb-3670-4367-a495-8068f737369e"
            }
          }
        ]
      },
      {
        "id": "3276979e-a7d9-483c-ace2-2ae41cd4e10e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86ce94b3-47c7-4b3f-a793-93967f6452b6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02f95411-157a-4034-861a-36d9a8881655",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4a2a7f96-6a05-4544-8682-560c2f36177c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff5fbf1a-770b-4a7f-9779-fe30e0f88c91",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e2409d9-58df-4d5c-83f8-e3c5d9d208cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 466.05952380952385,
      "responseMin": 11,
      "responseMax": 13805,
      "responseSd": 2023.4541229607246,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725324122062,
      "completed": 1725324248218
    },
    "executions": [
      {
        "id": "7d02f2d6-daf1-4e3f-81b4-714e2dde6c9c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86701218-3897-42e1-b617-bdea39b8f827",
          "httpRequestId": "e372af0a-2942-4da7-adec-0ede9bf93bb7"
        },
        "item": {
          "id": "7d02f2d6-daf1-4e3f-81b4-714e2dde6c9c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4c53d40a-48cf-496a-9264-215f77fe1a70",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "10ea33c7-2743-470a-9b4e-002d77a52f7e",
        "cursor": {
          "ref": "3bdb7902-ebf5-4176-ae8e-f07f98ec85c3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f36c4fe4-a762-438a-b4cd-24b95e7ead4e"
        },
        "item": {
          "id": "10ea33c7-2743-470a-9b4e-002d77a52f7e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45f97664-e3d4-469c-8175-e83c7b56322c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "b49b5d87-d9e1-4727-8c9c-e6856013710c",
        "cursor": {
          "ref": "2086c01a-1041-4c83-b3af-eacd087bb8d2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5631a1b8-0ed8-4e29-ad93-40797a8e93c6"
        },
        "item": {
          "id": "b49b5d87-d9e1-4727-8c9c-e6856013710c",
          "name": "did_json"
        },
        "response": {
          "id": "31be1694-563f-4e6d-8844-8e67b390cb11",
          "status": "OK",
          "code": 200,
          "responseTime": 472,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364a32e0-d9a5-491f-9df4-20e43504e978",
        "cursor": {
          "ref": "35ab3923-3eb3-4f7a-ba55-ac1f0ad9ca03",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56e0aad0-c2e1-4a10-b4b0-1521bbb16a30"
        },
        "item": {
          "id": "364a32e0-d9a5-491f-9df4-20e43504e978",
          "name": "did:invalid"
        },
        "response": {
          "id": "472fb319-3586-4c81-b61a-9d2cf35b8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2330,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364a32e0-d9a5-491f-9df4-20e43504e978",
        "cursor": {
          "ref": "35ab3923-3eb3-4f7a-ba55-ac1f0ad9ca03",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56e0aad0-c2e1-4a10-b4b0-1521bbb16a30"
        },
        "item": {
          "id": "364a32e0-d9a5-491f-9df4-20e43504e978",
          "name": "did:invalid"
        },
        "response": {
          "id": "472fb319-3586-4c81-b61a-9d2cf35b8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2330,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b52616c-5753-49f7-bc47-3cf72d8bf3c2",
        "cursor": {
          "ref": "b7f48d15-abae-4cd2-abd3-40562460f8cf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6535b591-a203-4ae6-8e67-47b2db355f9d"
        },
        "item": {
          "id": "8b52616c-5753-49f7-bc47-3cf72d8bf3c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb001e71-89f8-480f-86a6-b4f6f11b177b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2331,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8a48c5-d8a4-4908-8adc-9940724a7c4a",
        "cursor": {
          "ref": "5fa56783-0afe-4a25-986a-48f947db8728",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8e656b3-4dce-4dc2-97ad-42d7a35308c2"
        },
        "item": {
          "id": "ab8a48c5-d8a4-4908-8adc-9940724a7c4a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1f73775-9c54-4841-9be8-fe9f0160c3d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2366,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c0a55d-4450-437c-bf6d-4fb4584b1972",
        "cursor": {
          "ref": "24213912-b18e-4bda-8f88-8f998dfe202d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "46c19e30-9f7f-4c73-b310-34905083654e"
        },
        "item": {
          "id": "a5c0a55d-4450-437c-bf6d-4fb4584b1972",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "53061b81-f785-475b-a939-50688c251efb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f96aa-3fb2-4688-9c93-999aff53a4fa",
        "cursor": {
          "ref": "2b02b829-2300-4d46-a48f-72a7342d2a4f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fc901474-76c4-43b7-aa9d-0506be3ca006"
        },
        "item": {
          "id": "981f96aa-3fb2-4688-9c93-999aff53a4fa",
          "name": "identifiers"
        },
        "response": {
          "id": "378a7506-c79b-4e1b-b129-03ac8f8df42d",
          "status": "OK",
          "code": 200,
          "responseTime": 2455,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3945ddc0-b41e-4f84-ab36-8d6ecdb6e489",
        "cursor": {
          "ref": "0759f074-4452-4df9-b03b-42f00f9cc198",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "92e38bc1-d90d-4fe6-9d19-c1604f0921e4"
        },
        "item": {
          "id": "3945ddc0-b41e-4f84-ab36-8d6ecdb6e489",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "43cbee5d-6d4c-44de-a49c-ae2add36ed0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a9494a-063e-4c55-aec6-e7c64babb4f8",
        "cursor": {
          "ref": "94f57830-709e-4f8d-ba62-614a8410870e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c1fbb67c-bbab-4c81-8e3e-bc8cca5c5580"
        },
        "item": {
          "id": "18a9494a-063e-4c55-aec6-e7c64babb4f8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a9bbb204-9b86-42ba-871d-fe2defe23ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f5f441-1dbf-48bd-8de8-d7dc49a3a1a4",
        "cursor": {
          "ref": "5c724a17-1f60-4581-a87f-d7fad42aa963",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a110a62-d83e-43cb-9ace-ed7b62e33056"
        },
        "item": {
          "id": "c5f5f441-1dbf-48bd-8de8-d7dc49a3a1a4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "845c0b2a-b506-45eb-9ebe-2e3644951db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af709f1-6ca5-42d1-8ad5-fcd8bc5c0f41",
        "cursor": {
          "ref": "032075d7-f175-43a2-8fea-56d2de463c7d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "36e80cf7-9061-4b2c-8bf1-63199d25664b"
        },
        "item": {
          "id": "0af709f1-6ca5-42d1-8ad5-fcd8bc5c0f41",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dc0f6099-2579-4479-a5c8-e6fb3c1ee412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da616a6-17b6-4bf1-90b9-1531a502cfee",
        "cursor": {
          "ref": "09894793-0077-4989-b0fb-83baca3b2459",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3b92461-3578-467a-8a5f-244557d3a679"
        },
        "item": {
          "id": "9da616a6-17b6-4bf1-90b9-1531a502cfee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f99305e-8c99-4201-87d1-e17283bec239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a350488d-96e8-4ed7-8872-ff231d34d12f",
        "cursor": {
          "ref": "06a9f4ed-09bc-4088-b49f-4b1fe99d027d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "61bf1ffe-b3fb-4a66-814a-21112ade5138"
        },
        "item": {
          "id": "a350488d-96e8-4ed7-8872-ff231d34d12f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a708f970-c10c-484b-a74f-c1cdc29fb80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d765314-b4f0-41ac-ad28-036e17843557",
        "cursor": {
          "ref": "e117483d-c8ab-4a5a-a150-9d7a5e51f90a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ab28e806-1217-4523-ad00-d585b940b6d7"
        },
        "item": {
          "id": "5d765314-b4f0-41ac-ad28-036e17843557",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bc5c1468-b103-4a52-9907-7c88064f0c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f77159-0e1f-47d7-942a-612dd26f48ac",
        "cursor": {
          "ref": "f1b44567-2962-47b4-a320-43e1743a4173",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7a1dfb50-4600-44a6-b10d-c04b4d768b8e"
        },
        "item": {
          "id": "c9f77159-0e1f-47d7-942a-612dd26f48ac",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "16f91f00-6530-47d7-9dba-cc6cb3f120b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa76f3-612e-481a-aeed-e5315291df2f",
        "cursor": {
          "ref": "51841d55-587f-44cf-b58a-a72e16501f71",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b9d40ada-4b9f-4baf-9e71-52ee12c8dfc8"
        },
        "item": {
          "id": "39aa76f3-612e-481a-aeed-e5315291df2f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7cc5e0a5-3cab-4fa9-beed-8563ecdd4f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5291b9b-189b-46e6-bf25-0b9993b4faef",
        "cursor": {
          "ref": "d14cab39-d03e-4f6c-a669-123703f37d37",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c24dec14-b60a-4332-945c-723c26db2c6f"
        },
        "item": {
          "id": "b5291b9b-189b-46e6-bf25-0b9993b4faef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fd5e028c-215b-43c4-ae5c-6d6b1a26a082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b3ffa4-7c3b-4ffc-9d04-11f8a691004a",
        "cursor": {
          "ref": "8f8d675c-733b-48d3-ad58-097e12420be2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b44bb83b-a948-422d-b21b-9404a6fff214"
        },
        "item": {
          "id": "a0b3ffa4-7c3b-4ffc-9d04-11f8a691004a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5a0bfc19-b280-4ca6-8d94-cd8c2f361492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a29094-734d-4a5d-9523-20bbf0ede5f6",
        "cursor": {
          "ref": "1ac8829b-e18d-4b9e-ab64-d3f82bf0ef2d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f8b0ade6-e62c-4a50-8dbf-baf92cf0e487"
        },
        "item": {
          "id": "95a29094-734d-4a5d-9523-20bbf0ede5f6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08f19d8c-0c11-4247-bf0d-5f9f6047830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffe2591-8fc9-4bf6-8dc0-eafd02cc079b",
        "cursor": {
          "ref": "5261026e-6b04-4605-b9af-b169b00622c9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a83fc02a-8898-4411-afb9-69ab74b9d747"
        },
        "item": {
          "id": "fffe2591-8fc9-4bf6-8dc0-eafd02cc079b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ddd3fe75-ef29-466e-9746-94bfd9e5a274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1131040-03f1-4328-a801-b9656fcbe974",
        "cursor": {
          "ref": "e2092163-a7f6-4e77-a0c9-ddbc3094045c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "784294c1-2ac3-420b-bfc2-f047716a8a7f"
        },
        "item": {
          "id": "e1131040-03f1-4328-a801-b9656fcbe974",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a555a567-c38c-4fc8-8fae-b14e0db38ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddba7be-5bc6-43a4-8cef-bd1042c89476",
        "cursor": {
          "ref": "54a9dcb7-f334-48f8-b384-e765ecd7d2be",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7ab1f0b0-f5e3-45ab-ab75-f82e7b3cb724"
        },
        "item": {
          "id": "2ddba7be-5bc6-43a4-8cef-bd1042c89476",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f1b37b37-3430-4f35-b8ec-5d65a2b742f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a737e8-c108-4489-9e71-1e7756dcbebf",
        "cursor": {
          "ref": "a5c5ab7c-d801-406a-8716-2c014a8df5d7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "257b1dc2-ad65-417f-8533-ad10ae71e653"
        },
        "item": {
          "id": "43a737e8-c108-4489-9e71-1e7756dcbebf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6094182c-3a65-4248-b581-9633f865ad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545f7627-4173-411b-a643-96b7e905c0c4",
        "cursor": {
          "ref": "976b3cd4-f630-4812-b0bf-ac6617ac1ef5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "80b64b9f-7fd4-4454-8f9c-435445a573d8"
        },
        "item": {
          "id": "545f7627-4173-411b-a643-96b7e905c0c4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "86cef357-b894-4646-a7d0-d4481b5363de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d310f05-c3cd-4083-bca5-62bb93f3f278",
        "cursor": {
          "ref": "98444578-acd7-4edd-a6bb-a505317143c0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0171e495-646d-454c-b370-bcb84c905b0c"
        },
        "item": {
          "id": "1d310f05-c3cd-4083-bca5-62bb93f3f278",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3255229b-043c-421c-934b-0650c7eef324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83794b7e-65b4-4abf-9918-bed5345160b6",
        "cursor": {
          "ref": "6b8a429f-a565-457e-ba57-b5c250a40ad3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "98a19a69-bc9e-4c7b-b3b3-c9f85e20a088"
        },
        "item": {
          "id": "83794b7e-65b4-4abf-9918-bed5345160b6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "57732b74-3a8e-431e-b3a5-d6ce43a7f27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf2962b-64a6-488e-b1f2-a44ada95ce2b",
        "cursor": {
          "ref": "a7df0c7b-cb56-4678-b721-291e7c304401",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "205ed293-b738-4782-92d0-9a559e13e732"
        },
        "item": {
          "id": "aaf2962b-64a6-488e-b1f2-a44ada95ce2b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d93ace66-424c-4214-b7ca-6159425aee71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09426de-e315-4f51-9012-27fbd912cbf5",
        "cursor": {
          "ref": "ba0f9cb2-ad0e-4cbe-adec-05e23c3424cd",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f9413236-e41c-4a48-9ea9-594ca0e9e260"
        },
        "item": {
          "id": "d09426de-e315-4f51-9012-27fbd912cbf5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "896e526c-7f8a-4ea8-a861-786c1dee1b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ab40bc-3eb9-455b-b900-e28706652663",
        "cursor": {
          "ref": "b0928bea-677c-4518-945e-b1035d33cfa3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "82316cff-143e-4470-baeb-a3b7a11a1868"
        },
        "item": {
          "id": "73ab40bc-3eb9-455b-b900-e28706652663",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b84e026d-2ad5-40a9-8e28-b2a1327abef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb9335-9d2f-47bc-b8c2-cc93a3d32364",
        "cursor": {
          "ref": "23ae97d0-4d81-4ace-8b1f-eec5432257cc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7a5baa7-790e-404f-9bea-c28028fa2c3d"
        },
        "item": {
          "id": "dfeb9335-9d2f-47bc-b8c2-cc93a3d32364",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8e012984-e7b3-442c-b789-aca5cdf887c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87076b55-2b4d-463f-8d36-3a35527fbb6e",
        "cursor": {
          "ref": "61caf9bc-50a0-4be4-bdfc-b7954587693d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2c88b499-6fb2-4b0e-8c1c-036fb214ae6e"
        },
        "item": {
          "id": "87076b55-2b4d-463f-8d36-3a35527fbb6e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "73c32247-786e-4a2e-bf05-677f0bc1c29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fe4bc0-e01b-4bf3-9e2a-2766583c43a7",
        "cursor": {
          "ref": "bb8567a8-0267-4ac6-b06b-d0261dc7134c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0c61d317-7d4e-44be-9919-ff02d939944b"
        },
        "item": {
          "id": "29fe4bc0-e01b-4bf3-9e2a-2766583c43a7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e7fc7a09-48fc-40df-a268-9c9f8c1aca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e318974c-05ef-40e4-a766-595306ab85cb",
        "cursor": {
          "ref": "b7977f17-8307-48af-9dce-993f9e734459",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a9c033b4-9532-42f7-9cd4-1343faee5802"
        },
        "item": {
          "id": "e318974c-05ef-40e4-a766-595306ab85cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f5ef6de3-22b6-44ab-ad65-3a80531a8202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a7b23-0ccf-4046-91bd-448e1003fa23",
        "cursor": {
          "ref": "1b8e758d-844d-4ce5-af03-ec3a2a289551",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23957e7e-7a5d-4525-8757-a01e993e82dc"
        },
        "item": {
          "id": "0f0a7b23-0ccf-4046-91bd-448e1003fa23",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ee016960-907d-4a55-802d-4dc08beb7494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2ac350-e7b8-4b32-b23d-b9d6d0a43ec3",
        "cursor": {
          "ref": "aeedeacb-188d-4257-bccc-42695168d93c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f56a7deb-e922-494d-9c1f-b9df205a1857"
        },
        "item": {
          "id": "3a2ac350-e7b8-4b32-b23d-b9d6d0a43ec3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "780fed05-ee74-4fbb-9117-ed7bb277440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c0d59a-c909-44bb-8754-36f11c6f3cd3",
        "cursor": {
          "ref": "ac9a3515-a837-426b-a90c-aec1ff7e2a01",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "079914d6-a51e-4a8c-aae5-353e2db4ecb7"
        },
        "item": {
          "id": "b5c0d59a-c909-44bb-8754-36f11c6f3cd3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "33a89c73-b0c8-44a2-bfd4-676f8c1ca369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848eec5d-2280-411b-b2bf-d5b8f598c9ed",
        "cursor": {
          "ref": "44c53bab-26b3-40ab-8a10-50a85f3dfdaf",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c4cb8143-c098-4afa-91c8-8f03f37e4ff8"
        },
        "item": {
          "id": "848eec5d-2280-411b-b2bf-d5b8f598c9ed",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0e1677cd-cd73-459b-abd1-3892e36cf46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f932b325-ad01-4741-9622-b92bcfeac77e",
        "cursor": {
          "ref": "488d25af-e9f7-43e1-8534-cd720293fc58",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b9eb2762-4cbe-4c89-a7e6-044774dae362"
        },
        "item": {
          "id": "f932b325-ad01-4741-9622-b92bcfeac77e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fab3ae54-fc2e-4101-8bdf-283aea3d2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ea1015-4476-4111-8024-98a6849b3f16",
        "cursor": {
          "ref": "1419a3de-bd41-4261-a879-829f607dce53",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "359c4c12-093a-4ade-bc20-e2aca78d4e07"
        },
        "item": {
          "id": "b7ea1015-4476-4111-8024-98a6849b3f16",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2cbf8efd-cfc0-4e09-a505-b4ad27f958a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba961352-a0d8-4d83-b2c2-c9f9df31ee77",
        "cursor": {
          "ref": "53547df6-9088-4007-b243-702f860c2a50",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "77ae6c58-414f-41dc-8daf-f3e6862d6873"
        },
        "item": {
          "id": "ba961352-a0d8-4d83-b2c2-c9f9df31ee77",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3ce8cf5f-3286-4408-af4e-c4764a1f4ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eece825-7457-431f-a509-1b3b147b7e4e",
        "cursor": {
          "ref": "f20cf123-cce3-46b7-96a4-584e3625f0f3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "73d50d01-4485-4cf7-a569-9124f4733890"
        },
        "item": {
          "id": "0eece825-7457-431f-a509-1b3b147b7e4e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ae10d772-3cf5-4dca-a34a-6e9601221efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcd1c9d-fd74-4e4c-ac00-558f699121dd",
        "cursor": {
          "ref": "ae3e7102-4512-4f98-8b06-ff5bbdfd0233",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c4ab26bc-7018-4ec8-b304-fa6ee2194851"
        },
        "item": {
          "id": "2bcd1c9d-fd74-4e4c-ac00-558f699121dd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c67fcdb-6f4c-41e7-8a7c-7be5d23ec483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8255a38-28a4-4fec-b920-450ae503c2ad",
        "cursor": {
          "ref": "d0130aa8-a439-4b4c-b713-f34fbbe76e49",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef4facde-d939-4be2-b319-902062e4a0a3"
        },
        "item": {
          "id": "f8255a38-28a4-4fec-b920-450ae503c2ad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a11eca7a-cfd7-4a30-a692-13778128b189",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653c396e-aaf2-4a8e-b05f-b3cf51304360",
        "cursor": {
          "ref": "3350fd85-f050-45f5-bcc3-100b699a4c5d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1a181166-d8e4-43c9-82ea-62a46320de73"
        },
        "item": {
          "id": "653c396e-aaf2-4a8e-b05f-b3cf51304360",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "080bb88d-90e2-416f-8b93-e2b249524271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb14a9ca-1655-4a3d-a004-d791019662c0",
        "cursor": {
          "ref": "28d113ff-dbee-497f-9e8c-8883aeff71fa",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6780de4d-da3b-4eed-849c-dc7d70893edf"
        },
        "item": {
          "id": "bb14a9ca-1655-4a3d-a004-d791019662c0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fadded77-6abc-47bb-889f-b2588f846425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0147b677-6152-497e-b896-e484cce1837e",
        "cursor": {
          "ref": "eb01f955-890c-48b2-a59b-a522a736dfd5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "89d41889-67f2-423e-874d-fb3549b61a89"
        },
        "item": {
          "id": "0147b677-6152-497e-b896-e484cce1837e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3f6dcc4d-878d-4fa7-9708-57618f4621e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0628bcf1-5c26-4b6b-b1a8-4dc3f089b917",
        "cursor": {
          "ref": "484f5048-b2c5-43c0-8fd2-41a475621f3f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cf82af4d-627e-4473-a14a-ba5a537b22e2"
        },
        "item": {
          "id": "0628bcf1-5c26-4b6b-b1a8-4dc3f089b917",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0b424002-4ebc-4e30-9303-6c8d624728b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432d901b-cdf4-44b5-86ad-56310ed1da4d",
        "cursor": {
          "ref": "bb4a090f-508a-4394-8d87-e1dfaa4736fe",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9c093593-4676-4dcf-a0b7-2aadf2eb73e5"
        },
        "item": {
          "id": "432d901b-cdf4-44b5-86ad-56310ed1da4d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "69f3c041-3704-4df8-90d7-4b8fedd2c007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbe710d-8867-4ef0-84b9-b6639b10fac8",
        "cursor": {
          "ref": "55f1db8a-5889-43fb-a9ab-ffaade13c9c9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b197ff4c-bb37-48db-b1a9-aa4777f13d24"
        },
        "item": {
          "id": "7dbe710d-8867-4ef0-84b9-b6639b10fac8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b2ca7dc6-1dff-405b-add3-b11677e63b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782d41d0-1169-4d66-b006-f9066fbe67ec",
        "cursor": {
          "ref": "8e2b4a12-6e75-4839-9876-b657bf474543",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1f0ae247-efb6-47f5-92d4-7563bf003184"
        },
        "item": {
          "id": "782d41d0-1169-4d66-b006-f9066fbe67ec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dfc65a09-b6db-43d1-9a87-63ae18e5ff86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9178dcaa-7fd8-4665-a68a-be6ed64e8ea3",
        "cursor": {
          "ref": "6f34800e-dc92-487d-b8ee-b10e5faad946",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5fbd7d50-a4e5-4a34-a595-24b66254720d"
        },
        "item": {
          "id": "9178dcaa-7fd8-4665-a68a-be6ed64e8ea3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c4acca7e-10f6-426a-9fa1-0f1a9f226c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588218d4-bd60-43d4-8742-eaf569dcefae",
        "cursor": {
          "ref": "ee904eac-a43e-4b46-8c5b-a72e19eb7ba1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9082d742-4c42-4534-af45-9094d0534fce"
        },
        "item": {
          "id": "588218d4-bd60-43d4-8742-eaf569dcefae",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "510a708c-b4af-4193-9a1d-c3c76545edc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62289805-61f4-4cb8-8034-b57db3b09402",
        "cursor": {
          "ref": "70b0713c-28f3-4528-80c3-18e485af5ea5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0cdf6b8-bf3e-4a6f-af6e-68e741fc0902"
        },
        "item": {
          "id": "62289805-61f4-4cb8-8034-b57db3b09402",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "007b197e-4e81-42ba-be2d-e623faf17102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde89e20-3d7c-4138-92a5-2f7dc471111f",
        "cursor": {
          "ref": "9311721c-ab28-4c9c-bac8-ec8691c964d2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69f42aff-31a6-4478-a40c-2102809156e9"
        },
        "item": {
          "id": "bde89e20-3d7c-4138-92a5-2f7dc471111f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3d8c6208-a492-4a73-b3b8-9ed415ae3a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d367b55-42bb-46e6-bd8d-6772db3ff4c1",
        "cursor": {
          "ref": "758b9350-06b3-48cd-a92f-5a81d9136465",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40df31f9-ee89-4faa-89a7-175aec8be2a3"
        },
        "item": {
          "id": "3d367b55-42bb-46e6-bd8d-6772db3ff4c1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "224f5c1d-c6bb-425b-9f00-a95b2b883703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78da20be-6f70-44e8-8f9d-2d0086ad6df7",
        "cursor": {
          "ref": "844d6673-3794-4610-b447-5946fb013b00",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3d66818a-ef04-42bc-b082-f81fd7ef5a7b"
        },
        "item": {
          "id": "78da20be-6f70-44e8-8f9d-2d0086ad6df7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "73e16f84-82d6-46fd-983f-0232b7a5c560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c07ce9-0508-4a68-b1ee-d6021a4d8b57",
        "cursor": {
          "ref": "a4143927-c246-4577-bad9-3edbfb9e6c75",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "62b7742a-9d1f-4049-9042-d876f0b54676"
        },
        "item": {
          "id": "05c07ce9-0508-4a68-b1ee-d6021a4d8b57",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "95ff0cfa-ccf6-465c-a373-316da8afab00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef818c06-963a-4871-bce2-6170a39a7b7d",
        "cursor": {
          "ref": "6b0ca750-842b-4dba-b338-5cbafa7c1adf",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5de0fa89-6f9f-4de7-b68b-28a32ac96a81"
        },
        "item": {
          "id": "ef818c06-963a-4871-bce2-6170a39a7b7d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c142c8d-dd0c-454a-a3a8-ce39fe586034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09684f1f-fad3-47ab-8725-ca177134a232",
        "cursor": {
          "ref": "8ea00edc-ae7c-4255-95df-464cbda72577",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0912d0b8-5ad6-4437-bde7-a42d84da3297"
        },
        "item": {
          "id": "09684f1f-fad3-47ab-8725-ca177134a232",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa224625-5603-4532-882d-f4c7b9ef2831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edda177-5111-4df4-a57b-e01bda5afeb4",
        "cursor": {
          "ref": "5a99d666-f73b-41ff-b09b-e0852ff1e60f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5fdab646-a00c-43e8-a91a-619d4cf2bd82"
        },
        "item": {
          "id": "1edda177-5111-4df4-a57b-e01bda5afeb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "79dadf22-c5f1-46a7-8b4e-99c96062983a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ed3d6f-7c8b-4877-b827-32da4c7ba6cd",
        "cursor": {
          "ref": "fe8d28c1-6824-4d01-b67d-875e64f8e539",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f52aa6c-be4c-4b5e-aa99-e252e84b7064"
        },
        "item": {
          "id": "f8ed3d6f-7c8b-4877-b827-32da4c7ba6cd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "05c643ab-79e2-49c5-96e1-d1c0d0935222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce4230a-7930-476d-8481-027422369ba5",
        "cursor": {
          "ref": "2091381a-1994-4f95-8496-60d2dbfd9925",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8ba5d59b-b2ac-4121-98d6-c88dc5097f15"
        },
        "item": {
          "id": "2ce4230a-7930-476d-8481-027422369ba5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f7dd88f5-2060-4cde-a74f-a3670132cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2bef40-e496-4c7d-9448-6157173b05b2",
        "cursor": {
          "ref": "4133f66c-8365-402c-8eb0-57788e97d6b5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7675bc8f-168b-4103-bdc4-33e083f8d5c8"
        },
        "item": {
          "id": "7a2bef40-e496-4c7d-9448-6157173b05b2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "967b7b9a-6707-4482-ae1e-319ce1e5ac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8db3e6-de34-4aa7-b32a-516a310f2d3e",
        "cursor": {
          "ref": "11f5854a-c36f-4544-84a4-9feb6ee5f48f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4c586a9e-ed7f-4d91-8517-c2a0e63a8e83"
        },
        "item": {
          "id": "7a8db3e6-de34-4aa7-b32a-516a310f2d3e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cd79a94d-d4e4-4f9e-affb-63a258d65be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597fea4e-5ec7-42a0-a9e1-4441093cbbd4",
        "cursor": {
          "ref": "4a437f06-c24a-4958-8494-1b0fd5465672",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "79185c06-caf6-4435-ab49-6bee79563038"
        },
        "item": {
          "id": "597fea4e-5ec7-42a0-a9e1-4441093cbbd4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4a0fafd7-6029-44b1-9f52-e559983e161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868946b8-9794-49e3-98a4-d4143b4b3f8d",
        "cursor": {
          "ref": "ceff12ec-a077-48a6-97f8-cfaa748655e8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4221f04b-9cdd-45fa-a73c-dc382d247eb8"
        },
        "item": {
          "id": "868946b8-9794-49e3-98a4-d4143b4b3f8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "220824fd-73a1-48ef-9599-2af55105fe49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7c9cb5-fa84-4b74-923e-37a34f456d97",
        "cursor": {
          "ref": "c850c2e5-83cd-4f64-a7a0-9529e460b2c8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "088fb188-bae1-4ffb-82d5-a2db44f42b0b"
        },
        "item": {
          "id": "4a7c9cb5-fa84-4b74-923e-37a34f456d97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "609df489-322f-4c65-96fa-1cc7ec485a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792678de-bacd-424c-8af4-2e893cf69912",
        "cursor": {
          "ref": "aac304bf-0087-47b1-8d6c-1c78ac92b682",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5ad1a871-866f-415c-b279-313be9d99502"
        },
        "item": {
          "id": "792678de-bacd-424c-8af4-2e893cf69912",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6020e733-d011-4175-a732-93aa9d222306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275ef8d0-b463-49d1-b6bc-392f0eef3243",
        "cursor": {
          "ref": "16497a17-dd55-44ca-8949-6b3be3f91235",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3f293ba0-8a08-49dd-82bf-12afa65779f4"
        },
        "item": {
          "id": "275ef8d0-b463-49d1-b6bc-392f0eef3243",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8ae4772b-fb35-4691-a4c3-9b11cd823284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84967a45-bdcf-471d-937a-aff50dbe1c18",
        "cursor": {
          "ref": "7b11234c-6430-4537-ab5a-038c9547faa9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0b428272-5e33-4748-b1fd-5da10fc4e737"
        },
        "item": {
          "id": "84967a45-bdcf-471d-937a-aff50dbe1c18",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dce8ba05-4d99-4451-833e-c9c9882000a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b34d9a-5538-46e7-9c41-fcf054b8d1db",
        "cursor": {
          "ref": "d6c39be5-0a29-4224-bccc-3fc1f79f2023",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "62da0d03-9189-4b9b-bad8-2018b74cd760"
        },
        "item": {
          "id": "55b34d9a-5538-46e7-9c41-fcf054b8d1db",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "63804870-67ef-452d-b618-8ca3144c5e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bd09c0-9159-422e-9374-b1387bbc1c5c",
        "cursor": {
          "ref": "e60fb82a-815a-4252-8dd3-81b70ee1bd03",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d953ab5-263e-4ad6-9a94-e071a7906eb5"
        },
        "item": {
          "id": "04bd09c0-9159-422e-9374-b1387bbc1c5c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "57198904-872b-4bd2-9ad6-20635edf4498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4061ff-fe01-4712-b65e-055c94a1a49c",
        "cursor": {
          "ref": "b61b7173-556e-49d2-9d1a-d2310649701d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aa53f927-91e6-46e1-a2f0-6354a6839d13"
        },
        "item": {
          "id": "0b4061ff-fe01-4712-b65e-055c94a1a49c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b2f20b29-b9d4-4377-b105-40b6daa7f7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686817c5-b38f-4323-bab1-8a4e18f7a7c6",
        "cursor": {
          "ref": "bae71a64-e46f-44b2-b070-41350b29431c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ba991fe4-54c6-4ada-8244-661c757c5240"
        },
        "item": {
          "id": "686817c5-b38f-4323-bab1-8a4e18f7a7c6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "02c6edf7-098e-4fd1-88ca-5dc803119035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d6b4c4-8c0e-4d8b-a64b-812c7d39ae7d",
        "cursor": {
          "ref": "221fccab-9920-4ce4-aa43-95f46d572525",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "019265fd-789a-44a4-8824-37169157dd19"
        },
        "item": {
          "id": "40d6b4c4-8c0e-4d8b-a64b-812c7d39ae7d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e8d139fb-a549-4b44-bc89-56c56fb62156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14697b63-9811-445d-b462-a9d91c038706",
        "cursor": {
          "ref": "af5a635b-be83-4b2c-aef7-5c8b730ab6c9",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a6bee3f7-acfe-4b05-9f3f-4af7a6114954"
        },
        "item": {
          "id": "14697b63-9811-445d-b462-a9d91c038706",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ad8bd0d7-cfb1-4346-9e7b-00d8b4747e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addde1e1-f450-4ba0-99a2-6d357398429e",
        "cursor": {
          "ref": "e6f97a9c-9eb9-4b2e-89e3-a2c9330640da",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0113cc0a-21f9-4fc5-9ee2-33859f867686"
        },
        "item": {
          "id": "addde1e1-f450-4ba0-99a2-6d357398429e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f050c6a-261c-436b-92d6-ed5d8d02e1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58bac57-bd2f-49cc-bb63-3e4196985690",
        "cursor": {
          "ref": "78d0adcc-e4cc-46d7-8813-06b2363795a8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "780104c4-dd75-4ce9-bd1c-0577366fc515"
        },
        "item": {
          "id": "c58bac57-bd2f-49cc-bb63-3e4196985690",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "007b6021-270f-4404-88dc-2fefa628574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494ada72-3a56-40d3-9ea8-940bbfcde6ad",
        "cursor": {
          "ref": "7a2b32e3-d0de-4f73-9e4c-2678d79493dd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a3214053-1aca-489f-b55b-83ea663dc879"
        },
        "item": {
          "id": "494ada72-3a56-40d3-9ea8-940bbfcde6ad",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1db8bf1f-d8ff-4e07-9f6f-cab63975df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ae7392-6e2c-489c-a07c-55f16aaf9a0c",
        "cursor": {
          "ref": "30d560bb-1f35-4c8d-a29f-e0b8e5b374a4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "56c2a982-fc7c-4125-8728-5d857b2c3bc9"
        },
        "item": {
          "id": "01ae7392-6e2c-489c-a07c-55f16aaf9a0c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "214e758b-937a-4614-8011-0aaa9d23ce32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd20fb-f0e4-404e-85a4-e9806904a303",
        "cursor": {
          "ref": "07195f06-d052-4a8b-9d8e-d5ff73c2c993",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e711c99c-d57d-4a6a-87f7-2d494e9f120e"
        },
        "item": {
          "id": "a8cd20fb-f0e4-404e-85a4-e9806904a303",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5ec4471c-6e2d-4a1c-a7da-4aca76c264e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840ca1da-1db9-4463-988d-942c19486ac7",
        "cursor": {
          "ref": "fed57e23-8af3-429c-9480-6752c1dfd484",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3f69c209-4d62-4271-b69d-92801eed2453"
        },
        "item": {
          "id": "840ca1da-1db9-4463-988d-942c19486ac7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eee71466-6111-4fea-a973-afe090e168de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff134b2d-321b-4efe-859b-2d24dc602077",
        "cursor": {
          "ref": "43494707-eacf-4e95-93e5-f1b7e5fa6729",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "79ce21f0-2348-415c-be6f-b5ac2722c54d"
        },
        "item": {
          "id": "ff134b2d-321b-4efe-859b-2d24dc602077",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "49f5b4d6-63ca-4f80-8e2c-e3905fd27e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54826e84-d331-4c23-8caa-252b1fb1d94c",
        "cursor": {
          "ref": "bc91825f-7919-4935-9a73-a9776d126dd0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a9262b50-fcc9-4a7d-820b-03f9e9247264"
        },
        "item": {
          "id": "54826e84-d331-4c23-8caa-252b1fb1d94c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ca46239-67f8-4e4c-8055-831356821b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54004cc2-452b-41ce-b468-5a2a9eaa1cd9",
        "cursor": {
          "ref": "6b0d8e67-3868-4268-9c04-bb3dc8f45112",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ead21d50-4ecc-4b67-aa79-74d58f3d8490"
        },
        "item": {
          "id": "54004cc2-452b-41ce-b468-5a2a9eaa1cd9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ae322a42-95bf-47b8-931f-2beaa4429556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0aea93-06be-4462-b598-0910079720ca",
        "cursor": {
          "ref": "1a600d38-4e1f-494f-b11e-3a73cabb7784",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0868ddc9-252a-4d33-a16f-589910b55866"
        },
        "item": {
          "id": "8b0aea93-06be-4462-b598-0910079720ca",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "82a2751d-9ab2-4c93-97c5-017cf19dadb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04d5b03-faa4-4bab-93f9-fafead3f1f9b",
        "cursor": {
          "ref": "3d93144c-57bc-4917-9007-e7924487d856",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "54d59a65-bb0f-4c18-ae3c-f59e316b4d89"
        },
        "item": {
          "id": "c04d5b03-faa4-4bab-93f9-fafead3f1f9b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8028a21c-0f2e-4993-a157-ed3002db821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ed67c1-3d22-4282-9ce3-d704ba51c4ad",
        "cursor": {
          "ref": "7e490336-6fe4-4f0b-a739-cd530566bb44",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3f0abf6d-708a-440b-9daf-eb657d0ee093"
        },
        "item": {
          "id": "88ed67c1-3d22-4282-9ce3-d704ba51c4ad",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eb7861fb-8b60-4e39-aadb-84fc02344c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb5eda-b792-408b-9ff5-a5b728ffd312",
        "cursor": {
          "ref": "10e1a9c6-b5ca-47e2-b92a-e9e70f9016b0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0bd5f873-ddda-49ad-b5db-620778ee52b1"
        },
        "item": {
          "id": "4eeb5eda-b792-408b-9ff5-a5b728ffd312",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7d2c7ee8-6c06-4085-8f51-1aa965b9214c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b050b2-9b10-43ab-9849-65e6c3fe1f7c",
        "cursor": {
          "ref": "f213ab2b-6ca9-4c44-a76d-ac33193d43c4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "500964ba-7f0c-4e80-9647-0f982003e21c"
        },
        "item": {
          "id": "b8b050b2-9b10-43ab-9849-65e6c3fe1f7c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d0c27b6-dd22-405d-be11-71be61d0980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2371ee-bf11-471d-921f-fee655cbb648",
        "cursor": {
          "ref": "f1da5822-b3c2-4453-92f7-71735118a591",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "86074e76-380e-4cd9-a387-7a394d575615"
        },
        "item": {
          "id": "5b2371ee-bf11-471d-921f-fee655cbb648",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "31642362-e7e1-49d0-8195-fb44fbc6d383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faf10c1-41ba-4120-bfbd-64eb87fdefc5",
        "cursor": {
          "ref": "2964da56-6f0e-4944-b6bd-762179aa0a82",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8bba2b11-8453-4094-afcb-2a1b6c033f13"
        },
        "item": {
          "id": "8faf10c1-41ba-4120-bfbd-64eb87fdefc5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6860ef4a-dca9-4548-995b-b78d1cc390a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be65ee8d-a6fe-4bbb-878d-cca503443bd0",
        "cursor": {
          "ref": "6da51552-6463-4b15-8441-c35cab420b62",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c9db88af-797b-4283-a7dc-694127a0f85b"
        },
        "item": {
          "id": "be65ee8d-a6fe-4bbb-878d-cca503443bd0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "24f2d5fc-e0ba-4ab0-aefd-25c6d30877cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a72506-3c06-4621-8cbc-50cc297f5066",
        "cursor": {
          "ref": "cbc08856-0ee8-4c7a-89a0-bbf2f8976eab",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c0d87dbe-2a48-4890-a448-e8ef3afeee9c"
        },
        "item": {
          "id": "64a72506-3c06-4621-8cbc-50cc297f5066",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "692a2db9-ce57-4ff6-8d84-664af7033ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786ec827-e2bd-4eef-9675-8afd9d1f75c1",
        "cursor": {
          "ref": "5434c657-733a-4bb9-9120-ed956b0b0600",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "30090023-47b1-4e05-8bd7-e1cefb0b4aa3"
        },
        "item": {
          "id": "786ec827-e2bd-4eef-9675-8afd9d1f75c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b94fbda3-e9bf-4380-8d8e-3035d88cacaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e868de-74e5-4d66-91b5-e06da3ff47f1",
        "cursor": {
          "ref": "c8694469-5b57-47a0-b1d1-ec5bccff7fbb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c2b040cd-27be-48b9-9b15-072e207b2e7c"
        },
        "item": {
          "id": "58e868de-74e5-4d66-91b5-e06da3ff47f1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6dbf7aac-94f5-4388-8b57-35ddb53ac429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f104933-fe8b-41f7-ab84-a5c6523f5bea",
        "cursor": {
          "ref": "07a389bb-301a-4fbb-aded-1e3e8f46011a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a7d45523-fa8d-44bc-8808-599bc2bc0715"
        },
        "item": {
          "id": "0f104933-fe8b-41f7-ab84-a5c6523f5bea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "65bd7335-2c4e-47ce-8648-dfa9de7e6173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c42f6e4-0423-4874-8af7-feb9d4c56cb1",
        "cursor": {
          "ref": "f10af2d0-0bcc-4d3a-908a-da7f1dd5e97c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "84fe4824-33b7-4337-a1ec-77ea1646712e"
        },
        "item": {
          "id": "5c42f6e4-0423-4874-8af7-feb9d4c56cb1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04fd6755-1873-48db-8311-1df9f1bd7fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f8cb26-8542-4e7b-b441-4fc2cb30c110",
        "cursor": {
          "ref": "eb3c606c-8488-42aa-934f-55bd0858a62e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9d2d7624-846f-4b58-98b0-c8df01c9b787"
        },
        "item": {
          "id": "33f8cb26-8542-4e7b-b441-4fc2cb30c110",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a4c96d6e-ff27-47e1-8f1c-11c5fd583aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d2b305-54fd-4e0d-9cc5-c3ac6cff1c86",
        "cursor": {
          "ref": "af11a494-4111-4836-8d06-28783c5d2d35",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "49309ab4-dd61-4077-a328-df215ed262d5"
        },
        "item": {
          "id": "75d2b305-54fd-4e0d-9cc5-c3ac6cff1c86",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b004cf97-b977-42bd-8954-4ccd97acadab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1fc0d1-3ad7-4d39-968c-dbb51365d481",
        "cursor": {
          "ref": "d5f10ade-7a40-4ab5-8d05-765f80e35595",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "45472af5-030a-4323-8ea2-f9b1d5085f9b"
        },
        "item": {
          "id": "ee1fc0d1-3ad7-4d39-968c-dbb51365d481",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dfe6dd2c-4625-4831-81ae-4b1484f5bf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1716ea67-50ae-4bc4-81ec-76213069faf6",
        "cursor": {
          "ref": "f4d425a1-a9b4-4393-a8bc-ab81adb28578",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "216bcc20-1f41-496f-a5cb-f09c2ecac7b0"
        },
        "item": {
          "id": "1716ea67-50ae-4bc4-81ec-76213069faf6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3f39318a-02f0-46e2-9e38-f2b955cfb536",
          "status": "Created",
          "code": 201,
          "responseTime": 13805,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c380cf-3138-4804-a171-12ce10606503",
        "cursor": {
          "ref": "5e57c1e9-9285-476a-8135-fba121914160",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1ced4571-1456-4b14-adc3-f119cd0989d7"
        },
        "item": {
          "id": "28c380cf-3138-4804-a171-12ce10606503",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "64af8b97-3f15-4968-908b-f26061a3a860",
          "status": "Created",
          "code": 201,
          "responseTime": 12490,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "28848052-0798-4b58-8daa-9b21342cb21d",
        "cursor": {
          "ref": "f131cb57-cc37-4e34-9bc1-0c8680b719e9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9ca4ed62-e156-4ff4-ae99-688068b0b3e8"
        },
        "item": {
          "id": "28848052-0798-4b58-8daa-9b21342cb21d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "87ba9155-6974-4228-9b60-e1ec099a984e",
          "status": "Created",
          "code": 201,
          "responseTime": 13445,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed925098-d1fe-4701-9348-c8037dd0bde7",
        "cursor": {
          "ref": "6ef15871-f027-46a0-a59c-09b59a424bf4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e32bdd30-f45e-43e1-ad6a-31326047f5da"
        },
        "item": {
          "id": "ed925098-d1fe-4701-9348-c8037dd0bde7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c2f77516-beef-4efc-9a03-7c78aa600a0b",
          "status": "Created",
          "code": 201,
          "responseTime": 13053,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5414c3e7-4796-42e8-8942-3a59a99e6de2",
        "cursor": {
          "ref": "89e670d9-b9e2-4a22-9003-caff38133dfd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f8efdf55-38f6-41d3-af3a-49b8718e5363"
        },
        "item": {
          "id": "5414c3e7-4796-42e8-8942-3a59a99e6de2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8f2f30bf-e974-4539-a0eb-dc6a9d533f8e",
          "status": "Created",
          "code": 201,
          "responseTime": 12827,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-03T00:43:29Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-03T00:43:29Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "90613ad2-b05e-42ea-8500-41c9cf472479",
        "cursor": {
          "ref": "069eba48-e6a6-43f4-a160-2a42292d78fa",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1bf3526a-5ea7-41f7-8611-0a414e6b8d45"
        },
        "item": {
          "id": "90613ad2-b05e-42ea-8500-41c9cf472479",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3f8dcb41-6bc0-4d93-b15c-31ed540755fa",
          "status": "Created",
          "code": 201,
          "responseTime": 13161,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a068b6e-2dbb-40e5-baab-f8c54f736859",
        "cursor": {
          "ref": "f3a7c20d-94e3-462b-9c8c-8696ef21cfb0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "226a4cec-8df9-4fed-83c1-1c0dad34bed4"
        },
        "item": {
          "id": "6a068b6e-2dbb-40e5-baab-f8c54f736859",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2a83c71-d2a1-4001-aa2a-597c00181c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5109abd0-d3f3-4bbb-9172-032652a44ca8",
        "cursor": {
          "ref": "06631ccc-4a9c-453c-84d4-f3619902b2c8",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48f9fe23-c91a-4af6-bfe3-3e768dc89448"
        },
        "item": {
          "id": "5109abd0-d3f3-4bbb-9172-032652a44ca8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "accca97c-a110-4a2b-8809-a395ce28b8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410b605-bc92-4159-9166-0a06d2294bea",
        "cursor": {
          "ref": "294c09e2-09f3-4c0e-907c-e87f30a848c2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1ab96e16-9882-41fe-8eca-c9f75eff928f"
        },
        "item": {
          "id": "b410b605-bc92-4159-9166-0a06d2294bea",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "309258e0-e531-4934-97b1-ec1024a8e9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e082ef-5544-43fb-861e-776c98bce749",
        "cursor": {
          "ref": "2c96594c-8217-4f6b-b8e1-22b3bac3d633",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "69069309-941c-4ed1-b06a-3efbf2844ebb"
        },
        "item": {
          "id": "09e082ef-5544-43fb-861e-776c98bce749",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0c6150ca-36b7-49cb-a9a1-109dfb6a3a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45422c8-9caf-4514-a47a-5ec7b1b676a7",
        "cursor": {
          "ref": "332672f1-f66a-46b2-a1fd-d61e9fc18ada",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1d76e1cf-b989-4734-a21e-b1b6984a663a"
        },
        "item": {
          "id": "c45422c8-9caf-4514-a47a-5ec7b1b676a7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4991af35-5553-49c5-97c6-65be5c80c146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd595f44-2d3c-449f-87aa-d09c4d8a4969",
        "cursor": {
          "ref": "8a417bf0-f2dc-4699-837f-947585ab91ea",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "51fccb8f-3c4a-4ac9-a112-851b46cced9e"
        },
        "item": {
          "id": "cd595f44-2d3c-449f-87aa-d09c4d8a4969",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "edee463f-54fc-4a1d-8c79-2e2529299fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b73670c-0a38-4256-bde0-b973d06bf240",
        "cursor": {
          "ref": "dd7bc6ff-b053-44a4-80e1-a1facae3caf6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "70841023-36e2-4944-af50-0c603c2d9928"
        },
        "item": {
          "id": "2b73670c-0a38-4256-bde0-b973d06bf240",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "229c713f-3a3f-42c1-9525-48070f2eab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0a8157-be2d-487f-9bb6-a0be25564825",
        "cursor": {
          "ref": "ce787900-6cd7-4b36-b20f-22f0db755986",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ff91d77f-4765-4b12-bb28-5f38d73454b9"
        },
        "item": {
          "id": "7e0a8157-be2d-487f-9bb6-a0be25564825",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "02f826d7-84e2-4e8e-a678-b944e7e9680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec644eb-9b2b-4338-a977-a654a52b693f",
        "cursor": {
          "ref": "f1778446-0776-48dc-a6c6-cac5202cac36",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1dbd9094-892f-497e-8b2c-d3c9640d5cc7"
        },
        "item": {
          "id": "6ec644eb-9b2b-4338-a977-a654a52b693f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6af538a1-5eae-4877-8b18-bcc03e69567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf3ad0c-ce6f-4fc9-812c-1e197fcaa528",
        "cursor": {
          "ref": "8ad0c025-1c14-4517-8059-6dd2eb8934d3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "11daafe3-094d-4922-8158-88e3229f8720"
        },
        "item": {
          "id": "bbf3ad0c-ce6f-4fc9-812c-1e197fcaa528",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7949ed7f-56a7-49d0-8b51-bc84d6fbd552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635efa72-647b-44fe-8007-fe6027cd6164",
        "cursor": {
          "ref": "ff3057de-d604-4676-81a0-d8a91a36e279",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c6c191ab-9729-4942-95d6-68a300ce06fa"
        },
        "item": {
          "id": "635efa72-647b-44fe-8007-fe6027cd6164",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ebab57b7-17f5-4fa4-bf9d-0b199a776e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb022562-de81-478f-bd05-8e74e18bd092",
        "cursor": {
          "ref": "d7a6ea94-678c-4f55-875c-0b31b972b281",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9c71aa4f-f66d-4d60-be15-e6792b562c04"
        },
        "item": {
          "id": "eb022562-de81-478f-bd05-8e74e18bd092",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "56bf0c3f-0686-469e-9fce-b083cfc8179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dd465f-aadd-4075-9bd3-a4b0fdf32035",
        "cursor": {
          "ref": "49df12cd-87ec-434f-9851-32bba816d505",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a6c86b4-b057-4b5f-bf7e-efecc4924f65"
        },
        "item": {
          "id": "24dd465f-aadd-4075-9bd3-a4b0fdf32035",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "59e03378-aabd-4331-b985-68451a5f6872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7268844c-d471-48b2-9e7b-8fe3e988ad02",
        "cursor": {
          "ref": "735958b8-81ef-443a-a620-3d9e97bbd5a6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "384384f2-b8f8-457a-bb9b-5f74b50a28df"
        },
        "item": {
          "id": "7268844c-d471-48b2-9e7b-8fe3e988ad02",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c1f7d91c-282f-48f6-b6d2-b9b3fad26ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2f46b7-9c11-4a05-975d-b41d0b3958bc",
        "cursor": {
          "ref": "ed8cca3d-037b-4bcc-b9bf-5e8c4444ca43",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8635a8a4-530c-401a-b280-b7b852f523f6"
        },
        "item": {
          "id": "5d2f46b7-9c11-4a05-975d-b41d0b3958bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a927d8f1-92b8-400e-8ddf-52caf622cdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d365b4-954a-41f1-aa9c-33996c743fb0",
        "cursor": {
          "ref": "f0bb3372-252c-4caf-be7b-a5f14d694064",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cbe149ee-ce8b-43a3-9ab5-e67dd70120fa"
        },
        "item": {
          "id": "15d365b4-954a-41f1-aa9c-33996c743fb0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "639e5c1c-29d4-4eff-97c8-db8a27d7901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718d6993-c015-44af-ae45-a4c0d1400f86",
        "cursor": {
          "ref": "7c76f906-20b9-4f24-8a6e-d5e9094f95fe",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d465a835-fa1e-4ba3-b6be-c79d4d8bf7ae"
        },
        "item": {
          "id": "718d6993-c015-44af-ae45-a4c0d1400f86",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46294b8f-6173-4fba-a9e9-bffe5663bddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d74692d-ba0b-4f55-8552-4339435dd591",
        "cursor": {
          "ref": "46775914-a648-46e2-aa51-c332a643f1b5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "066c1ba1-4a48-406c-8eea-984f2cff11b3"
        },
        "item": {
          "id": "9d74692d-ba0b-4f55-8552-4339435dd591",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "812823b7-7a0c-41c6-a40d-98c765813019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e95cda6-4c36-48b0-b678-6674e650c2da",
        "cursor": {
          "ref": "0ed64cf1-fbdd-4f00-b03a-73e9cd0e5820",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d29bbe94-ae16-4a81-8f2c-bc090537195d"
        },
        "item": {
          "id": "8e95cda6-4c36-48b0-b678-6674e650c2da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "596688aa-1495-4726-8903-070fd2ea6677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a6ccef-5865-4156-95c9-d482dc7ca391",
        "cursor": {
          "ref": "741215cc-a01a-4aa9-9119-113457f327a5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "546056ae-06fc-4dc2-b530-5ceb9eb2e2da"
        },
        "item": {
          "id": "30a6ccef-5865-4156-95c9-d482dc7ca391",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e787ec94-759b-4bae-9b43-67bfb83f6ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798e5be4-6588-4ad7-842a-7fd7e117cb8a",
        "cursor": {
          "ref": "e55c5afd-e19c-4cf7-a76f-46645c0464c7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "45ece8a3-1fcd-45ac-9e4b-b7c8d1d297b3"
        },
        "item": {
          "id": "798e5be4-6588-4ad7-842a-7fd7e117cb8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b00a62d4-4066-40ce-b063-427ddb0a26be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c912b829-4106-4705-9045-32a53b70f902",
        "cursor": {
          "ref": "01a3ce5f-707a-4596-92d7-c512b0cdb383",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "557537bc-c3b4-403f-afda-4875e2766313"
        },
        "item": {
          "id": "c912b829-4106-4705-9045-32a53b70f902",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9abe928b-a6e6-4438-9add-a5ea02236eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd96307-2245-4a46-95fa-aca6e62d346d",
        "cursor": {
          "ref": "9034d9f0-b164-4473-84ff-762df87d8d15",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "83dbd9af-6193-409f-ab43-d3aa01484ce1"
        },
        "item": {
          "id": "cdd96307-2245-4a46-95fa-aca6e62d346d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "61deb16c-7e92-46bb-9615-81617fb70490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229e735a-6c33-4bfd-9686-300100c5ced5",
        "cursor": {
          "ref": "033bf3ca-5599-4dec-a204-628104023553",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f5076582-868f-4a95-b908-d2df70b33223"
        },
        "item": {
          "id": "229e735a-6c33-4bfd-9686-300100c5ced5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9c5de7d2-a2ef-44eb-b2dd-1925eb4a1c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a0881c-8c58-41cf-bb46-9c442eb9eb42",
        "cursor": {
          "ref": "4f3aad86-6ee6-48ca-832e-17d5bbac5a0f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee867ade-3021-41a3-b551-d2a795aa70e7"
        },
        "item": {
          "id": "40a0881c-8c58-41cf-bb46-9c442eb9eb42",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "80592795-0f6c-492e-b88d-48e8c3d5729c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da187ea-b7a7-40f6-8250-e117ab69c1df",
        "cursor": {
          "ref": "e46e579f-8419-4d4e-a842-4cfc2aeb93cd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "62fd5dbc-4a24-48cb-9db9-d8bce2a0e4fa"
        },
        "item": {
          "id": "8da187ea-b7a7-40f6-8250-e117ab69c1df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14ced8b3-e07f-425e-bdc4-8e81866a0c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9822d3e-4758-494f-90fa-2a79972409cc",
        "cursor": {
          "ref": "7aa2c479-591a-4d52-86ec-59d5bc827b71",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c178f18f-26e0-4089-aaea-71ca7ab5a35a"
        },
        "item": {
          "id": "b9822d3e-4758-494f-90fa-2a79972409cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "09c287a8-5630-4cad-96b8-73ec055fb044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a0b72-fdb1-4d02-af3a-3a77a12a8e9a",
        "cursor": {
          "ref": "739a8a28-fdd2-4c36-bfd2-7b8d711ef374",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5b01da99-fba1-4fd2-9364-732433e91ff6"
        },
        "item": {
          "id": "281a0b72-fdb1-4d02-af3a-3a77a12a8e9a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "def1ae97-8912-48b1-a6a8-e1f65c1185cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d088527c-ae66-40a2-b8ea-45e7c55d4a59",
        "cursor": {
          "ref": "0b563b7e-9066-4eeb-b551-da842b833c8c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "37d334a4-9930-4a38-98b4-41adf7643b4e"
        },
        "item": {
          "id": "d088527c-ae66-40a2-b8ea-45e7c55d4a59",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bbde3ebf-14dd-4ec1-9027-da482237a968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e8a94-1f28-4247-997a-f646ff0cc303",
        "cursor": {
          "ref": "42e1e649-af88-4bd0-830b-dbbb072c134c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5c4fb8bd-4e74-490a-95f3-646ea86f2464"
        },
        "item": {
          "id": "4d7e8a94-1f28-4247-997a-f646ff0cc303",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "818534e3-d9a6-4469-aeb4-fd72842f36a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddde65c-9821-4651-88a6-f46e5e7963c0",
        "cursor": {
          "ref": "6d41a915-eb4e-4c50-94d5-63d856a6ec7e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "db88f603-6573-4981-bf34-6b4508230852"
        },
        "item": {
          "id": "5ddde65c-9821-4651-88a6-f46e5e7963c0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb1cca9c-7100-4fa8-beb4-570dbecd837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837a60db-d086-4008-ae54-97307d24bc01",
        "cursor": {
          "ref": "26c39ba7-2b3d-4767-af35-1c2a43eed511",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "33646a0f-19f5-4383-a8f6-91da481d1ef9"
        },
        "item": {
          "id": "837a60db-d086-4008-ae54-97307d24bc01",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "db6fd17d-99ee-4b0c-9811-126596c7ade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f10c3f-93f2-46bc-a6aa-45ad5c51c8fb",
        "cursor": {
          "ref": "f67ab1a0-4569-4ff3-a5ac-54493be4c3af",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "14a19d7e-38a5-470f-af01-101273162882"
        },
        "item": {
          "id": "f7f10c3f-93f2-46bc-a6aa-45ad5c51c8fb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f02f130e-11f4-4967-8f62-8511ee23ec76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3371067-288b-4863-8817-6ae490eec829",
        "cursor": {
          "ref": "9623bcf1-f455-495c-8f48-0607434e508c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9bd35b5f-f4df-4d95-af01-bbcca4b49f90"
        },
        "item": {
          "id": "d3371067-288b-4863-8817-6ae490eec829",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1bfd3799-d2ff-4873-a7bf-1c0acdffbc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ad4cc-7df5-46a7-942c-a92cafe788ba",
        "cursor": {
          "ref": "56e8ae25-ac2c-4d98-aef6-09c359b8a818",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5247bc9c-02f3-409d-8168-131a27da40d6"
        },
        "item": {
          "id": "9c9ad4cc-7df5-46a7-942c-a92cafe788ba",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81e106d7-dced-4ddd-8775-e9d439ebc880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272d3789-45d3-4b0c-b8f5-b34c38c7e897",
        "cursor": {
          "ref": "4e1a6c91-c1f3-4d7e-9d8a-f89a18ac701b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3efb8541-0589-4ff1-998b-4ed715ff9331"
        },
        "item": {
          "id": "272d3789-45d3-4b0c-b8f5-b34c38c7e897",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "917d046b-cbce-46de-91f0-10975c59fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8053c226-e5e6-4bcc-9b47-5623ad1e4373",
        "cursor": {
          "ref": "29008e49-40a8-46c0-af6e-1b86d705fafd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "debfcd7e-b773-46fa-9907-f3a35636310f"
        },
        "item": {
          "id": "8053c226-e5e6-4bcc-9b47-5623ad1e4373",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fb1aca17-6e53-405c-b648-f838c82667e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cde62be-081f-4261-9117-45efe49471a3",
        "cursor": {
          "ref": "4ac5eead-94ab-46d5-a6e7-7adee658600e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "29baf2e9-94b7-47ef-93e8-19b6efcc5362"
        },
        "item": {
          "id": "1cde62be-081f-4261-9117-45efe49471a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88971cce-cd1a-4876-9b32-29947bc2dc89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f98e00-e1d3-4c26-aa38-4ab06f787eda",
        "cursor": {
          "ref": "ae8789a3-b91f-4aab-aa4a-4cfcfde98926",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90397227-72b9-4537-8e77-586cf03a3ff8"
        },
        "item": {
          "id": "e0f98e00-e1d3-4c26-aa38-4ab06f787eda",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a2d8584b-7dec-484f-a3a9-791470021721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212475fb-4527-4100-ad1c-c73a8e6a97d8",
        "cursor": {
          "ref": "fbb3041c-dc00-4b4b-bfc0-4b8bede72d92",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ac77ddca-a683-4cc8-b057-2596805635e1"
        },
        "item": {
          "id": "212475fb-4527-4100-ad1c-c73a8e6a97d8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "81dc0eca-cc5b-44d4-93cb-b4b0bd755095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a24c72-65a4-4929-9ea8-b2a85b2366b4",
        "cursor": {
          "ref": "8609df59-53ee-4e75-95e4-616226344827",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c9b929c3-8b55-4bc4-9b8a-4083bbbdd797"
        },
        "item": {
          "id": "70a24c72-65a4-4929-9ea8-b2a85b2366b4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9c1259c7-e233-4516-ae46-e786bdd48b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc92a564-4086-4664-bc74-4ba2071ca61e",
        "cursor": {
          "ref": "6843a91f-1f2d-4bf7-a697-d921ce40930f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7aea7683-230b-4977-9923-370396c51a5e"
        },
        "item": {
          "id": "cc92a564-4086-4664-bc74-4ba2071ca61e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf4692dc-0cdc-41d4-aea9-e097b21a4e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586fb3d5-7a6c-462c-bc13-2168573811dd",
        "cursor": {
          "ref": "b85e0877-0ad9-4754-9c21-ce38b0137923",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4799dbe3-64df-4630-ab79-3d2c954b7e01"
        },
        "item": {
          "id": "586fb3d5-7a6c-462c-bc13-2168573811dd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "15b31bac-25f3-4f48-b62b-98993aa0592a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41c9c34-42f8-4e9f-92b4-08b2a4b18fea",
        "cursor": {
          "ref": "d7872eb2-7657-41f7-96ed-9d527a1c26c5",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "53e10f35-49dc-4ab3-8a06-ab592f243da2"
        },
        "item": {
          "id": "c41c9c34-42f8-4e9f-92b4-08b2a4b18fea",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "94b2bbf6-890c-458b-8838-f260d65b4de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7d6a11-ed21-4b98-b4c5-7ee96a5b3e07",
        "cursor": {
          "ref": "a3585b7a-52ff-462b-8d2e-ec66b4afff46",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f5e44406-6218-4576-a34b-dbdd7b667661"
        },
        "item": {
          "id": "ff7d6a11-ed21-4b98-b4c5-7ee96a5b3e07",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "89b2bf30-6e26-46e6-9bef-e3d744c6bbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa058ff-27c9-46b2-8538-166079376f62",
        "cursor": {
          "ref": "e5f65d24-0f71-41fc-9cd2-8ecbfd3e5ea1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b8692bee-1d80-4cc7-9a90-bd1fd7719e11"
        },
        "item": {
          "id": "7aa058ff-27c9-46b2-8538-166079376f62",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "868f5aa3-c7ba-467a-beb9-f3af7f418acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47226823-8503-4704-86de-755939ba536b",
        "cursor": {
          "ref": "ba8db0c4-16ef-4d4b-889a-df678ad1cdb3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "92ff8b5f-e956-470e-a9c2-8437fddee846"
        },
        "item": {
          "id": "47226823-8503-4704-86de-755939ba536b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "60e5983d-59cb-41f5-926f-30401cbc0e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03b5f92-ef2f-4b74-b79c-34afdbc490b3",
        "cursor": {
          "ref": "ac810ba9-0136-46ab-bd2d-b1b00b5ba674",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d3b3fc84-5ab2-4c93-ad12-63158252af7c"
        },
        "item": {
          "id": "b03b5f92-ef2f-4b74-b79c-34afdbc490b3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "52d7514f-202e-4c65-a0e1-253b926d6363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c10af5-dd2e-4b6d-aab8-2fdccf6c87f8",
        "cursor": {
          "ref": "f6b49af7-4254-4cef-8598-ed3fc2deb288",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ffa2cb1b-b6db-4fe2-aa61-e0469b44cdf7"
        },
        "item": {
          "id": "18c10af5-dd2e-4b6d-aab8-2fdccf6c87f8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "595397f1-3140-471a-b852-fb672ab53870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b2bae7-c86b-4d9e-a926-607dde268d3b",
        "cursor": {
          "ref": "0cc8a6d2-fd29-4299-8452-2d095d17b75c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "80f366a4-2d49-4f94-b9a5-80212d33c75e"
        },
        "item": {
          "id": "03b2bae7-c86b-4d9e-a926-607dde268d3b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0af593da-8576-443d-9bf3-ce8600c994ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f96ac2d-4e54-4ac4-bbff-1bfc41431991",
        "cursor": {
          "ref": "7e9b35bf-a209-4f4e-89db-0a1c6f004085",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e970da18-4d0d-4afe-876d-5ea057f81947"
        },
        "item": {
          "id": "3f96ac2d-4e54-4ac4-bbff-1bfc41431991",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "782a0a69-ea48-4a4a-90f4-ba7eab7d9aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673511fe-2a13-45de-96f1-0e06e63ec2a2",
        "cursor": {
          "ref": "0d5b90ad-2068-4e49-b3bf-8049e328cfd8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2d76e4f-c25d-4400-bc8f-dce57399db36"
        },
        "item": {
          "id": "673511fe-2a13-45de-96f1-0e06e63ec2a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "162ea622-d3a1-4bec-8c6c-a4e1233903f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11e1167-d058-41fa-ab74-bb6fd69ffacb",
        "cursor": {
          "ref": "d4900922-b4c3-45dc-8ece-df32c98855ef",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6db4d883-0786-4e6c-956d-4734a276480f"
        },
        "item": {
          "id": "f11e1167-d058-41fa-ab74-bb6fd69ffacb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8866b806-2f33-4aab-a24e-b35d5c7c6fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22cafef-fa35-43fb-960d-2f5d4b06e8f2",
        "cursor": {
          "ref": "cbb03523-f91a-4331-9e42-f505717375e6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b9c5ef47-0843-4dea-8ccd-8f14181f55f9"
        },
        "item": {
          "id": "d22cafef-fa35-43fb-960d-2f5d4b06e8f2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2b891f7-736f-49df-ad3f-7f4de0cef840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacefece-562f-47ce-8b85-9440a987da17",
        "cursor": {
          "ref": "42d9bc48-746d-4655-ab7a-f91a80bda2b9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5ae7eaa5-e305-4848-8c18-0a595ebf5a2b"
        },
        "item": {
          "id": "cacefece-562f-47ce-8b85-9440a987da17",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5994254c-7508-41f2-b5e2-015fb0c86b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d800905d-6270-4362-a549-0287c2f0472e",
        "cursor": {
          "ref": "88061f14-0478-4755-b5e7-60be5238d465",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cda0a636-115e-4ac5-8c6c-13b59d59a367"
        },
        "item": {
          "id": "d800905d-6270-4362-a549-0287c2f0472e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "68c8f715-e9da-4061-84c1-c3a872a38e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f8ca3e-2b8b-4e28-aa41-fd20f6a7eac2",
        "cursor": {
          "ref": "eccbd7e8-e2b2-4fae-a108-5981e8f1874a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfedf8ba-7828-4bc4-8dcf-40cfad8b8f3f"
        },
        "item": {
          "id": "e0f8ca3e-2b8b-4e28-aa41-fd20f6a7eac2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0772f8a8-4bf8-4e90-bfab-22ebdaa9eaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f5988a-8cca-49ae-bfd8-c3d94d0997d4",
        "cursor": {
          "ref": "6e129158-cb22-4a35-b875-cbe851db15ef",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "64b58c76-c538-4bf2-b1d0-1160f2d0b58b"
        },
        "item": {
          "id": "94f5988a-8cca-49ae-bfd8-c3d94d0997d4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a3197a48-a6db-4bbb-8529-420645b76875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8336c310-2227-4dd1-bde5-ab8e679b126d",
        "cursor": {
          "ref": "3479571e-1440-48f3-be2d-0d9eb8cadd4f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a4b523f2-6884-48b0-97a3-4a7e096b860c"
        },
        "item": {
          "id": "8336c310-2227-4dd1-bde5-ab8e679b126d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "495fb5cc-d90b-468e-a08c-6c20ffe83cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb333eb3-b56b-496a-8acc-32f644193428",
        "cursor": {
          "ref": "21c3b155-c8dc-47a0-8e30-ed5939f5d24c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b25904e1-54df-4fb1-8695-76ff74ce7a71"
        },
        "item": {
          "id": "bb333eb3-b56b-496a-8acc-32f644193428",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "623029d4-c87f-4e16-a45c-dd49b54be1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b9e75d-e18e-4d5f-9798-2544b58ec622",
        "cursor": {
          "ref": "fb213daa-58c3-4a69-a9eb-ad226cb17a51",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f34f44cd-fb10-43a2-aae1-40918e191494"
        },
        "item": {
          "id": "38b9e75d-e18e-4d5f-9798-2544b58ec622",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0fe9c9ca-e659-423a-8c33-76cb75a9abed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5027459-6033-4507-97c3-c8854ba6b480",
        "cursor": {
          "ref": "9221140b-58ea-4b36-99bc-5601c8168a10",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fb77dd25-e0d8-4d9e-92d9-ea312bbb7493"
        },
        "item": {
          "id": "d5027459-6033-4507-97c3-c8854ba6b480",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d9293602-8798-4c27-a23f-734e08d9e3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adc1fb1-3fcb-4247-921b-261f657b64da",
        "cursor": {
          "ref": "84951d46-3b46-4e8b-bc43-2b36a947ff4d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4bb27723-ec08-459b-b48a-ee14e1b539ce"
        },
        "item": {
          "id": "1adc1fb1-3fcb-4247-921b-261f657b64da",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "44b1abae-e590-45c5-afe5-45e7cd8d1b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefb0b69-a9a7-48f9-8283-245497c7a83a",
        "cursor": {
          "ref": "c4e140d8-6c00-424f-bb26-a0ab6edf1542",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5abcf21c-7eb7-46ae-9148-85d88057d630"
        },
        "item": {
          "id": "aefb0b69-a9a7-48f9-8283-245497c7a83a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3f072c57-0fab-4a89-b90f-acf9459fccd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68546ef1-10ce-40f8-b161-b50b82ddadbe",
        "cursor": {
          "ref": "2b91e763-9986-4b33-9e90-30d58473b766",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "682653cc-3dde-4c64-83de-495ef7b1fd67"
        },
        "item": {
          "id": "68546ef1-10ce-40f8-b161-b50b82ddadbe",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "283e4054-7c5c-48c5-bc51-2e766dd000a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95485bd1-3edd-4760-a921-8feee3f3a060",
        "cursor": {
          "ref": "64374aa2-7fe2-41df-a167-791c68848b6a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "389bf9ef-1443-4004-b77a-c0c753258d03"
        },
        "item": {
          "id": "95485bd1-3edd-4760-a921-8feee3f3a060",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0a101459-bbf7-4a1c-9002-e7deb782c008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726bc5b6-dbfc-4644-a2cd-aca088e55511",
        "cursor": {
          "ref": "cc9c7650-e29f-4c78-94c9-bf2bbfc35623",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a16eed5-4244-41af-aca0-a1f3da28de2c"
        },
        "item": {
          "id": "726bc5b6-dbfc-4644-a2cd-aca088e55511",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "641c8b3a-b61b-4c68-bec2-a2caa147ff1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada14df7-9767-431a-8da1-6d48506c4923",
        "cursor": {
          "ref": "25c97109-703a-40b9-9a67-a9d34b7e4af8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7bebec35-74dd-4802-92d2-f76da61d1388"
        },
        "item": {
          "id": "ada14df7-9767-431a-8da1-6d48506c4923",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "29be57cc-4569-4601-9f67-95780f38774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58266631-b581-4f1e-9a1b-27163b11d5a4",
        "cursor": {
          "ref": "4461a552-e23e-42fc-a276-4e93cc809061",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e5325af8-c76b-4ffd-837a-f90c91a27de5"
        },
        "item": {
          "id": "58266631-b581-4f1e-9a1b-27163b11d5a4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4488359e-8665-472a-9b02-8b044856a632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6429a48-3a5b-4d5b-b5e4-41951fd128d1",
        "cursor": {
          "ref": "d19bc4b2-9ed6-4583-a007-e6f978e67d9b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2002bbee-49ad-4a68-9ae3-d09adee64f7f"
        },
        "item": {
          "id": "b6429a48-3a5b-4d5b-b5e4-41951fd128d1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bdc0403c-919a-4cc7-ad93-0eef59cef0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b10e92-3d70-459e-b6fb-fbebb5303491",
        "cursor": {
          "ref": "d372cbf6-5ca5-4f36-a235-663c380d2cc6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3432047e-7ba1-4ce0-981c-f32f2e5a2e8c"
        },
        "item": {
          "id": "28b10e92-3d70-459e-b6fb-fbebb5303491",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1b44bb02-0054-4fe2-816a-567eb1dc08c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789f9306-e1fb-41f4-9c2d-7484508c33cb",
        "cursor": {
          "ref": "fa31ac48-d29a-46ed-aad3-d8732b388a94",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "578d517f-f99e-4856-be4c-8bff27279c6b"
        },
        "item": {
          "id": "789f9306-e1fb-41f4-9c2d-7484508c33cb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fb088bdf-197c-431d-bb65-24620860642f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d935df4-ad0a-4df5-828b-a1d9aaea553d",
        "cursor": {
          "ref": "f6e5aef3-3cbe-4ac8-93d8-f6902947c74e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "267d63fc-328f-4726-9866-393cc1c5e4e1"
        },
        "item": {
          "id": "9d935df4-ad0a-4df5-828b-a1d9aaea553d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "254a3796-211d-4464-b16f-700da591b752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c56930c-743e-4af5-8de8-a879cddaf5b4",
        "cursor": {
          "ref": "aae80a2e-c4d5-4900-ae05-904759ccb692",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b4042cda-95c9-4e3a-bcd7-33c10a268dce"
        },
        "item": {
          "id": "6c56930c-743e-4af5-8de8-a879cddaf5b4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a6be6fe7-36d4-498f-9804-87230df3c188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce1426b-fb98-466e-a202-829859c89206",
        "cursor": {
          "ref": "3951c7f7-6791-4eb2-8853-3892ff67fd8f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2c9197e0-95fd-489d-803f-fd1f17f1fb27"
        },
        "item": {
          "id": "dce1426b-fb98-466e-a202-829859c89206",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ba7a7784-da36-41f2-a700-5baea48ecb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158283d8-0d19-43e0-8080-39aeaa0a8455",
        "cursor": {
          "ref": "1725a965-fa55-40e2-b2c2-427c24001b03",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "853d57d0-e99c-4140-b443-bc54754e54ca"
        },
        "item": {
          "id": "158283d8-0d19-43e0-8080-39aeaa0a8455",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5fe882ea-1a8a-476c-be76-e9838ed4e7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e02bc75-9bb0-485a-8d7d-8d252cbd3d8a",
        "cursor": {
          "ref": "56f977fb-926c-4e31-bbb6-c5d7547939b3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8375dbc2-0da5-49e7-aea3-444cc3700111"
        },
        "item": {
          "id": "7e02bc75-9bb0-485a-8d7d-8d252cbd3d8a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb8de746-0599-4756-867a-4a159c2a0db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43e18d9-0548-427c-93c6-38964e749c88",
        "cursor": {
          "ref": "910adde4-56ba-4249-a75b-b91da114c2e3",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c2103651-c581-4fdd-a669-5e9cdf2ae352"
        },
        "item": {
          "id": "d43e18d9-0548-427c-93c6-38964e749c88",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e057a95b-cec8-4e9b-90e9-ac83702109db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee96c398-b677-46b7-bece-42d4159a578d",
        "cursor": {
          "ref": "bcc2fa80-c973-4c44-ad8c-0f5ce8f44ee8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "864047c3-8fb6-48ae-b8a7-48df511105e0"
        },
        "item": {
          "id": "ee96c398-b677-46b7-bece-42d4159a578d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6b4d9db4-a1ee-4d5d-b5b7-7be8eadac638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4074c36b-e52c-4733-ba2d-d74bfb460c08",
        "cursor": {
          "ref": "e4a81e8d-5c61-41e2-8397-79e7520ca576",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "86679798-57d5-438e-a5f7-34a91c7a950f"
        },
        "item": {
          "id": "4074c36b-e52c-4733-ba2d-d74bfb460c08",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "53b3af61-65f9-4d02-b13c-6c90af20e642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a1139e-18be-445a-a70a-4e899048d117",
        "cursor": {
          "ref": "d499652c-f479-465a-a695-f28d04435738",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ffd4e38f-22f9-420c-a64d-0b1bbfd182fd"
        },
        "item": {
          "id": "24a1139e-18be-445a-a70a-4e899048d117",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "22aa112f-98e7-4748-82a3-ec541480c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcefc2a-12b7-48c6-b545-49bd90b28ce1",
        "cursor": {
          "ref": "c9db2390-2973-49c5-93b3-19a22e1a8f7d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "92445819-5b30-4ef4-b743-5215b1998cea"
        },
        "item": {
          "id": "bfcefc2a-12b7-48c6-b545-49bd90b28ce1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cdfa0627-ec1d-446b-8e2f-1dacc3657e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285fa983-cfdf-4eed-b54d-78144d4c4406",
        "cursor": {
          "ref": "b24e33d7-e2cf-4d6d-99a1-619ce79e8922",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73b82a45-1af2-4e87-8e88-9312d9d6f3d8"
        },
        "item": {
          "id": "285fa983-cfdf-4eed-b54d-78144d4c4406",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8b891249-795f-4243-95b1-1be6da5b3a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff93155-e2e9-4758-9248-fbe839b1316e",
        "cursor": {
          "ref": "bb2261e3-77d0-4480-816c-8ae7a226b415",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "abfd51cd-c062-4f9b-b08b-1a957711643f"
        },
        "item": {
          "id": "eff93155-e2e9-4758-9248-fbe839b1316e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "48ae7fa4-aab8-4f4e-acfa-05c50710c60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d8f7f4-654b-4827-b7a6-6d0cf29bca4d",
        "cursor": {
          "ref": "2061d002-1957-4052-b9f3-1f8ab2126e88",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6880a8ae-6d9f-4309-97cf-b79a891f3410"
        },
        "item": {
          "id": "11d8f7f4-654b-4827-b7a6-6d0cf29bca4d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "92bfdd7f-5149-464e-a634-c94d733da350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a4e09d-7e94-4bc4-85ec-4e5a970c7c6d",
        "cursor": {
          "ref": "694c9457-b1c9-489a-b3f9-dd385400b67c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fa5ae570-d192-44e5-9b0c-25ecb27c2bd3"
        },
        "item": {
          "id": "a1a4e09d-7e94-4bc4-85ec-4e5a970c7c6d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "88694d3b-9018-4c84-b043-5f19aceb0d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d4f4c4-7f37-4ef3-8403-57d1886fb5b4",
        "cursor": {
          "ref": "04a3ea09-3d30-4d83-b878-85bd964a3677",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "54cb04e7-9348-42b3-8a10-2066cce25890"
        },
        "item": {
          "id": "55d4f4c4-7f37-4ef3-8403-57d1886fb5b4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c72b83d3-a686-408e-a0fb-62b689dbbfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056e12f5-2b47-450b-8705-5daba4d94f4d",
        "cursor": {
          "ref": "b45c0cbb-d22d-4574-a329-0b716b911980",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "75c97e5c-d456-4b3f-8d20-00078ab1137a"
        },
        "item": {
          "id": "056e12f5-2b47-450b-8705-5daba4d94f4d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "51a22195-1a65-463a-ad74-787caa463ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0f14d7-b05a-42c4-a848-e272b6808067",
        "cursor": {
          "ref": "a14e5f70-991e-4306-ab33-9e03577c61a8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "28bebbeb-0f60-4f06-9446-334555311a42"
        },
        "item": {
          "id": "bd0f14d7-b05a-42c4-a848-e272b6808067",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7def7585-aaaa-44a4-8267-be59a6f5260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1c2e8d-c91c-40f0-ba90-ebe3f3e9e187",
        "cursor": {
          "ref": "0bb63461-5e4a-4cea-a615-f74f660043b9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4ba0e8d7-cdec-4152-a867-af5d3b634f7d"
        },
        "item": {
          "id": "bc1c2e8d-c91c-40f0-ba90-ebe3f3e9e187",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c733e97e-fe93-4872-82c0-8f132706ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f3b990-3838-460f-b970-1ec958a0008e",
        "cursor": {
          "ref": "ed202c72-e0e9-47e1-8a77-0194e6aeb4ba",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "16b53521-df5f-4961-b98a-3ca03da6c7bd"
        },
        "item": {
          "id": "84f3b990-3838-460f-b970-1ec958a0008e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3bf01eb3-5fea-4ad3-b49d-f2497c7dc838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856d0df4-3cc6-4667-9547-04294d320f6b",
        "cursor": {
          "ref": "67466924-81cc-4248-8bfc-26e20dac8c1d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bedf8ea0-5426-4f33-9ef8-390205412ae7"
        },
        "item": {
          "id": "856d0df4-3cc6-4667-9547-04294d320f6b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "675e6149-9dce-46cf-a824-c9db17268e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327271d1-bdf8-4116-8903-b0cbab468179",
        "cursor": {
          "ref": "fe734da3-9496-4fdd-9a7d-4d91dbad6fc5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "277d3420-a14e-4e61-9071-fb3a85c4c9c3"
        },
        "item": {
          "id": "327271d1-bdf8-4116-8903-b0cbab468179",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1d893773-9ecd-410e-8ced-313a296d17aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31247728-877f-4304-8abe-bac90920fb05",
        "cursor": {
          "ref": "c9d34e0d-3a07-4fee-bf72-99d94e9d4281",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c1cdb5e-af16-4a1f-80d2-d96a39c6d4e8"
        },
        "item": {
          "id": "31247728-877f-4304-8abe-bac90920fb05",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "414dadc7-4e2b-42a5-90c9-edd0fb844fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541af8f3-03e9-494d-b26c-a3b8ed5e903e",
        "cursor": {
          "ref": "7c18ff99-e058-48bf-bb97-eb594532bc74",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b34827fa-a7e1-484b-8561-a6d6aa4a0f6d"
        },
        "item": {
          "id": "541af8f3-03e9-494d-b26c-a3b8ed5e903e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a59782e1-6809-45ab-a30e-64196f2725bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d9438-db00-49a3-be52-4111daafdef8",
        "cursor": {
          "ref": "46969cd5-0c75-43e9-a1df-1f1efbad9b4a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4cb4edbe-88ff-4475-bf1e-c8ebd2db4481"
        },
        "item": {
          "id": "b94d9438-db00-49a3-be52-4111daafdef8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ccd2b9e6-3576-4b3e-a3ee-e85f87e51c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983c1c1-d8c2-4a6b-bc10-f251dd99a22e",
        "cursor": {
          "ref": "a77e6d58-6182-4eb0-94cf-2dbba3cc0092",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c0f2e708-383f-4956-9f5d-b92d54bc3845"
        },
        "item": {
          "id": "6983c1c1-d8c2-4a6b-bc10-f251dd99a22e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d5b7ca24-db68-4b9c-9d30-2882c7f1eda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bf0c8f-c4dd-46f9-a14b-a019f08b9d90",
        "cursor": {
          "ref": "72f4303b-1dac-42a5-a904-f4c9f9dc2850",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8aef035c-6a23-4df2-85ea-6b54259dfa03"
        },
        "item": {
          "id": "e7bf0c8f-c4dd-46f9-a14b-a019f08b9d90",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3d57abba-2f43-4482-933c-84d995acf366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e9cc93-542c-44f8-8c2a-d565fda3655b",
        "cursor": {
          "ref": "b597042c-d56c-489f-bb6f-3320310b2c8e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "69d561a4-b2da-4d89-a133-6d2794a0e58a"
        },
        "item": {
          "id": "c4e9cc93-542c-44f8-8c2a-d565fda3655b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "89f343db-cb28-4f4a-8b23-9f1ec202a64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfc5953-c66f-489e-9017-007412ece54c",
        "cursor": {
          "ref": "0a6a2792-ce45-4770-accc-6780bde1ad0a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2036291d-b8a0-4e0d-ba89-4ed54ee08cb8"
        },
        "item": {
          "id": "1bfc5953-c66f-489e-9017-007412ece54c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7ef9f26c-fb7a-4822-a398-b6882acafbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8e6c11-1ed0-479c-844e-3441423a0225",
        "cursor": {
          "ref": "6883c4b6-eae5-45db-b78d-ba5e40e2e13b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3c5e7b26-a3dd-4f71-b2ed-f23a16cbb85a"
        },
        "item": {
          "id": "ff8e6c11-1ed0-479c-844e-3441423a0225",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1b75ae1c-71dd-4979-b9fd-026278ff7bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f843d-1940-44dc-89c6-940d18087d3e",
        "cursor": {
          "ref": "3063b5be-f7bf-4683-8557-ff1d84a9d3cc",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2bb0b17e-9a71-4e41-a00f-743df7221d22"
        },
        "item": {
          "id": "dc1f843d-1940-44dc-89c6-940d18087d3e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "60188ce8-5c74-436e-8833-a01fe273e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349cf2e1-7cfd-4311-91f7-fed871e16ea3",
        "cursor": {
          "ref": "3f8bfe06-ec5e-4771-a493-a13fcdf80cff",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "64cbd591-8543-42f8-acb8-f1a77feae0fe"
        },
        "item": {
          "id": "349cf2e1-7cfd-4311-91f7-fed871e16ea3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50a24310-6305-48df-bda9-1f6be8b8d00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89174be2-67f4-40c0-b9f5-d811ffedba77",
        "cursor": {
          "ref": "95ab848e-770c-4975-9fa2-9d32a6b1725a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e82d3229-22f8-4626-b3f8-4bdab0ab6760"
        },
        "item": {
          "id": "89174be2-67f4-40c0-b9f5-d811ffedba77",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c221685d-8353-4cc2-b771-262c8c31016d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1091f9-5dfd-4d2b-b3f8-25015d351b91",
        "cursor": {
          "ref": "d6016fea-7336-4945-8a9a-2e2cb06bb542",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d6bae694-bb1d-46fd-92c3-fc88283a3002"
        },
        "item": {
          "id": "df1091f9-5dfd-4d2b-b3f8-25015d351b91",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "32e29699-d970-47ed-843b-914b0e144dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f3a90e-b14f-42c6-896f-6713fa91d5a6",
        "cursor": {
          "ref": "5fcf77f6-f0e7-4458-b708-b9c2466a857a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c0ddf02f-caa8-49d8-a2f1-c75f402e26d3"
        },
        "item": {
          "id": "30f3a90e-b14f-42c6-896f-6713fa91d5a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "132fd1a0-7a45-4dcc-8c52-739c3c8cef45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a41a2f-2a5f-4464-b403-e653ad6beb7b",
        "cursor": {
          "ref": "f3cd4ff6-e679-4578-99e9-80f45efc32c3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9d3e4ab0-8e45-43aa-a261-fb86da5a73da"
        },
        "item": {
          "id": "46a41a2f-2a5f-4464-b403-e653ad6beb7b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f932dd93-531b-455c-8785-ea4f2c0d6067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317d037-72fa-42a2-8e7b-0600d69c6c6f",
        "cursor": {
          "ref": "53e75381-0847-485a-8d0f-bcbbc2bb5c79",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5ae4edc8-f7d2-4004-865e-ca1becef0d9a"
        },
        "item": {
          "id": "7317d037-72fa-42a2-8e7b-0600d69c6c6f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a959d33b-2555-4439-8c1b-e535d1c165d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e65f2b-646d-4ace-adea-b675943f7704",
        "cursor": {
          "ref": "82ae5173-5373-4055-9c3e-4c2469ee2475",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1a37f0d2-0eb7-4a8e-8446-4395c524b97d"
        },
        "item": {
          "id": "c0e65f2b-646d-4ace-adea-b675943f7704",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "550c7902-0b61-48d6-bdbe-55362134fbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3846889f-7df1-4271-b98d-ad1cedc6c472",
        "cursor": {
          "ref": "4d30dafe-12c9-485c-a7ec-6b241f4c16ec",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef3571ab-2d1b-4cc1-a305-d52ce4f25757"
        },
        "item": {
          "id": "3846889f-7df1-4271-b98d-ad1cedc6c472",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "92382bae-8b8c-44d3-b0a8-b63e494bbf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb82c42a-d652-49f0-8685-827262c0ef2f",
        "cursor": {
          "ref": "e289e027-d451-49eb-8047-680cd4f4bed6",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "17f10317-a6eb-4672-9141-68e416dcee1b"
        },
        "item": {
          "id": "bb82c42a-d652-49f0-8685-827262c0ef2f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f7d15ae-2952-4799-b818-3f2debb1b17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b1ebf2-fbc3-4ec8-851d-fcffaa0e71c0",
        "cursor": {
          "ref": "74429b16-9c77-4224-9a44-e8e60f7c3dcc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a4cfcf9e-b5df-4f86-97e4-537d6fe7d025"
        },
        "item": {
          "id": "e7b1ebf2-fbc3-4ec8-851d-fcffaa0e71c0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7607abae-4e4f-44b1-be35-21c31528d320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ef7df2-dbf2-4e25-989c-3ed631e0b07b",
        "cursor": {
          "ref": "808c1610-2c7f-455b-a5b1-ab15692690eb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2dd7b8db-c6d0-404e-9771-2715ca00221b"
        },
        "item": {
          "id": "44ef7df2-dbf2-4e25-989c-3ed631e0b07b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5a029cee-78bb-4f4f-9156-82719506142c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75062a08-98bf-4962-a71e-3c6c362c6ac9",
        "cursor": {
          "ref": "0929687c-b822-4102-a04f-15fbcbdfbffe",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ef73dc6e-936d-4b85-8235-207ef1ec670e"
        },
        "item": {
          "id": "75062a08-98bf-4962-a71e-3c6c362c6ac9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eecbcebd-c365-4c5b-a6e0-c3366576409c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf547fee-1868-4b3b-8a19-667ce3cf5faf",
        "cursor": {
          "ref": "df9627d8-8a8a-4fcf-9122-cc312c0e3ead",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ad3ed1e6-3c5c-4eee-a59d-b469543310b6"
        },
        "item": {
          "id": "bf547fee-1868-4b3b-8a19-667ce3cf5faf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3307ece7-0828-40e1-a884-0c9c09268071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d02d7c-17db-4a25-988a-438f4b1643bc",
        "cursor": {
          "ref": "80ca75d2-a1e1-45ff-ad59-f41d36fbd65c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a0abbf3-f4a6-46bb-90d5-caedd4795c90"
        },
        "item": {
          "id": "e1d02d7c-17db-4a25-988a-438f4b1643bc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4767ae71-5133-400d-a7e5-40c50c4d5aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3c00d1-64b8-432f-8457-d5ebda9694eb",
        "cursor": {
          "ref": "1e006f96-8c0e-4c6a-8e5b-6b7a08dc13a5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "afab2b45-7f1c-43bb-a367-28af7580e49a"
        },
        "item": {
          "id": "ba3c00d1-64b8-432f-8457-d5ebda9694eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ede1d4fd-c87b-4a4c-b982-bfaac4f6a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9c9d2e-60d2-4e15-8b2a-fbe65aec8936",
        "cursor": {
          "ref": "da79254b-a92b-4717-bc75-974c658a3538",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a2aec7e2-791e-4e31-a218-09d132e60d7e"
        },
        "item": {
          "id": "2a9c9d2e-60d2-4e15-8b2a-fbe65aec8936",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e32065e5-94ea-4ff9-ab56-c596f17f134a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7176fd8d-d1e3-4d1f-9068-171028770670",
        "cursor": {
          "ref": "363509ea-631f-41c7-95d8-e90572424160",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "81c1e352-3fb9-4fa9-99c1-cd51cb7e7d9e"
        },
        "item": {
          "id": "7176fd8d-d1e3-4d1f-9068-171028770670",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e02d7509-db30-415e-9e0e-baae765aeed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca60892b-45f6-4d37-914d-e483ccfc2dd5",
        "cursor": {
          "ref": "0a871123-b87c-4cf6-8be6-e92747b6f72c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "caa946ab-f74a-4f6a-8c5d-33a7a429583d"
        },
        "item": {
          "id": "ca60892b-45f6-4d37-914d-e483ccfc2dd5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "473dfff2-da20-4e08-8fb0-a952abe870cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e86eb23-b67f-4bc3-b515-c263d0f1582d",
        "cursor": {
          "ref": "72f64d95-8cca-418b-9b53-f68a6c544fa4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "71b56a7e-9f5d-4f76-8489-fd75352f86ef"
        },
        "item": {
          "id": "0e86eb23-b67f-4bc3-b515-c263d0f1582d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2199ae6-9a11-4c03-b2d2-be392e74ad52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7fa4a6-0314-4aaf-8f78-87d8ab780be2",
        "cursor": {
          "ref": "a5716f6a-8df2-4d26-8571-72774d7939f4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6333446f-840a-4419-9de8-67138f7f168c"
        },
        "item": {
          "id": "7a7fa4a6-0314-4aaf-8f78-87d8ab780be2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d276262-cbe9-42fe-bd77-5501b5a12217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f815ead-57bb-4b3c-b4ee-fa5dff6a4928",
        "cursor": {
          "ref": "5ed8dd99-5277-46d2-858f-c26e63fb4295",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0817ab5d-ba9f-49ca-8fd2-5b430e1fbb77"
        },
        "item": {
          "id": "7f815ead-57bb-4b3c-b4ee-fa5dff6a4928",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8bf82171-9a27-4b26-be61-e9ea2fed718f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121d66bf-2b55-4221-b198-af730f4dbf3c",
        "cursor": {
          "ref": "32332d9b-be79-4006-98dc-4b1ac7d8b095",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5bf1dbbf-0be0-4a4f-bd50-6b3b83f14ac3"
        },
        "item": {
          "id": "121d66bf-2b55-4221-b198-af730f4dbf3c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7c3254a0-9e2e-47eb-97a5-080cb33eefa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a521778-be2e-4afa-9819-27653f609310",
        "cursor": {
          "ref": "92462816-9a61-43c7-94e0-ff75f1f6f8e2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "834aa013-d550-42b5-89aa-e74faee8ee22"
        },
        "item": {
          "id": "6a521778-be2e-4afa-9819-27653f609310",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e85ef8ee-141f-44df-b86d-216274241b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c34752-89c3-436a-861b-f23abc878634",
        "cursor": {
          "ref": "4e0820bb-9bf8-4b20-bd06-d6c2b6d212db",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "43c46de3-e576-4bbd-aa24-f46e1fa9368a"
        },
        "item": {
          "id": "15c34752-89c3-436a-861b-f23abc878634",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fb949dfe-32c8-4fdb-9d63-b8bf8f2033ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115dd1c8-de5f-425e-87f7-facc9fc2d543",
        "cursor": {
          "ref": "b640fc8b-f4ea-4a40-8783-895c4d42e174",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "49d1226c-e951-4e9a-b134-db8c00ef1e10"
        },
        "item": {
          "id": "115dd1c8-de5f-425e-87f7-facc9fc2d543",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ca338741-1cc4-4684-a03e-aaca25819f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6892f601-ead4-49cd-9f83-661a09379811",
        "cursor": {
          "ref": "9555e9bd-9f60-4e31-aaf8-1b6542d81549",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d23c333b-061c-4d0d-b9b6-b9e05c995285"
        },
        "item": {
          "id": "6892f601-ead4-49cd-9f83-661a09379811",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "39f79eba-af5f-4b90-88ef-c715cb348dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192053c-be39-4832-955d-2aaa53ea8bc7",
        "cursor": {
          "ref": "1d02c86d-d52a-4c74-801e-848a2792c130",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3905ba28-5de7-4f2e-aff0-7469e95a5053"
        },
        "item": {
          "id": "a192053c-be39-4832-955d-2aaa53ea8bc7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4999b524-ddbb-4fe8-892c-df38908763b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259373f1-621e-4aae-b87e-2a489aa442c8",
        "cursor": {
          "ref": "d7661295-8afb-4352-a276-148b442aa286",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9b1576d2-a070-4da5-b36e-fff03066df1e"
        },
        "item": {
          "id": "259373f1-621e-4aae-b87e-2a489aa442c8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6ce4070e-1df8-43ec-ab0f-254dba9bbacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08397e9-3370-432a-8b96-8465ce30044f",
        "cursor": {
          "ref": "fd602d67-4746-4395-b366-65b3a3d27b33",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b156cb2-41e5-4781-a912-082d352dbe77"
        },
        "item": {
          "id": "b08397e9-3370-432a-8b96-8465ce30044f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2fdcdba-5502-4195-ab44-d54269d93bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2562ea8b-7bcf-4416-becf-1df262757370",
        "cursor": {
          "ref": "0708c9eb-dde0-4d94-a7c7-7fb5d9b78f0d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f52c9260-9eac-4940-a10b-07467e159ce1"
        },
        "item": {
          "id": "2562ea8b-7bcf-4416-becf-1df262757370",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dd261479-36e6-42cc-a484-12e3d1e4e38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a3ced2-f20c-4540-8954-970eb5be1fed",
        "cursor": {
          "ref": "7df8b82b-406f-41c4-bb0c-9c8d54e453f6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6a84e863-0275-4756-a7f1-39e7fd5e5729"
        },
        "item": {
          "id": "a3a3ced2-f20c-4540-8954-970eb5be1fed",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3c29c23a-dab4-4114-95ee-6af0346c25bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d9500-d25d-4e7f-a47e-2298a42cd620",
        "cursor": {
          "ref": "1a78c276-7107-4b5e-be46-83d01ee5ee8c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "092acd37-6877-45ba-8da2-1b6cf0265f68"
        },
        "item": {
          "id": "8d5d9500-d25d-4e7f-a47e-2298a42cd620",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b3ef006a-22f9-4fae-be64-7edb43c21c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d2873-2c30-4031-8bed-7253833005ac",
        "cursor": {
          "ref": "e7a4419a-dc5c-4b50-8bdd-f05badf8664d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "97e00709-d496-4355-9650-99ecb4b48468"
        },
        "item": {
          "id": "ac3d2873-2c30-4031-8bed-7253833005ac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "77ec4032-7c97-4407-82f6-94bbd185f509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94440e33-7d29-42be-84e1-c7c11b5d220c",
        "cursor": {
          "ref": "844e7ce7-8ea2-4689-98fb-b807874806af",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2a4667c6-eceb-41a9-b8e8-78d120e54098"
        },
        "item": {
          "id": "94440e33-7d29-42be-84e1-c7c11b5d220c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e92d8883-0245-40ec-a9ea-ad8a056defda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ee0bc6-88d2-4e53-b79b-d01b19c4529d",
        "cursor": {
          "ref": "eba81750-7fca-45d1-9637-eabb67a8a4e7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "76e63948-1276-4e11-8506-ba09097e43af"
        },
        "item": {
          "id": "77ee0bc6-88d2-4e53-b79b-d01b19c4529d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d94e6b38-92aa-48e4-9564-9e255cd70ae1",
          "status": "OK",
          "code": 200,
          "responseTime": 2433,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c6d1c8-b491-4a97-bc82-839dab60821c",
        "cursor": {
          "ref": "31f53a19-4e62-4d8c-af3a-fdf1cf84fd3c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b6851188-a866-48d0-9582-27c93026d49a"
        },
        "item": {
          "id": "a1c6d1c8-b491-4a97-bc82-839dab60821c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6cfb9477-41d3-4190-ab6c-8e59f121d530",
          "status": "OK",
          "code": 200,
          "responseTime": 3463,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2e2fde-a0a0-4837-a49e-46384441fc7e",
        "cursor": {
          "ref": "126a9b5c-7069-4be3-b350-646b384b171c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "878ee43f-6b03-46f9-8ba3-ff87364ee8fe"
        },
        "item": {
          "id": "6f2e2fde-a0a0-4837-a49e-46384441fc7e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f26b0aad-84c1-4b94-8146-521f5410e497",
          "status": "OK",
          "code": 200,
          "responseTime": 2957,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4425888d-5790-4666-8ad1-d157857360e4",
        "cursor": {
          "ref": "c25ecde6-4407-47cb-8d7d-60d94335a78b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e320984-3986-4d9d-9e86-943e615a708f"
        },
        "item": {
          "id": "4425888d-5790-4666-8ad1-d157857360e4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9a85ba9-ffe3-4401-bf23-49a9f2b2745a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4425888d-5790-4666-8ad1-d157857360e4",
        "cursor": {
          "ref": "c25ecde6-4407-47cb-8d7d-60d94335a78b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e320984-3986-4d9d-9e86-943e615a708f"
        },
        "item": {
          "id": "4425888d-5790-4666-8ad1-d157857360e4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9a85ba9-ffe3-4401-bf23-49a9f2b2745a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0776efbc-2c77-4e7f-920b-d68433394a0e",
        "cursor": {
          "ref": "f620bed3-a4c0-4052-b9fa-7e1587e5e351",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9efa8b47-6bac-41b5-b9a7-d58dd98e13f5"
        },
        "item": {
          "id": "0776efbc-2c77-4e7f-920b-d68433394a0e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9acfc5e9-a334-4457-bd88-eafa749af0c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1179d5-d6ee-4db4-8ae0-305a1a2ddeaa",
        "cursor": {
          "ref": "c5d87e38-9ff7-4eec-a36e-5162f5990f10",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "978c15a7-a282-4b73-8af2-c5241c75ca6e"
        },
        "item": {
          "id": "be1179d5-d6ee-4db4-8ae0-305a1a2ddeaa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20961534-da2c-4b3d-8215-df87ec098207",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}