{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f7e7ebc7-20e3-4480-888d-078d8f6138bf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dac70a72-8feb-4b73-a9ab-3bf78dfa2911",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00ca12b1-0baf-4da6-8206-fbfa860565f0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fb61d899-57f8-4b15-a7b6-81b57d4cea42"
                }
              }
            ]
          },
          {
            "id": "8b82e5ce-3b8e-425a-86d2-e3aa400a8c7f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8330dab0-f719-4508-89af-3ef5296a4d92",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "525abf79-3d57-4abd-8077-045dba40796d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a4c03b6a-df6f-4d8b-a926-1113b5fa3319",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8a48e3bf-ad4a-404e-88bf-8dbf6eadb047",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3eae9e85-ef5f-47cd-82e6-2aa0b05f316f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d9bad68-5dd1-404a-af5c-15b8499a903c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26017b90-8715-4cc1-9e96-a7122217ad4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f6e03d6-fbbd-4652-a2d4-b15ea6b11914",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3fccb9cc-b103-49cb-9310-6bca06892af2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e4bcb86-f221-4d4e-9768-ff80572a449c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2b158c0-e700-4d1a-9fff-637066f5ad0e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1db3c2f-4fc6-42fe-88cb-3061c70eb52b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "73c1ff8e-a12f-4705-baf6-c11abbb5864a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba3e1f15-463c-487c-812b-1148aa9c56e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c507380-3f86-4f3b-8e39-eec6e4c0e5cb"
            }
          }
        ]
      },
      {
        "id": "c124220b-affc-4620-9368-6401aacb1e67",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "21581f48-40fd-4c89-988d-c21dc9c51d32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "199dbbb2-cb42-4a5d-a28b-68bce7421832",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4bac8451-fb91-4a9c-99a9-79677670fb63",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a07f6f3-eeff-4fbc-ae85-cb681efdf91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0667380f-1ca9-4c83-82d3-7f83c7d3402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c420874b-b92c-4b96-98b8-1bb4b2ae4a56",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f5ceb5-11e7-4e05-859f-f55125304981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b280eb8-0a2f-49eb-875e-e743e6f29e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1f62b8-cf6d-4031-88d7-bb191344c498",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd22551f-f1e0-4e06-b626-1d8012dca1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bad1b9a9-20f7-4c52-bef0-888075ebe4d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8726e84-bddc-46f7-9e85-5f78fb772a00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee355d3-8b0d-4a84-80ca-406634f76346",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00b0f35-1420-47d9-a00b-8cc55fd295c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f8626f3-9e1c-44b1-b0a3-6dea18f09c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7968a7d-68e1-41b7-96c0-c31f23ebe4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55ab558-8b53-481a-b884-1f07668d396b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "be616458-4e8e-4ce0-9052-62b6fcea247c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51c977da-1093-45ef-a921-a1a8312315d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "171a2ffb-8dcd-44a7-9060-33103f25ca37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc15496b-d0af-4dc7-8532-aaba4d76d645"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a61b449-d37a-4fad-aa6f-85f29005e775",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c94b2b9a-1764-477a-bbd9-e26f1863047c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05ba76c7-4870-4fad-a46c-f0ddc477fef6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a11dc89-50bd-48c3-99ce-1209cbabf8e2"
            }
          }
        ]
      },
      {
        "id": "d6f57101-b041-4531-82e5-3c35f6bd07df",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6be8090c-8e4b-416b-bcce-02106803b781",
            "name": "Negative Testing",
            "item": [
              {
                "id": "222455ec-01d9-4004-9fa4-6b3969a0e451",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "86f9c90c-7610-4b23-bcd3-a22a2fea0d6b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cb2324-7704-4485-87e9-72e8b43532a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c41a484-e04b-4cc5-a6da-270b3292576a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975f568e-2e54-43e9-ae1e-2f64c0ac58c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a05531a-9972-414c-b5c4-823091f9830a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db0990c-00e4-45da-bb82-b8510be52848",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb4da33-65c1-4147-9823-e8df8171955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e138db9b-3327-4608-9166-0b6e2d86337f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37db2957-bc17-44cd-b9af-f247bc246685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3aaa6ad-397b-4574-a30c-7fb4d96e0083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f34e67-3282-4f70-a16e-6fa4d0ad5ead",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4560db4-48a3-4c7b-abad-f3b1baccb1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0216ad1c-29f7-496e-87ca-96b6fc2504e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d663a454-65a1-46db-8d61-9af142a523ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cda32e64-3e7d-4a54-b228-195d3050c524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b4d46e-7ae9-44c6-88b3-6f79e69e4794",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f1b5b-c2be-429b-9e23-73303b929992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a10a634-76c5-4d1c-b507-fe3180e72cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea83b9-734d-47c5-997f-aaf7fd03884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0de9e94a-e9bf-45da-a3bc-f8ef55e0ff8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30279828-14ba-4033-9126-d395bf649fce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c65a134-540e-41ab-aee4-5dd248e15070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d466bc16-7c20-4e68-b046-5aa4ca6926de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55f4c5d-c225-48aa-939f-20bdd0866479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39e35efd-f81e-4076-988d-57db48f22e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963ecc0b-359b-4422-88fe-1ce4e0eef6d9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59241c43-838e-4b66-81e9-a9348fca6373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75433f6-cbe8-42d1-a16e-81337de95d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d43bdbe-31e8-45a5-a04f-a1f61e40ee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "277b4d18-5031-47c5-a03e-0080a3d808fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82b5b47-81b7-431c-80e8-6bac817c756b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372779e9-4f54-4d0e-9e38-a351e5c3c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca244a5-fb8f-495c-ad9c-5e449f0e511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9d5fc3-5f91-4c33-9fec-bd82068fb0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "759b470d-7920-48ac-9340-5c93422f676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2212d67c-c956-4565-a784-7108ba15b6dc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c36a1a0-c753-4d26-96a1-7d0597766bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01422bcb-9fc9-4d7b-b4dd-8aa05c67eded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b74e8cb-dc65-42a7-a88c-adb83b91da15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f748a1be-3ee7-4d78-8650-07677ce7424d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58011d8-e002-4cd3-a737-bb026ab035b0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b81563-d230-4580-81bc-31fdc1d0f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3b669b-0bc2-4ef5-bc66-bfbf578dfc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8480c4a3-dbc0-494b-8262-37c0e19fef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc08a5ea-c18d-4611-aa88-c71367a7d6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7923613-fbb3-4d58-b5cd-307030cbb9b1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833ab960-e9e7-4641-9ed3-ac8c89038360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63958b9d-e5ba-401a-9f8b-d74dabbcc9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f72ad23-a50a-484d-8ebd-12cfdb1a17f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0955eda4-e670-4f1e-b3af-e6dc93187220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47da5b7a-cc3e-4807-9a55-3a9b32d98101",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbfa79e-6bb2-45f6-9a73-7cc759f108f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6f8369-a849-42ee-95f5-c0bd31c397f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44e4eb7-3d4b-41b9-8590-49e3474e4b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "853d67a7-ad7c-41c2-a770-82a825a6d11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcca156-29c6-49ff-8e24-f11fde496e5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de635b7-efac-4aa9-950e-2ade33a2be2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e8f516-7683-49ba-aff8-69340b300dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324b9bff-21d6-4118-89c4-cf39b86be1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f151491-2d25-4ba2-bb72-0af9c74a2690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642fd1c1-eb9f-4f3f-9a61-97f85ade9a74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff777dd-ce1b-4f7e-a552-112fb5adb3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b5baf9-dcf8-4e12-907f-641d2ca0f4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf8d763-7649-4f48-92d4-25a5119a48ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12f5eb4f-06dc-4ca0-b677-d27544e7594b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd942b17-8b91-4302-a2fb-8a04f4b2c034",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369c0915-1029-4620-915e-52ccb2fe9277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6065d299-215d-4e7b-afa2-4d958c0e1786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45694bb5-e186-4c22-9a6e-ea40876814d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53c13741-1aaf-47ec-8287-5d8fd08f009f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985dc0ad-1fa6-4be2-9bf2-f5b4bc0080bd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10778efa-4dec-4a21-9579-9133a8418aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ee2b5b-6d2c-4160-b190-f5aca1c9db62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7313110-3b69-477e-af61-bf531577c66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a7bd8c0-bc07-427d-9264-7542fade635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d644c26-4778-4aa9-b62c-24e9019b6d4b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da83b44b-dbe3-429d-b8a5-483c51126dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ca2b1c-3a6c-4f38-9996-e54ec3399b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7df19df-8879-4191-a12a-1b172bbeeb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e98c4173-60c5-4e83-a40b-96ac41e3cf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add3460e-f0cf-4e01-8fc5-f4e273efdffd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2025b45-689e-42ec-80a0-bd86cea331e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08683fd7-5b37-4882-be2a-993a2e7bd957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48639022-5176-4111-9c98-56998c8c94eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d9da7a6-6726-425e-9d9e-71caa702b8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40cd5b7-1fea-46bb-aeea-4cb32ebe2592",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91be2908-0ea2-4aa7-bb02-315ad3e0c775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56448d6d-07c9-4e36-8220-11ccfa71fd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e7481c-19cd-44a1-9c79-fb05b13b9dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e3a86b-7efe-450c-bb9a-777f2d6a2e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3f23f6-d313-4dab-ae4e-062fcf9937a1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40667be7-d589-4f89-94cf-7b2a9eebe2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5cfed5-5c4b-4929-b45a-1c640be618fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fde40c-c57f-4d0c-99ab-ad0cb9215568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6451030-46c6-4c80-addf-b7e7d709b2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25903806-7dea-4720-9d6f-5cc63fc07fe0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba98b9-13ff-43f4-8735-76ad2ce504eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce68d08-f8ff-4f55-91ac-ce102df44ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ff5151-e8ca-4b59-a1c2-89cfd83d72a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b02e14-36c8-4b4e-a045-c79b02804408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5cf888-76cc-4f26-b74a-591f84771826",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f85775-d879-4790-b3f1-0730e355d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915fff8b-a48e-4c3d-b3c2-a81e0e4bb360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d924d7-e428-40ba-8561-3032e3cf44a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a726a4-714b-49fd-b53b-ff7a4d554e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fcde88-cc3d-4600-9d5c-dbb500b94128",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0247136-a91d-4aac-8b3a-d3677e90473a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af59a4df-19e4-478b-8513-43533392fd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc579d0-898b-4b31-843e-7326f66372a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba292320-13a0-4406-a219-f11ad76d643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a646b3-abdc-4154-94d7-6afa6af5f7c8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513108ff-2200-46b8-87ea-98b24b81d4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaed303-b2ab-4a46-bcfb-a862ae15015c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4acac6-f2de-47fe-954e-c49f385e0375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89824635-e6ce-414c-8b83-2b26eff5e4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce894d25-a814-4abc-8eaa-ed0613814d26",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a9be40-34eb-4f8a-9ca3-e603332ddeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd13820-e7ab-4c7b-9458-286cd057b568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a854918-7af3-4167-89d1-f6f42fca0665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "706ddafa-53bd-4c5e-a8b8-188a8ab19c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39be9551-3385-4f8c-9e7b-04ea5699c24d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84be9e3a-7091-4737-aed1-5affe99eeb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3ebbbe-5ddc-4e29-b430-f900527848ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592dffb8-427b-44e2-b1cd-e310fc877002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "656498a3-7310-49fd-8463-f3dec32deb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1af538-437e-4531-9619-d405b4d95ade",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceefef3-0e9f-4bad-9587-b8749792007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49236bb1-701c-49a3-bc97-31f2ce7b1762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720540e2-eb77-47f1-a5e4-5f05dfb8d63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec69c336-dcce-485b-898b-cdd5e570f1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91daab8-ca32-42f9-b80d-80d7d1512d58",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec83d8d9-9c61-4a59-b021-97fd7735fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c55a7a8-c98b-44d4-bf95-a38d0f701d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d2e5b3-23fc-4f23-8769-a274fd32cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45cce25c-3787-4c2e-aa12-7f31bb2a2150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6181a0-1f65-4bc8-bfb0-5602a5461b5f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b3032c-ffa5-4fcf-ac75-83fbcc81cb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d91df3-3ec1-447f-bfe2-9c7b553da880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0d0e85-3f36-4786-a34e-0911b3157826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "becc0092-673c-4b11-884c-3084ec18819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1af5820-7a85-497e-a119-37058fc3ed96",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068f2eb3-3a8f-400b-acd4-612a2f54c5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a529ebd-a863-43ca-bee4-bfa152ba319d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14acdb93-f752-48aa-b114-1e0ee4de3773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed6949d-1069-41f4-8f03-f46cb6b23720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d2a207-166e-461b-9830-57bc72dabe37",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da29b27-6308-478d-8ff0-4f4ccdd28cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c36c0e-0e2f-4c0f-a2a2-714f93cac2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c921a4c8-7140-44c6-bbcb-4d1132bc70b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4f78c0-8898-49ed-bac2-ecd4378f7ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d2315-0ec1-4624-b351-2b7db19872fe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e06c4f-3f70-4066-bdea-fb982d09c26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77e6c72-d0d7-4e8a-97a7-890d584ca4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cec516-d567-49ac-8f37-388e422faa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb184971-0feb-49a3-b02a-e833ad29e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cca8d1-ac73-4c58-89bb-468451e17bd2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b338d765-0723-445d-83ed-3528d0bfb4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793eea2f-5f31-4c61-b090-c5a869ce84e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95aa7326-d20f-496c-80a7-c907643fba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "886764f8-4e0d-48c8-aa38-a79763ffe374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089c3bd3-5952-4ba2-83a7-53764961ec81",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683c776d-1b36-4898-875d-3cdd02235adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ace35f4-171a-4947-a927-28022306385f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506fa3c9-24ec-4922-b504-8befda54df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01bb39ed-c9c1-4e0c-8026-3bf18a077391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65745faa-edce-4d0a-80f4-365fab7db83d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01029b27-bdb6-481b-a4b6-49832f9d4bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f11d6cb-d91a-4e40-b030-3ce25d16f07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c23922-ec3d-4de5-ba06-a3018a923254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6b4d21-0796-43ab-9947-5a7b4919b748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f473759-ad46-40be-bc76-f10c258ee35a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d33bbed-3778-470e-9d86-43ddd4a8c219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda492e9-7a71-41fb-8324-79cfe7b88ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d31a03d-48eb-428b-89cf-bac738c15cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "12fdecc0-d5d4-4a71-b5b5-5d4ebe4d0771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32923169-bc8f-4ea6-9fb6-caddb27f3b04",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8432242d-c472-4b42-80f4-f1f823f8e8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1000dee5-d27d-40d6-807a-e3cb995c658c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b887b91-2aca-4446-b748-2419b616d419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c35c404d-a488-4299-ae06-e873ae7c7086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2aac79-4d39-43c2-919f-b8bd73f7a50d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0200b442-5e96-47b9-9978-e84e7ba18a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e9fe37-5b5a-423c-bdbe-7776bf8d1492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3feb8c-5be4-43ef-bb6a-07e8f0bc868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3765837-785e-4202-8a80-4a14f28682fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc7fa47-cd20-4643-a0b2-908236ec3454",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c62aeb-549a-4c63-957b-70d81a8809c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8310325f-b9b7-4100-9175-faf3c2cd3fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1fb93e-604b-4c1f-8a3b-f70f51c56bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "399715e3-ec30-4277-9966-198d37c35e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adf4ad1-a56c-4923-80a3-178ca711e652",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5377465-2b25-47d8-8555-9904ea70794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2482381-c222-4842-a62a-ab57524f98fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58aed84-7a03-4566-8e92-f9e5f44279ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abaa963-14fb-44e2-b37d-9a83780a95a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe63c26-082a-4608-bbf4-443d88573728",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1017311b-d9e2-4695-91d9-cbfecf12fe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d57cc7-a22c-4ca7-ac60-ca066aa910db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1f8b58-e6e4-4981-8916-ad15ac15447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a35f0e-3f53-4372-9920-be0b5fecc729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775dbe3e-cf69-46ed-9cf1-5a7dc34cd8f8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c9967a-0eae-4aca-88cf-961954b1d549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0963fe7-7481-4475-87ad-552689b04760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1227771b-8cf4-425e-9c5e-344831f92517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6be11a8c-be4d-43e1-9613-3970503ab175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6442b1f6-b009-4f32-8a9b-bd807559abae",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc229ae-0fed-4f88-9393-a9bd66b49ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810bb79a-7d40-4822-8377-592541f39d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227540ef-0a99-4584-954a-6b0c6c59ec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0f93c3cb-ab05-4918-89ef-2cf348dbadef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f497035-bf93-4acb-b0a9-2b7811aa1fc1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e09996-e791-4ebc-ac92-92df19a8fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6944ec7e-22fb-48e9-b51b-854d5c54972b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c269b443-4dfa-44fe-9456-d414486b7412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad74f05b-1f55-4797-a192-1b1c3c808640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986123af-afc9-433d-a64c-525caa77a49a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3082c2d-dfd3-44df-b597-5dae6b0741b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c344abf0-5eba-4cdd-bde9-8113a08dfadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5701eee-8712-43a8-a3aa-4dcec3660bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b69a96-ee7d-40dd-988c-4096e99319cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da943c3f-9e57-4e60-bb24-690975c31df5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba7bf2-b03d-4433-aae8-dbad661f07d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75b0fb3-96bf-4e2a-a074-4cdb46fcb423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3c9993-20a7-4b58-adf8-5c883fccc825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bbf3c4-3263-4dab-b234-63def3d5415c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16708c6-ab2e-4fa4-9f2b-74029d1603ee",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4732e80b-ce04-4f86-b3f1-7a60ea1a6865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6cf915-5672-46f4-89d6-6f8b45e13139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5496a778-c8ee-48ec-8012-2af913e025bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e91ae4-e735-439f-9f5c-cf88044a4475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e3ee0c-7a3d-48cc-bd23-cb7328eb8874",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd831ef-483d-4313-ab45-8779f2fe8c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30baaa3c-b213-42f7-8b67-60a8a235df8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1b4167-7e96-41b9-8c73-0f8b11e802af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0740203-7472-4fda-98cb-40cc25d06987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad15094-7ca0-44d3-908d-3ce6deb44a51",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520811fa-b008-4f9d-a6c8-f6a0c477eed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a295da6-67a0-48a6-851d-f81f83c8b7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592cf1f8-f864-4506-aa8a-6e04e4ca6ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f4c0d2-4c60-4c47-ba27-bd2c66a0406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0652e2-86b6-49e7-8954-89165a0eaa8a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c794618-bff9-4afb-ac70-795c983a06d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5b27b0-10e7-47fc-80cb-9c2cbb6237d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3076cb-60ba-4d2a-b90f-c67832a1c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e95aea-4872-49ea-a017-a85a4858c865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50ac215-3169-404b-943b-485f5c09564e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093ce9c1-fdd3-45df-8142-ab35e1626d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bdd759-9771-432c-a241-7e969b4a39db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f34e6f-f9e9-4189-a36c-9887325d685f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "775a50b4-6b05-4497-9f48-21f0e31f69b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961a0c90-3633-4ff8-8f61-e122976a3add",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a87ad-1622-4665-ac4b-ec386c6d346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3044fd81-ae2f-4d82-a423-7064235b72dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17695fc9-657a-4af2-af49-c45e390c8a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef080759-98e8-4ea3-baa7-259edda17563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3afbc84-9282-43c3-a32a-bfa5b349af06",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ac619d-04da-487d-9068-a3b9acd3a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd48f392-e8b8-498d-b263-793307813eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbf5c86-4a9c-45c7-977c-fa375e8cdc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18ed21a-c6cf-42b2-8b84-64b22c8e2eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b418f9f-b7ea-46a7-abd9-ad568932f1c4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e666ffba-ee20-4b61-8f40-b0655923c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65a9a25-f2af-429e-bb72-0a2f1175a665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8b071b-dfe1-41c0-9750-781bdae8dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b98ff57-07a9-4286-92d8-2ed9d5bdb60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f70135-36f6-4b73-b554-cba7b9762d7a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64523b29-1a65-41a3-866f-b6fcbd19e137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa62a0f4-5f7c-4f61-bf6b-71709a918fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3a8274-904c-4811-956c-a86a45457814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d50fe53-6903-4ff0-a07e-9128da81c399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81794ed-ded7-4356-8c12-c1bad201c428",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5db27f9-1293-42a4-a75e-96aaa9026de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8a2f21-6625-4bf4-b9a1-13f9d1a99223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f264bf7-27e7-4023-a942-dc74b847fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52f4d896-40d4-4575-8a24-b4fb13b691e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2215e12e-22fc-49cb-b6ee-fe9f31a765d2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5954d504-67d4-423d-a3ec-96be9aa948ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a5f295-a8bd-4034-b978-d2e75c48fce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5815def9-2b07-4f46-9fcd-0c865195bde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "312fc423-e38f-4d9d-951c-002d5b734394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c299358c-f4bc-49b7-ad47-1c234bc91b48",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6df491-36c5-4eb8-a039-c6a24efb58bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c216e564-6f98-47b1-ae24-06d2f29bb55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaa1ca9-5171-46e9-a973-208c8b94da97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "301949d6-a47e-4f7a-b8eb-192f523bcc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b178e-c197-49b8-a42d-e3d5e907933a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4572873-3613-4879-8ffe-425b1388fdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee3e152-00a7-44c8-83c5-b6bc85ea5a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b4cb03-fd45-44c4-b0e1-2cb9b340b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df9723b-8bfb-4075-b4e4-a7482b1550c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9545215-4bf8-4060-85c8-8ca729d5a754",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d29e3-dd2d-4ab0-a272-323f06fa4d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167e9ec2-37db-4d1d-b26a-bf114fab637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5484ff-0542-4e7a-957e-30db904024fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8f2186-d375-4b28-a767-caac068293f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43db3fe-18dd-40c5-8bf8-02e048547c58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e9aedb-de1e-44d2-b878-3773bc352496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a49ab47-1b10-489f-ab4f-34fd11b70f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f55f7f-e2ff-4363-9af0-ab9fe9bd3c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89398632-2cc6-46b8-88d4-bccb35e6027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b1575f-f6d9-43ea-9d13-1600cd73243e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb84192-bbcf-4870-ac14-25fdd3bc6fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b69e018-cdb6-4648-b8c1-35a303ad2e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c19c11-edf6-479e-8deb-6e460af70f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1242067c-e99e-4e3d-9df1-e97f17235f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ea6a86-c3be-4eb7-93c3-7cd2d36bb832",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7b71e3-46a9-4372-ab2e-093a45c2e229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084a301e-b231-4772-b315-5fc2d92b1cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf12727e-5b18-4e31-b672-1c116a1f5f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b24bd08-9a0d-4893-9e51-8bfff7a6dd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa862c6-c404-4f1e-b5d7-f054ff51d004",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765bfc2a-3e8a-4f8e-90b3-c606c5c15640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76d2d24-c8ad-4cc3-9ca8-6d6ab56f7577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcaf7de-303b-46d3-b230-eda1c6bc28be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84cd37e-e096-46e1-bee5-6c043db937ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361da3d7-2202-458e-a0d2-528a0dbf2579",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca41345f-6034-4fad-8fdc-17bd1063b4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618917fa-1744-41bf-a33f-8578122310af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a0e293-29bf-48f9-b337-50959f942c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a242aa19-a0ab-4fa2-9ce1-e21d7636f5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d103631-9320-4959-a30b-b608cb66eddf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc51c2db-0543-4852-9ebf-662d18e733a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d5fee4-0d03-4909-924c-ea2303807a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0e8fe6-462f-4ada-bffe-0947e7103256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2acf457d-7818-4faa-bdd7-74bfe8f39566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83ef888-cecf-47ca-b93c-929cfc77d940",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b79ada9-4ec9-46ef-8a50-4df06a5aa4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b37f9d-e5ff-46f8-af1d-7f61de8228e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f1b762-9f31-446b-99d6-7be8454b924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa61c6e1-bf73-4cc1-a71f-b4c351a90c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a03b6ac-d40b-4367-af81-85fa2606fb20",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadaee8c-fc83-407d-931e-59392f234170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032f4f7c-ad21-489a-a5f5-0651ab375b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d638d879-8f83-4b9d-9fdd-a698e43a9b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e74e3c-db55-4992-8375-e11248d3392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d4ac13-d015-4421-89b4-eaa984e4bfe7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9063be0-7d33-4841-a35b-00547b24be6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b39eecd-88fa-4212-b17c-5a03219b49a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a447e7d6-6d9a-4ec5-99cf-aca14e69f2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c8278d-c5f8-4756-9dc5-f78c8b070ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1278576-1ffc-4d1f-b38d-f0a7c024ef99",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb01755-9517-480d-b8ae-54949f6499eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a729a249-7cf4-47b5-8072-18912c76d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb47d4f9-7b13-4421-8d5a-f1bf9a27f86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "012b57ba-3faa-45f7-b5c3-27056970700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9f08b-4f0f-4986-90ae-bf54c7cfb05d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff1968c-f5ab-4d0c-81f6-3d71c8518171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1362b635-0c5b-4cbf-a783-1d105d51c1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5a8926-17e1-4dbd-a62a-30d674583280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15237fcb-4f7e-479b-92f4-ca2050edc572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a0a3d5-5395-4aa3-a0ab-1a5b84dc9cf4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ca8476-f894-478e-a924-286bdc7fc360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4057bf-3b4b-4226-ace4-e677c45b8582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fad3aba-21a5-4140-b837-4af86b7f2829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc50ad3-879a-4198-9d32-427bb2bcb34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c343994-7500-479e-9c3a-c5fe002f1e15",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330679f8-6f4d-4dcb-918f-3dc7d5df5542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb49f89-dd9d-41c4-9073-6210c797565b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cc69ad-7885-4ec0-bc8e-cd90332eb58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aad519c-dd88-4614-9f26-73f21a11a403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1bb612-32ea-48ba-81dd-98359584284a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b4feec-f6ad-476f-b9f2-775f3c0d9610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17954473-31c8-499b-b2fd-c714def0f883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e991d919-2840-4479-92df-b017717cb75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23f4d74a-1491-461e-923b-48d40927ff11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56475493-cecd-4c3f-a1bd-1e638e0061b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a84208-2cc4-4d87-854f-ea000c9a3a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455498c1-52a5-4da5-b9e4-90f31a370e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9349ba-49bc-41ec-8365-9a90ca26a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4191d1-8168-4c64-bf58-077580b8a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68dd1ab-6867-43c3-8bd6-a0b491113c95",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dcf906-3384-4d4f-a875-8159923c084e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51b0c10-a276-42af-9a28-abdb1004aeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a0c4b5-703d-4274-9c9b-cac078653183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc516c5-4acf-4530-8627-0e473ff5fa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca76623-3274-4bad-8940-59a59d3496cc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5999a1-025b-41b7-a9db-48271f459f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaf295c-a250-408d-a1d4-99291546afae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b766e5-9ead-4038-9a67-742257b244bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d102b7-9906-4e28-9ad9-d603bc471f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d547a5-83ef-4883-a6a7-eef50d134375",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd7ab54-db9c-4636-93b1-a1ff176c320c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ff2c40-4a38-4f2d-87db-b1775967e2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c78ec1-eccb-4726-bdc2-ecefd6d0f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b44c8df-1873-4a68-8825-57c142a8b296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87acd81e-d9ae-4030-8ad7-05e3c5b1f3a7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d14430-2ac0-47a0-b609-9377930d30e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dc60c2-184b-4d73-bce3-ba343e4da488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953f5877-58bb-496a-86b3-33ed859ecbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "820c82b3-49c7-4e9d-8cc0-e592ed123b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a94421b-ed69-4539-a505-9692cf40f891",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fed24b6-e3a4-4e72-8172-758bc702f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adc69d4-5a66-4651-97e6-9c57c0fdd010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00225cb8-cfb3-4331-b975-a5b82e56921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bda7ac7-a052-41f6-9699-ea5ccacc386b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee9032f-cf48-44aa-9093-bb5a485aa583",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972d8bb8-4336-41f6-9ee0-8483f19fae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ea0a8d-f345-460c-910d-92eb141f9afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb51d147-1d84-4be0-8335-852efa699b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b06aedc4-a6bb-4f87-b9bb-d51aba2e3b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89820b05-3e31-4882-97ef-2db8b24d3069",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f528f72-dc0f-4eba-ae26-e8f26514f9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e685649-ec69-43e2-83dd-f2105f041dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf45458-0cad-4bd2-8121-c1e9a834d692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7034eef9-32bb-461a-9a93-3324eeec4108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6434507-924c-442e-8f94-573109dc9702",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7f9c6e-65ef-435c-b432-11050d372b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc24dd92-74bb-4239-a05f-3fa8f964fdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb679898-0919-4fc3-b4eb-af19c8a82e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "832139a4-47e7-43db-b58e-1e84f29c5b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ac8e48-d8b1-49ab-8ba8-c19f89ad8c4c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f993ac4-7b51-4486-a466-e9d571deee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa84fb6-58da-4d99-b4e3-283116106506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35335a7e-c32e-4cf8-979e-dc0e97e726aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10eaa2bb-c5bb-46ee-ab35-024491c742ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4df667b-5d9c-4fe3-8d9e-734e133a85b2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ae0f79-0ab2-455c-936e-707b345940de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae437678-9a63-4df9-8067-f59cbdd83638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfd0679-f335-4933-a179-823d3b1fa43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2a8a89-ca4f-4f4a-86ca-76c1aaca9099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9410d7ca-9606-4a0d-8007-d10d05d754ba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad52bbe-1808-465d-a092-18f5148095e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588e52e6-0a39-4515-b073-f02e9c698d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f3fb2a-e2c5-4bd5-bacb-b02e7b12f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01d648e2-819a-4792-99a8-3066a8155d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13e3be2-77e2-4c7e-9632-2d0296eed1c7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57279b2-4ef6-4161-b7b4-748564975c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f9a494-2a38-430b-8608-845eb7676387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d3e1e8-dedb-495d-ae3c-31a618ea86ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08206e88-06dc-42d0-befb-4f91979cfe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401386f3-ce64-4c05-ac2d-9f77c6935a4e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff533c0-973b-4bc1-817e-3f8207a863a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da2e8b3-9078-44b6-af15-82ad3ed8f8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419fe1f9-3a93-4cc0-8581-ab3b2c87a6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e848b8f-7ceb-459c-9000-2a2161f044f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110e03ec-be15-41b4-86c0-fc75b260fce0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4c8df-887b-4cfe-84be-4184b9624e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34895c90-7cc0-4cc4-aafe-bc550ac60382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aba2a1f-0199-43af-b819-c2b3de38c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "544fe537-bfbd-48dd-b4c1-90e293ae886c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f21e809-b491-417e-bbf4-2d0d67a73c8a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9b4644-d6a5-4f2e-9475-3569bf8ca0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df437e3-1a7d-4d98-9269-8f942e4a5f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b392a-afff-40ff-8f09-098c58f18858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8caa1c8-c465-4756-ae1b-b17438dff7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a5638-8c98-4dba-9075-e4e9dcc302eb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d69efe-bf5f-4fa0-8da4-411e0527ed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7df27e-ffa9-49f5-a12a-37292c0d073f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d082b4e6-dd60-4b04-b65b-bf9061a4995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d45c11a-b0f7-45b8-968b-d72a566ba294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50053a91-dfbb-4633-b697-befbe67ac369",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a78da8-7686-4a74-a483-8971a0a98337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fba26d-35de-41b1-b79e-6fc86caa49ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba03f16-dc8a-4462-bbd2-8a760f901e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dcdb02-e0c9-4b89-a998-7170856aef51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee271912-57e4-4ba2-bb67-ba85b5284dff",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15862f7-f722-465f-ad94-fb95faed85b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bbbec706-ed2a-489e-9235-ad80d6216ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11de26df-b9a8-4078-82ee-c64c2481f4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5672a224-5702-4925-8026-b0dc03c5b6cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7560ba1-c7aa-4baa-8056-1be6d6f285f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1255fcde-ecb3-44a3-bc63-d9997b8cf68e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef6db59-47ed-43b0-8db2-e703471e37c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04ff456d-71ee-4bb5-8043-7dfaa87cad22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fd3025-b718-4a4c-a531-46bcf428c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae31bfe4-ae17-4f5c-8f3c-dd3583a3e6d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c048ec2-c198-4032-bd94-84a1c87dd8dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e1b2fff-ab1a-46e1-beb0-51906da3943e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca587e21-9853-4cc0-a3e1-66836676a580",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5702c7-6c64-4965-b500-6584be776347"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b18a2d2b-bf3c-4932-8b8a-addc858f11fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0f28d09-d9b3-45ef-b609-196eaf0ff41a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "badbfff2-be1f-4c36-be29-2609d9c824ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72499823-f188-4719-88d8-9e691f0fc870"
                }
              }
            ]
          },
          {
            "id": "c7f03e70-4e7c-4eb7-b54c-e547b9b9ddc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98fef840-dfbe-4d5c-82de-7a87cfecaddb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d53a8129-e268-461f-937e-30a23c14cbc4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b404c-10d3-4789-97bd-50064d912dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "83501bf0-2055-49ab-8a89-cf93ad35cb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ff26da-35dc-4316-a84c-861ed6a9c695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdde49e9-ca86-45ae-8257-065ad063462f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59ce93e1-646e-4e6c-b65b-b8af57799ebb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5d1eeae-02ae-4bf0-b01a-7a1f1431be24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b437ba6-ea0b-4a6d-8a8b-49432f8d80c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02b27879-3a2e-4d08-99a9-16ba4da0f441",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d416216-1721-46cb-98fa-cd5b447efc77"
                    }
                  }
                ]
              },
              {
                "id": "d6bfe2dd-4de5-4025-bd18-e415772e9fce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9b1c4cf-e4a9-4a39-b419-6f507d04c004",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c46da2d5-4ded-43af-842d-0f4e8900efad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98d36187-0664-4059-8c60-7eb969f54e9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bac502c3-874a-4170-8c08-923b627726e2"
                    }
                  }
                ]
              },
              {
                "id": "9cda43a4-2507-427a-b702-56d1e2c49d9b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63cdac9b-9ba0-4b6c-8659-74132757eced",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a098f50e-d755-4eaf-8a7c-bee7969c00f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8f2465c-e04e-4792-96cf-b420a2b6a84c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9daae16-b15a-4552-a9e6-42a87955ad23"
                    }
                  }
                ]
              },
              {
                "id": "fc52f158-8cf4-4953-a9e1-11ac7dd5eec8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5e68e95-b12d-43d9-825b-bc9352e9504f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "430dbdec-e385-4f88-933e-9cb7faf0a5fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3077c397-63d7-4834-a87c-4d555144f1c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ace6ed29-5634-49e3-969d-b5a8ccd65777"
                    }
                  }
                ]
              },
              {
                "id": "00852c4f-3ff8-4924-9590-2b3a2227bfaa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8454f721-aa29-4485-971a-0240589ebaad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65312f51-adce-4fa1-a7b8-b76c97f1559f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97514f3b-46b0-445f-b829-ed8e25e6e526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ebdde949-3985-4e07-a582-ac1759580e2b"
                    }
                  }
                ]
              },
              {
                "id": "8e1cb9e2-e8c1-4d4d-93c8-376c17f672aa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eba5ca4-8468-423d-8a50-14c4cb8b245f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c82d502c-fa99-459c-b840-f53c5d177c8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1155fd0-8c12-4ebb-b379-66ef44e4d283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43563bbb-0613-4787-9741-cd67440cafc8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46012010-7462-4cef-b58c-b822bb37fa85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7483c51f-0d63-4737-81a0-48fb4a025d41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10fe2cdf-a1a4-4d50-b803-d22f9a1a8cee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b1831d4-96fb-4e28-a597-ef67bc9b56e2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "938e772d-f2a4-4c02-90d0-83597373723f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "97097054-5247-48cc-85b8-13d3f2608121"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3048adb-c99b-4dd0-88ed-744a67e0dd5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9fb319d-80a4-476c-ac07-196215ee3f21"
            }
          }
        ]
      },
      {
        "id": "9b924be6-cc1a-415d-b857-ba23774ffd53",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cf24fc31-b3f8-4b8d-9d43-7907b57dd1a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e368a15-4a78-4d41-9e4f-46ae138a47f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3be0730d-af82-4a1f-af9f-1fe9c23770a1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48a58ae-5fc7-4269-9691-dac30e5c95d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9484b0-a821-4634-8511-8dee3bb3749b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3633306f-c2d7-48c6-9465-2e3b59178801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb35f0ce-3a62-432c-81fe-0c6e413c885b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0001b0b-70f2-4ded-9109-30c634defada",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be8dd41-b5f3-48fe-af52-7403e9a5118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febbed2b-1058-401c-b56a-bf054edb2770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a00140-31fb-4ab6-b109-642b235adb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "195bad21-29ba-4f5f-afc0-f0d454a3573b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b18b27-fa5e-44a5-8db0-f4c533142bb3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a083668-5924-481a-8174-89bd9c402406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875cb2da-1a7e-4071-af0b-8b56d3739dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d2029b-d752-4fb2-8b3e-1be3ed39971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79515ea-e059-432a-b45f-2f2b40317dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e64fb5-8654-478d-a8fe-0fc9b1bd9da0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5139b534-e65f-4821-a3c1-e9b0cba491b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f05107-d21d-4061-badc-c01a04e130e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39851857-2530-4ea8-a5cc-2cc11ad0104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad08028-5f4e-4680-aa7c-709289188ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70125e2b-137e-4ffd-80c5-1a8d7421c057",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b9e97b-2099-4859-90bb-8eab0e70d828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74acbd58-2bdd-4a7b-a5f0-3e3498c01447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb96231a-f05e-422b-a78f-0cfcbd983374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb09cd39-baf7-48f8-a5d4-f30cd25a03de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdaf044-b3d5-4774-b022-f79432124dc8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70e810-511f-4f3a-bce3-c850bd997566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fe2b24-27be-44a1-8d38-f661fe65f0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c30f80-2e58-4326-a45d-138fd0d2cc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7db212ae-51bb-460c-8975-36d5330d6507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fa58ea-4c85-4cc5-8ad6-dba1988c6e15",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547cc647-d661-402d-95b6-b4ff6f6f7c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae6ffb3-727c-43e1-85a9-72c69760fa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b53d6f-56d6-4b35-816f-7c6d49bcfc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "add7a6ea-098e-4771-af10-47419261f06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2fb21a-b826-4256-82fe-11669b036a08",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127da246-4e34-4ca9-a6f7-635075171d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96241846-7e18-49fd-a1ed-7ac729ebf9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bf836e-d0e1-4bb5-aa73-e113ccc64d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a4f0be-7125-4542-a25e-c4ad66862682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68b2497-66dc-409f-b3e4-0f7a1fe28b50",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aefcfad-4d51-4908-8423-0ffc2240894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd17337-cf87-411d-8194-e5058330d9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5cc019-cba6-4afe-8d8d-83526a2a2878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9067cd83-d214-4f4a-b822-90abe647b62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6782a93-f73a-40ec-8769-7149a9235123",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8931c795-49f4-4d10-a2f7-61b7a6aa2d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbf1dd0-723a-4903-9634-fb94839c037a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf59661-cfcf-40c7-865c-68d143e8c422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ef1899-e716-4f06-9db8-d1bfcd3f8a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33dd5d8-1b1a-42dd-ae46-6dde346ecbba",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45170d1-8061-46d6-94c1-7d50133310b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998f7c0e-9b47-4704-81ee-043b43be6a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986d11b-6e51-49ae-937e-b787ada0aee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dc88d2-8f04-476e-8b26-2778ae801165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980812cf-e820-419f-be4c-e7d20964ef1a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f43e3f1-f8f9-442e-b570-f51b57402028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e60a3df-dc76-46f5-b406-d74964e88759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a1c4f5-3d5f-4b21-86fc-82f259234206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b45bf99e-43ea-4ef8-b35a-0a68e3a351f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85c8397-b572-4638-8e2c-1a62dc377bfc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562d2c5f-00bc-4845-8b79-9c4fc8829fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f1b6e6-2f11-4002-a907-081adb0a2e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d634944-76d0-47d7-8e20-354186b96699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d1d70d-f245-46d3-9686-38700d41a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf16469-3445-4fc8-895b-d9ce14d5c81d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c355914-4552-4b8c-8317-c2b5f4891a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e586ae57-c4ae-4824-8f15-d14e14d658bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc0d204-7a07-4d2e-a30b-bccf11e416b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a77fb3-52dd-4237-9150-8ece4d2d3a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616019b7-34aa-4e82-bb81-ecf7579e1806",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1089b74-a2fb-400b-a1dd-e1378481c510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdb447c-53d6-4ef0-b086-6f53e6805e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d53a7bc-0778-48d4-ab64-51b24accf545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6876d07-e9d1-46a6-bc4a-3834506aee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980435b3-1725-4820-88cd-9578c78d7d7d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649b3b9b-cc90-4b6d-9108-b459a551a00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2eafac-c061-4ba9-833f-98d6fbf8871e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467624d4-aac5-426b-a308-3ba51ca9a72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c5770e-1a88-4bd8-8b63-ebff4f21caf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1aa683-1eb0-4b39-8d0b-7ae62faffefa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef2e451-2ac9-4644-9960-da9c2e9575e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59079f2-95d9-4322-8bfc-c04752739742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea36d7d-40a5-43d7-97d1-180aaf78ed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ace6fe-97fe-4468-933d-052f4e2fcf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68edaf13-4ebe-4b64-854b-cf672c574cf0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b19305-5a3a-4444-a10d-cfaed22fd41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ada808a-1edf-42f8-a213-178222d8e8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065aedcb-14c1-453f-ad45-a89066656693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97279e08-ce1e-4887-8fad-b5059d6e9aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5f34f0-9ac4-4a47-b64d-0b7b2b2336e7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d784ef-34eb-418e-a136-6e7a2ab58724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be62179-708e-4928-9e78-c84cf22173ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1a631-69b9-41d4-880d-ef8318d1806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fb6a7f-48ee-496e-bf0e-c8d1191a60a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03820d2e-5e23-45d1-b775-4553b7ced3a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02dc7ed-68c6-43a2-a64b-4953d010b733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26eb086f-0dce-4e14-bdc2-03f2ff94e3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eeea9c-c598-4687-ae09-f06eb6c2edf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8db46d-59ee-40c0-b5e1-7a5c506ad347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40615b89-aca5-4051-93a8-f980d543db74",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc12588-9914-4a95-a802-94f7963ba980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb53054-dc6a-4053-8eb5-8089cea2fc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a365d56d-4156-4af3-9bdf-85fb19b768c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea60de4-3cfe-4c79-a71d-a8d6c69439dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233d6a97-0609-4bd3-8374-bd3371e395fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ad24d9-c77e-491b-bcbd-008982328822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b618701a-add5-453d-af57-91f0092495b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d603e98-1fa1-442c-a446-7fc1132f96cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0520b42-f222-4473-b8bd-a012c8bc24b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3919fefc-7f45-4d60-8556-a30c8fa79d31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3ae1b7-e263-4931-915b-8792b5b2e842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73436cc8-2fda-4300-9c8f-944eed465d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60301fab-9524-4e04-b4db-3df4995e7a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b16b9c-0b7f-4e6c-8294-ad1c2537076c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82489f7-f69f-4348-8ce4-6499028841c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5650c00-95ea-409d-8bba-879222874835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b20ff1-a3b9-41ea-af17-f4e8641294a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769adebc-a889-4afc-a97a-451e654a4276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a82478b-46fc-46b3-8ead-c76f35e26048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f314b990-5306-41a2-aa02-87072e3b22e9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c5c150-3c97-447a-8b73-c48fd1391c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356bc2f8-3f83-4cc5-94a2-8031b00ca293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d463cfd-396c-4aee-8b90-7857a60abb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88322ae4-5d54-4856-8010-30181ea281ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b6cbd6-4e92-4d98-bda5-cc86087cbd2d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b77420-7713-4ebf-b421-a7bf3e6cb14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11d26d8-6a64-480b-a624-14a7fede32f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f43cb7-4239-42e0-afe5-76405706e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e33193-71d8-4749-bedd-818e9bb1b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34724e34-b2ef-4e19-9171-22531f61a667",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c5ba67-3a22-48a6-99fe-1bb0b4b1fe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507e9f3b-411b-4f98-900c-a2932ce8a640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363e2a95-fb8c-4b82-9f76-91672664bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1fefbd-680e-4947-bb27-5436f62b224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36411622-8597-467b-9cd2-39b9d558bb40",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a20e1e7-0fc2-4a83-98b1-c12b486faa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171de459-bd15-4ed6-8748-50f8384491b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e906c683-66a8-46f7-b5d9-14f02447cc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afaa2ad4-4e6e-4770-8d8c-825ae95c1211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892edc50-5eff-4b7b-af7b-c62ed909fd5b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fe37c8-5abe-4f73-a37c-f4e400e6c26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f066ade6-2968-4e27-b86a-d54efbc2ef74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fdee31-5163-4ade-b54d-1b09fbff9aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c33dd5-4a87-4c6f-b85d-25ad968a7d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef89a5d-d506-4c4f-aaf3-a90ce6a1cce9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a2fdf4-e447-4b4a-914c-28d6e179a1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38370258-ac1e-40c9-beab-54fb760f9921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f30abf-6155-4f6a-adc1-115c1a6a5fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09349fc5-b336-4a9d-9a4c-2c05d4ef6e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b2c66-cdf3-4bfb-b010-61325876267b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e952f7f-da8e-4347-81aa-12ec06aa9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1539bb05-e696-4acb-ae58-c9b4348da2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975fe528-1947-4157-a21c-a10f1ad1f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "736226b6-c310-4efb-ac33-7c430b9552cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ec6340-5548-487b-a7db-51b2ada49e8e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b052df63-4d03-46bf-9bbe-91ad92457d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f7cea1-2d3e-482c-bab6-464e10b6806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37f4db3-6e23-4579-8438-945a068ca0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04818930-5588-4863-9102-899db0317ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aee2df7-f9b8-4896-a171-dce7951946ff",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e024bc17-ce27-4c76-9198-ca05ff1cada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f219c2a5-9232-4e2c-be3c-66a9879f54d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43a1407-a1bb-44ac-af09-641bf452d251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0e0a2b-dc49-4566-9a26-a950c8d768d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65985950-52b2-4401-acdb-dd844578e244",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dd5d18-9c6a-4df3-8703-d8f442ee1842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b2275b-5e4a-4924-b9fb-5136da71216f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e0e38-b9c7-445f-a9af-1ad92ff89e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b8fa21-5ff9-4a1a-b894-0049e617dfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee48551-0fc4-4652-bf79-57d23491a511",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d78e582-b51d-451d-96c8-230c26787db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4464274e-d00f-41ec-8a9d-af986100225d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014e5aa5-bd37-4f7b-afaa-5a0259cecff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e15a27-d394-4b2b-a682-368523f9933a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f92b084-a5c6-48f7-831a-fb55a1b345b0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b85f1-b528-427e-9b02-a6473db1eb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397f169e-b31c-414b-93a1-9a608abe20cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5825d6d0-a745-4b71-b86b-7148c29a0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68cbb143-0f4d-406f-a38a-417dc2191ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d163fd-31c6-43b1-a802-8edfa9892791",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6421a1a-61f7-4b29-8191-0a4b4c9caec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944476bd-1b3a-486d-9a37-41252d118999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e359fc-e9d1-457c-84af-29185688ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d073826-bc7a-439c-9a1d-7bc3d43d7044"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f6ffc41-0d90-4868-ac3e-0fc0103c38ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b097ccb-5c83-4fae-8b0b-fbdce3500985",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c61e9b-8bcd-4c27-b2e6-0c5af21ae2f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dce1fb07-f23f-48bf-a194-58053ead3e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fc57b9-10ef-4c1c-8e84-473aacab1281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61dc86f4-06cc-48b7-be5c-d9deb15e624c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2817c257-9c86-4b8d-8d81-205bb4400bf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4267e6b1-a877-486d-823e-9213e1a4f6ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bdba6e2-f934-4ce7-b7dc-8f0ae8911496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c481b82-a277-4ad8-afb8-83fd8c15ead2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86dcb1ba-d13e-45a6-8511-37448f18012b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b4e4cdb-bf82-4476-ba03-93449f195fc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "392006c6-1d35-410f-b340-3493fff5c95c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fda7ba0-2daf-4c45-8284-d76b1303fbe8"
            }
          }
        ]
      },
      {
        "id": "e8e94320-544b-49c3-9f2e-de956999169a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a17d6270-caad-4d41-bdfb-67762694da1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db37712a-a37e-4b24-bbf0-f3b450ff33a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aafa2e49-7ab1-4e6f-9a20-3fa3d7d9f61f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c44a5a-3306-43fb-bdc5-43bf92005a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcc91f5-6ffa-49ad-8a2a-b39636c23e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e270d6-94a4-4488-ae73-add182301122",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e43930b-b660-4273-8308-dc60d443153f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bd3a9b-2d54-441e-9473-a285070c0fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a72e24-0dab-42ae-bba1-9f7d934f9fec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca3ee77-a849-4732-b96b-142e0c77f37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bbe0e3-452f-44cc-936d-4a87dcd95444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f08c5b-596e-40b3-adfc-d256d53a9d0e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a146fed6-53ff-4e44-9ede-1a49f4483b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53257830-e18b-42c3-9a75-7ee65217fc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ec7f8-4e57-4a42-a085-ee72522010a5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442247e9-d048-40c1-8bce-a7d06d2a3624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7328ab2f-62ed-4892-9fdd-41bcf0e8b8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d1ceea-1c4e-47ab-8be0-f2fd746f59cd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3c12e8-b089-4b02-bdc3-4a0f03f73721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7887014c-5935-4653-8c12-1cc26b80bfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1351ed-2fe7-4692-800b-8750dfa8fa81",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee498e49-6fa9-40f7-bc19-cc75613c16b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e32404-d585-488c-8c5c-6a18ce444e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9712448-4b2a-4cd9-810e-4e5dec0e56fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1697aa86-d892-4e95-a7ba-0b66609e68f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b41e04-eb1b-4010-8b91-2e2d7caf5ecb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848eeb34-35d2-446b-a508-8212edc44638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03aeb67-83ba-42b7-973a-63d62b643c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a025ca22-7e51-40ad-97f7-ee73ca3bf3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa03079-27c2-4ef2-8f4e-aacf6198c02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8057bf44-335e-4325-84c2-3d58bfc0b4e9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84771fe0-0ab8-4c12-9eae-2a8f174141eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1877d3c0-1029-443a-bffe-71f15eeda8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e365cd0c-57c8-49d7-8580-7af355fcf38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564fdc2c-6862-4298-ba38-7af2d7668d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6694d3ca-9de8-4123-972a-a7af292e3bed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913db71e-0dec-4b0e-b937-0b7a194a5b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0603b0-5943-4de1-9735-999766bcd906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaf98d0-4cec-4c88-b68b-489b89321384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef43f86-b931-4961-a33b-ed01e89a3141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1937799-1922-4c4f-942c-296aab6517ff",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a24c3f-a8a2-4693-91da-b6155c357161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111728d3-0bf7-455d-8e23-0a3fa1af89a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77951f0e-babd-46c5-a526-3127844e847c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0741fe86-76b4-4b7c-9192-a85ba4dbbb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca0ce5-8242-4173-bd14-e231ada3cd6d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e6a113-dc24-4e0b-88d2-41c34a940837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574a92d2-9efd-4ab2-9706-227a0aef1cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b525e98b-604d-4dfc-9df5-19708a2b4307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3233ec22-e3b1-42ab-8401-8047482073f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e5361-86c5-4f90-aead-93bb20762eea",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac488d49-bc9d-46bf-9147-67dcce011958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e39d70-fc7d-41c6-bc11-196cf5b869bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffdec5d-f00a-4578-966b-e8b797ff7b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f34249-58e2-4da9-9c12-ab30792079d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286fbd29-ec08-4eee-8268-22eb6bc4c93d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729cf5fa-afba-4fbd-9c58-7b6051d88a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb54787-b651-4376-9aad-18a44d1f6f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cce4b8-1753-4322-8c86-25489a3da174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056a5b6d-c4f5-43eb-beda-2e72704fbf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd60f14-32ad-47bf-a030-487817cf3b5f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f99763f-1c03-4566-a062-21fd94a1bcf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f9d2c5-aad4-452f-a473-5d95c9e7be4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd071d4-22cd-4386-b359-3a348b3015ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc03c9eb-1bd7-46e5-baa8-dc425b9bff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063fdf30-cb3a-444a-80ed-800efb6485bc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01798d6b-eb69-4c6c-8f9d-5dbafea6237f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db741182-9449-4c80-b5f8-12dfdd7c646a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a1bb19-a4d9-4afa-9886-74293c0a31d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7e5e01-7fa2-482e-b5a2-cc617397b09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98d43a8-fb11-4646-b31b-57e2d135cb7d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0324df5d-fe9e-4e2d-8a1b-9a63525df8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59b7ab0-f3d9-4229-8a2f-4b00ee46f1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1c2701-4469-49d6-9ac4-dd40312423eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22003ff9-b62e-4647-9e90-652327e1d9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624a7e69-547b-47ef-9050-7429e416ebc0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da967518-eddc-4130-b0a0-8f33b4646a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae2ef3b-66f4-4feb-be0f-63362eb45dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3af8f3-b15c-460f-ae09-4a5948bbeeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c23ec19-409e-4310-9693-27f3ff073565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56de6c38-d0b6-4a35-9ced-b0a20b1b96b0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecc333c-e228-4fdd-95cd-784351ca04ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1952e519-244f-4c6b-bd8f-65d8c6269fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23917163-b79b-493f-b50c-10c82a6efdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4877d464-4cc4-44e1-ada9-0dd62c2536fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2916c8-9788-43fc-9ca9-81c8517951a6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8be083-a058-4978-a860-c52aecc5ba7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad676abe-c60d-476d-b1db-725a3f633153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96db95f-4402-49e1-880f-5717f55dfe51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71880394-1a5a-4956-b3fb-8aae50bd3c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0956fdc7-ea75-4c62-8f50-19770786d82b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b255131e-e75d-4512-896c-8a0937178d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4ad0a0-f079-4d0b-a5c6-2ec87d63076a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739ea57a-e7e3-4c74-8420-97ebef749851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124fb87f-24a6-40d6-b230-fefaf0bb0d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641e7ccf-9f88-4e9f-9cfd-d40d51370c24",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ab845d-4556-4f13-8442-998e9cd54cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdae32bb-ddfa-4f35-bb76-a0ddf753b160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdca07d-a892-445f-aa55-a969cb4c027b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3491be6c-7bd8-4fa5-86ca-70feb048f23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9489c824-2113-46fc-8de1-0f46cecd4b46",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ccf02c-63e8-4f41-8b31-5e5dee584734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c65162f-9c01-4d64-a75c-a932c7be4467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0651fd45-a777-4c19-a386-036a88454c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebfc0d6-3a4f-452d-8269-e6d99c1c2e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6408debb-b25b-4a8d-aed1-44104d3a6d78",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b0e3f8-ef16-4440-a1f1-41548c02b87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478db4b5-3ea3-42b7-a656-b41f63bde4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb501f93-45d2-4784-a54b-8f8b419a8f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee3ddab-a343-43ea-94fd-54256e069f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394ff860-76a9-4056-9d41-365f2c7b14b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25127887-3794-4328-81d4-84b51b43fa64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c9d00b-b42d-4c8e-aa57-b43939d0dbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5922f394-122c-4e5e-a935-f90b66b59e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195d8f7e-1bde-4ab0-a11f-e1a9b40dea84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9f7898-1620-405b-914c-821c5f4ff743",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b0f5d5-ad60-4db8-8905-78a7dfb4deff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9184a390-d113-4613-a9ab-85e219cf0901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c7cf0f-2e6a-4d2d-a280-a67ab2a59525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1da2f03-fc1f-4fd8-9e64-61ba48f85fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee6ab0a-08a6-4845-a98d-515eb8db409e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0538e0a3-da2f-4893-9330-07ab6a6385e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba25b5b1-1d05-447f-9fa3-d11838836041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23047b3a-8d27-465a-a39b-bfdab0f7f120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af5d74c-a8d1-4c50-87ec-2e2a2fe35848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e2b1b8-8b53-4e4d-b214-3b5f970bf3cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c548ec7-6df3-4c16-a398-815051a4f40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c61d24c-0d7a-4ad0-8e62-cc343a836948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b933b6-c1ec-4d47-a429-f69c3a3d2b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fcfdc7-b7bb-40e1-83c0-4893eeaf6e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a0c836-e315-4f8a-ae3f-dd82502fed5f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19d716-01ee-4820-86e1-de7a85f4a83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c804e75-92d6-44d7-be44-01bb61e6e44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89642af-f6db-439a-99a4-1e4bdfcad56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3e01f6-5b7d-4cdb-9e0b-c3e539f07afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069efec9-ccb2-481a-bb2f-8b14f51378ad",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09881d2b-5db5-4c7a-95e1-fd6443fb095c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34595f78-c846-4a9b-a48b-fc71d0d47ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af32d1f9-1564-48bf-bdd0-09233399f0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c39330-a5d2-45e2-b4d4-acf359eb9f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad99a09f-1529-4581-b61a-a6da7a075065",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19037096-e50c-4a0b-81ec-9c74e43ab2a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2db133-6ea7-4f15-ba71-71f1f1487dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afd71dd-5379-4cdf-86c3-aaa5e5e6390b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d17c866-7263-493e-b2d1-c1112024956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0fc19d-a876-4046-a86a-6871782753c7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390d679f-0bdf-4d2c-9f28-6c73ac355ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f260684-5514-45c4-bd3b-cf3f631e8a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e539c8-aea0-4353-a10f-412d010ebc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee1a0ab-9e79-4e36-8ad1-2eb47aab94f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a341a3b-5fdf-4f5d-a2f6-03023b1b044a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4632ebf-6e94-47d2-a39d-f6c3cdb9de1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a348f9e5-a59b-4295-97fd-46a379401505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510f56d8-62a4-4471-ab8f-ecae41c17b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b381527-974b-42b7-b66d-3dbb861dd98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362cee9d-7fd2-4802-a8d6-7a9dfd0c46bd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c52f17-26d6-4878-8a34-afd37bb70aea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a27651-5efb-439e-9e45-154e371af250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0bc8ac-bd3b-4f50-8f34-3d36cb5318a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bd48d6-ba65-4760-9470-3be5608e01dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9926e52-d7d3-4323-990c-f5ad24004312",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd3c12e-8c99-4769-845d-e3557ee5141f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d98c1a-c96a-4bb8-a51c-548e55ca70aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1352fc8d-3dd4-4ff6-ac95-6fb67ad29e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab140f6-9bf7-4351-b905-f96b5319f153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08864d86-0bae-4ba3-88b8-8c14bcec7420",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e148fc3-ac18-447d-b5fa-97c30884b750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd9a011-7719-4cb4-9eab-5628ba8b99f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc021f-72db-430b-b8bc-ddb148f0b0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c47aa66-1777-40d3-ba62-fd914ef4ba41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd17359-1eb8-4172-9c35-d191b57ce8c4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1dffb5-79d6-4dad-8175-f6e0af8d8b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75dd43b-c12e-4d40-b233-e2df884e1fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e69f54c-47c5-406c-a011-534dc4a95266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3ced21-3a23-44ec-b51b-3a4896a7ab0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c916f9-984d-4fe1-ae84-09fb004a3daf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb6ade0-3940-44a3-9f99-9b2acb729aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f57380-73a8-44d3-a99d-99138794a750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eabd73-f733-456a-8530-f014b912f083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eb5ccf-7298-4af9-bb9f-8c836860abf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038ab158-28a0-4058-b040-156fcc1f3248",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca5899-a41b-4065-99bc-3713e67a59c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795c2383-a0a7-4fb9-84a5-10c38cec4f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9ad435-b1f6-4688-bb8f-1712bc24456d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5785c13f-9673-46a5-84f4-a7aef36c2258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2375c53e-1c3f-4d0d-9486-8bdbac00f2b0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84988dd-2700-471a-a906-b869d45faf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67c3aea-2a7e-4087-8eeb-355361f0106d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8336dd2-32fb-409f-ad44-0b8b23eb3472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d360b1c9-e322-4870-b625-fc35743899cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5874a38-e489-4e45-aaee-19793e7b321f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06000f7b-3753-4f2b-8abf-caeef56ee0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8991e77d-30c1-4567-a693-7539a206b6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53b164-fd10-4f69-af4e-ade74f38c0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61f7587-bc7e-416d-8fd8-42a3648db552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e58121-e9b9-4cca-8670-300cf6323c1e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f270a2bb-9e1f-42b5-9e08-6e5292f8dbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47da0b0-8a91-46cd-a29b-24776d44fdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf308be-bde7-4bff-8d89-19e5f58971e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c01e89b-6756-4823-af32-f2d7026262d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7931f064-a98d-4bbe-8556-fd5a07726f20",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7389f11c-6219-4c32-b8e3-5846dfcc9489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1cbb69-e1c4-4650-bb16-e498c2153b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02478f0-d347-48e5-a422-84ac9b390f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6230e9-cfcc-4366-b303-d40342585fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5429bd62-1cc5-418e-9000-22b1d5f8878e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaa0e12-fdde-4594-b1cf-fed61d71df37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8923c96b-84e4-4203-a4d3-1e645ae6e450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657f019-eee8-4c7c-832c-2b8800a59aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393a444e-c2ab-40cb-99b0-b3d5b4e10b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8682b2-1715-4dad-8b94-321b5fb722b3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3177c3-b440-439d-ab79-9cec21826fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce1f363-4a04-4725-8927-778b1b3e770a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52dfaff-366f-49ca-8430-c3663c6fb08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3dabec-3e48-46c0-8df3-e24e14ad4cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8647c7-b6b3-4cc9-8f3e-36e33425369f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f57dd7f-5e7e-4893-b859-376d5936170d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6301aff-ad31-478f-b2be-770e5ec46b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384b3361-f7d2-43f2-b11b-08e38b943802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f051a5-d4af-4c25-943c-d31f901bf868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b6ff7f-4c72-4342-a3d5-65ef817d0d89",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c116d3cb-a99b-4f75-970f-2775960dbb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a8d133-6b17-4f12-bf12-7b62d6d1c409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597bd6d6-c4f3-4dd5-a2a8-a87b867e5527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15875e9b-2022-49aa-aba8-b5ee308b4e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c91fbd7-5d0b-4d49-bfd4-91ac0c084b4d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afc20d8-cf20-47f8-9a40-992be965cac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2e42f6-0601-43c3-9645-a776f4c504e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102e45fe-92cc-4fe6-8906-2d65de0bf1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062db0b3-2286-4ec8-86e0-feb557b9bb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ce0b1-c800-4726-8b65-30139cb4e27f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be8181-cf02-476f-ab7b-77b30cd544b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62260070-c3d1-44e3-a906-0b155b1e3a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898bd321-a4c9-41e4-b072-b708c2a5ea4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e828dc21-1768-4008-b5c1-d41fe44bc096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17853f24-2fe0-40d9-ba2e-439b1ea2d496",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc664f5-148f-44b1-988e-68502aa80a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbbc6e1-da7d-420c-9c76-0b3e51c66184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5718e51-e778-4bec-93ec-99ba4905e681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830a580c-96d0-45fd-b9d1-ea9bb58089e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43628b51-ca9a-4456-ac69-8a02d75617d8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99a0800-e498-4697-a665-6c6f906a4d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a8faf7-52fc-426c-8fce-a4ccf8f572a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939c463a-0b34-4104-8810-b57184e021c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d199b81-7f42-4f1f-ae26-62813b2bb671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8624fbe3-2376-4816-ace0-4fe15d11a654",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e64984-6177-4d56-93f6-078bb7adb26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d902a679-9fd9-4b71-8291-b0a4bb424a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d248a151-e3fd-40a3-905e-01f9adf321ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d421b3c2-2164-4e2c-bd0f-9dd323e973c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a27a12f-ba81-4238-9f15-59680744cc7c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291d30bc-bbd9-419e-ab8b-3329e2b4e086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4f9419-e186-4a0d-bdeb-8dd47954daeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f271c7-b78c-4b62-9f01-7d4f335c406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b318d5f-50cd-4ad0-b6cd-0dbe347be51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56340c53-162d-47f3-8c85-7dc16254be15",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88089424-22e6-42e9-8093-cabb18d9b32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffdf4e6-b115-4cae-b317-f0a742ebe5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffbda6a-bbbb-4bf1-817f-391b9f4d0500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e72070f-d133-4342-b500-fc5308f8ea74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504b755a-1fb9-4138-9e25-85df480184d9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b2a6b5-0f93-4789-a1a4-34f01d9771af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd89177-2fa5-42c7-8f6c-44026b118150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19279398-eada-46f2-ad4c-397427461204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e53f647-a759-46fd-9fa9-8251f65e774b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9118b445-dbfa-49a0-9f22-f92bef811640",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24cbda3-03ab-4bda-8604-107b74f59f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ea5f18-5bf7-4a43-80e0-a30616846d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896561e1-9655-442f-aa91-acf5e874a0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9edb464-c65f-497a-8671-7f797c675cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3f3948-fcd3-46dc-8096-fbb6c0109cd4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719eec89-cf67-4ba4-bff9-eaea1882f406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2eb2f8-9def-4c0a-bcf4-5a8eb1292fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b8218e-0096-4554-8845-b6fc7f99b4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cd86d8-0f92-4577-aec8-50023e865d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28252f8c-449b-4f69-8c30-cc252b68229e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98bd722-8e1b-461b-8008-906fc9223423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554bc0fa-a636-4e42-83f9-d66e76206878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962a32eb-cd09-4708-8eac-1bfca48d7825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd59218-b643-4eb2-b980-19c83edbbd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62cd689-5630-4ea0-b531-99f81885d966",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9339b831-825f-43c5-8ce9-1902f937de70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d478e1-a654-49d0-9f2b-54b9475bc7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00809c2e-372f-4f54-91a0-0818b3ff26cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8dfab6-04c2-49e1-bb5d-0b7f4a74b682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5211f680-05c7-40d4-b7f3-239b588e96c8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c90c8e2-c4f4-4a49-a1ff-693e8d3bce50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0143c3fa-8e8a-4e89-916b-e147c3227cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a70525-5af5-4583-baa2-27805bb9545a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb446501-3e93-45f7-99d4-686d19441d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6b0362-57d1-40ac-9440-a42715a35667",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623e0c94-7c02-4c8f-a9e0-822093c8de37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51a00d9-3407-4037-931d-6f7f80feee25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2ce185-f3c6-4db1-ab96-07fe154b7796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896222f4-4472-4d75-b5d2-08eab8b758a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e1b71-3b7f-4c8f-8cf2-b7dc39dcab4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3846405f-a93b-4950-8c5b-889e82a278c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac91374-c9e3-4390-a331-10d6e59e1620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bde9a5a-a8af-4ffd-8562-f2876fc403da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451073dd-a057-4a19-891d-1d3dff9f7b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6222a9-5249-4ab4-ab2b-c0ba05fbca81",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcfe0b4-cbf0-471d-b175-d5b1ca00f949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5a181a-84e0-4933-a487-68d346f49648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac796c63-72d0-4506-bf6f-e859914068f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350b88a8-a606-45ce-9fd4-e0d80f6ad0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214c43f5-9625-41bc-9660-ab84b93c0296",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52def173-81e5-43a1-ad55-37ea7fbf182c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d626a1-f50a-4265-874c-a9b79b3a5af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f1078-0718-4efb-9346-eb86cb873e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06dc1ef-93d5-492f-b721-515398862544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd48dc4-6adc-4dd8-a97f-b065ea6960c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2522c5a4-1db7-415c-9495-8bc3a9f4de55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27dfaa63-de71-4030-b9e9-e4b5fde5c91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5b755d-bc76-4c16-9b51-a91bcc725dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fe0725-36f5-4ee4-a2e0-4fd652327828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf45afd-b81c-4fa1-a8f7-4ab9f36a71dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2be129d-65db-421f-af1f-c50d9c7e1899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6dcf5f-a15a-44d5-be89-244fdc1a8885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c97730-ea93-47a1-a7fa-9d1bc6c515e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054ab0cd-89ff-42b8-87a1-ce996b56c9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f911d7-b612-4eb0-8cde-7a29b2f6b65d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c86433-20c1-42f7-91ee-b9bfc6de7b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66984752-30c6-4813-9c42-736b355b14fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9046f9c9-47b9-4f82-81f7-6b8b12a1b9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddbc0a6-8417-42c6-bcf5-f419043591fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1f606b-5f87-424a-adcf-76a371653773",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e93ec80-5189-4434-8f98-091ea7176b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25581e9-c144-4ff8-964b-4f18bd798d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da3680f-425c-4140-84aa-87a96da0e5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f06d72-2b14-4be1-931d-21eb27007866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e605f537-8e4a-4a21-832e-32194a57469a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ec360a-aa37-46c6-94d2-7e01e6b25268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07096bd8-51c6-4a65-9c4f-2b898ac90360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04f8425-22d3-4c5e-a61a-32b34cb349c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd62332-6766-4a4b-b873-95e126a97817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63be5a6b-3f35-4ce4-8897-640ad3106c52",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15f0a2a-4bf8-479f-af59-a2d6cd6a43f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3804074-918e-4fc1-9764-daffa4db2d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d129cd-9f38-4ad9-963a-65890b7fe2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d034b8-9232-4c54-9dfc-ad84c517fc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa3daf9-e74f-4f3f-948f-89f4d1ff5bcf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5712dcb-497e-46cb-9df4-38cad87156ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8c0450-2191-4385-ae29-79f710b120a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c061220-6f2c-4ae7-92f2-624733e5b4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbdd13d-9f02-40a9-a131-d5cbf11b7e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62913d14-85a0-4dc8-88d7-ec03e3fd7643",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77405b3d-7514-4129-900a-0fbb1d106e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a934d7de-c83b-411b-8318-a15e1d2bdbcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c082835-d3d5-4532-b083-199153c09106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b357ef24-4723-4771-95a6-986fa898fb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98611dd-f43c-4e95-836e-fa51eedca933",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b67e0-3245-4ea6-b9fb-e4bdbf053c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845fc6d9-5156-47ca-8b0c-d4c7eb6c7fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e69907-9026-4f62-8985-15c4ec671b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5562d7fd-6192-4ee9-9576-fcb55157084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcb7cfe-8b95-4eb8-a541-6f1fcd09ead6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3fa7b-5387-4fd8-a297-d0507bf75d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9be2ec0-34dc-4268-955e-899374695345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece18bfc-c7bc-4760-9429-41775329b795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9c4159-5ceb-44f6-ad93-18ed3fe7304f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24325b5c-f75b-48ca-b728-388f568d1496",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330dbe4-8391-43b6-ab67-e73d19a7f591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d16af14-8b34-407a-bc1c-760bc91c7cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972d0508-8a83-4823-90b8-92448a0a4f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddf24b6-1cb7-4e3d-b54e-bd3448f76b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7ca859-6f56-4ef1-9254-68ed48b4022b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b4c6e1-851d-4ab2-bbf5-b173f9d86be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994c9840-e60f-49c8-abb2-7e6b08bac868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac953691-2490-4ba6-bbee-2f188ca13ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3367a5e5-5d99-4b60-8979-afac34ae4429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d44582-2a41-4c47-bc27-8f5b9f82f716",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b9a6e-f7b2-4587-8b7b-32c2f2253a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6f5ed3-a27a-49f0-b228-f4023b66f697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddcbe8e-7d29-4bd1-a041-b1f5a04dd52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7322dd1a-a564-4bbd-af3e-047e23029084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162e2fb0-12c0-401c-8add-efbb42b1bb13",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5a61e7-3384-4b05-a532-c940a831eec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591d6336-ba19-49b2-b880-81bc9c0c8b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67401d99-7722-41bb-9152-a2d837912454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65616e7b-991f-4534-8ccd-cce013ce2a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b655c17a-b331-49a4-801b-8c4e57ae04f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de964bf-77fb-4a61-869c-c9bcd6f08aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b1ed26-2668-4454-8173-bddc8d35faab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a6d272-49ff-4881-b8ca-c2f5cf897985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9cc438-1082-44e2-98d3-938e62988f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3d174a-c7b5-42ba-8cbc-cc36713792c0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663c2118-36c3-425e-be6b-552aaae1b450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da22fb1-72e8-40f5-a2c8-8b0a9f0733eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ca2c25-5c25-467f-be55-9f85d580b1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69b7cbf-f5ec-491f-a1e1-db4f07abb4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4562e9-b357-40eb-bfd7-be8aeef9760f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745609d8-3022-40c7-9265-0d296073aff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3a0153-a67f-4a59-b9ca-4ebc4f01cf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67784474-91b5-4ad7-b0de-d29201ac2b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ab35d3-2a8a-4d22-9872-fc6b7a14abd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b71dff-31d4-4da9-b997-f483d026e26f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe3e8e8-e40d-4c6d-a712-36a7fc544734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b69dda-031d-4d0d-a59f-e5c9d23548fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89798d3-e6e7-49fc-b1f9-33215a6b8f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367cc7c1-f809-45ef-8b8d-a46ff53114f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683181cb-2dee-45cd-9357-53b941a7ef91",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15598e42-fe85-4182-bfee-62b066a048db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1f1d44-4784-4d30-8faf-96d21e19574b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707f9be8-ae99-4111-8cbc-1b5ae579d73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab89398-df66-46f4-a579-a813b0e29a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada51230-dbc7-4a34-9425-5f243036624c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b12b140-0390-4be7-99f2-0b227cd6cb8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e5413f-3d06-42d8-a67c-d7c17319f580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0473dad2-27ec-4106-aa9b-1cf8f8734d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63914c6-12ae-4bee-9c40-dd002795c345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe691cc5-c331-42d2-9380-fc1031287909",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac68024e-ba7f-42a4-be6f-afbc7fec307b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e7e29a-e099-4b27-9502-67141b462b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0369b6-e0b4-4512-abd0-ab7a6f6ff136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32f72d6-130e-4739-958f-ff72fa9e1f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb712b01-cd2e-4ad7-ae56-b068f7308a8a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576fdb67-1bdb-4fdf-a293-4cd0b0470ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f28cc0-8ed1-4498-a910-eb28981dc430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2686d9be-391b-40e1-a813-ccbb0893c5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee783cfa-5dd3-470c-9484-3d7e032ba612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5717c4af-2b54-42da-91af-af3c60894961",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ccda23-5627-461e-9fdb-bbccd762df99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0200d2-c274-4f73-90c9-9a10a09df1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7780be2-f717-410d-8536-a540be268914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53555ed0-e230-438a-8ef7-bd3e964cfa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ce4942-6ba1-46a6-8e58-af802c22dbd3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf54b95b-5f60-4a90-aeca-622bda5e2332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c711e9db-f2c1-4e54-9ac3-7a05588d720c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc45a7f-5d1e-4d77-8093-d12e124a00c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc80369-d47c-4b43-861a-19f7e54dcaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fb8fc9-ead7-425a-8c6a-2f7033750711",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a72c31-6808-4996-8f71-583364bd4c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c58d4ae-b432-495f-90f8-00d1c07abf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47be468b-8948-4c42-947a-78aa11934f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9808c5c9-357d-4a72-9f3b-4790a6c5ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c00596f-f205-4ed3-95d1-057b36a428df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258adbf3-5df5-4e3d-848a-142497e77b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1549d17f-1f00-468a-b29d-bf30db43e6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89888b29-7b78-48f9-95b6-20f5aa6d048b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba50cf8-c1a7-4661-b87d-eaecfad1f778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a836eca5-8fac-46dd-91bb-216874b7c092",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c1346f-d18c-4d60-a225-398146e770bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ef7cf1-f246-45b5-9742-ef98422d00bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d71a330-1f4f-4304-93d4-35dadc3a2993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ddae80-7414-49e4-8227-2378df4fdc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96222190-e3cd-4c53-99cf-dd59fe288f46",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ae3f4-6357-452d-b3d6-373e306535be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d092d8-5ec0-4620-93c7-468fb9f5b48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235de17d-fe20-415d-80cc-1cf518170c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12893bed-1c2b-4ae4-97fe-d97cd5ba4767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47ddb32-2a1b-4cd1-a2a7-c8456ba42f8d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5169e72-2dba-464d-af6c-32040ee7deaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0740b226-2353-42e1-a67f-b2671f245591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f89c13-075e-4dea-bb1e-f12778752b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c94dad-2150-4564-8cc8-0d1410ad2f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e956128c-2fcf-45ad-911e-6ad008bcd548",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bc4ea6-4630-4063-946c-4d8219e207bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babd58d0-c7fc-44d4-971b-21cdbb2d8900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6339fe-b1f9-47b5-a4cc-14c3b65e29e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3fdcc5-1362-4f5a-90d7-ff1447584ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e228403-1ad5-4f49-a6ad-7493e11f63de",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e992f5e-a3ce-4a74-8b25-593f21b6b37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069d07ec-d48a-44f7-ab3e-f93f0a1608bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b285d96-23d1-4b0f-82cf-9cd6f5ce6bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2934efba-1f3d-4782-879a-dcbb56e29acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b80b4f-bc58-4065-bdce-2ca6a3357214",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53768fec-5506-43b6-b6a3-58c56bb4c2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f365ef6f-afd3-4f2e-90b3-d925588c29f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09de6c30-2bd5-4106-84ad-b1b4842f8def",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49587a9-7e83-4488-98b0-cc46e165aa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66640fe5-2474-46a9-b3e6-31d11c14b7d6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41f836d-ae23-4afa-9375-dd21584a1fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5f0397-4355-4d01-99ff-538b4ce15dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58469f5-a1eb-4402-9076-5d9381835c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0749039-1df7-4638-abd2-986bb0f0984b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2ba3c62-7459-4e36-85dd-8dbec6b23d5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80e3fcc4-9ae2-414d-9a49-0b1bb85bcf1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf4d6dd-7aa2-46e1-92c4-fddf050452e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54e07848-4822-481d-96ca-4b04e2b58e87"
                    }
                  }
                ]
              },
              {
                "id": "55bfd9ae-d314-47e1-ac28-1594ec455397",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79ba3d4b-1bd6-4139-ab72-331d8dc6b841",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a98d63e-c301-4b0d-8369-d2476f738464",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6e832f13-19d0-4544-91b9-f911cccd344b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d0e454-b2ea-4e2e-821e-8f0f4aab6656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e84a01ea-5410-45d2-ae3b-732e37d101df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fcc6f83-3c61-4dac-baba-7b0208ad885f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be993a4c-c466-4e2e-aabd-05017db06436"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e71b0585-2a65-45a3-8408-f132a2d43087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74459a15-574b-45a1-b59a-787fd923a906"
                    }
                  }
                ]
              },
              {
                "id": "0859714c-3cdc-4b8f-b4b6-451a808001bc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f30a1f6a-8ca7-493c-bbb6-f05cf92cb7d8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d51b94-5bfd-4909-8cb8-1152b0a2b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b3c9dcaa-2519-40eb-982f-ffe4559e1a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7575366-5042-44df-a4ec-09449a545994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d84e70-294a-4031-927e-9dbc82493d6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d8151d4-6779-4059-9503-12f4c20830c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "183ce9ad-688f-4ec0-ada4-7377c410b6db",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18c5c82c-4ceb-4852-a4ab-04b9fe91e105",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "060f8571-48ae-4a57-8ca7-cdd441eb4965"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d4dc54-a536-469f-a969-bf0e0983d016",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d476a8b9-b803-456d-b907-4200b8b09bac"
                    }
                  }
                ]
              },
              {
                "id": "a4aa88bd-d651-4b0c-8718-2ccceb2cf191",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76ad6067-a58c-4fd6-8139-98f3525835f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0f8261b3-8b61-48a6-adb7-76392270bf4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7376734-9dd2-4581-9f5f-f445fea25494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f19b78a-ca7f-45dc-b816-64d8f3a7646f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edfcf52d-9bad-43e8-a296-9d547013b512",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "75c80f5c-c4f1-439e-a237-1f7a1050d7ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca676c5-22d3-479a-ae14-984f57088029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "761e948f-7faf-489a-a9af-b51b7affd00b"
            }
          }
        ]
      },
      {
        "id": "3ce528da-8873-43fa-9ff3-4305c1d07c9a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "19a76968-c2e3-42f7-8f56-01488ec51685",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0465e81-5ad3-44d1-a221-79b4d8bd1af6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47cd1733-f701-4545-9c80-fc4f12bb64c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8047b8e4-85cd-443e-9adf-7bd3e4a06cc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2ff5feb-1751-4726-8b05-4de34510c2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977250ee-4379-493c-bdb0-d93af4714417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af3506d-20c0-4c42-a85a-a9ff3c022354"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc7c31a9-0b8d-49fa-9a69-ccb3f826b960",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d3f30bb-e9c3-4029-8e89-52a3dbb32a63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2baae017-11ce-4a2a-931b-8639563a352d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af772d48-f8fe-4996-99e3-bd55b45a3d66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2961585b-9e74-481c-8d5d-f02d9da24ca5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cdd3455a-3969-4652-8054-6f3a260d7939"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daefcabe-37a2-46dc-bed7-cf2753ee290f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e40aa6f0-69db-4af8-816f-d642b0d02680"
            }
          }
        ]
      },
      {
        "id": "095bf048-5f0d-4f08-a3f8-19c751c74d5d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9f16f2c4-f6dd-48b0-ba06-3a1475ecc6d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec28d584-ebe3-4132-b1a3-27fdef8625b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c8bebfa-9d46-4c26-b7ce-4873b8fa1f1c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471113c9-b8cb-4373-bc38-998c973ffeec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3099f5b6-b5ad-4e3c-b7e7-ad1d6ac91069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee12121-2e78-426e-8767-81ac3b3622ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc8fc2c9-4419-42fd-96ce-882356df2602"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ad19b6e-ed1e-4cb7-b157-dc0eee98bbd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bd8d506-bc64-49c9-8b81-4cf86b0491f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a48046-98f1-4ca5-8ffd-2451898352f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "002e2d9d-5be5-4314-8170-84fc33615de1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aebe9bf6-778f-4835-8194-6ee637ec6185",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9dc94fe4-ef6b-4cdb-b9f4-47f71e5ee153"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e08940dc-ea01-465d-855d-b48d74fe6dfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b17532ea-a2bb-4889-95e1-e84f0762499c"
            }
          }
        ]
      },
      {
        "id": "3c5028d5-bf56-4335-96d5-0cd9be275088",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "acf56a96-ae78-4d1d-8453-0277d450a1b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00664e30-8c9a-450a-8503-8e0e9db21b67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45fac44d-1d05-4ca6-80b4-b3133bb8dd64",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee47999-ec8e-46dc-a2dc-5e884504cf92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e50a62a-6557-4b3e-a651-95e69d1c2bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14ddcd9-9524-4925-8b39-22fec7fdd164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09e08b66-3e95-491b-b479-aa780c6ad89e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d006c2f-e3b2-4a39-9ad6-04f7c31e65c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b55ec09-dc2b-488d-92a9-d057716c183b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31771633-51b3-4027-a7f6-40b416cdf4f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7752bd3a-9927-4ae7-8e38-83fc50b96052"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33868999-c7aa-4259-acbd-0baacbd0a4fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc646050-fa9b-4510-9090-af8331ab2785"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9df99f9-5484-4a64-8d0b-7c52fde7e498",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "526a9017-cf1e-461a-906b-3ac09d55cf9e"
            }
          }
        ]
      },
      {
        "id": "408b977c-145f-4d7a-98bf-290c1ef256cc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54b8aa24-85f3-45c2-bab2-cd568e528bba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04db5dcd-4b37-4da8-8714-3b9416ea9a22",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "933b3551-33b3-4aac-bad6-ed1aaff0cf30",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e3bda80-78a2-430e-92bc-6fa4a538f4af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a9e76e4-e1d7-43f7-9c0c-85a79fdfe526",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.3769841269841,
      "responseMin": 10,
      "responseMax": 17995,
      "responseSd": 1161.943109804714,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725324121618,
      "completed": 1725324165173
    },
    "executions": [
      {
        "id": "dac70a72-8feb-4b73-a9ab-3bf78dfa2911",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "05df2361-f89d-41b8-8fa1-84af38b03331",
          "httpRequestId": "0682eb43-2031-4846-b1e3-59d351d87e56"
        },
        "item": {
          "id": "dac70a72-8feb-4b73-a9ab-3bf78dfa2911",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1d39fdc2-3738-4b96-8c40-c93c9207c14b",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "8b82e5ce-3b8e-425a-86d2-e3aa400a8c7f",
        "cursor": {
          "ref": "f9c227f8-e018-47be-b4e0-eb3f0f4b479a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1b397936-d984-4a11-8268-0bbc8f49eef0"
        },
        "item": {
          "id": "8b82e5ce-3b8e-425a-86d2-e3aa400a8c7f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "db3a7818-9c2f-4be6-b15e-5dd911dff6f0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3eae9e85-ef5f-47cd-82e6-2aa0b05f316f",
        "cursor": {
          "ref": "e317c8bc-3c99-4ba4-8633-8612ffb37525",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f53ab6fb-f28a-4a73-95ef-2d49f1b1792e"
        },
        "item": {
          "id": "3eae9e85-ef5f-47cd-82e6-2aa0b05f316f",
          "name": "did_json"
        },
        "response": {
          "id": "8086cd97-6083-44b3-a262-77aa6d620e29",
          "status": "OK",
          "code": 200,
          "responseTime": 271,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bac8451-fb91-4a9c-99a9-79677670fb63",
        "cursor": {
          "ref": "e5a58604-0949-4f3a-9673-6f6a8c245243",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43ee48e5-06b8-4ef3-ade9-591ca5e54564"
        },
        "item": {
          "id": "4bac8451-fb91-4a9c-99a9-79677670fb63",
          "name": "did:invalid"
        },
        "response": {
          "id": "f2e9054c-b555-41d4-b016-d6a5a1a0415a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 316,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bac8451-fb91-4a9c-99a9-79677670fb63",
        "cursor": {
          "ref": "e5a58604-0949-4f3a-9673-6f6a8c245243",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43ee48e5-06b8-4ef3-ade9-591ca5e54564"
        },
        "item": {
          "id": "4bac8451-fb91-4a9c-99a9-79677670fb63",
          "name": "did:invalid"
        },
        "response": {
          "id": "f2e9054c-b555-41d4-b016-d6a5a1a0415a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 316,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c420874b-b92c-4b96-98b8-1bb4b2ae4a56",
        "cursor": {
          "ref": "c15f25bd-8b52-4a4b-b51c-fe3c8beae76d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "771a4f87-6773-4585-b0de-42a983a0674e"
        },
        "item": {
          "id": "c420874b-b92c-4b96-98b8-1bb4b2ae4a56",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "78eee787-0379-42e4-8734-ec066459eac7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1f62b8-cf6d-4031-88d7-bb191344c498",
        "cursor": {
          "ref": "e81b6a54-41fb-42a6-ade2-9e6c83628a90",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cbba8663-62eb-4505-967f-8e565f347e5d"
        },
        "item": {
          "id": "cb1f62b8-cf6d-4031-88d7-bb191344c498",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ee32f3aa-3e5f-43f1-b2d1-bf80f677f162",
          "status": "Not Found",
          "code": 404,
          "responseTime": 122,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee355d3-8b0d-4a84-80ca-406634f76346",
        "cursor": {
          "ref": "743b23ef-76e5-4987-b6dc-fb07df9ff79c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b6774fc9-df94-4a38-9c0c-5a98f11a83ab"
        },
        "item": {
          "id": "7ee355d3-8b0d-4a84-80ca-406634f76346",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "76964a6d-ab03-43e8-9cf8-85abc980758e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c977da-1093-45ef-a921-a1a8312315d3",
        "cursor": {
          "ref": "e99d0d4b-9541-4aba-bfb3-0507fe347cf2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a6672b12-083a-4812-8a9f-52ff4e0f5d8b"
        },
        "item": {
          "id": "51c977da-1093-45ef-a921-a1a8312315d3",
          "name": "identifiers"
        },
        "response": {
          "id": "da000870-70b1-49a6-9cd5-377b49d6860f",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f9c90c-7610-4b23-bcd3-a22a2fea0d6b",
        "cursor": {
          "ref": "db8d8928-805a-4022-a678-03add54cd436",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70cb02cf-d13e-4d91-a944-aa540eecdfd1"
        },
        "item": {
          "id": "86f9c90c-7610-4b23-bcd3-a22a2fea0d6b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "719b685a-9081-4907-b9ea-511f69faf83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db0990c-00e4-45da-bb82-b8510be52848",
        "cursor": {
          "ref": "fc9cd761-5a09-4a2f-9c43-b2b6d14937da",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55930bd9-99e1-45b9-9534-2aaede58a4f8"
        },
        "item": {
          "id": "5db0990c-00e4-45da-bb82-b8510be52848",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a2e59223-589d-487b-9c77-af0f7c0f11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f34e67-3282-4f70-a16e-6fa4d0ad5ead",
        "cursor": {
          "ref": "4c2d80a9-679b-4370-b82f-eb17d88aee03",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9942c6a7-78ac-4d0a-aae0-dda2c692beb6"
        },
        "item": {
          "id": "96f34e67-3282-4f70-a16e-6fa4d0ad5ead",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f6875a6e-74af-49f4-aa06-8f81123845cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b4d46e-7ae9-44c6-88b3-6f79e69e4794",
        "cursor": {
          "ref": "25fa2941-f166-4b57-9476-8a4849b51d50",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0801679a-f474-429a-afcf-8130e8c3949d"
        },
        "item": {
          "id": "37b4d46e-7ae9-44c6-88b3-6f79e69e4794",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ce0286bf-22bf-4436-8050-8069bcf6b118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30279828-14ba-4033-9126-d395bf649fce",
        "cursor": {
          "ref": "b73d8b1f-c5d7-4aeb-97a4-9081152d2c4d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2ab98de4-ed73-4195-9984-2c09bee10d44"
        },
        "item": {
          "id": "30279828-14ba-4033-9126-d395bf649fce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e441f97d-4acb-426a-8bdb-4a02d4b808ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963ecc0b-359b-4422-88fe-1ce4e0eef6d9",
        "cursor": {
          "ref": "6974478e-c473-4976-bb09-5c72073b1c29",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "002790ef-d782-48b4-8453-b11f715fec8a"
        },
        "item": {
          "id": "963ecc0b-359b-4422-88fe-1ce4e0eef6d9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4329676c-0eda-45b7-9a49-ed24733abd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82b5b47-81b7-431c-80e8-6bac817c756b",
        "cursor": {
          "ref": "65f04f12-44ed-4962-b17d-41b13275adf6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "19892d4a-f07e-4002-83ed-5d4dbcc80e33"
        },
        "item": {
          "id": "d82b5b47-81b7-431c-80e8-6bac817c756b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "864258ba-3dc9-4537-8b06-b9b61e139fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2212d67c-c956-4565-a784-7108ba15b6dc",
        "cursor": {
          "ref": "794fed0b-9638-4f80-b6cc-c3d01af4a480",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "98dcbb54-164f-44d1-a26a-ce36fb16cd3a"
        },
        "item": {
          "id": "2212d67c-c956-4565-a784-7108ba15b6dc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d1ca781-98fa-4285-8e6e-15204e61d79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58011d8-e002-4cd3-a737-bb026ab035b0",
        "cursor": {
          "ref": "08bc92ee-f90f-4ad7-86bf-a148148f1180",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "44c10e1f-28c6-4e38-a173-3b7c3854c18a"
        },
        "item": {
          "id": "a58011d8-e002-4cd3-a737-bb026ab035b0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2a8c3ccd-d35e-47c8-82a4-757aa5a8f323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7923613-fbb3-4d58-b5cd-307030cbb9b1",
        "cursor": {
          "ref": "b8907011-68d1-4441-9628-19f9ca45d25e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "700dd91a-aed9-47a4-aa9b-20719cf244a6"
        },
        "item": {
          "id": "c7923613-fbb3-4d58-b5cd-307030cbb9b1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e6bb915c-762d-47ef-bd28-acc48a8b6eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47da5b7a-cc3e-4807-9a55-3a9b32d98101",
        "cursor": {
          "ref": "0301efc7-a601-4fe0-9938-8440417f4f9e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5a8d6897-b51b-422b-b836-33c1e90d2b30"
        },
        "item": {
          "id": "47da5b7a-cc3e-4807-9a55-3a9b32d98101",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "36004569-56c6-4f9b-8c2b-7de6f6d02507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcca156-29c6-49ff-8e24-f11fde496e5b",
        "cursor": {
          "ref": "4d7f5e29-9e54-4359-9bc6-f11a9f226cf9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5bde4a38-3883-43d6-a276-aaf963a43ecf"
        },
        "item": {
          "id": "8bcca156-29c6-49ff-8e24-f11fde496e5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "00b00542-fb27-4cb2-964c-e39452f10931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642fd1c1-eb9f-4f3f-9a61-97f85ade9a74",
        "cursor": {
          "ref": "d5c5ba41-97b6-44c2-8914-f09e2c45584d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "39a5d006-1417-47c4-92d4-cd057998199b"
        },
        "item": {
          "id": "642fd1c1-eb9f-4f3f-9a61-97f85ade9a74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1891e1fd-bb9a-4a4b-b9e9-155b921ae74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd942b17-8b91-4302-a2fb-8a04f4b2c034",
        "cursor": {
          "ref": "6cefcf48-39db-4ca5-a3ef-f73b2ab3a947",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2fe8031-4390-45af-ad69-120baa648d4b"
        },
        "item": {
          "id": "dd942b17-8b91-4302-a2fb-8a04f4b2c034",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "838d2e34-6229-4b6d-a85f-620182e33baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985dc0ad-1fa6-4be2-9bf2-f5b4bc0080bd",
        "cursor": {
          "ref": "c70fef9c-10af-4297-ad8c-b0b63b31e030",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b959bba1-de4c-4988-9001-2570f33f2d5d"
        },
        "item": {
          "id": "985dc0ad-1fa6-4be2-9bf2-f5b4bc0080bd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3b6dbc9c-f4d9-4c98-bd7a-7c61fea70574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d644c26-4778-4aa9-b62c-24e9019b6d4b",
        "cursor": {
          "ref": "1a718748-4c22-444c-a448-12aef581e000",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "602376a6-c786-47c7-a7e0-3ede905b3a19"
        },
        "item": {
          "id": "8d644c26-4778-4aa9-b62c-24e9019b6d4b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "53f9d72e-feda-4ec3-b5b1-06b24ee34263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add3460e-f0cf-4e01-8fc5-f4e273efdffd",
        "cursor": {
          "ref": "c0d83a0f-2a05-4669-aa76-8aa54eb046c1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a8040e16-e433-4bbd-b7c4-30e56649f64e"
        },
        "item": {
          "id": "add3460e-f0cf-4e01-8fc5-f4e273efdffd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "899f8aa6-7985-4525-b676-7d8977c0987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40cd5b7-1fea-46bb-aeea-4cb32ebe2592",
        "cursor": {
          "ref": "068ab01e-2589-43a6-90a5-61c587bc6acf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "61acb717-b7f9-4ed9-a4ca-f262e6270830"
        },
        "item": {
          "id": "a40cd5b7-1fea-46bb-aeea-4cb32ebe2592",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ef8bab0d-53b2-48da-bc46-bf5fcf88db67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3f23f6-d313-4dab-ae4e-062fcf9937a1",
        "cursor": {
          "ref": "4493f965-5488-4dbe-b11c-5ab6e74d44aa",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f162466-54cb-4043-b002-9307b57d1bfd"
        },
        "item": {
          "id": "0f3f23f6-d313-4dab-ae4e-062fcf9937a1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3c8930eb-df31-4c4b-98f3-ee10406b7a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25903806-7dea-4720-9d6f-5cc63fc07fe0",
        "cursor": {
          "ref": "43c6b0b8-83ce-4faa-86d1-0513e30b1069",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dc695ebb-add4-4b09-8767-48c646d9faa0"
        },
        "item": {
          "id": "25903806-7dea-4720-9d6f-5cc63fc07fe0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc77d50e-5235-41fb-8f13-88bb1c096985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5cf888-76cc-4f26-b74a-591f84771826",
        "cursor": {
          "ref": "d0a82a8d-f34f-4d79-a0c9-cb4056ab956c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6124c9f1-60ea-486b-9848-9a113592e35d"
        },
        "item": {
          "id": "2d5cf888-76cc-4f26-b74a-591f84771826",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6f130683-d531-4f08-8c61-ad1e9d65a34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fcde88-cc3d-4600-9d5c-dbb500b94128",
        "cursor": {
          "ref": "df737e71-ae61-49db-824b-06f8a3031ea7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a8da4cb9-7477-4ec3-a25d-f72be5cf3235"
        },
        "item": {
          "id": "f3fcde88-cc3d-4600-9d5c-dbb500b94128",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65ce9235-d897-4981-b8b4-8a2d47c65fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a646b3-abdc-4154-94d7-6afa6af5f7c8",
        "cursor": {
          "ref": "a2ddb539-5c11-4f38-a8ae-0a197c5bfee9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b3148b99-b4cb-46a1-8f90-9b0bf000ed6f"
        },
        "item": {
          "id": "18a646b3-abdc-4154-94d7-6afa6af5f7c8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d0bab781-65b1-419c-a393-e44fbbc44d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce894d25-a814-4abc-8eaa-ed0613814d26",
        "cursor": {
          "ref": "aee808e6-be24-42a3-a34a-127c94b5a5eb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "85e98f86-b0b8-4600-894b-acdaf8fe0eeb"
        },
        "item": {
          "id": "ce894d25-a814-4abc-8eaa-ed0613814d26",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e75fddf6-9393-4f61-8d86-3c7c40e1e2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39be9551-3385-4f8c-9e7b-04ea5699c24d",
        "cursor": {
          "ref": "8a824517-f211-4e53-8af1-b22cb7f59d9b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1771239c-b53a-48b1-bcc0-408a9ccb7712"
        },
        "item": {
          "id": "39be9551-3385-4f8c-9e7b-04ea5699c24d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0c848d6e-1409-44ce-86be-d3dc56a21f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1af538-437e-4531-9619-d405b4d95ade",
        "cursor": {
          "ref": "bb2daa2a-c391-4661-b8b9-f1fd59a99ae0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1568a7e0-8685-4d1d-bc52-fdbf664d20be"
        },
        "item": {
          "id": "3d1af538-437e-4531-9619-d405b4d95ade",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "38cbe282-f665-4e7c-9303-9d9941f77e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91daab8-ca32-42f9-b80d-80d7d1512d58",
        "cursor": {
          "ref": "762d086d-f65f-490a-9537-b1063f7e3391",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d20bb4f-5289-4545-997f-1f57ab358826"
        },
        "item": {
          "id": "e91daab8-ca32-42f9-b80d-80d7d1512d58",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ce5d829c-1d8b-452d-89dd-85a7645ec515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6181a0-1f65-4bc8-bfb0-5602a5461b5f",
        "cursor": {
          "ref": "640c22ce-ca15-4a53-b6f9-e6ab167dc9dc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "944553d5-56fd-4683-bc51-e8a8a5ccce4c"
        },
        "item": {
          "id": "0f6181a0-1f65-4bc8-bfb0-5602a5461b5f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "78dafc59-9b27-4f4d-ae39-1607ef2f6947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1af5820-7a85-497e-a119-37058fc3ed96",
        "cursor": {
          "ref": "6cc33035-0350-4533-bf0f-704df3450109",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "987aac6e-4f86-40df-85a8-f52036d32eb6"
        },
        "item": {
          "id": "b1af5820-7a85-497e-a119-37058fc3ed96",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aa28588d-d695-4ac5-9fc7-e013b64a1af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d2a207-166e-461b-9830-57bc72dabe37",
        "cursor": {
          "ref": "cd7d60d6-1461-41bb-869b-ce29b8939571",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "228bac30-1627-4a5f-896c-c97241cf0d11"
        },
        "item": {
          "id": "93d2a207-166e-461b-9830-57bc72dabe37",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2921c3b9-f4e1-47f8-b255-f70a0437c323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d2315-0ec1-4624-b351-2b7db19872fe",
        "cursor": {
          "ref": "a4971d71-f36a-4b62-b006-171f4a83422f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f6848c00-9af5-4340-96fe-a93c068c1dbb"
        },
        "item": {
          "id": "b86d2315-0ec1-4624-b351-2b7db19872fe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0440df2d-2c54-4dae-b583-9e161e390876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cca8d1-ac73-4c58-89bb-468451e17bd2",
        "cursor": {
          "ref": "091c64de-0ff5-4787-a891-88fd1679ae48",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "57af22ca-021d-4ed6-8ca0-2f5a369f532f"
        },
        "item": {
          "id": "01cca8d1-ac73-4c58-89bb-468451e17bd2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "887dba82-dc38-495e-a751-36a0f26d8266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089c3bd3-5952-4ba2-83a7-53764961ec81",
        "cursor": {
          "ref": "0c4104b9-d8d9-43c6-a968-a10b21a9c7bf",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2e286965-adbc-4bcb-806f-f7cbf8508f00"
        },
        "item": {
          "id": "089c3bd3-5952-4ba2-83a7-53764961ec81",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9d495d1e-6272-4a77-a1fc-12149d0319f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65745faa-edce-4d0a-80f4-365fab7db83d",
        "cursor": {
          "ref": "1c57c76b-83d0-491a-b677-73cd234068da",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bbf6da76-1b38-492a-9580-1f3e197211ff"
        },
        "item": {
          "id": "65745faa-edce-4d0a-80f4-365fab7db83d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c7edbfe1-1a6b-4d32-ac85-986db44e3073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f473759-ad46-40be-bc76-f10c258ee35a",
        "cursor": {
          "ref": "06eae25f-60e5-40df-98c2-b3666d4ff2e6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6d816312-9c8b-468f-be2a-7fc8194444a8"
        },
        "item": {
          "id": "2f473759-ad46-40be-bc76-f10c258ee35a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0ce76725-07f6-463b-822b-98e4f3a28173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32923169-bc8f-4ea6-9fb6-caddb27f3b04",
        "cursor": {
          "ref": "c58b6723-1459-42d6-8d85-9c63489f5bba",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f061d147-8fe6-47bd-8644-fa3e66144357"
        },
        "item": {
          "id": "32923169-bc8f-4ea6-9fb6-caddb27f3b04",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "33ddde44-be52-4428-aa1d-2dc77392ed6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2aac79-4d39-43c2-919f-b8bd73f7a50d",
        "cursor": {
          "ref": "6daff635-465a-4b52-857a-e88c9046a0a0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a2cff7e-93cb-4694-b2a5-4080aefae332"
        },
        "item": {
          "id": "de2aac79-4d39-43c2-919f-b8bd73f7a50d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0cf31b25-642c-49a7-9bd7-6e9fd4ad5ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc7fa47-cd20-4643-a0b2-908236ec3454",
        "cursor": {
          "ref": "c12a8ef2-22c0-4603-934e-6a68589f05bb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d506bc95-dda9-4df5-9f5b-05eb6d438ba0"
        },
        "item": {
          "id": "bdc7fa47-cd20-4643-a0b2-908236ec3454",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a3111861-725c-47e7-8491-b77aa57386f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adf4ad1-a56c-4923-80a3-178ca711e652",
        "cursor": {
          "ref": "7ae914e3-70d9-4dc7-8600-67e0a5e6ab38",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1ce43da0-f0b3-44f1-be01-2657e63a879d"
        },
        "item": {
          "id": "6adf4ad1-a56c-4923-80a3-178ca711e652",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3043c7d9-894b-4be9-81d4-e4c32204addf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe63c26-082a-4608-bbf4-443d88573728",
        "cursor": {
          "ref": "6d527049-7c41-4213-99c6-02c44ccf4a7c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c1baa20-eda7-43c3-9b85-edee14e58410"
        },
        "item": {
          "id": "bfe63c26-082a-4608-bbf4-443d88573728",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "55fd4152-2543-48f6-9d22-404e4e5dbdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775dbe3e-cf69-46ed-9cf1-5a7dc34cd8f8",
        "cursor": {
          "ref": "96ceb55f-6295-4225-8ead-916dc899a88b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "35962fc7-012c-4f4b-9835-79bfad87991b"
        },
        "item": {
          "id": "775dbe3e-cf69-46ed-9cf1-5a7dc34cd8f8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ff65aba2-d7cc-4255-af87-c287bd59f16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6442b1f6-b009-4f32-8a9b-bd807559abae",
        "cursor": {
          "ref": "266ed1a0-6bcd-4b3c-814a-d77f0ddeb862",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e49c2e64-2ceb-4cfd-a0c2-0b2601ffabb9"
        },
        "item": {
          "id": "6442b1f6-b009-4f32-8a9b-bd807559abae",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e452f76c-7edf-49a2-bed1-e654975c0243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f497035-bf93-4acb-b0a9-2b7811aa1fc1",
        "cursor": {
          "ref": "e7a94abf-62db-41a0-b940-376fb7b2c4a7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "df9ae29f-f662-42d1-92a6-53bcc6594481"
        },
        "item": {
          "id": "6f497035-bf93-4acb-b0a9-2b7811aa1fc1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eddd78a9-e870-4019-9917-be3027e83863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986123af-afc9-433d-a64c-525caa77a49a",
        "cursor": {
          "ref": "d995e560-7500-49fb-8d1d-da4fa1e80692",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1808f80d-8d5f-41cc-82f9-0b437d67c9fe"
        },
        "item": {
          "id": "986123af-afc9-433d-a64c-525caa77a49a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3272d020-f14e-42af-be2c-58a8b4a05b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da943c3f-9e57-4e60-bb24-690975c31df5",
        "cursor": {
          "ref": "1cc1e669-3723-41aa-b188-af2e0ae2b91f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "26dae503-a442-4702-bfa9-a3ce797a48e7"
        },
        "item": {
          "id": "da943c3f-9e57-4e60-bb24-690975c31df5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "58aef177-3eed-41d8-96dc-c8784be53ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16708c6-ab2e-4fa4-9f2b-74029d1603ee",
        "cursor": {
          "ref": "3dac0a3e-e17c-45df-968e-05fae7d088cd",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6dd0c373-a15d-45c7-a105-519b1efcd1be"
        },
        "item": {
          "id": "c16708c6-ab2e-4fa4-9f2b-74029d1603ee",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7657f996-0b87-4d73-828b-d2d6fd2a37f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3ee0c-7a3d-48cc-bd23-cb7328eb8874",
        "cursor": {
          "ref": "42ddccbb-01dd-4c16-b30a-e2d55ac78266",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a14f22c4-b0af-4c2a-82a4-b289c1c6428b"
        },
        "item": {
          "id": "a7e3ee0c-7a3d-48cc-bd23-cb7328eb8874",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5910d8a6-ad12-48ad-ae60-16e4dda20bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad15094-7ca0-44d3-908d-3ce6deb44a51",
        "cursor": {
          "ref": "bec9653d-1f6d-46c5-8c6f-73179921b962",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "be53f1f2-1299-4199-84e5-5c95afe7e81e"
        },
        "item": {
          "id": "7ad15094-7ca0-44d3-908d-3ce6deb44a51",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4f022114-e073-4bea-bb88-ddb8fc68a695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0652e2-86b6-49e7-8954-89165a0eaa8a",
        "cursor": {
          "ref": "6c005ece-6ea1-4e05-bc45-c989194617af",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "158673d3-753b-46e1-b408-543a98692543"
        },
        "item": {
          "id": "ef0652e2-86b6-49e7-8954-89165a0eaa8a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c88e7690-c858-4433-bced-4f0e073ff11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50ac215-3169-404b-943b-485f5c09564e",
        "cursor": {
          "ref": "36cd5b91-466f-4b07-bdba-80925cff7138",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98134d1a-a625-4811-8998-6e74963204fd"
        },
        "item": {
          "id": "b50ac215-3169-404b-943b-485f5c09564e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6c08fbd6-b1d4-4cdb-9a4b-272bbf6176cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961a0c90-3633-4ff8-8f61-e122976a3add",
        "cursor": {
          "ref": "50e45b14-8c66-4507-b9a4-9394ea261775",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "18738dae-3d20-465e-b697-34dbde2dbbad"
        },
        "item": {
          "id": "961a0c90-3633-4ff8-8f61-e122976a3add",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "68aa8631-d364-44d2-87bd-907b1463e96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3afbc84-9282-43c3-a32a-bfa5b349af06",
        "cursor": {
          "ref": "cd676320-721e-48d2-ac2d-f065d0af161c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "242f6743-6ff0-4559-9b2b-1bc09d28e955"
        },
        "item": {
          "id": "d3afbc84-9282-43c3-a32a-bfa5b349af06",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a0bdb281-a19e-4cca-8b95-324063fb49c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b418f9f-b7ea-46a7-abd9-ad568932f1c4",
        "cursor": {
          "ref": "c704e619-3c41-48ca-afbe-aa44bb4e335d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1462a616-684a-494b-8239-1f3b0ad9615b"
        },
        "item": {
          "id": "8b418f9f-b7ea-46a7-abd9-ad568932f1c4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6bc25947-5481-4343-9d72-2b028b63151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f70135-36f6-4b73-b554-cba7b9762d7a",
        "cursor": {
          "ref": "43ecea10-f0b6-4cb0-bf41-2f7f273133da",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "19de1beb-1117-4c14-8957-e97bf871875e"
        },
        "item": {
          "id": "70f70135-36f6-4b73-b554-cba7b9762d7a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9425cecc-3153-4777-823a-5596ba86a332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81794ed-ded7-4356-8c12-c1bad201c428",
        "cursor": {
          "ref": "1db0970a-5858-4994-8a90-6db32f09c9e5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "22cdaafe-e5d2-4efc-8dc8-80f84519d5d4"
        },
        "item": {
          "id": "c81794ed-ded7-4356-8c12-c1bad201c428",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e528a115-b2fa-4a81-a732-40677d19abc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2215e12e-22fc-49cb-b6ee-fe9f31a765d2",
        "cursor": {
          "ref": "425812e2-3875-4d15-85dd-4904fddd3389",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "981251de-cc88-4bd4-b2f3-938c5d2400f4"
        },
        "item": {
          "id": "2215e12e-22fc-49cb-b6ee-fe9f31a765d2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f02dd596-5ffc-42f8-90db-9b58dfb5b8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c299358c-f4bc-49b7-ad47-1c234bc91b48",
        "cursor": {
          "ref": "1ca45f49-93dc-48e5-ab53-af28eb3164b6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "19139ff3-7677-4194-9b27-2411ebd510d2"
        },
        "item": {
          "id": "c299358c-f4bc-49b7-ad47-1c234bc91b48",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "92463abd-9fee-4310-97b1-bce65c3e655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b178e-c197-49b8-a42d-e3d5e907933a",
        "cursor": {
          "ref": "864f56f0-54ee-4f70-821b-1bf4d44aa39e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7c4cbbca-746c-4142-84a5-0270a7d17202"
        },
        "item": {
          "id": "da3b178e-c197-49b8-a42d-e3d5e907933a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f1f50df9-6124-4ded-88c7-4387b1a6a22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9545215-4bf8-4060-85c8-8ca729d5a754",
        "cursor": {
          "ref": "b875ee85-729a-46ea-8cdf-34b69374d9c2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4621a765-a3e7-44ad-8dde-94987ba49ca9"
        },
        "item": {
          "id": "b9545215-4bf8-4060-85c8-8ca729d5a754",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0bf059f7-63ba-4319-9927-4b68585645ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43db3fe-18dd-40c5-8bf8-02e048547c58",
        "cursor": {
          "ref": "1486a615-997a-4c88-bc19-759a1cf05a4d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4db1e5f8-5771-4b5f-881f-be08d20be706"
        },
        "item": {
          "id": "d43db3fe-18dd-40c5-8bf8-02e048547c58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "892ea1d0-919e-4c7e-bbdc-08f528b9b53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b1575f-f6d9-43ea-9d13-1600cd73243e",
        "cursor": {
          "ref": "f76e6c16-ed6d-41ea-89fd-fc99de7710a5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "745849a0-bbe3-4811-ad8d-ded233c473f6"
        },
        "item": {
          "id": "e2b1575f-f6d9-43ea-9d13-1600cd73243e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dfa7bdd6-f954-4066-8181-e1cfdd5ae4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ea6a86-c3be-4eb7-93c3-7cd2d36bb832",
        "cursor": {
          "ref": "384cc1f7-52e4-4da8-b65e-ce08efca343a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "17b934c2-af38-413c-b3a7-f491cdf205a9"
        },
        "item": {
          "id": "66ea6a86-c3be-4eb7-93c3-7cd2d36bb832",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "86c2a86c-eea2-41bd-ae5a-c1255f5bd4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa862c6-c404-4f1e-b5d7-f054ff51d004",
        "cursor": {
          "ref": "aba280d6-a924-4030-898d-40b87b48a51d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a946d945-175a-4714-af0b-6ff320d920f3"
        },
        "item": {
          "id": "caa862c6-c404-4f1e-b5d7-f054ff51d004",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2f3c4fa2-b2ec-42eb-9f79-e36cdfae39eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361da3d7-2202-458e-a0d2-528a0dbf2579",
        "cursor": {
          "ref": "a117374c-4212-48a7-906b-00df8523f11b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8ba18cc5-1f0b-4deb-8870-54eadb374e02"
        },
        "item": {
          "id": "361da3d7-2202-458e-a0d2-528a0dbf2579",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7e0923c7-3614-4c31-8f08-d0f0c51a21a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d103631-9320-4959-a30b-b608cb66eddf",
        "cursor": {
          "ref": "e01915da-d8c8-43bd-adb9-33bcd0d7c0a4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a65e86c7-3fc2-4b03-b8ad-47d7830cb8fe"
        },
        "item": {
          "id": "6d103631-9320-4959-a30b-b608cb66eddf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f758ef0d-482b-439b-b7ea-b6cb6017a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83ef888-cecf-47ca-b93c-929cfc77d940",
        "cursor": {
          "ref": "5e035324-966a-4138-a9d5-30b517a46dcc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8a18c014-e9fd-432a-ad81-75ac5fd48165"
        },
        "item": {
          "id": "a83ef888-cecf-47ca-b93c-929cfc77d940",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "85fc79b2-1851-4769-8d1a-bec108083869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a03b6ac-d40b-4367-af81-85fa2606fb20",
        "cursor": {
          "ref": "465a519a-a417-4f6c-b6fc-c40b6ab92877",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "84def4f3-53de-41fc-8255-e79375ad1454"
        },
        "item": {
          "id": "9a03b6ac-d40b-4367-af81-85fa2606fb20",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "784af6e4-24b9-42e7-9924-63abd00cb40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d4ac13-d015-4421-89b4-eaa984e4bfe7",
        "cursor": {
          "ref": "9a96e8d1-408c-4fd5-b23e-2a211be6ac51",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e786bab4-c5f9-4d85-ac44-2faf146496cf"
        },
        "item": {
          "id": "18d4ac13-d015-4421-89b4-eaa984e4bfe7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d5347c79-391a-44c6-bca9-2e8daa867dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1278576-1ffc-4d1f-b38d-f0a7c024ef99",
        "cursor": {
          "ref": "d2be5b91-385d-4d36-9d79-57d2cacb3b57",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "23ed0f66-d7ac-4f4f-a3bf-50ccab353aa4"
        },
        "item": {
          "id": "a1278576-1ffc-4d1f-b38d-f0a7c024ef99",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "962a18f1-8d56-486f-b381-962c8c0541b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9f08b-4f0f-4986-90ae-bf54c7cfb05d",
        "cursor": {
          "ref": "0d24e8a5-1d32-4003-b8f0-ff96647e0b9b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "925923fc-aac3-4857-b95b-df2c002e0c3a"
        },
        "item": {
          "id": "2fc9f08b-4f0f-4986-90ae-bf54c7cfb05d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9706717d-6428-46db-8477-606542abb319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a0a3d5-5395-4aa3-a0ab-1a5b84dc9cf4",
        "cursor": {
          "ref": "f709b3b1-958c-4550-b4d5-12f1790653e8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a9b1d8c-617a-4fbf-96c4-22dd57966079"
        },
        "item": {
          "id": "43a0a3d5-5395-4aa3-a0ab-1a5b84dc9cf4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a689d326-9a1b-4ce3-8c91-ab6acd5215f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c343994-7500-479e-9c3a-c5fe002f1e15",
        "cursor": {
          "ref": "9fff4330-79a5-4e9d-8f4d-0aa6302f29f1",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dee5d905-a65a-4ffa-9f18-e01fb28ab441"
        },
        "item": {
          "id": "5c343994-7500-479e-9c3a-c5fe002f1e15",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "15bda7df-67ed-4f81-a887-6fc4e8328d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1bb612-32ea-48ba-81dd-98359584284a",
        "cursor": {
          "ref": "95e52c6d-5db9-44d1-9e36-f763c3528f2f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f8ccdd3a-c9f5-463e-8323-265de2a47624"
        },
        "item": {
          "id": "8a1bb612-32ea-48ba-81dd-98359584284a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "adfc3e8e-8aaf-4f80-89fb-e72e0f044f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56475493-cecd-4c3f-a1bd-1e638e0061b4",
        "cursor": {
          "ref": "ac8fea33-8336-4cb0-923e-e9a9092048de",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4e9599af-f714-4f95-bfd3-352f0e3137ad"
        },
        "item": {
          "id": "56475493-cecd-4c3f-a1bd-1e638e0061b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9c1fa236-337d-4b0d-80f9-5d4b4c7f5342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68dd1ab-6867-43c3-8bd6-a0b491113c95",
        "cursor": {
          "ref": "0b074813-d2fa-4237-9918-e01d24687934",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6aa09ed1-c2bf-417d-b70b-dbd9db146545"
        },
        "item": {
          "id": "b68dd1ab-6867-43c3-8bd6-a0b491113c95",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "27632392-1d61-4556-bc57-10b07d19ad37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca76623-3274-4bad-8940-59a59d3496cc",
        "cursor": {
          "ref": "c537194b-20df-4dba-97cf-2463d322602f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd8dab8b-22d5-4d57-8944-3890981f8915"
        },
        "item": {
          "id": "4ca76623-3274-4bad-8940-59a59d3496cc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3162dad9-0989-4acd-a7fb-a12a8693f099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d547a5-83ef-4883-a6a7-eef50d134375",
        "cursor": {
          "ref": "464e6757-abd0-44cb-b380-bba2dd9594db",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bb6d49fe-023d-4e1c-80ca-ba2e9d659ddf"
        },
        "item": {
          "id": "e9d547a5-83ef-4883-a6a7-eef50d134375",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8d139c4d-05e9-4438-a55b-d561999c1412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87acd81e-d9ae-4030-8ad7-05e3c5b1f3a7",
        "cursor": {
          "ref": "75b235d9-9014-4d5f-9352-211139b9ab47",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "60a2055c-d788-41b5-9f99-b86be0a0a700"
        },
        "item": {
          "id": "87acd81e-d9ae-4030-8ad7-05e3c5b1f3a7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "09e93182-213a-429c-8d35-399734b95a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a94421b-ed69-4539-a505-9692cf40f891",
        "cursor": {
          "ref": "3d16e33c-9d0a-4106-b5ff-8b921274f7cc",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81cf009c-8253-4b13-9317-c20fde23f3ed"
        },
        "item": {
          "id": "5a94421b-ed69-4539-a505-9692cf40f891",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bad3703d-3366-4cd8-9586-85bcabaaef1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9032f-cf48-44aa-9093-bb5a485aa583",
        "cursor": {
          "ref": "a963f3f7-5a9e-4f3a-b081-f2aa5e21339b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b419f8de-215e-45cd-9762-82fd8b0a33ed"
        },
        "item": {
          "id": "cee9032f-cf48-44aa-9093-bb5a485aa583",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "db6c2d3e-49aa-4ede-87fa-f2fac494f616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89820b05-3e31-4882-97ef-2db8b24d3069",
        "cursor": {
          "ref": "2ca791ae-46e6-4853-a433-44717dee447c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "596691fd-4a97-422d-ac92-2c7142877835"
        },
        "item": {
          "id": "89820b05-3e31-4882-97ef-2db8b24d3069",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "94eaf524-9c8b-4eed-a325-a42c96509720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6434507-924c-442e-8f94-573109dc9702",
        "cursor": {
          "ref": "0c320da3-9612-490b-a3f8-40f60aa46bc1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "697fd35f-0585-419d-af86-6d3270417514"
        },
        "item": {
          "id": "d6434507-924c-442e-8f94-573109dc9702",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a5bfaa4b-4faf-447b-b8ac-a90547b6e4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ac8e48-d8b1-49ab-8ba8-c19f89ad8c4c",
        "cursor": {
          "ref": "7e445488-e783-492f-b033-60d222d6f344",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e82fb524-930d-4596-92fb-2958b5eed260"
        },
        "item": {
          "id": "54ac8e48-d8b1-49ab-8ba8-c19f89ad8c4c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d2293b01-9a86-445f-bd47-7da92c51dda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4df667b-5d9c-4fe3-8d9e-734e133a85b2",
        "cursor": {
          "ref": "59d07363-aec5-4cb2-b9f8-c1d12b68614f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bcfe1a08-e618-4030-91de-c3a610f52f90"
        },
        "item": {
          "id": "d4df667b-5d9c-4fe3-8d9e-734e133a85b2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7c036efc-d894-4fe6-865c-7c1757563e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9410d7ca-9606-4a0d-8007-d10d05d754ba",
        "cursor": {
          "ref": "ba822267-919d-405d-b253-99f0a2ec41d9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "16742d85-7968-4aeb-ad7e-b850c869c281"
        },
        "item": {
          "id": "9410d7ca-9606-4a0d-8007-d10d05d754ba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ff561fd0-507c-4483-bffe-e301f97bb90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13e3be2-77e2-4c7e-9632-2d0296eed1c7",
        "cursor": {
          "ref": "495c2139-8afa-40d4-8cce-dd93be3ae81a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "496f7289-9758-4d27-a3d3-edc639e237eb"
        },
        "item": {
          "id": "b13e3be2-77e2-4c7e-9632-2d0296eed1c7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6fca1215-536f-458e-a8b5-4ea091112b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401386f3-ce64-4c05-ac2d-9f77c6935a4e",
        "cursor": {
          "ref": "6389e669-4b0b-4988-b5c1-f161504cab42",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6cdbfad9-9a22-4766-a069-3fd22c693320"
        },
        "item": {
          "id": "401386f3-ce64-4c05-ac2d-9f77c6935a4e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2d8a33c5-ae11-4772-be32-97c0d7236811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110e03ec-be15-41b4-86c0-fc75b260fce0",
        "cursor": {
          "ref": "8af28cee-ad86-475f-8381-3104e8c93a8a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a11d9031-7005-48e0-80cd-aa0193bc1a1f"
        },
        "item": {
          "id": "110e03ec-be15-41b4-86c0-fc75b260fce0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "de0cfd32-1c67-4f5d-b9ff-1d26307d4030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f21e809-b491-417e-bbf4-2d0d67a73c8a",
        "cursor": {
          "ref": "1c5611ac-7b23-4687-8d0c-7d654950658a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1de1a85b-27da-4b5a-a501-4549b7c36fea"
        },
        "item": {
          "id": "5f21e809-b491-417e-bbf4-2d0d67a73c8a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ce743559-74d7-4c20-bbe2-896501f4bffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a5638-8c98-4dba-9075-e4e9dcc302eb",
        "cursor": {
          "ref": "69c8b5a7-8705-4c77-96e1-f9440b4eea35",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2680595b-bfce-468b-979c-7d4609a2907c"
        },
        "item": {
          "id": "fe6a5638-8c98-4dba-9075-e4e9dcc302eb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ce8e5a77-30f1-4cab-8909-13af188dc3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50053a91-dfbb-4633-b697-befbe67ac369",
        "cursor": {
          "ref": "2b548fac-d3d6-4696-97c6-1cc83f8f4282",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d9d626e1-4552-40ad-b02f-1190552a2f0e"
        },
        "item": {
          "id": "50053a91-dfbb-4633-b697-befbe67ac369",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d1d8ed12-6e1c-4b65-8313-f016a29628ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee271912-57e4-4ba2-bb67-ba85b5284dff",
        "cursor": {
          "ref": "55d2c478-fd58-4759-9227-13b20a7c3e46",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e9f02f41-0682-427e-bc03-789d6b3c27c3"
        },
        "item": {
          "id": "ee271912-57e4-4ba2-bb67-ba85b5284dff",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eb623612-e256-4249-92b3-b4869c8db77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1255fcde-ecb3-44a3-bc63-d9997b8cf68e",
        "cursor": {
          "ref": "1c90ef8d-1389-491a-87b9-e9058bcdb407",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0739ffcf-98de-4d90-89b8-931e5298d251"
        },
        "item": {
          "id": "1255fcde-ecb3-44a3-bc63-d9997b8cf68e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "773514ff-cb99-4b57-ac20-015e822f1471",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53a8129-e268-461f-937e-30a23c14cbc4",
        "cursor": {
          "ref": "5759c0fe-b244-49a6-9483-16352fca1ba3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b1f41175-4628-4d9f-9388-93437b3372c6"
        },
        "item": {
          "id": "d53a8129-e268-461f-937e-30a23c14cbc4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3293edff-5ae7-41f7-a4d4-6dc709f6ec63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "59ce93e1-646e-4e6c-b65b-b8af57799ebb",
        "cursor": {
          "ref": "f6484ba6-c4ee-4f13-be18-961543f3e0be",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "967642bf-c954-46d0-a366-04bbf835b86c"
        },
        "item": {
          "id": "59ce93e1-646e-4e6c-b65b-b8af57799ebb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d330bce9-e576-4e2b-b8a1-4a66832eba5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d6bfe2dd-4de5-4025-bd18-e415772e9fce",
        "cursor": {
          "ref": "59668a2e-7552-4faa-a55f-0f03ec699c11",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "24a784f6-2795-43b4-a6be-319b45186dde"
        },
        "item": {
          "id": "d6bfe2dd-4de5-4025-bd18-e415772e9fce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9ed28056-c0a9-4f76-9e40-95f94cc0d12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9cda43a4-2507-427a-b702-56d1e2c49d9b",
        "cursor": {
          "ref": "d531b2a2-aa0c-46a0-9eab-d7efd073c6e2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "22296e62-3e55-43fd-ade3-c6a1321695ea"
        },
        "item": {
          "id": "9cda43a4-2507-427a-b702-56d1e2c49d9b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "78edba5e-90b1-4d69-a387-3059fb08ab3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fc52f158-8cf4-4953-a9e1-11ac7dd5eec8",
        "cursor": {
          "ref": "c35feeae-0859-4cbc-9790-3dd4c009c6dc",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4b7cde29-61e8-4227-9668-4b48009c75cc"
        },
        "item": {
          "id": "fc52f158-8cf4-4953-a9e1-11ac7dd5eec8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "22bde44a-f8ce-4229-a8dd-27ee4b939fc6",
          "status": "Created",
          "code": 201,
          "responseTime": 17995,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "00852c4f-3ff8-4924-9590-2b3a2227bfaa",
        "cursor": {
          "ref": "14795751-f379-4f67-be60-5f005112483f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a821e1f1-b7f8-4c77-8ca2-d5d87ec3f139"
        },
        "item": {
          "id": "00852c4f-3ff8-4924-9590-2b3a2227bfaa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "55a9801f-5e26-4c04-939c-7febeed84433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8e1cb9e2-e8c1-4d4d-93c8-376c17f672aa",
        "cursor": {
          "ref": "92f47e82-5d53-4ac1-8b4f-9a0de09728b9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4aa02a1e-3957-481f-b05a-ba7654a72911"
        },
        "item": {
          "id": "8e1cb9e2-e8c1-4d4d-93c8-376c17f672aa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d72a4ca5-4b23-45e4-baa1-f3cdd4792cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3be0730d-af82-4a1f-af9f-1fe9c23770a1",
        "cursor": {
          "ref": "c971f3e6-d58b-4aa5-b7c8-6a36dc12900d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04e1c09f-a76f-432f-a8b6-b50b65263d52"
        },
        "item": {
          "id": "3be0730d-af82-4a1f-af9f-1fe9c23770a1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc255488-9daa-47ee-8d44-86bced5196ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0001b0b-70f2-4ded-9109-30c634defada",
        "cursor": {
          "ref": "7671c139-d559-40dc-8fe6-26e991968319",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4015d553-b5ab-428a-8ae1-2fb907d1232d"
        },
        "item": {
          "id": "e0001b0b-70f2-4ded-9109-30c634defada",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b26693c0-ff95-4869-914c-ca0a06b88a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b18b27-fa5e-44a5-8db0-f4c533142bb3",
        "cursor": {
          "ref": "7c1e8c66-3f3d-42f1-b3e3-5c66507088c9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0c11eb20-e0b2-437e-99b1-672f82be7418"
        },
        "item": {
          "id": "f3b18b27-fa5e-44a5-8db0-f4c533142bb3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ff696415-80fb-4904-99ea-8f8bec061e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e64fb5-8654-478d-a8fe-0fc9b1bd9da0",
        "cursor": {
          "ref": "6ca39059-18f3-4e9d-bdcb-63e06fba1811",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9812509e-928f-4f1f-a5df-9c9e7543b3fd"
        },
        "item": {
          "id": "52e64fb5-8654-478d-a8fe-0fc9b1bd9da0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "beb5996f-3fb1-4c3e-a4bb-57e5a0d2c567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70125e2b-137e-4ffd-80c5-1a8d7421c057",
        "cursor": {
          "ref": "0a613a50-2b8d-4d0d-b9c4-765b91da3424",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eca3781f-edb9-446b-9f00-1e962d7a3cfd"
        },
        "item": {
          "id": "70125e2b-137e-4ffd-80c5-1a8d7421c057",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9fae58bb-6d98-4d94-a073-693f0a2eee49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdaf044-b3d5-4774-b022-f79432124dc8",
        "cursor": {
          "ref": "94729c95-f65d-4c61-bce5-c10e8701e692",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5a21cd8-8b9d-4700-8290-544f19280c83"
        },
        "item": {
          "id": "cfdaf044-b3d5-4774-b022-f79432124dc8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a459ff3f-4ffe-4e6d-aca2-e44fb128351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fa58ea-4c85-4cc5-8ad6-dba1988c6e15",
        "cursor": {
          "ref": "06f4bc13-b4fa-4af0-939f-12b63fcce018",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0e89cfba-cd12-47ee-b1ed-4429b2b0a1b1"
        },
        "item": {
          "id": "c1fa58ea-4c85-4cc5-8ad6-dba1988c6e15",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "720741f0-166b-4e16-9abf-e6e261ae199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2fb21a-b826-4256-82fe-11669b036a08",
        "cursor": {
          "ref": "4347b8d7-79db-47fd-af7c-c2d0c4c9ac7b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "57fd0e48-7cc5-4a0a-a978-589a89c77c80"
        },
        "item": {
          "id": "be2fb21a-b826-4256-82fe-11669b036a08",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a2d727d-eaa2-422a-aeff-d201068e12ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68b2497-66dc-409f-b3e4-0f7a1fe28b50",
        "cursor": {
          "ref": "2dd22139-30cf-471c-82f4-62cd71876a6f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "41e17188-dd66-42fe-a348-f4978cc68708"
        },
        "item": {
          "id": "a68b2497-66dc-409f-b3e4-0f7a1fe28b50",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1b458ddd-dd54-4cca-95ec-b6aa5c8b318b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6782a93-f73a-40ec-8769-7149a9235123",
        "cursor": {
          "ref": "dfad669b-26e2-49fa-aea9-7b56081f0c74",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f97cc4df-f75e-4bee-a22a-0d112dedceaf"
        },
        "item": {
          "id": "b6782a93-f73a-40ec-8769-7149a9235123",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8e3b73eb-cc30-4763-b218-8d7477adc0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33dd5d8-1b1a-42dd-ae46-6dde346ecbba",
        "cursor": {
          "ref": "d3ab5a26-c342-46fc-901f-f8e85b73288c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7c90a313-b9cb-465d-9d13-15bc00009fd4"
        },
        "item": {
          "id": "c33dd5d8-1b1a-42dd-ae46-6dde346ecbba",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "284868fe-7c00-4e1c-8551-ffec9e6a85a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980812cf-e820-419f-be4c-e7d20964ef1a",
        "cursor": {
          "ref": "9b936cc7-c0c3-4cad-8cb2-ff9d0ea3007d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b4096d25-cb96-4337-8085-903c7ba2dc68"
        },
        "item": {
          "id": "980812cf-e820-419f-be4c-e7d20964ef1a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ff505496-2685-495f-b48b-e2cd9100e3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85c8397-b572-4638-8e2c-1a62dc377bfc",
        "cursor": {
          "ref": "969aa57d-2271-46a5-a487-f88ddcb4da41",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8f5ff4aa-7953-438e-b615-3bd7afa5b56a"
        },
        "item": {
          "id": "a85c8397-b572-4638-8e2c-1a62dc377bfc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a481a48-e6d7-4a8b-80db-f2a12591120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf16469-3445-4fc8-895b-d9ce14d5c81d",
        "cursor": {
          "ref": "15b55c2f-5ba9-49ea-9113-22f15b1aac85",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a00f79d1-7c39-4253-ae9b-a1b67cb660e1"
        },
        "item": {
          "id": "caf16469-3445-4fc8-895b-d9ce14d5c81d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "08241857-3003-41a9-bf5b-302b0fae5b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616019b7-34aa-4e82-bb81-ecf7579e1806",
        "cursor": {
          "ref": "1eadb3fa-4a0c-4b64-b11f-2976eba8c4da",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0d92946-5d62-42cd-8b1c-b4276f040a64"
        },
        "item": {
          "id": "616019b7-34aa-4e82-bb81-ecf7579e1806",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0dcbd962-d24e-47f3-a0d3-56d5c2b99355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980435b3-1725-4820-88cd-9578c78d7d7d",
        "cursor": {
          "ref": "28172781-9b8b-4ac7-945f-e9d0b1ee107e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "080a461d-3103-4b0a-b87b-ddf9618ab524"
        },
        "item": {
          "id": "980435b3-1725-4820-88cd-9578c78d7d7d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8d57bd0e-213e-4f47-9296-389164037ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1aa683-1eb0-4b39-8d0b-7ae62faffefa",
        "cursor": {
          "ref": "34f10391-e7b2-4f58-93cd-b507a0817361",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9627584f-7f1c-4346-a8f0-196e01886ac7"
        },
        "item": {
          "id": "8e1aa683-1eb0-4b39-8d0b-7ae62faffefa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3a98b4a6-b931-4573-aa64-45fd910f33ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "68edaf13-4ebe-4b64-854b-cf672c574cf0",
        "cursor": {
          "ref": "2ef64cfc-9609-4450-8230-fc6862ff29ec",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2ffbcefb-31e4-4bd1-bbd4-6a6d91e7f7be"
        },
        "item": {
          "id": "68edaf13-4ebe-4b64-854b-cf672c574cf0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9260a95e-3d2a-43c2-b2d7-ce99fd2352dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5f34f0-9ac4-4a47-b64d-0b7b2b2336e7",
        "cursor": {
          "ref": "25ab2917-eb5d-41ec-bc33-ab9a8e9b8eda",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "920802c6-4999-4045-914b-f302bdb871d5"
        },
        "item": {
          "id": "da5f34f0-9ac4-4a47-b64d-0b7b2b2336e7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc2eef25-e35a-4bca-9685-5423456fa111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03820d2e-5e23-45d1-b775-4553b7ced3a9",
        "cursor": {
          "ref": "0199d056-6fa1-4a57-acbb-98f819f58f0d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c5483425-8bf2-4b41-a692-f80f46628f51"
        },
        "item": {
          "id": "03820d2e-5e23-45d1-b775-4553b7ced3a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a14994ff-ee0a-41b9-907c-f965c723b61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40615b89-aca5-4051-93a8-f980d543db74",
        "cursor": {
          "ref": "09158606-7b99-42c2-81e4-ace79366e9b1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e5dd912b-72c9-4774-8a3f-3df581917fd0"
        },
        "item": {
          "id": "40615b89-aca5-4051-93a8-f980d543db74",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9f6dfc9f-a27a-4bf8-9e4b-0f41a985cac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233d6a97-0609-4bd3-8374-bd3371e395fb",
        "cursor": {
          "ref": "058811e2-a029-4ecc-9a95-06b97b82faca",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "76c5c55d-c3ec-4f5c-bef4-dfb44ea6dc4f"
        },
        "item": {
          "id": "233d6a97-0609-4bd3-8374-bd3371e395fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "937f7b08-603c-4af8-99fb-6796db07a21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3919fefc-7f45-4d60-8556-a30c8fa79d31",
        "cursor": {
          "ref": "171b7b5d-8944-4616-ad43-33605c2e00e6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "69ed49f5-6124-4cdb-b803-b6a28e1414ea"
        },
        "item": {
          "id": "3919fefc-7f45-4d60-8556-a30c8fa79d31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c8c93ef-cb14-48a0-a372-b41cc0a46445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82489f7-f69f-4348-8ce4-6499028841c7",
        "cursor": {
          "ref": "36453486-ffa1-4dd9-b720-35ef3c693efa",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8d9b4bb4-4c42-40b5-b25f-563120fae732"
        },
        "item": {
          "id": "e82489f7-f69f-4348-8ce4-6499028841c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "275604cb-fc9f-4956-816e-79764daedb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f314b990-5306-41a2-aa02-87072e3b22e9",
        "cursor": {
          "ref": "9b124ca2-1ce0-4d4a-9aaf-01ffa73db385",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e203d372-6cdb-4eee-849c-c695ffcb615d"
        },
        "item": {
          "id": "f314b990-5306-41a2-aa02-87072e3b22e9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "57264f93-489f-4846-bb18-68e45b52cb1e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "49b6cbd6-4e92-4d98-bda5-cc86087cbd2d",
        "cursor": {
          "ref": "69fe2468-8c00-4b49-9ba4-3b1b1a607c89",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b085a94a-640c-4b6d-93e3-4623f308b8c4"
        },
        "item": {
          "id": "49b6cbd6-4e92-4d98-bda5-cc86087cbd2d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1f98b0e0-f2df-4f32-8709-42c7799a7abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34724e34-b2ef-4e19-9171-22531f61a667",
        "cursor": {
          "ref": "2bc6f9a7-124e-44d6-825b-88e63fe35a56",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d5c4b077-ea69-4f35-8488-231b51e3ad1b"
        },
        "item": {
          "id": "34724e34-b2ef-4e19-9171-22531f61a667",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a063e5e1-5a5f-4d96-84e0-965c204390a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36411622-8597-467b-9cd2-39b9d558bb40",
        "cursor": {
          "ref": "f86e9a96-1261-4bfb-b09a-deab21fa607a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8d3d571e-da44-4578-b403-944e3a40d8a0"
        },
        "item": {
          "id": "36411622-8597-467b-9cd2-39b9d558bb40",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "222847b9-893c-4dd8-8738-34cb829808c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892edc50-5eff-4b7b-af7b-c62ed909fd5b",
        "cursor": {
          "ref": "f9ce228a-988e-403c-877f-ec412b367f14",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f654fd00-7697-4415-b731-f9885caf322d"
        },
        "item": {
          "id": "892edc50-5eff-4b7b-af7b-c62ed909fd5b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "03e4e716-7093-40bd-8aae-11c16f7ed1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef89a5d-d506-4c4f-aaf3-a90ce6a1cce9",
        "cursor": {
          "ref": "818813c1-0b89-41bf-9a67-e1661636fceb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f6d15b88-9d8b-41d7-8bc0-f93433c3a15b"
        },
        "item": {
          "id": "0ef89a5d-d506-4c4f-aaf3-a90ce6a1cce9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64a44868-c7a2-4a71-93bf-6284d5271e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b2c66-cdf3-4bfb-b010-61325876267b",
        "cursor": {
          "ref": "4d1b5bf8-8425-4b7a-845c-ccd3d74ad09a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "64770d6d-055d-4ba7-b7c4-bddfbe84f125"
        },
        "item": {
          "id": "2f9b2c66-cdf3-4bfb-b010-61325876267b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2517bcf9-c3bf-4ff3-9781-1ff6e160a58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ec6340-5548-487b-a7db-51b2ada49e8e",
        "cursor": {
          "ref": "95df1da8-9903-4bab-a3dc-96dbff76c681",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd4ca09f-8b93-4c10-bb12-916db3a6baad"
        },
        "item": {
          "id": "30ec6340-5548-487b-a7db-51b2ada49e8e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e99d9285-ec46-4a6c-a963-91e777ab1066",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1aee2df7-f9b8-4896-a171-dce7951946ff",
        "cursor": {
          "ref": "f277a48b-19eb-44e4-916b-3153e11b90f8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cd6db4ca-8809-4fc6-8f3a-a0b8d460652c"
        },
        "item": {
          "id": "1aee2df7-f9b8-4896-a171-dce7951946ff",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0874470f-162c-4332-9b42-aa69aba1dbf7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "65985950-52b2-4401-acdb-dd844578e244",
        "cursor": {
          "ref": "00b28f95-111c-4020-9448-784304fbb242",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e245efe0-f1d3-48d9-9fce-aad24696efb5"
        },
        "item": {
          "id": "65985950-52b2-4401-acdb-dd844578e244",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f21410fd-0eca-4167-9399-9df9558c1f56",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "fee48551-0fc4-4652-bf79-57d23491a511",
        "cursor": {
          "ref": "585f3508-8869-4797-879f-33ed1f374fbd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c60b6ec1-2621-4dc8-81cf-74c2301b11e7"
        },
        "item": {
          "id": "fee48551-0fc4-4652-bf79-57d23491a511",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ddf7d7a7-119a-4ffa-8b84-abc565a48ced",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2f92b084-a5c6-48f7-831a-fb55a1b345b0",
        "cursor": {
          "ref": "d0fd4f01-1a70-409d-a207-719834c01b37",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4a8b0518-363c-490e-9003-eab891c1ee67"
        },
        "item": {
          "id": "2f92b084-a5c6-48f7-831a-fb55a1b345b0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0c7c9d35-09c9-4b32-ab3b-0ad0aac12150",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "87d163fd-31c6-43b1-a802-8edfa9892791",
        "cursor": {
          "ref": "52447021-1f76-4c0e-bf3c-4787d9fc25fe",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d4c834a3-0edd-4bc8-b291-8fb14b7fd056"
        },
        "item": {
          "id": "87d163fd-31c6-43b1-a802-8edfa9892791",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fc2c3ae0-3c2b-4698-926d-3621ab421166",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6b097ccb-5c83-4fae-8b0b-fbdce3500985",
        "cursor": {
          "ref": "0410d5d7-2672-43c9-92dd-e0adae22baef",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e3d73922-feaa-4c6e-8465-5e054ad317fd"
        },
        "item": {
          "id": "6b097ccb-5c83-4fae-8b0b-fbdce3500985",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0f4e9d8a-3c5f-4962-9750-f71d780fae29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafa2e49-7ab1-4e6f-9a20-3fa3d7d9f61f",
        "cursor": {
          "ref": "a86e9dc4-f72d-41f9-8a21-fab5cca73556",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "61e5d668-11fb-457d-9e66-9ed0632eee61"
        },
        "item": {
          "id": "aafa2e49-7ab1-4e6f-9a20-3fa3d7d9f61f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c402da52-bec6-4aeb-b293-4ed13ee96cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e270d6-94a4-4488-ae73-add182301122",
        "cursor": {
          "ref": "aa69097d-26b4-447c-8ea1-ed00317d3127",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0abac192-dbcc-4a2f-8679-0073ca169a1f"
        },
        "item": {
          "id": "85e270d6-94a4-4488-ae73-add182301122",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4dfdd8c4-acd1-407a-998f-61f9b0f978e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a72e24-0dab-42ae-bba1-9f7d934f9fec",
        "cursor": {
          "ref": "77464f28-06a4-4257-b1d3-87cf827bb2e5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a4c6c38e-fdac-4993-af82-0dc84466513b"
        },
        "item": {
          "id": "18a72e24-0dab-42ae-bba1-9f7d934f9fec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1b7c4068-3677-4d46-88fb-4b0e92350883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f08c5b-596e-40b3-adfc-d256d53a9d0e",
        "cursor": {
          "ref": "d7a0d24d-439c-45b2-8990-3822d8039305",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "83838612-42ee-4e40-8f79-941f7ba2936c"
        },
        "item": {
          "id": "a9f08c5b-596e-40b3-adfc-d256d53a9d0e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b41d6c12-320a-46ab-8504-39126af92f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ec7f8-4e57-4a42-a085-ee72522010a5",
        "cursor": {
          "ref": "9a7b363b-564e-4c6a-8bc4-00ab5b37bc08",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ac07d583-701f-4774-b005-47eb1e06a269"
        },
        "item": {
          "id": "365ec7f8-4e57-4a42-a085-ee72522010a5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b5cf0743-bb6c-4644-aa3e-35252eb59b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d1ceea-1c4e-47ab-8be0-f2fd746f59cd",
        "cursor": {
          "ref": "ff88cf1a-f9bc-4ae2-9061-df6d9715354a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1cfb1c1c-4255-48d9-b25f-feb9baf980c8"
        },
        "item": {
          "id": "89d1ceea-1c4e-47ab-8be0-f2fd746f59cd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8055f7d9-7e03-430b-8dd2-a6bac0129063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1351ed-2fe7-4692-800b-8750dfa8fa81",
        "cursor": {
          "ref": "d7deb3b6-9916-48d2-be79-f9696f761ce2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a144a02f-5099-4c8f-8f9b-23aeecffbe22"
        },
        "item": {
          "id": "ed1351ed-2fe7-4692-800b-8750dfa8fa81",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "250766f7-a864-4039-9440-405c1b742066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b41e04-eb1b-4010-8b91-2e2d7caf5ecb",
        "cursor": {
          "ref": "d1b1a8ed-4b9c-4c05-b56a-802e680d4c15",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "413086e3-b8d5-4bb0-858e-9eb1ba129cd6"
        },
        "item": {
          "id": "85b41e04-eb1b-4010-8b91-2e2d7caf5ecb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "76e280b7-ec9b-4aef-a2a2-814f3c564e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8057bf44-335e-4325-84c2-3d58bfc0b4e9",
        "cursor": {
          "ref": "47c31c74-c3b6-43cd-893c-3785c3a2a157",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "287007eb-1037-41b9-9284-c5f1c5800d7f"
        },
        "item": {
          "id": "8057bf44-335e-4325-84c2-3d58bfc0b4e9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3a8afeca-d5ae-445c-967b-ac17b40879bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6694d3ca-9de8-4123-972a-a7af292e3bed",
        "cursor": {
          "ref": "96548710-3783-404a-a937-021351ed35b2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "04ef1eb9-b133-4d9f-a6c9-e9633ff40900"
        },
        "item": {
          "id": "6694d3ca-9de8-4123-972a-a7af292e3bed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e135c242-9fe3-4679-a092-0419b1120461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1937799-1922-4c4f-942c-296aab6517ff",
        "cursor": {
          "ref": "d139ecd7-9aec-4613-9c51-cb845073fe68",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a4e7585b-5872-4085-a963-c7d6435ec3fd"
        },
        "item": {
          "id": "b1937799-1922-4c4f-942c-296aab6517ff",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "700765f7-0c78-412b-9828-d30b542e58a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ca0ce5-8242-4173-bd14-e231ada3cd6d",
        "cursor": {
          "ref": "fc11d59c-ab68-4f90-a2a9-efcc36eb3192",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "225829d2-070e-4573-8af9-b52bceb76da7"
        },
        "item": {
          "id": "d9ca0ce5-8242-4173-bd14-e231ada3cd6d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "12b691b9-0329-4850-ac28-3902257389b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e5361-86c5-4f90-aead-93bb20762eea",
        "cursor": {
          "ref": "0fdb36ea-6ad4-47ec-935b-55644c578c30",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "07c84978-42b3-437d-820b-b12aea6689d5"
        },
        "item": {
          "id": "c54e5361-86c5-4f90-aead-93bb20762eea",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0126cb91-308d-47f0-9c59-6cf49d355dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286fbd29-ec08-4eee-8268-22eb6bc4c93d",
        "cursor": {
          "ref": "4973d4b1-fea0-4b44-a174-c4480ac148ce",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3bc4d1eb-5572-40b1-91bb-02f3b5d7505e"
        },
        "item": {
          "id": "286fbd29-ec08-4eee-8268-22eb6bc4c93d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0924999c-12ba-4886-8601-677212db06e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd60f14-32ad-47bf-a030-487817cf3b5f",
        "cursor": {
          "ref": "d2906967-fde7-44be-ab51-905f7de85e3b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f15d15d0-3d77-4c1b-9fe9-ec1f0d2bad07"
        },
        "item": {
          "id": "2fd60f14-32ad-47bf-a030-487817cf3b5f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cb383454-8952-4c33-811c-6305c90bff0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063fdf30-cb3a-444a-80ed-800efb6485bc",
        "cursor": {
          "ref": "c7812b1a-aa95-42dd-b53a-3195e33a2ad4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "502e9034-b6d1-406c-a9eb-fd8089cf1b19"
        },
        "item": {
          "id": "063fdf30-cb3a-444a-80ed-800efb6485bc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "295f2ab1-b23b-49f6-a324-8e3c45febda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98d43a8-fb11-4646-b31b-57e2d135cb7d",
        "cursor": {
          "ref": "6bbcc26a-9837-47a8-813d-7f9e3c5c59f0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9bcb676f-b5cd-488b-bd4d-047e11a3488a"
        },
        "item": {
          "id": "d98d43a8-fb11-4646-b31b-57e2d135cb7d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0d0bc6b5-413e-44ed-9236-b2fb1fd64868",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "624a7e69-547b-47ef-9050-7429e416ebc0",
        "cursor": {
          "ref": "920c3007-9a70-405a-b716-3df0aa102ed4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "75f2ddc4-7ecb-4452-8780-58b4298d3eb5"
        },
        "item": {
          "id": "624a7e69-547b-47ef-9050-7429e416ebc0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "41733db0-717f-4b6d-b02e-b7a3389da67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56de6c38-d0b6-4a35-9ced-b0a20b1b96b0",
        "cursor": {
          "ref": "72f3c2eb-f9e1-449c-b9fa-5fac3bfdd301",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c4fdc12e-3041-44dd-952a-333157044429"
        },
        "item": {
          "id": "56de6c38-d0b6-4a35-9ced-b0a20b1b96b0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0237c9d6-e001-4a71-bfbd-6be07caa12d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2916c8-9788-43fc-9ca9-81c8517951a6",
        "cursor": {
          "ref": "041ac399-2fb5-493a-8824-e9e4198a5c86",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bc79e02c-15c3-479e-9d7a-397c79e26dd1"
        },
        "item": {
          "id": "2c2916c8-9788-43fc-9ca9-81c8517951a6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ee344627-1fe1-450e-804f-b8bad4d960de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0956fdc7-ea75-4c62-8f50-19770786d82b",
        "cursor": {
          "ref": "a66c10a8-b465-4f18-a67e-4b2b88c603a3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa62c5bd-2b88-4512-96f6-7f8f2c397fbd"
        },
        "item": {
          "id": "0956fdc7-ea75-4c62-8f50-19770786d82b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5724522c-15db-470d-93d2-620b8cd925c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641e7ccf-9f88-4e9f-9cfd-d40d51370c24",
        "cursor": {
          "ref": "9d7721c9-bca5-43b6-bb9b-27d365a60b0d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fe94e32a-d0f8-4e2b-9199-d9f82a5af5b0"
        },
        "item": {
          "id": "641e7ccf-9f88-4e9f-9cfd-d40d51370c24",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "989ab352-2403-48b7-bc96-f97dee8bf155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9489c824-2113-46fc-8de1-0f46cecd4b46",
        "cursor": {
          "ref": "35a3deb9-e1fd-433e-9ea4-e4f4a543c666",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b75431c-fd21-4371-aa50-b62ce18a4f72"
        },
        "item": {
          "id": "9489c824-2113-46fc-8de1-0f46cecd4b46",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "81c1406e-5d5f-4165-ab71-6e9d405356b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6408debb-b25b-4a8d-aed1-44104d3a6d78",
        "cursor": {
          "ref": "92c96d8a-0333-495d-823f-9f95401efe3b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f7d512b3-d3ff-4cac-8b3b-ad5c24c0564f"
        },
        "item": {
          "id": "6408debb-b25b-4a8d-aed1-44104d3a6d78",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cbe08309-a069-4e1b-b7c9-8601b136f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394ff860-76a9-4056-9d41-365f2c7b14b0",
        "cursor": {
          "ref": "af973982-70db-41ce-a908-79bf9c64d962",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "616fe404-ff99-489e-9428-e995b91822b9"
        },
        "item": {
          "id": "394ff860-76a9-4056-9d41-365f2c7b14b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "de6e1f96-60d1-40b3-9681-403d7172e4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f7898-1620-405b-914c-821c5f4ff743",
        "cursor": {
          "ref": "eb716f2a-93d3-4dcc-95e4-f7fde65c1520",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e029ae5-3815-42a8-a43a-8e5659d856c6"
        },
        "item": {
          "id": "0c9f7898-1620-405b-914c-821c5f4ff743",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0b127386-f9d2-44aa-a864-4f029d37967e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee6ab0a-08a6-4845-a98d-515eb8db409e",
        "cursor": {
          "ref": "42f20629-9069-414e-b0a2-b2de2c71771c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a18f77fd-726e-41c9-baf6-efe0224461ee"
        },
        "item": {
          "id": "3ee6ab0a-08a6-4845-a98d-515eb8db409e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "214c2077-aba6-4bcd-884d-9364180b3993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e2b1b8-8b53-4e4d-b214-3b5f970bf3cc",
        "cursor": {
          "ref": "001929ff-7248-4a80-ab9f-45921ebee11b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "71f18003-6442-4f4b-ad9c-da87e269d72d"
        },
        "item": {
          "id": "06e2b1b8-8b53-4e4d-b214-3b5f970bf3cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c8fd6093-4df1-4715-814b-1ffd006c5ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a0c836-e315-4f8a-ae3f-dd82502fed5f",
        "cursor": {
          "ref": "81eacda1-8d6e-47da-9011-996cdc204ac4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9b048b6b-cb2c-4003-8afc-c96409d8c267"
        },
        "item": {
          "id": "f9a0c836-e315-4f8a-ae3f-dd82502fed5f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "10a7e026-4191-412f-9292-8bcb4a06948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069efec9-ccb2-481a-bb2f-8b14f51378ad",
        "cursor": {
          "ref": "de0630b1-10f6-4f1e-900f-22c7759f9ae0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "01842ea7-5aae-4dbb-9124-05547fac634f"
        },
        "item": {
          "id": "069efec9-ccb2-481a-bb2f-8b14f51378ad",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7d42ad9c-2b4f-4b09-a33d-dc2e0fdf3c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad99a09f-1529-4581-b61a-a6da7a075065",
        "cursor": {
          "ref": "d88651e3-e131-42cc-940a-5710feaf7ce5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e9a35d2f-1ac4-49ed-bae3-cdab196e1a88"
        },
        "item": {
          "id": "ad99a09f-1529-4581-b61a-a6da7a075065",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f8ee3bdc-3706-4fcf-99ab-816f85d81fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0fc19d-a876-4046-a86a-6871782753c7",
        "cursor": {
          "ref": "5c09c313-036e-4587-b69c-4910add6c4d1",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "341900e8-bdbd-4847-8449-d1a76d27a587"
        },
        "item": {
          "id": "dd0fc19d-a876-4046-a86a-6871782753c7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a87a2369-52a3-403d-af59-63760c0fd279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a341a3b-5fdf-4f5d-a2f6-03023b1b044a",
        "cursor": {
          "ref": "815d365a-edba-42d6-b5b2-5f1229ab0827",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d3d5e962-7f36-4aaa-a31b-e006946d3457"
        },
        "item": {
          "id": "0a341a3b-5fdf-4f5d-a2f6-03023b1b044a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a40a5388-876b-44a2-8102-a9877e4208e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362cee9d-7fd2-4802-a8d6-7a9dfd0c46bd",
        "cursor": {
          "ref": "23890098-9488-45ae-8ac9-412397b8cc43",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b0e75db1-bce4-46c2-b0cd-a9d7e7408bc3"
        },
        "item": {
          "id": "362cee9d-7fd2-4802-a8d6-7a9dfd0c46bd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "04644b0c-34a4-4dfc-8598-2aa3d3afbdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9926e52-d7d3-4323-990c-f5ad24004312",
        "cursor": {
          "ref": "80d7708a-e29f-43ad-9a64-c24c70645bfb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b3f9dfa8-9c95-4b30-a5ee-091f72812f17"
        },
        "item": {
          "id": "e9926e52-d7d3-4323-990c-f5ad24004312",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "df2e5c46-3147-4f09-8798-d982e5c12e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08864d86-0bae-4ba3-88b8-8c14bcec7420",
        "cursor": {
          "ref": "b0717847-818a-4360-b165-e63f33f979ff",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "305efe49-65ed-4d6a-8287-12a84d88580e"
        },
        "item": {
          "id": "08864d86-0bae-4ba3-88b8-8c14bcec7420",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0c76f76e-0bae-4cf4-bb01-6e1f99566260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd17359-1eb8-4172-9c35-d191b57ce8c4",
        "cursor": {
          "ref": "867c97d7-e206-4840-9fce-e911f2acfd87",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c2b4b5dd-e743-4c69-ab8f-89bdeac59422"
        },
        "item": {
          "id": "bdd17359-1eb8-4172-9c35-d191b57ce8c4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1c63dbcd-26ed-430b-9831-68b7f9a1aaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c916f9-984d-4fe1-ae84-09fb004a3daf",
        "cursor": {
          "ref": "fcfca905-ff20-4af4-bb3a-75b2e9a55093",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "086428d9-a543-4e49-b20c-7d617defffe0"
        },
        "item": {
          "id": "a2c916f9-984d-4fe1-ae84-09fb004a3daf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "693e8927-56f2-4da8-a6a4-6e549c6267e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038ab158-28a0-4058-b040-156fcc1f3248",
        "cursor": {
          "ref": "0b6495a1-0ed5-4403-9e55-7e4bb4b4b56e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2d2410a4-5fe8-4752-9a24-81d3cca08128"
        },
        "item": {
          "id": "038ab158-28a0-4058-b040-156fcc1f3248",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cf96c34a-a277-45a7-bbeb-a09abb65dca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2375c53e-1c3f-4d0d-9486-8bdbac00f2b0",
        "cursor": {
          "ref": "2001c155-a840-4802-bd5c-c69aa19567e5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3791023b-190f-4672-a01f-dd64449e0a25"
        },
        "item": {
          "id": "2375c53e-1c3f-4d0d-9486-8bdbac00f2b0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "555989f7-4f15-41fd-b270-69ce00afd34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5874a38-e489-4e45-aaee-19793e7b321f",
        "cursor": {
          "ref": "977b5818-3c74-4da9-862e-25464a731cd2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3e465568-3301-4164-9dfb-eb03230eab2b"
        },
        "item": {
          "id": "b5874a38-e489-4e45-aaee-19793e7b321f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c37df397-626d-4a11-abbd-c5042f73fac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e58121-e9b9-4cca-8670-300cf6323c1e",
        "cursor": {
          "ref": "3580938b-1445-4b7a-9e00-d97b206bbcad",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "13002271-9511-4478-86e2-9ce3a3239be1"
        },
        "item": {
          "id": "22e58121-e9b9-4cca-8670-300cf6323c1e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "12f1551b-a737-417e-a73f-760440fd2131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7931f064-a98d-4bbe-8556-fd5a07726f20",
        "cursor": {
          "ref": "f39f1830-d544-41a6-92d3-d8e13b3ee8b5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7b85bb2c-2115-4627-a9d7-4be4784f1aa5"
        },
        "item": {
          "id": "7931f064-a98d-4bbe-8556-fd5a07726f20",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5fd972f5-02d3-4686-969d-de025a807c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429bd62-1cc5-418e-9000-22b1d5f8878e",
        "cursor": {
          "ref": "338a323d-b59f-443d-ad68-a2200cfd14f0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f24c4c74-8e2c-4358-896f-885764ad4eaf"
        },
        "item": {
          "id": "5429bd62-1cc5-418e-9000-22b1d5f8878e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9153e3d8-7a6f-4b7e-b9a8-fd8439e165ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8682b2-1715-4dad-8b94-321b5fb722b3",
        "cursor": {
          "ref": "fe9519f6-43af-45d5-ad51-abb6a9947d24",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "633bcf85-57c0-427f-8399-a5ca9e22b36f"
        },
        "item": {
          "id": "5f8682b2-1715-4dad-8b94-321b5fb722b3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "684f457c-a043-4ea3-a852-e8ff858de977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8647c7-b6b3-4cc9-8f3e-36e33425369f",
        "cursor": {
          "ref": "1e4fdc59-5e7e-4746-8fe2-2e4face40f33",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d1a9c686-466d-433e-8efe-fa86e6535e70"
        },
        "item": {
          "id": "2e8647c7-b6b3-4cc9-8f3e-36e33425369f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "36c50576-8fd7-4eab-97a1-840cb3812669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b6ff7f-4c72-4342-a3d5-65ef817d0d89",
        "cursor": {
          "ref": "5eb61a1e-4f71-489a-92c4-e6ea6e830a08",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5dd58b75-1eae-4cbe-b566-05763fe17e9c"
        },
        "item": {
          "id": "52b6ff7f-4c72-4342-a3d5-65ef817d0d89",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ff9be445-b211-4b66-a1ad-df1d8d0a14f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c91fbd7-5d0b-4d49-bfd4-91ac0c084b4d",
        "cursor": {
          "ref": "dc451666-2cde-48e7-959e-11a4517e8d13",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "351d7066-f330-42f9-9073-2b4ac3c20526"
        },
        "item": {
          "id": "9c91fbd7-5d0b-4d49-bfd4-91ac0c084b4d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e3913f62-da38-4d9a-adc4-cd304cb450f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ce0b1-c800-4726-8b65-30139cb4e27f",
        "cursor": {
          "ref": "a04c4f28-37fb-4f87-b724-931573596873",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9eea6b9c-7315-4adc-9d9c-eb8fdc18e56c"
        },
        "item": {
          "id": "319ce0b1-c800-4726-8b65-30139cb4e27f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "51092b52-cebd-4e3a-b91f-c2dca7c16b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17853f24-2fe0-40d9-ba2e-439b1ea2d496",
        "cursor": {
          "ref": "d99383c5-070f-4f06-a2a7-cc3b37018d41",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "da5b8558-7120-46d8-8906-58120e0a74bc"
        },
        "item": {
          "id": "17853f24-2fe0-40d9-ba2e-439b1ea2d496",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f9511cfa-6c38-4455-a9bb-8e8365f754e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43628b51-ca9a-4456-ac69-8a02d75617d8",
        "cursor": {
          "ref": "73ead616-4f0b-4869-96d7-9c1d32b476d6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e37b7066-822c-4217-bdca-0d247e1aaec4"
        },
        "item": {
          "id": "43628b51-ca9a-4456-ac69-8a02d75617d8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a9c98828-1af7-4726-bc48-71f1d1e683d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8624fbe3-2376-4816-ace0-4fe15d11a654",
        "cursor": {
          "ref": "b1cf1194-b8fd-46d6-8041-ce6fd4872a9a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "afb0b6b3-b4fe-4ff6-be2f-1700617cba11"
        },
        "item": {
          "id": "8624fbe3-2376-4816-ace0-4fe15d11a654",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4ae0d8dd-ba35-4cad-b5b3-997b85c1f6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a27a12f-ba81-4238-9f15-59680744cc7c",
        "cursor": {
          "ref": "9edc4789-adb7-4685-8ae2-a54047a6acc3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b9d6fa32-d30b-4597-9aa7-1596fa282977"
        },
        "item": {
          "id": "6a27a12f-ba81-4238-9f15-59680744cc7c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4b8d1aac-650c-4238-87c2-c67d25da8d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56340c53-162d-47f3-8c85-7dc16254be15",
        "cursor": {
          "ref": "e00c63b6-8350-42a8-a02a-22afa5d04734",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9040acd6-b772-413d-9836-789526557318"
        },
        "item": {
          "id": "56340c53-162d-47f3-8c85-7dc16254be15",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da068fb4-4cf2-464c-ad02-076a88ec18b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504b755a-1fb9-4138-9e25-85df480184d9",
        "cursor": {
          "ref": "82cdd57f-0f45-4b31-8c07-52091163fa4b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1dd7c3d8-4ecd-419d-ad7a-0374794ead60"
        },
        "item": {
          "id": "504b755a-1fb9-4138-9e25-85df480184d9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1419b0e1-cb75-45f4-a867-072c34a7c5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9118b445-dbfa-49a0-9f22-f92bef811640",
        "cursor": {
          "ref": "70aa1a8a-022d-46cb-a5c7-fa0aa6c47ffd",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c26a7156-2675-41d1-bf8f-34dec4896940"
        },
        "item": {
          "id": "9118b445-dbfa-49a0-9f22-f92bef811640",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "10155a83-3845-4fb6-b922-a7cbb43a247a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3f3948-fcd3-46dc-8096-fbb6c0109cd4",
        "cursor": {
          "ref": "bf527370-a903-46dc-b077-670f2dda8333",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b2a2cfc0-3d61-4858-b257-351ded954ca2"
        },
        "item": {
          "id": "8f3f3948-fcd3-46dc-8096-fbb6c0109cd4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56871039-d210-4678-a926-34567d5f648a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28252f8c-449b-4f69-8c30-cc252b68229e",
        "cursor": {
          "ref": "dc2b8e89-3ff3-495e-b919-c1eafbeea52f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "29f49146-51d3-4c2b-b467-177e7f26387d"
        },
        "item": {
          "id": "28252f8c-449b-4f69-8c30-cc252b68229e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1e465012-9b8c-40b1-bb0f-56d6f3282172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62cd689-5630-4ea0-b531-99f81885d966",
        "cursor": {
          "ref": "b670ad85-0226-45ae-8349-b5b87b77bc77",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2851181d-b33a-43d6-a5d6-404a37ed0669"
        },
        "item": {
          "id": "c62cd689-5630-4ea0-b531-99f81885d966",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "edf5f81f-2640-4cc0-b036-86fadca500ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5211f680-05c7-40d4-b7f3-239b588e96c8",
        "cursor": {
          "ref": "c071cfad-d485-44d5-b447-87eb5c07b288",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ec9323b6-65f4-4517-8e8b-4d3053e6f921"
        },
        "item": {
          "id": "5211f680-05c7-40d4-b7f3-239b588e96c8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "34e643e2-436f-4e92-b242-b2e6caf7512f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6b0362-57d1-40ac-9440-a42715a35667",
        "cursor": {
          "ref": "70f9f7a9-cc0c-4ee1-9085-b21b738e32aa",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ffff6dd7-bc08-45be-bf3a-6b81b5e03323"
        },
        "item": {
          "id": "8b6b0362-57d1-40ac-9440-a42715a35667",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8c5897cd-cd5a-4121-95c9-ac11b088d1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e1b71-3b7f-4c8f-8cf2-b7dc39dcab4b",
        "cursor": {
          "ref": "e0f2d7d8-3ee6-4963-821f-8e334fb86189",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dd7dacd7-6a93-4371-812f-8ceb369bf0e2"
        },
        "item": {
          "id": "193e1b71-3b7f-4c8f-8cf2-b7dc39dcab4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "15938ad5-4d9e-45b5-baf7-0f1123169495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6222a9-5249-4ab4-ab2b-c0ba05fbca81",
        "cursor": {
          "ref": "433e0fa3-9c1a-448f-9cb3-30500fedb05f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ecaa1713-5384-4015-b109-6ed418024ce3"
        },
        "item": {
          "id": "5e6222a9-5249-4ab4-ab2b-c0ba05fbca81",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "88304df6-9e8b-4252-a1f1-7544e5f97fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214c43f5-9625-41bc-9660-ab84b93c0296",
        "cursor": {
          "ref": "1da25c81-33bf-4ce0-a0a3-9d20c83833ea",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "28248cc3-71d4-4556-a599-9c4171bf9bdb"
        },
        "item": {
          "id": "214c43f5-9625-41bc-9660-ab84b93c0296",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5648a42f-dd38-4ca5-b760-00578bd81827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd48dc4-6adc-4dd8-a97f-b065ea6960c3",
        "cursor": {
          "ref": "507f66fd-f190-4442-a740-d3c62fdb51df",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4fecf476-fdf8-4f97-8e62-6f770010d9fc"
        },
        "item": {
          "id": "3bd48dc4-6adc-4dd8-a97f-b065ea6960c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0b5e4ed6-ef75-4e17-a240-39f464df6113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf45afd-b81c-4fa1-a8f7-4ab9f36a71dd",
        "cursor": {
          "ref": "a9ddb5c7-a55c-469e-97c1-07ce4294fed8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ae288567-6046-4e7b-9db5-baab31eee864"
        },
        "item": {
          "id": "6cf45afd-b81c-4fa1-a8f7-4ab9f36a71dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c47c913-2321-4d15-8a71-4517f90e8863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f911d7-b612-4eb0-8cde-7a29b2f6b65d",
        "cursor": {
          "ref": "a8330eb5-3f4b-40ce-b73c-afea39733fa4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "13e7c424-b0be-4bb9-8ec2-8553ff74feab"
        },
        "item": {
          "id": "a4f911d7-b612-4eb0-8cde-7a29b2f6b65d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2fbb919f-eba8-4045-b5cf-0e67f00e4480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1f606b-5f87-424a-adcf-76a371653773",
        "cursor": {
          "ref": "08bf924c-2c16-4b11-8c01-724e4f7f476b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "004955b8-9375-4813-9735-f433770b5726"
        },
        "item": {
          "id": "0e1f606b-5f87-424a-adcf-76a371653773",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2589f27c-c028-4c2b-8a43-2c58d9140530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e605f537-8e4a-4a21-832e-32194a57469a",
        "cursor": {
          "ref": "46b56475-4186-4d7f-99c4-d1948ef01967",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "19bd617b-b7f5-435d-9409-a51aed0a30b2"
        },
        "item": {
          "id": "e605f537-8e4a-4a21-832e-32194a57469a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f166aab9-25a7-4f34-b61f-0d068d48e03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63be5a6b-3f35-4ce4-8897-640ad3106c52",
        "cursor": {
          "ref": "891e0fcb-350c-4b55-a45a-8a33c237099f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b0c743d0-dee9-4334-9c36-bf3ddc7b8fc6"
        },
        "item": {
          "id": "63be5a6b-3f35-4ce4-8897-640ad3106c52",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5725a31f-7382-4d05-8e24-a31d1e46093f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa3daf9-e74f-4f3f-948f-89f4d1ff5bcf",
        "cursor": {
          "ref": "beef5efb-ac1c-4eb3-a1f2-69991fa6e0c6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7d470850-f1a9-45b9-887a-a5b2520e5cd2"
        },
        "item": {
          "id": "5aa3daf9-e74f-4f3f-948f-89f4d1ff5bcf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3fb96e61-8da8-479f-ad0c-501486bf6b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62913d14-85a0-4dc8-88d7-ec03e3fd7643",
        "cursor": {
          "ref": "71b92f94-b2fe-49b7-887f-d8bf30823ab8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "31f140dc-c2a4-440b-a1a6-99f965074287"
        },
        "item": {
          "id": "62913d14-85a0-4dc8-88d7-ec03e3fd7643",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8ebe1432-19cc-4320-b18e-d549f45a50c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98611dd-f43c-4e95-836e-fa51eedca933",
        "cursor": {
          "ref": "85706d5a-1f2e-4513-b051-a033c78b9de5",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "526ddf87-a5e6-4bb2-b043-07da6f7a6f6a"
        },
        "item": {
          "id": "a98611dd-f43c-4e95-836e-fa51eedca933",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba9d51e6-beb5-4492-9654-1d984f61a711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcb7cfe-8b95-4eb8-a541-6f1fcd09ead6",
        "cursor": {
          "ref": "eed1ed76-5768-4a80-a1df-5255e5ae83e3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "64203d3a-9467-4440-b22c-24fb26f6fddb"
        },
        "item": {
          "id": "4bcb7cfe-8b95-4eb8-a541-6f1fcd09ead6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "317ea5b8-af13-496e-9ce1-654ebc7c538d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24325b5c-f75b-48ca-b728-388f568d1496",
        "cursor": {
          "ref": "17bb54d2-6afb-4b95-a856-16a1d0f42b2a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9b041ba3-7eab-49c0-a3f1-5f45492b206e"
        },
        "item": {
          "id": "24325b5c-f75b-48ca-b728-388f568d1496",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "29f44ec9-7ed1-4d74-b7f8-ced76d4ea0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7ca859-6f56-4ef1-9254-68ed48b4022b",
        "cursor": {
          "ref": "8c539961-1864-4a3a-a43a-53f796d49f2f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df8bde8c-ef4f-4c60-b3d2-062f900e5cde"
        },
        "item": {
          "id": "6a7ca859-6f56-4ef1-9254-68ed48b4022b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "32f0c430-060e-4eb1-acd1-933dd65cc64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d44582-2a41-4c47-bc27-8f5b9f82f716",
        "cursor": {
          "ref": "fa1037c2-aa9b-43b7-b3b7-4c40e64f5a15",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "638ae929-699f-439b-bbd6-0ca300bd817d"
        },
        "item": {
          "id": "f4d44582-2a41-4c47-bc27-8f5b9f82f716",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ab202db4-2135-4eaf-b17e-ae343669c425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162e2fb0-12c0-401c-8add-efbb42b1bb13",
        "cursor": {
          "ref": "b8bbc704-c330-4a08-9cb8-a2db75fa3471",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0489d850-bde9-4087-80c0-23aed21f06ae"
        },
        "item": {
          "id": "162e2fb0-12c0-401c-8add-efbb42b1bb13",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a383f263-6410-468c-a610-8c591012ddca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b655c17a-b331-49a4-801b-8c4e57ae04f1",
        "cursor": {
          "ref": "39d41fb2-e8ca-4598-b34a-6b996da14ffb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "69d8308c-617d-49f1-bc3f-f6d754aae756"
        },
        "item": {
          "id": "b655c17a-b331-49a4-801b-8c4e57ae04f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ba0fc709-e54a-4e34-8cd7-22c077a34a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3d174a-c7b5-42ba-8cbc-cc36713792c0",
        "cursor": {
          "ref": "e5608754-a3a7-484b-bb7c-9318668c526f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34d15eab-7b37-4208-9d22-791a224ea17c"
        },
        "item": {
          "id": "1d3d174a-c7b5-42ba-8cbc-cc36713792c0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "317d613a-bd9c-478c-a96e-56b4c6820eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4562e9-b357-40eb-bfd7-be8aeef9760f",
        "cursor": {
          "ref": "8b3a7b17-6731-4449-8b30-cd0590dd15fb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f34221c-02ba-4c1c-9a69-e99f97867a38"
        },
        "item": {
          "id": "cb4562e9-b357-40eb-bfd7-be8aeef9760f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4513680d-8ec3-4dca-b274-8494453c395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b71dff-31d4-4da9-b997-f483d026e26f",
        "cursor": {
          "ref": "3102f328-2f79-4ae6-9f1e-08bbf9fbf8fa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9c5935bd-96bb-4751-a19d-382702a0ec10"
        },
        "item": {
          "id": "33b71dff-31d4-4da9-b997-f483d026e26f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2bf2884c-cb05-4483-9a39-077975374abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683181cb-2dee-45cd-9357-53b941a7ef91",
        "cursor": {
          "ref": "97c624dc-7633-400f-b631-50580e104962",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1efbd0c9-9503-45b1-be00-746e8aadeb3a"
        },
        "item": {
          "id": "683181cb-2dee-45cd-9357-53b941a7ef91",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "69dbd688-520c-4e15-bf71-2458fe2b292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada51230-dbc7-4a34-9425-5f243036624c",
        "cursor": {
          "ref": "b2bca9b6-2b79-4316-98f7-247d8c5273fd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ba89a1c8-ee40-4d81-8870-ab6339249c97"
        },
        "item": {
          "id": "ada51230-dbc7-4a34-9425-5f243036624c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7e7bcc85-c2b8-4558-a050-31b7c2e5fdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe691cc5-c331-42d2-9380-fc1031287909",
        "cursor": {
          "ref": "06f3167a-e9ca-4c47-b8c4-679737f00c94",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "88bc30a5-35f7-4285-98b7-733215d9be98"
        },
        "item": {
          "id": "fe691cc5-c331-42d2-9380-fc1031287909",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b32a48bb-2a88-4fbe-8d09-c9dff9333897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb712b01-cd2e-4ad7-ae56-b068f7308a8a",
        "cursor": {
          "ref": "dccac799-8507-4898-9378-46663b101726",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bd3852da-a8f7-46b8-9828-e3bc9f2181c7"
        },
        "item": {
          "id": "cb712b01-cd2e-4ad7-ae56-b068f7308a8a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1684c42f-1239-4bfd-8a14-280ca8d584d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5717c4af-2b54-42da-91af-af3c60894961",
        "cursor": {
          "ref": "73ecda0e-a976-4859-b1e4-253c007c0636",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "88be9963-e6ea-4dbe-bc0c-1c12aded629c"
        },
        "item": {
          "id": "5717c4af-2b54-42da-91af-af3c60894961",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "42988fbe-4a4c-4fde-ac0b-e5aee510dde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce4942-6ba1-46a6-8e58-af802c22dbd3",
        "cursor": {
          "ref": "45ad4a88-50df-4b62-b01c-432d70174970",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eb80e4d5-6789-4842-9318-b5d3a22330c4"
        },
        "item": {
          "id": "73ce4942-6ba1-46a6-8e58-af802c22dbd3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6709dd5-e9a6-48f7-8bd3-0b6bfd130150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fb8fc9-ead7-425a-8c6a-2f7033750711",
        "cursor": {
          "ref": "76fd8f1a-1e0a-46f3-9477-a9e77b87e820",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "035bcc7f-3391-4adf-a453-73dce333c609"
        },
        "item": {
          "id": "92fb8fc9-ead7-425a-8c6a-2f7033750711",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2eb865cf-98de-48d8-8b17-14af9af46df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c00596f-f205-4ed3-95d1-057b36a428df",
        "cursor": {
          "ref": "fc2a4301-e35d-4949-b3ea-a6cbbe1e0f03",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0aa1b2c1-4ec9-498d-9b64-442d4bfbd7c0"
        },
        "item": {
          "id": "2c00596f-f205-4ed3-95d1-057b36a428df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cc0a2fc4-03e4-4a81-8b52-a9baabb5ad50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a836eca5-8fac-46dd-91bb-216874b7c092",
        "cursor": {
          "ref": "65907afd-12c6-4f5e-8e9e-5f6295c4ad99",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc0d71bd-73d3-47d1-80b6-fc8c0bd0162c"
        },
        "item": {
          "id": "a836eca5-8fac-46dd-91bb-216874b7c092",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "887c057d-59bf-474a-9617-a3941dae3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96222190-e3cd-4c53-99cf-dd59fe288f46",
        "cursor": {
          "ref": "50837bce-edc1-4e69-89ff-5380e1918a6b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "01d32785-a489-443a-b9c8-72ff91885b3f"
        },
        "item": {
          "id": "96222190-e3cd-4c53-99cf-dd59fe288f46",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ddccfb27-1208-4260-8bc1-bff55bc44b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47ddb32-2a1b-4cd1-a2a7-c8456ba42f8d",
        "cursor": {
          "ref": "d7be1a2f-17ce-4bed-b52c-ec1973c35a99",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8d257d0d-ecfb-42f0-be65-08624bebf5ed"
        },
        "item": {
          "id": "c47ddb32-2a1b-4cd1-a2a7-c8456ba42f8d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "074aab20-ed62-4d47-ada3-76edca142006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e956128c-2fcf-45ad-911e-6ad008bcd548",
        "cursor": {
          "ref": "69dcfd87-5157-4f83-84b7-2929b552a3a1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "72f8ea7e-5186-4d41-8369-d4d70db2f3df"
        },
        "item": {
          "id": "e956128c-2fcf-45ad-911e-6ad008bcd548",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db30b299-daea-4099-8ace-bf5587d38b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e228403-1ad5-4f49-a6ad-7493e11f63de",
        "cursor": {
          "ref": "c310ec96-25ce-459e-8309-194fad2a4bad",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bf6050d2-6348-48fb-8a81-81bc0f0cbb15"
        },
        "item": {
          "id": "3e228403-1ad5-4f49-a6ad-7493e11f63de",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a6e5cc62-9ddb-4182-8426-29a72dccc1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b80b4f-bc58-4065-bdce-2ca6a3357214",
        "cursor": {
          "ref": "7973dc04-aba0-4689-b960-8245ee9fdd44",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "16ad0bb8-2c32-43ff-9b69-26cb8941cd9b"
        },
        "item": {
          "id": "b0b80b4f-bc58-4065-bdce-2ca6a3357214",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7b8d16d9-a815-4afc-aa5c-eadc5668598a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66640fe5-2474-46a9-b3e6-31d11c14b7d6",
        "cursor": {
          "ref": "b845d1a6-66e8-4d1a-9eb7-18472fbf761a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1033990d-ec76-4825-8bb6-2faa26a587f1"
        },
        "item": {
          "id": "66640fe5-2474-46a9-b3e6-31d11c14b7d6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "650fab38-7ae8-4678-ba02-bdb517f08560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba3d4b-1bd6-4139-ab72-331d8dc6b841",
        "cursor": {
          "ref": "37e66014-781c-47ea-a8e7-a010629b10de",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "176d5ad8-0012-4a0c-a6c4-a17b13cc4c35"
        },
        "item": {
          "id": "79ba3d4b-1bd6-4139-ab72-331d8dc6b841",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c487a59b-8d97-4649-a43c-a929aeaf8fc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30a1f6a-8ca7-493c-bbb6-f05cf92cb7d8",
        "cursor": {
          "ref": "8e88f837-4a9d-4ab0-8465-345e77222f80",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8e26866f-3bc0-4d4b-b18c-d62ebcd23cc8"
        },
        "item": {
          "id": "f30a1f6a-8ca7-493c-bbb6-f05cf92cb7d8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7eb60c65-4c5c-4cb2-ba49-2f53459c024f",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ce9ad-688f-4ec0-ada4-7377c410b6db",
        "cursor": {
          "ref": "4569c138-4028-4842-bd03-4cae7dd33738",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7420763e-c72e-4ba3-a12d-79363910a2ca"
        },
        "item": {
          "id": "183ce9ad-688f-4ec0-ada4-7377c410b6db",
          "name": "credentials_verify"
        },
        "response": {
          "id": "333432a3-a487-429a-a6de-d6dbfabee184",
          "status": "OK",
          "code": 200,
          "responseTime": 2436,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aa88bd-d651-4b0c-8718-2ccceb2cf191",
        "cursor": {
          "ref": "0219abef-5b28-4bdf-aeda-71d155132d55",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b8cfe35f-ba96-48a8-85ee-82b7e1e072f7"
        },
        "item": {
          "id": "a4aa88bd-d651-4b0c-8718-2ccceb2cf191",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "27731a04-8e39-413c-b1bf-2f66f7b0275d",
          "status": "OK",
          "code": 200,
          "responseTime": 3133,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cd1733-f701-4545-9c80-fc4f12bb64c8",
        "cursor": {
          "ref": "7e75cd14-34d2-416f-a453-b66268be66f5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3999ede0-1c1c-4939-b6e4-64fe6a0417f0"
        },
        "item": {
          "id": "47cd1733-f701-4545-9c80-fc4f12bb64c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff787da7-9552-4d3a-9834-db396a40cc5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cd1733-f701-4545-9c80-fc4f12bb64c8",
        "cursor": {
          "ref": "7e75cd14-34d2-416f-a453-b66268be66f5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3999ede0-1c1c-4939-b6e4-64fe6a0417f0"
        },
        "item": {
          "id": "47cd1733-f701-4545-9c80-fc4f12bb64c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff787da7-9552-4d3a-9834-db396a40cc5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8bebfa-9d46-4c26-b7ce-4873b8fa1f1c",
        "cursor": {
          "ref": "b51d458c-b26b-440e-bee4-79755bd8092b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c8c3fa6-ea80-415e-8fba-40ed031d51a9"
        },
        "item": {
          "id": "5c8bebfa-9d46-4c26-b7ce-4873b8fa1f1c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2f6cce9f-d4c5-4b55-b2b1-b55a24e09298",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fac44d-1d05-4ca6-80b4-b3133bb8dd64",
        "cursor": {
          "ref": "ebbb5ffd-ed64-4378-8d0a-494df3b1dfee",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b5ba875f-5e7c-46f0-a774-8007a7c7aec4"
        },
        "item": {
          "id": "45fac44d-1d05-4ca6-80b4-b3133bb8dd64",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e290ddfe-a451-4b42-bc39-c9853ce64c15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}