{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dbd83a0a-c665-4113-83ed-93ab8df9b3fc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4c48ec0d-166f-4888-b0fd-13fbb7087219",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47850b2c-18df-423b-a990-1b9e78968507",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28b7a625-32c2-4154-8509-3d7e28a96c2c"
                }
              }
            ]
          },
          {
            "id": "ff671dba-4c97-4334-968b-a7acec1ab9f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93255b75-1465-4dff-a785-da47badbbb0d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e346c3f0-a7e5-41e0-ba0f-65b310807cd1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d911bcbb-db7f-4479-bda2-d59f2e45e5d8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c749cf7-6f1e-4437-95e4-36ed60f59dfc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e48151d-ecee-42cc-95a8-4bcce09a585e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a029a3d5-942f-4340-9503-713ceb9ce668",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38e5430c-e8d7-4223-8439-2510d82294a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4c23142-aa03-4503-851b-3af9f924c70f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5d364ad-4c67-44b7-8f73-135465fdf676"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a56c1b2-60cc-4fdc-86c0-9111115cc0cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fae6608-b6df-482a-8bfd-c29b3e69a5f9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "025812ef-5e72-4404-b8be-05b94eca48fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b163f684-c927-43d6-ae68-ee802d41436b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36f73ca0-fe40-49dd-96c7-21286241340f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbb16e6e-1a2f-4015-bde7-8b2209a7dc34"
            }
          }
        ]
      },
      {
        "id": "e3facd33-93f7-45cc-89dc-5035041d61fe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "77ab3eda-952b-49cc-bfec-8c1e8c3fef4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b1afb10-5e57-48b8-b00c-616f1a59964a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6c4f7174-cc7a-459d-95d5-c8ca8c6b45a5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f011a7e0-af3e-406a-887d-df007f113fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db71d8ea-c167-4003-acd5-f1e8ff97c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653c8f47-04cb-4c7d-acaa-956c75756493",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0874ed-e103-4bd6-aba3-d934a5409b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28dba2e9-2d7c-48b9-b939-620e70ff4267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d253d7-688c-446f-b787-8ef1d7c686f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197771e7-5574-44a7-87a1-9df6bd09b3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b07f152-c7d1-4009-81fc-a184c3a46397"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12676a57-91cb-49a6-a384-70b80d2af233",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38744e15-2552-4593-92db-44f7f72daa33",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c128a12f-7f04-4ef2-a1e9-94376e660acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5274dd0c-9b28-43c2-941c-4fb46f8bd8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baa6554-3746-4b23-8f21-35b42d065bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaee7f2-f5de-40b3-9bb6-4f990fbf17f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2291cb07-6d03-45f3-ae7e-53cd4b35a2e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "95c25666-2682-491b-8c00-efeb6e5c8c17",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7e19c96-6dc8-47f6-b6a7-c025e8946c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7c5ade12-bd55-4118-b9bc-9723ce8d605d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46d9080d-9cc3-45ea-b603-e7c674d39fb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "87c3f268-f545-439b-a820-bfa5d146ae09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64ed0e48-12ab-4227-a609-aaff08ce250c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5126300-0a45-4490-97ef-fc32e83406e9"
            }
          }
        ]
      },
      {
        "id": "05b1ce69-8b36-48fb-9777-b62f6d8c931d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c971670f-9fb1-4112-a4d6-7bea1d895dc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37065c77-b5aa-4b18-878e-7a6c9acf75da",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2f7019a-0f23-4864-9cd4-357e842607a9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691c62bb-1e56-4ada-90b4-568a2a29f46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365c7dbd-8cfa-47a4-9fd2-5656005cfac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cff12af-fffa-47a3-bc54-fbc9262ac8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ab13e4f-70cb-4f16-b1b5-e4c816d564bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45270e08-c9d5-4b9c-a2e0-51e16b4452c0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372583e-773b-4a66-a73d-b0d27cfda87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187912cf-52b1-4851-aad3-d6c346cffdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260f565f-8fc9-40be-a97b-6e328cf6afd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0c8129-3501-4baa-af1d-e6b76c382ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc477d1-0ae2-4f38-b951-e0e50dc7112b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f23c00a-34aa-403c-bd97-dc235ecb9a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f91e68f-af71-4d12-b5b4-56a4f1681488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e0c8a9-452a-4059-8f58-38211e192acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "793096b2-9910-492c-8670-f3ff0dcc1378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1547ecb1-f488-48b5-9f44-3bf15cc9c13c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbac5c75-0197-4b1a-9a8f-b8ff79fce1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cca3e56-7a9b-4d56-90b7-b7eae2891a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ec9e1f-dce1-416c-82a2-22c9f5baa8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "977dcb5e-a571-497e-98bd-92308406ca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cab153-979e-47c7-bfcb-d6580cd66127",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3def06-5126-4f27-9fe3-493937822d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6d5c34-bd0b-4e7b-ba56-4813f600ff09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9e5f0c-23ef-440c-8c59-464b7f361e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "830608e7-335d-407f-9c95-72bfcf34f32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac271231-5666-4ffa-8996-fd6e11efa361",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527aaf33-27ab-4a05-aca1-cc0a79205a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3442af-2f78-4a7e-baa4-215829023bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a61d468-bede-49b5-a77d-a57ecbe97203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b103c71b-c66c-4ae6-8b9d-873e6f9c77fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ca39ab-f41f-45c6-9fb8-0351a3b6fd2b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98926aa-14aa-4d70-93c9-a29b3b386000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5025bba6-a2e2-4dfc-87ae-2dd3404e94d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884b7961-45d2-4250-b868-7d790a1e446c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8a9b49b-62cf-4e7b-9590-67f14b91b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51308dc6-e189-46ad-81cb-2da0be572d4a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f0484b-dc58-4019-b9b2-c8425c29312b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96f10f4-065c-4c14-972b-3222203ec7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12504415-59c5-461f-a208-6f1271b4949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef852fb-6548-4bf7-9ee3-c2418dc5000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252fa407-5e12-4aac-b68b-c33a884c7fe4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9820056d-002d-4b04-a5d5-419f1d294911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174dcc68-7890-4024-bc6d-a2b8ff955a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b618b4-3521-4221-98ec-60621ef0da91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61e4be2a-14fe-4f0c-bdc5-4e20b01a3068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404b4d65-750b-4450-8976-0bc1d24a28f5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd4d496-03bf-4aa7-af28-9f1d21c70c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f426c0e-fbd8-4c9e-80b2-7c44936d587c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b8b836-e686-4ecf-b573-cb5cc809e6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e33775fd-e7e3-462b-b1fe-62e81b7c8ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ac8009-c440-4638-a21c-fc250ccb4676",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef302e5-251a-4532-90f2-65e441aef4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9674f021-7613-4a88-b5df-34aa6daaf9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0a18ce-e057-4cfd-99bc-4b39c607ddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bed7b9b6-b74d-471f-8db9-d5a341490658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa92a901-929d-4a6e-afe6-4977553260fc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e6ce6-7237-4376-bd51-6fec33c19264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b098e227-1e3a-4244-ac29-9887b3720239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d045355a-c40f-4a92-baa0-6ea53dc485e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5592e15f-bf51-4cf9-ad71-387249d72d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ecd96d-3c27-4f49-b840-558c0eb7cbc8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0af6d5-c36b-44c0-8688-0370df26d823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1893614-4008-42e7-aa3c-c4517cd86f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38a1d40-295f-404c-84b5-2fa640fe3852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49271109-d186-4b8d-b968-3d38bfb615bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72febccf-16f6-48c3-ad57-f1138b58aa54",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0500dff-7ac7-4098-b160-b559c028fb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18b0228-d367-4d05-b86a-75acd94dc590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e729a0-6339-4847-b9d8-6c60f4d5c1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b0ca50a-7ceb-4577-a622-d284f79cae98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6dc699-2ee6-4786-9a20-3191192a9e35",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5168aeda-74d2-4a73-b453-c245406557e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1678c09-71a6-4cb3-817d-b74c35bedb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08051820-feee-4f2c-aa9b-93d7b37e98c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8489b75-0c51-4dea-bbb7-5b8f8520c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef67500-b989-4756-b15d-9a45e10623db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09fb728-255d-452a-916d-7dcb42f5ab59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5f2168-44ba-4d5f-9363-c6bc1fa5ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cd2141-ddca-4b9b-a9e0-6e5108e8e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a740a205-1ed2-4517-a6df-21f82f63b1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d21c72-18d5-4238-af30-7d5a6f3182f6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02f6488-85f1-409b-bc95-9c9a4b273f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ada87b1-0b20-43ae-a5dc-9214e8ff671b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5db3282-dccc-48ec-93d5-e6b208db9ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a137c989-03af-48c8-946c-cc9b60d3e3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985a6b87-ca37-455e-b06e-37294e014ce9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6dc986-375d-4b45-8b89-69fbd6e1eb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d46b6d-1930-4849-81e7-7fb45ed00d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36838a8e-9d9d-4fc5-89fc-7cb2cd64441a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "411d680d-abbe-4ccb-82e4-2810dae314d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75dc05a-8876-4f3e-a103-10ccfb492bb8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537b49dd-a50a-4379-8d7f-24747ba3d573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaa9ce3-3ee4-425c-b6d2-030f0f9b1da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88cdd0f-9337-4601-aaac-08b231dcb75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "580a4068-07a5-4d3a-90ef-9c0321f86056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54b44c6-d524-4503-b827-ef8b35126297",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f59a07-9395-47ce-a9e8-7bee01f0657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271cc9d0-8a05-4fb1-87d0-a869318bf4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ded0dc5-8603-42ad-8ab8-c8b9ba287204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c966a9-9699-4a68-9dd0-39548597795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dac92e-81f3-4052-9bc6-431470881637",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bca5aba-2001-4d6d-ae4c-d85475087d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4140df3-f3b3-475d-90b0-478dc8091617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad31f30b-afe7-42cd-b41c-72a31302229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c641b95a-a7d2-453e-8fcc-2c757e36e9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577eab1c-e433-4a6f-ae51-1709ceb6d02d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73938bac-a44d-4171-9898-ab68bb2b332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969fa4e4-72bd-4905-ae1e-602470d452bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59086562-34ac-43a2-a291-c3e66a5e95b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdd054b-b1ba-4d7e-b63e-23fab1fb6b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f19f82-8cd0-45bb-b9f9-76b454609988",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f1f4b1-950f-47c9-b734-f9b5623c5dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c22ab7-af36-4c5c-b2f9-9746fa6e2541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109b8f0a-25b6-4c87-84d4-bb8142083218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c496d89-e93f-4ddc-8f05-a9f775d662bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c011b684-87bf-4259-91b7-be028402563c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b41447-6e6e-439a-82ed-44ad2eaf06e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f617c053-4ab1-47ff-aa07-506bf5ccc20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56aaddb-eb57-4e5c-8e88-3a9bd3677c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e452a3c1-4b62-4cfc-ba08-91a166c54db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef342422-9a1f-4700-a8f6-43774a78c100",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb1e44-8008-4ec0-ab8e-63bdf2979b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea81f97-77ef-40a4-9dd3-995a6470b2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463dada2-a5a2-45ad-9a10-c4ad30a755cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8ec9c7-b87f-49cc-bb31-9c9593993939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1eee33-d35c-4901-9c97-b0aa91a82e6f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d9b35e-a27d-46d0-a997-0d2768c01dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775801fe-3aa2-4eeb-b552-919e091b6718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58eec7a-e100-4add-90db-40acd4b2cad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46d2bd6-bbc1-4d2f-94ff-c1fa559060fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930e6da9-2119-4b3e-bf52-938d8ec7e278",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef44f4b-fbe9-4ace-a07c-75fb0c0018e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb28de2-4c23-4958-98b4-7be5e6ca7a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a89ee3-01ba-46a5-93d8-6f4b4947cdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a10788-f04c-4bdc-ba52-d844f1c7b7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe55d63-5912-4cac-a684-4a38bb5ee157",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5c030a-0889-40b0-b771-cbf8ce8d1c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053bafee-4d17-48ab-9283-5bbad003eaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00afa481-f034-4af1-b173-9627037b5c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ed5d75-c2a6-4c70-bd36-dda4e67e6ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89aaa47-c593-4236-adb7-fe984256d5d7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be4d35-8c62-42d9-a2ba-87db831ca09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d93c452-6c64-4425-ad43-1ee9c612d0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0e2c6d-7c7d-4613-a60f-9cb9dfaad70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2236efb7-43e1-4a59-9acf-a2d1e5e42e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19d343d-876c-4cd5-b6c5-c8dc1ae6038d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72007e2f-5d10-4677-963b-8abff9efb481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79a5080-44dd-47d8-8465-718399e10221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33269a65-9a68-43a9-aa5a-19f8b9db164b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0aade81-7fc1-40a1-ad27-aee5073caf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84fc4ff-7737-4a68-b970-7ba8beb19235",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0cac1-ee6d-4ec8-9b0b-6ae0ebc77e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a7a640-2f59-45bb-a86b-104466170824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8189d28e-6bf9-4e4f-8799-b906fe9a7a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9dfb62-3d68-483f-b3eb-84f765b43fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17db3cf7-b2b1-4e47-bda1-369a5d61189b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9d33af-dfb8-4083-bd8b-45c277df122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60617e95-6097-4409-90fb-120b8cc5ef1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea8beef-7057-4dd7-bd95-cb858275686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdd7852-4f8d-4516-8730-e939a1821dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc19c7ee-1631-4f6c-8fd7-84e36085ca56",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d3a7ad-54a4-4cb5-b591-6cafbb1b4d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21411f17-d5f0-49cc-ac35-9919b146e092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ee0ee-7afc-42a3-9a75-105480e0bb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c849e965-4328-4053-bef8-b0a912db1169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c6b77b-c602-463e-ae78-58ac8f95ff93",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dfd7f3-320f-4986-8e6d-7a9e20419b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04a05d7-f6f6-4c4b-bd71-ca59e96e9158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e8bdc0-c154-4e34-832d-9fe36770b1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed014ca-2f51-4c9a-bfaf-00b5d2f15f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478557fa-3b65-41b7-a580-7ae63c739a6c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd6c2b6-6646-405b-b6e4-c2443630a673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f296f125-4a2c-4321-af4d-0c79e07cf434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b669ce-b676-4b4a-8947-aa263526f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "185e83e3-6a67-452b-bcbc-0dd781c2c162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58fac33-7e9c-4b48-a64c-1863b2f9fedc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d504762-5dcb-4a26-8d34-c21da82e869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72465458-0c9d-4db6-91ae-62464d179f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d7c3c2-5b15-4d63-a692-2ddb93b6a7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ac2422-3958-40b3-a608-a762da2b8bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82908739-0e0a-4266-b86f-8ae44b458966",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94b4653-ef75-41c4-9954-c8c3e1302cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ee823-dcaa-4208-a45e-6495451b53a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f443c4b-0b01-4baf-aaa4-a85538d8b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e837c60e-e2a1-4a18-b1b5-7dd8a6918cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1bb273-120f-4600-9229-880805c821ed",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2b222e-e3cb-4a57-b2cd-f55e58287cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e8c876-2249-4c18-bce0-354164424032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae90f62-ea0e-476b-82e8-258dde39d3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af44336-0d74-447a-9af1-1e00c95f02c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedc3aa3-f0c2-4b59-8ce6-bad800192ffe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1795df5a-bac9-4439-ab22-5aa0cb14c522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a34b7d2-9d77-4c42-89ae-6af457064326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a46d625-327a-4c65-98c4-79a8931bf305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f5e541-c110-449f-b6bd-4ae61aa551ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dde65db-efbc-452e-ac81-09819f157f7c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf28ff9-2d48-4a65-9632-15bfe951500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee72b734-38e1-46d1-bb2b-798779383c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aa7853-5927-426b-824b-f50c67299400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9363c10-811d-4db9-a8c9-a06c73118c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b994b804-6920-439c-9382-2481bc82b804",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b268233-f8a3-42e5-9cc1-7401ed7c7c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bf3b56-26ad-468b-bee2-335f41ce84e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6819b9-abc4-41e8-8952-fe4b302cb917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a82c12f0-815a-4606-8c14-33878c25bac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10584f52-5af3-4afb-9f33-66151fa7d04a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271e7adf-2b65-4905-a283-f85d226e7d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd75822a-3c86-4d82-a0ed-26bab9ce8ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dfba73-9be8-4d04-974e-c9a273503762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e070c0-8368-4cc5-9c9c-c8038b1b8341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6a4322-1850-48ff-87bf-d33082a1209b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d73b3d-0285-48f4-a744-c322a3cee2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64359c78-ca88-405c-b50e-fd71d343eac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528bc820-6e01-4f69-b473-c546e8db48a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0440479-1a80-47dc-aedf-33b6060feacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b110d8ce-1942-409e-b006-8931a6035f77",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8270fe8-163b-479e-acce-5b91fe744268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee595607-a4b7-439f-8d67-07316f83ca93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c632c7-c3c5-4265-b7b7-f95db7d97e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f801bb12-7d32-4380-b4d2-7c82280631b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73189600-86da-47e4-bcb6-a4f4614b3336",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95985c15-edb1-4a0d-897f-b1cbb7b7618c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bb292d-b884-48a8-845d-77b23870db14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f4933e-e140-4883-bc70-c4492b7b2341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf698772-7a5c-49bd-bcce-95714084c61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22713f3-bc83-400e-9857-14053c0d38f1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d799fd35-8ed5-4446-bc1a-3738f6d3b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3893614-05b1-4aee-bf5a-365cbd6aca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c16b224-520b-4937-9f86-c0f10fc3b70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8d8e5e-33a2-4eb3-9dd2-12f2b31e1d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b609d17-ce6e-43b6-9a3b-a54b8722271a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d183be5-d887-4ed2-ba7a-5156261c729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f793f4f-2639-496c-94af-9c8c8a1d2500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864a941d-8172-44f0-89c0-e3597e716a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a9e82b-b8a6-4f1e-9bd1-c9673562da9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a91c64-df9b-4395-8a92-61fb09408498",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d3c48-9e44-492b-91a2-c2235613e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7593763-2596-427f-b3f2-c55bb50e2411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae161233-fa2e-487e-b8e6-ef6306293aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0002f4cf-5a7f-4228-976d-40635efa86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e889d343-c9c2-4ac3-b6d1-4b27f8842d69",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bda43b-2b3d-4224-b08b-7dc393d8a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf789338-47eb-4884-934a-9c2c8bce15b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bebc9a-d748-4c9f-aa06-b511bf096e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b31ef32f-8288-4f74-82a4-a3d60cec0cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aeea19-b0c1-4a5d-ba5e-01e907137774",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c367f-76cf-455a-801e-37ddfe59ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93613a22-b425-4b43-85c9-02fc2d02f5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f51831-c561-404b-aac3-d9174a366947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97e41667-11af-4ac5-9355-d8ba56fb342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624b23ee-2fe3-4080-81d1-ee2f681f72b8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b25a55c-63cd-4db8-8f0d-664f359e5bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133c5c2d-b86f-4681-a368-86b2ae0e2977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940a3ad5-8428-4bd6-a393-567d87f72360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3528e304-c3b1-4b38-8a78-bed711cb18b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b22315e-6d18-4816-89fa-2447a4d07ba4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7194c4-1da3-4038-9e0c-f49be7b666ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2926d991-9d07-48e2-ac91-5a26be6a255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892da68e-6e07-41be-ad7e-1d7ed0635d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13470f2d-b98d-44e6-a71e-5a2592b3bd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e3b92d-6e02-4720-97d9-9e8fcca995d1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d70bc4a-40fb-4df7-b0c8-84c469f32fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3359c083-2622-4c0f-bbc6-96f524d5eaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3260058-0f8c-4ef3-a7c2-e07025e86bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb74dc9-5302-4490-8210-7ff4bd9354f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9bcce4-d519-499a-9275-e2636b3d0e77",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4899ac49-dfe9-4e9d-bdf0-4968e4db6558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faf011b-172e-495d-a7f8-b3fdfe65d33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7c6aee-fc82-489b-8780-feebb7429ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f86d47d-d3af-46ac-a1b9-7d5be49d3c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb87c0cf-229d-4dab-990d-90f2019e2b43",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024f2d17-4472-4c67-860e-ee88c7777dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ee6ed4-139d-4072-8ded-07d749790ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3820e899-f70f-4e1b-8dd6-9a9ab3fc2101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9698f71b-4063-4448-9ea6-84250bf4a014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba84dc24-1ab2-4513-b945-d67bb25f3722",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a265cef2-7b3a-4910-a3c2-6838ea75c29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0daa23-b340-4324-bb8f-493f674c1c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ebe4e2-f5ae-4634-8878-7b63d2548578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0cc7ec-bc15-43f2-b0a4-a2bd03ae8de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0424de31-c183-4891-9572-fd38f253a756",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6388606b-b974-44ce-bfe6-0fc7383e8529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139f7ae3-eb4f-4de3-aded-7bde84d4970f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb51bce-0d89-4c80-857b-7dd1376b2d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5516fbb-0881-474b-9408-0dcf52c460c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c8ddea-2458-46d2-9bf0-f8d7706d5e31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc50d167-20ea-4ae0-aa34-8a8fc127827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de09ede-3097-47ae-b3b3-15208be7d239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3021f6-387e-4aa9-84a0-5d33744e8bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeb5375-45ac-464d-ade8-7a64f51b5ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cf8c1b-845c-4b97-bdd9-9af556e59312",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd7bad9-1d60-473e-b5d3-53c9081972d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ccf0af-4b78-461e-848a-69e41fdc6780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fbb048-fe17-4821-972d-166a509ec80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2947f012-5f80-4942-9348-38070e6fce91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266fcb1a-c861-4dbe-a1e3-4018add38dac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a17e924-f880-466c-80ea-514df0b6dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff71801-553b-44d7-b383-9fe2e13eb66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6074687-7f0a-47a0-a50c-6d05c64f8ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c552db18-0c2c-4b0f-8c55-f7e19f93343a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3f6707-3c38-44ce-9b9a-f91343a5dd05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5316966d-1763-41de-ae93-927529777edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3c84f4-fb7f-4384-a85c-9ea93926a2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76577e51-3e1e-4622-ad91-b90d72abaed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac7fa26-8e92-420f-b322-231b1227e44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36535a5-b681-4d16-9076-cd29bfbb678a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bcd4ae-463b-4f81-977c-c183adb51e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af50cca5-a622-4f9a-aa8d-9623890611cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae357a0f-4e01-45b7-806a-de5877a2fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa9e548-c38f-416d-a613-ae5be976cd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7afed7-f08d-499e-9c44-86439f3b6304",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59f18a6-d125-418b-b137-f530fa8b4e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd021a4-cc8c-46e9-bc1d-efa2540b5fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a068d55-51fc-4393-8860-1e06f6d86aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4869feb4-b98c-4584-9ec7-1b4d024d3070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c3937e-abc4-4bcb-a2bf-83d9abacc8c8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dafd62-df0b-451e-8793-697cd56d744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21feb52a-25bd-4b7c-9237-50eb3e3ef7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92501dec-7147-4053-9d1c-6575ba63912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2f5b54-d289-4066-acef-ee2218460b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11002017-06dd-4ffa-911e-51e4af768f88",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40961e5d-a47a-4919-b5ae-9fddd4308802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac35f80a-3051-4191-845d-859c7bcf44b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773f7384-1610-40dd-9677-b9de95508c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b86e2f-0ae9-466a-8f6c-1c4c547f5b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd43271-c7ac-49cd-b38d-bea6c604d6c7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dfcd28-2c13-4f2e-ad7e-e3bef4799731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0b2223-5fbd-42d0-a743-8bc3910ef3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba967573-0c02-4878-9aa8-17284fadd370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e73d8eb9-59f0-4f1d-8538-901cd5a6e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd824f7-ddf5-468d-ad19-8b40b68729be",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b092592-62d1-4e58-a536-93a04823152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a9902b-6dff-453c-81f1-d8d7a3fcecb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d30ea1-ad7d-4f7e-a004-903d0cb056f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84fc9f4f-9911-4ba8-b963-f66425784298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6fb78-3a12-41e6-9a39-a3d90d286737",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2369d41e-bbeb-4518-8590-df0a805c67da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f217b8-0adf-4809-b7e9-2b7527b2c43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62359ff5-9a7f-4710-8e1f-4af1d9c5623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf88c051-b274-4549-be5a-f41f31e8b57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044714fd-cac8-4309-b6fc-1168ef53576e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea81c70-1f51-4605-b154-ad6dbe72be6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a988c68d-b609-48f1-b3e5-7db0485fa1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c4f598-fbdb-4116-9f5b-94aa7a4efdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7e9aa3-a10e-4de6-82ef-700ce937a864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46177d17-d862-4f5f-9ea0-fe3635cbb871",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc026b9c-fda2-42f3-bf04-e7ffcd97e493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58d0f62-197b-4620-9d5b-30dcf97150a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ac2052-e35b-4b11-b5f6-800f24054d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc587ca-1546-4d77-abe8-9f720a6375ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d26035-cbd9-420f-98ea-8b227125b004",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d621f6-1a96-446f-8d41-e8516d5f49c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83992f9-fc30-46d8-9f52-7b4f2a0c3d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a33a987-95a7-4f24-ac6e-e20aa4922e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fd0500-1c78-47a1-b65f-c04271720bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3256dc40-5c77-4436-9820-a4f4faf7f054",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ab1855-2aa9-4e25-9a9a-5e37d20e4a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc546b15-eec4-486a-8ae7-8c59bcc50d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a2f700-03bb-48da-a708-b520d8d40c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b05557b-0d6d-443b-9d00-56d1a8118a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fba65e1-8b58-4920-bfa9-83bb74f582ee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb944a38-4455-4832-b37b-e2174b33183b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4900b7-a0bf-4560-9ee9-3fdab5180ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3934ac-e76d-4b94-aa07-123151423c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f24e3a4c-5851-4aca-a915-0359b3b73adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ef457c-9f31-4165-8ed9-467b692aec5b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfec981-7b08-4ee7-b3a5-a4970d1b3d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4799937-4c29-419d-b7f9-c4574e215000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65146273-95c3-4176-b3c7-cc4beb17bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0fc731-4bb0-4187-a195-975360a2d829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f90ec2b-a78c-448c-80b3-a6b20e673f92",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426d6a9b-0e73-44c7-881a-b6abfb1ae31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd37eb16-d0f9-4ab3-bfdb-a614c4e3d40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b332faad-66a4-4eb1-9c72-3dc0bc204078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "091ebea0-0ec4-4f24-9a2f-421c10228554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4602bfc-b871-4106-a5bc-855b6e732dd3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c4867a-5d04-4823-9f8a-561ea4969d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133126d5-4917-4d54-8f73-2ff586f41c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea75485-4dc1-4863-bba1-11e6ccd59119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72a6613-5a64-44e2-8d33-15f91c47affa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b15c6e-5354-4a79-b5a3-34b38512dc5c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3c936c-5f3f-4738-a404-653cb7e09815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa59ab73-736b-4af3-9554-6a98fb1213c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78764779-ceaf-424e-88a7-e6c0071723b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58eee329-15ee-4e23-92b3-1fa61ff20cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51a6c56-b94d-4646-97cb-5297c02eca64",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0982f20f-4b83-4259-a34e-6fa9cd02b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5af2d8-bd24-4c74-9d99-64627eb8d9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84922162-954d-4990-9722-4c2b70442800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9222fa4-7f49-4d23-9a64-c667ade09ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4136e421-6f37-4481-91d1-864e4c22d9b3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b40106-8e0e-4a85-8010-cdd542e42401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd05acbc-6d3d-4faf-8b7d-6962d42923d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1ba199-d693-4f23-803f-8fdbdbf33f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb600470-2f1a-4cb0-8d9e-779e7cb8540d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0fe339-f154-40a0-9705-7aa92cde58c4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8f3740-cfb7-4532-ae99-76f5122e61da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7776df-751a-4552-bb16-57ba21c08c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d797c303-e078-492b-b0e3-f69363d5d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c451b5-b09d-4e1c-bc16-a7e4cec40bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53239f48-992d-4188-8c17-5f30e2becaae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5fe6ee-e48f-4a43-ad3b-d62e234f1a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb79757-1d1e-457b-8147-1cfd9b530974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeddc46-5487-44c3-8a12-42f9fa2333c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3bea1f-beed-42cb-b4cc-411dcdf4f68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9420257b-4ee4-41e7-824b-4d57501f0d59",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955708cb-feb4-4821-b4be-5e7a0af4383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1890f83-c86f-4efb-87f8-058297c2b32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30428373-f2fb-4be3-91d1-50c356abec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a2393b-6f90-4494-9ea9-7eca085de976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c641e4bd-51e5-4d02-af8b-cec1aa126f19",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c44fed-eab4-4528-a1c2-f22fba516053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c087df79-dafc-4a53-af30-2b44d148492a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff15c76c-5946-4d39-8165-a5144df701d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea02f6c5-b2bf-413a-8ee9-c0b2fda06064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34885abd-5289-4ad3-80f8-337b9f2a5e02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ce38e2-a0a9-474b-991e-f562054db0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcac17c-e799-48a7-91f9-64bd7c98290b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec6c19b-7bfe-4604-bdd9-edee5719e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2c4639-87ba-4ac4-9e41-5b339c0041b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9456d10e-7959-4717-8a22-a3e6917ec682",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bd4a35-a53e-4ece-81e5-5492debc41aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4a235f-7e5e-4938-b7d7-0ae88dc63b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f42c52b-e99c-4153-919d-af97d3a62197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20f797df-7ae2-4d94-897b-9c27c8adfbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce54d582-43e7-42ba-92ea-8b342bc89e5e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b64083-0571-45b7-92a0-b32aa1663238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efc7a24-3a6c-4f9a-ba33-f6c4240a41a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febfa768-35f2-48f4-8939-4ec774822a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a271f8-da46-4421-8023-838c8bddb059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39719488-6594-4afc-b10e-dbb850d11ae9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9203e164-b07f-4cfd-8503-55816c93748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab121e0-d79e-44fa-bf60-787e34ca5fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866468bd-1ac6-49ea-9afc-d8dffbe6d4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "beeab222-cdda-4d3b-b974-618e985bb194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36de656-6af4-433e-a3b9-891f55843c8b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864aef6b-40f8-431c-8e2a-4da3ca2eec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2fd753-7b5c-406d-a917-ddb4eecef569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a8f3c9-f637-4660-bd5e-d9f14980ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3047cc89-690e-4ce9-b02a-d99d004f42c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa5fad6-68ba-495b-83ca-541e4bdf8b66",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759c90a3-5abc-4b12-a117-834a1161510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ff4b7a-18ce-41fd-9fb6-61126fd01497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba200d6d-60a2-495b-a024-fc9fb5fdd52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40cfcc4c-9659-49c5-9b46-ea15482f5aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414f6e1b-b2d2-4486-a517-d31e09ce7f87",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e681c4-ac3a-4179-aeed-9392d7d543c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7e45f8-17fe-42a6-b0b7-ae5c736e550a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f8e481-da63-4546-adff-752e9c28c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba22c568-150d-4215-aa03-6565c2750213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de9c0fd-6b69-4db4-a2a0-8649ad32fa50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a592d6-5675-4de8-bb19-846ad6da3639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c82aa36-8cb8-4cc8-be00-12c38532b68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff501bd-9991-4955-b8ab-86bb92eccc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e792ca3f-976a-4f9f-bb50-ff4565a67d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eba4ad-c22a-46c2-8495-81c132eb2cc3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f017c80e-851c-4120-aa50-431623eccc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1d66ebe-63e5-497e-a978-3afabea5a9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cef1c9-64c7-4336-a21c-0f77ff3829d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6ac233-a55c-4c84-894a-433051ad7cbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "792a2f7f-84be-4be2-bb9d-48f0e8db93c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b234a2bd-628e-4aec-9ed9-94846c39a8c0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6582aa88-4100-4b6b-bdd0-caa5b36e5d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "172685c6-fbf6-4044-a659-f12d91785d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a55c556-3be5-4e3c-a99d-6f341c04d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0812f1ce-8c7f-4c22-8456-03a8a8fdb480"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52e72d62-4f13-430f-b235-5fa8b05e0cf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bed51e37-0cd2-47fb-bee4-b1ce0ef53696"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03d943b9-27c2-43fd-898d-771e02ff5d56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff45a6bf-2571-4781-9954-d3da3c9b9380"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2f2ac69-d502-4eee-84a1-beac1cbcaa61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c57ee446-668a-47c1-a52c-c4361d93e51e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "856fe354-442d-4b2b-9e9f-f7f973dd113e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7265131b-2803-4dd7-81aa-f93fd91b9e59"
                }
              }
            ]
          },
          {
            "id": "e54e88ca-ed08-4747-9a4a-0dd3b05736df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d2b7f15-7052-4750-bd21-5a7a244a43ba",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f733eed3-773f-4383-8b09-c51ec6dc5150",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77b191f-03f6-4b5f-813e-cb7c48882d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4e300229-662f-46d3-ab52-3de3260cbe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7068e49f-7d2e-409d-a11a-5f1a8e16c0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c872426-5cb9-4c72-b6ea-e935e86f8e34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "975cb10a-a331-496b-8314-0a2baf96487e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63c88b82-7b84-449d-a9f0-53489c6110c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9871ca88-604d-45c6-93ac-2c457a4f47b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3f82d7d-267c-4198-8ee1-b9dec423672e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e5dc0bd-1bd9-4a9d-a4f8-61749f275cf4"
                    }
                  }
                ]
              },
              {
                "id": "85bdc00b-ccb2-4c24-bcb9-89ba69fa6402",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f5912d2-10fb-4589-9ea4-c3fce3ce2de0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5235506d-7c1f-4e4e-8e75-b580665c5a1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2d1f632-1a89-45d3-8591-a52eddd037ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b97cd6a1-5d3e-493e-ab3a-9caca157160d"
                    }
                  }
                ]
              },
              {
                "id": "bc2700f0-452e-43fa-b69e-a38298a5af6b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e1a721-408a-4535-b0ca-6e60d300e614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55e0f158-57dd-4965-a76f-dfcf4635ccf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc5e1497-5679-48c0-b44c-fb6b63b8fa2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "927b88f0-45ce-451a-8f4b-e84f7c9c1960"
                    }
                  }
                ]
              },
              {
                "id": "842639e3-653d-4d48-bf91-f8fe02a0c871",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9b51365-174c-4a26-8b40-72d8d056d06c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e7dfc5e-1c8a-4121-b473-eb74380dba69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd301231-af0c-4a38-bb27-e30d388f8b5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "165eac01-c70a-466b-951a-4e807e06f99e"
                    }
                  }
                ]
              },
              {
                "id": "50fd139c-1e2c-404c-acaf-a380f15a1da8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47cb213f-9049-4970-9845-3961816b82fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd2714e8-ea1f-44d5-8f41-e4b60d41aa7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39d07dfe-9f25-443d-8913-cb55698088c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29f7420b-7749-4ddf-aec9-fbc2a2c4c334"
                    }
                  }
                ]
              },
              {
                "id": "09f85188-deda-479b-84b9-21cb22924e8c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ef6fd23-9377-4a3e-a321-ce4e5cd27e02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f00b2994-0da1-4e7a-9419-94e648a270b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ef0ac30-9585-4680-8570-e66c1c0f4156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "860fa0a0-e45a-4875-8f13-96a0ca066796"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25443f96-b4e1-4e88-972c-262a9ef12547",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0711b77-5668-47f1-8491-66548629003b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aae9b699-dea5-42c0-a362-ed24b82450a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "674fecd9-6b2b-4826-8685-e123abebd46f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa3d3843-8a91-4fb9-b7c9-39ea98fbfe24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cd359a46-f879-4508-9e04-c13bde9c9ecf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48d547d9-c9c1-422e-b974-ba8c79be29c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f966086-7c47-4b82-9c90-17b110292e40"
            }
          }
        ]
      },
      {
        "id": "ac39c25c-e0b3-4959-ad23-f53f575cc254",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5d2ae8c6-f949-4f40-9b4a-f658ccaa7944",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f869a145-ac90-4a17-9ea2-6b7e9fe2e46f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56fb408c-9eaa-4f6e-9f06-846415694dc9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1e5dfd-1e24-4777-9c52-677d3eb3ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcde3833-1df1-4e3a-928d-4e4aa1992c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8957947e-7611-406f-a7c5-958f20882d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "43243cb8-e7dd-4883-9ccf-df4dbb0469bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a13a49d-31ac-450b-be02-41d82f09b519",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b07afc5-91e1-4c30-978e-f23ea60bcc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9323c16-b698-4315-848c-7c089192f0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f71d4fd-f278-4c1a-9662-1c80c46c0417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ec3ab7-bbc7-4661-a615-844c3f352c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260c0ae-cfe8-4b35-b72f-41a172d1c4b8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726da9bf-3fb6-43cd-bda7-def73e6e8a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947f1f57-d15c-4c78-97c5-7c72cedf23be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2be3ff-5d22-4ad0-9710-93e5a73b57e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a15a9c-8d96-4df9-8430-d81629d26550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4b3b3a-3ddf-4497-80fd-e0c922a60681",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae02b7b-ac04-4c76-a067-8eb3eb95e252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0388cc09-c920-437c-9097-9c5a449ec819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c950e027-e9a3-4b85-a892-0f72e13f1c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2f3d19-027d-4736-8619-69be6545101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b11934-5757-4f30-9a9b-25bf5a44cfae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ae09c6-d464-4c4a-acc5-f7a5a002239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa48b3ef-7d5a-455a-8b90-9032ed066673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cd89af-7047-4462-a0e4-1d52fdf66307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f29bdd-843f-4cc9-a7e2-5f4b628f1297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dc037-b761-4231-8f6f-df77b09571e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310bdb9f-b541-445a-b448-300c3ea82f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0e7fe1-2fde-46da-be8e-0a924ded3dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c692194-0fe3-44ad-b0fa-2532c4b589ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1872a99d-9212-4c74-814e-6677ebfc005a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656b6a73-2012-4d3b-b669-5fb5b3dd83e3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca49bfd-9eb2-4d31-bb69-54069f927d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804bfd23-c5bd-456a-a4d5-6569d8797d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452eaf71-aa17-4fb2-a46c-538d8f0a6d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e3c595-b1dd-4e5d-a886-34345345a0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc82316c-dee5-4bbe-b7e8-fa8de910a86d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f2b988-1491-408d-a6e6-416acb8c8d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3bebb4-7fbf-4627-93e6-eee2a1f6f745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ad491b-d63c-4b10-896b-4615a256f415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0dcab8-9566-4aad-af4c-f49f35e98656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50cd17-9065-4184-9679-ae3f2e68d399",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0614b50b-886e-4a73-a7e9-7ddb1b8292c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4266d9a-bfac-4d57-8f5c-43f597e5fda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f05abec-17db-4160-9443-c4b6ae68f314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d9298d-5154-4db1-b792-18ef4123cf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a5838e-6b5b-4bd9-924a-e1ef42f7a124",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027cc88-9c22-44fa-8f9f-32ca55130fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04263c9c-5d0b-467f-8870-16c610ca28a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14523c1b-7841-4b6d-addd-94603873f109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc83316-ef96-47c3-8cc5-9b55c3140fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a85ef76-c8c8-4d3f-bf50-0079f6c9f835",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b32ee17-6397-4b7c-ab44-86135a4028b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c164ea13-af9c-4905-b9c5-1852b2d181f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c73ff76-4e05-4578-8962-dafa7364ee82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ae99c1cf-2932-416a-bba7-44e062765807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffded66-3448-43aa-97a9-b923d6ad4384",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e53d3c-8d34-46d3-9070-b1d7dff0f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033f3749-df38-4daf-953e-c50bfc6922b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cc340c-0192-4f87-94f3-a0abd781649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93695a98-e9d9-4aec-bb38-678bc8db1e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f62cb4b-b02b-4981-a8e2-51a4ba1eda71",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceeed6a8-f06c-4fd6-8101-7f3cb7428f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e12ca0-c147-4cf9-beb0-57a6e3489dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58877352-0fbe-46a1-a8e9-2e5c8221fd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e439f59-28ef-4495-adf9-4490cba80eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314416e5-b99f-405d-a867-dfb709f99f2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55be6e7b-b0fa-4b53-bb0c-4dd97de671ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0921a7b7-b595-4412-9213-ede0bd0a5304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c5481a-265f-4882-b9d9-44a53a05375d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b05f49-5ee4-4ff3-8bf6-8c46ae6983e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db01e8d-9c60-4cf4-8c3c-8323eeacfba4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92245a78-f5d9-4950-8d8a-c4456d9dc7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7555deb-5a82-4492-ad71-b1f066b82fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862b3835-f169-4b71-ad69-5551fe4afd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e8c9be-b620-4540-abe8-c2b9bf98b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d27385-11bd-4012-9615-ccaa9bb86f38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017d5df1-f0b6-4ee5-8cac-548ea488bc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9400c7-73ee-4a2c-a03f-6412d9c09474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fc7175-eeda-4984-a7e9-7f9fcf8ece72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e070c7-bd66-4c72-a014-8094944ffad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983caf7b-1234-4859-825d-f250927b8021",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c54a1b-0d8e-4baf-99eb-d7e6176438d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced6b65-7601-4ced-9b12-ee47ded9fef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6132f0e-1ba7-4b97-bf20-bb4fac09f077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1629dfc8-4388-4017-bdfa-a46eaeaa31c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4475ccd9-4c05-4e98-b5cd-2701de01fa24",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3043a6-a656-4842-83dd-be066fc7d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5550862d-498d-452d-b02f-a90c87caae94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a194ae-e5e8-4141-9ce6-e672565250b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d031cd-bb36-4c39-8037-3e86877abafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500120fc-8f38-492a-9370-f5213ff80dee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1037b9f-7205-4002-91f8-e9c1e8a75015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363ed4fd-957e-4a45-b133-9d7bd9355d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb032775-8ec8-446d-989d-2557efa5d7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5527f442-993f-4216-aa13-c81c427c9a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e606fe2-38cc-4b78-8448-c39b7eae14a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc68d21-4343-4876-a1fc-52ccb2c3b2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc41a54-1271-4636-ae6c-18808e39c60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd936c-ad47-4e8c-b686-e4ade9eaee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced678db-6d20-46e5-985b-90e4a26181ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9154616-1bd1-4eb1-a50b-1337d9bf4b59",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad947ad-ce18-4786-903e-20fc6d932b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcda3535-ce24-40c1-a084-8e11929a53c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45c5750-f4ec-41e2-a474-eb8181f99878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4120b15e-948d-4baa-adf5-5f8985286925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8202e-8a14-4ede-9a1a-bd61fc84ea35",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806892fd-c4d0-4378-a011-116f2f15b18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5536e9-8212-438d-85aa-aa7a85bdabe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f32653d-b075-449f-93b2-c36ae925d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "488646a3-c590-42b0-8c9c-bf3de2f30217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a60d096-7bd6-4bc9-9368-cc663aca2bba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5f1e8d-5ae2-4bcd-b611-89414239bb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b8fc7c-b302-4fc5-a983-a677369fd054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12851da9-c518-4995-9194-ef3a123e9f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ed317d-8b54-4e66-8862-4f6c28443d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798c4ae4-a69a-4f64-88c0-019c9cb4d7b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd583d6-1d56-47c1-9248-a19bc9181215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c294ca3-c4f9-4f37-a5c9-019b572ea97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59d812a-ce90-4a09-8359-c28482155999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ead87d-f398-433a-a21e-74cbd8149a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee9a64a-be6b-4e6c-8707-cb6ca32b6ee2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7b0a51-66da-464a-8482-e891378c272b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55a7fd2-e0f5-49da-90b2-fe7a8d8e9aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faefcbe0-1a5f-4372-8fc5-e379fadffc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6f4aea-83ea-47bc-9368-b9ae80382f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cae859d-6432-45b3-8926-0e21e492fd85",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238aba16-af50-4c54-93ea-65223947ff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97283f4-200d-4048-9f61-376ef27a3449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9881cdec-43a9-4720-9847-f4035704367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "857cb9bf-f412-4b59-a981-67ad7d1dd22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad741e8-aaf9-4020-a0aa-554ebc51d597",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0db256b-dace-4750-80b2-256b5306a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16038450-fba5-49c2-b855-4b7d5d38db45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891dd1c4-63d6-4d36-8428-442263110256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bcec41-8f47-4dc8-a763-65d418729fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec75b67-2f4f-4e95-8e81-333db7629f76",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6976d48b-aa89-4356-827d-4ff897961051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1654328-1bf6-47ca-93fa-b3d8f49f34df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c51dc8a-c815-4953-9a1c-cd3d80da97b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0e4fc4-af5c-4136-8aa2-2da8c316a542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d91f53-c2e6-4fd4-8655-8d90a93137ce",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32875d46-bb06-4db5-850d-72da7c86ad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dd697a-0f7d-4b31-ac16-42e5d5bb85f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df25e4d-38b1-468e-9852-eecfb8d26f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51636545-be36-43f7-9fa9-3bf68a6d0602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920d885b-c7d7-4e33-82da-29919e252284",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29045733-91ea-4065-8e9f-c34cd49ac481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0e882a-6f00-4d2b-bef7-9907a2b5c708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fd9da7-0076-42ca-98e6-99493abd89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71254c3-c97a-46ba-b53a-f593ed45e441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ecbc88-0c7c-4d5d-bbc5-1d68e84041f9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8e9db9-cecf-4fb9-a611-d55d91fa7ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ca546f-a73b-49d4-93a8-2f5c214fc3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ab1e56-4078-4f6f-89d1-777378ad4485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6bba73-7b7c-4cfd-9867-672be4670142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e036d3e-b65e-475c-99b6-f02c24d3773e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a049e883-bbad-4b43-a5a0-3ad887bfaa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b10dbe-3b15-4686-9d5a-f77d3c9d5240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6232e7ee-c9a4-4f02-86a6-2705345d21a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdbf28a-3068-4840-b477-8e03eadb0516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df71dd2-cabe-454f-9584-93ad52845c29",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06108ef5-a2ca-4cd2-a7f4-60030c91f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd82951-c0ef-461b-ae06-03605870fd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d024e3f4-753a-4d6b-b3a8-83d169e56760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "347f5df3-bed1-4ee5-b6c3-3aded9b40ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29c091a-a534-4940-8d56-e3e542b9440b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80de61d-2f8e-41a6-8857-c234938d9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75630f8d-0207-4d0e-8868-99b681517513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93717ab-7d5d-4e74-aa5b-8cd63a63ed6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d85eb6-1d3b-445e-917d-60d8fc181c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ef9e59-8247-4737-b943-1b36478ccfd3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c666efac-07ce-4157-bb22-66e3f305a01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612112a7-19b9-450f-8d75-d1a1a2ece64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1284bfc-ff38-4faa-b282-945d4b196ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7700ac6-a249-446d-a4eb-7f190e02f8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6c2c78-1848-4f5c-983e-9af77cc402da",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a205b56b-e686-40f1-8722-b9010507fba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bf7547-14b5-473c-ad32-e63f581f5924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc1d97-f601-4ab7-a7fe-a793d342cb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aef284e-e4a4-4e3c-b68e-ed89fc32cf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3449d5-817c-48c5-b7e3-e81422498564",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d99d05-dc3e-4ffc-b7b8-66c139c0123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d246b3-df91-4f5e-aa99-6e6716cddb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c7a81f-c237-40f3-96a3-a656c6e07910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9ed870-d7eb-4787-b8b6-00173b3f4d33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "571f4553-1ba2-4d34-bbf2-c1df0f708a16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee0b587b-7f47-4c93-8dba-d3c8317251fe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ab74d7-86ab-47da-8060-33c404d0b8f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32dfa28c-ef28-418e-b841-8608f51129f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0418750-845f-46ff-bc8c-3a7e44212ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50a2bd51-8ed3-45b2-8aee-cfecbc82b7ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd3c937-ea98-47a3-a063-77b9cdd7e39a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fa4a503-0dae-4836-b7b1-2c2fb46ebff7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27a0883c-6ae9-4193-8003-6db4d7603e18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cda9e14c-823e-40aa-9151-1b9aa4d7a28d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "298ae543-3580-417b-84ff-d4b3544b074f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70cce558-87a1-40f3-b7cc-e742d43bdc20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6a593b9-adc8-4def-9567-c46afb269609",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c6c7c78-e005-4c85-bb23-cb0ae0d07bcc"
            }
          }
        ]
      },
      {
        "id": "c4a02f2e-ee0b-40d3-ac3c-dbab491b0864",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bb75c560-e45c-4e86-9ebe-44af3d4e34b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "572174e0-526d-4aa7-a840-93fe9f5d29bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87b8024a-7294-4a93-87e3-fefae1d3410d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80734355-5f5e-4603-8fec-d17a6a5c6919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a2f947-72f3-4f0f-be7d-c3e4e4142fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe59cb86-d414-4aee-a832-ba7a15fff331",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9dc28d-9eab-4586-a9a2-3762cd31367a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443bbaa3-cf63-4fc7-b480-2b33d14c7633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee67e41-e1cd-416d-bf66-9b5416956b1c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cf3e52-f949-41b8-aa7d-4a5f9cf75758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f28f08-aa72-4199-aee9-99b24d9b08ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ddb747-61bb-4af9-9060-96cc66d81fd7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242ff67c-6af1-4b59-898b-87db002c3910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494d24d9-be8b-450c-9dd3-dd7bf9f9d2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c89ef0-112b-42fb-99f7-10a4006a3f0a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bb03e3-cb95-48fd-823a-5c4ad8ae2fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef7abe6-dbc4-4294-bc4f-4be07e1609cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33487947-fce0-4a57-b4fa-59315daf75ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7335dc89-a5d7-4323-9dd9-356fdb9b3d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ebed75-bf26-4bd6-b009-82c06f435183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4af1ae7-3f92-4562-9535-d9aead76ce52",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dc1e02-10f7-47d5-badc-32eed37fcc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164a7fe3-ab2c-4705-a011-6f8f2346a09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02256fc7-c62d-49fa-9ea2-cac5f50de578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee68e1a4-d289-4902-af16-8252f0e0941b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e55417c-8231-4eed-b642-016f1f21caf4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0ec89a-f545-4182-bed8-6ac9f45f0502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17530b5f-9b6f-493d-8b21-8720a748d95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654b5f95-f31c-48e3-8140-dd5c6c151d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c53138-d2f9-410c-93f1-72d940d64ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c0736a-b98b-4790-8ccc-9e725d729bc0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ebee04-2a6b-48dd-ad0b-9ea6d5d74b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ced95e1-90b2-4cc5-ad48-7d05923849be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a01c9b-4f19-471c-8ccd-e8520e4679d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a9a99d-9d6c-49e6-abfa-92f00dfe42af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f389c9-2226-40e9-a9d8-9f0a0fa5f90a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8876b48-ec05-40d9-bce7-cb56b78c72a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e72cae-b36b-41b7-9ffc-11cb71f696a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e38209-2f66-4ec0-8862-4a1324b5d472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc445f5a-8947-4fe8-9157-e8ad7f3fec41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40d368c-4f65-4837-b382-059298d8afd8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7783f280-75f3-4b01-b48b-4ee632f8fdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcb9aa9-b017-41ba-bcef-9d990dec9aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405bd84f-0828-4fa1-aa2a-b20eeb73d213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cf5de3-7b75-47de-97da-8b7011364924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581bedfe-9d79-42e5-a1b1-7854e3fa49d4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a41ec78-ccb7-46dd-bf15-9c4350ab351d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29f7696-2c0e-4700-8a30-eba4e4ff56e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1396ca5-d0d6-414e-af49-1b6d4f89f261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b11f0c-8246-455c-8caa-831a0be3a678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7509be38-f53b-432b-91ea-0afe7b9ed4e8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f32ef43-27f4-4681-915e-beaef9fc873b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2215d5bd-1f62-49e4-917a-2b1d36880876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd754719-3900-44f6-84fb-1147ddee3d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1064f4db-7064-46c6-a190-4de6c989e8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dbb7ec-bfb6-4256-8342-bbe49d5cbbb0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a138c00e-47c9-4b3a-87cb-948bfbfff93d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf989fd-b7d5-4464-a258-77a503e12e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3893989f-fb3c-42e4-ab1a-4d6c5f1dfbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7741270-be0a-49ef-8a1b-4f0d4349e59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bbc725-6f39-42b4-a7b9-6fa53fc55fef",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c85abea-ada0-4711-958d-a7183df5c526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33e6993-c817-43d0-a2d8-ff000d7e535e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf45bcd-7748-4665-a0e1-f6dfdba77b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a23efb-91c1-4399-bb9b-ef8f7918ded3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a62696-e2bb-4d59-b18f-964c7b685219",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065ec8c1-443f-47a7-8958-87f53163b680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22224f0-fd0c-40a2-9ca0-b9b28ed6d9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9bd11d-44ba-42e0-a045-f2059f3b9548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317e6413-2fd8-4d00-bc8a-d0cf50b1290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e338debc-dfe0-43aa-bace-23dd98395d93",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91eb751-4b8a-4761-8a1c-dd90082ac2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6813ea7b-a31a-4026-872b-17b186f300ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65bc0b8-bb22-47e9-80d0-de32928c3a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ad6dc3-25e5-4b02-aded-11e95f663d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f806157-b150-45ec-b31e-835702a999b5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c1542-188b-4aa4-9cc0-fab5716801ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f52f1b-a70d-40de-9f95-14b38ee58567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744325dd-2115-446e-912c-bcb66542ecc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e79e30-4e07-4a36-84f3-f117304dd228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd053df-7aac-4a71-ae87-a8a8fd75ae55",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01c4d41-d106-411a-95a7-3118aa008c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307fdf88-94a0-4327-bc8e-919aeb2a6d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297e086d-95ca-46fc-be57-c48b51e6ebcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16619859-e90f-473c-9d4d-f8f8c1083a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be426794-84c2-4a26-a576-254bcaf35124",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255c2bf5-f897-448a-befc-7f47b8a832d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b64a35e-6ccc-4469-a88b-12544d345ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d468ad8-b46c-48aa-97dc-72a9ced49038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c63eaa-6cad-4888-a2d3-bc86cff3c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c451f7-a904-43d9-9512-6511a549a393",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbba72-f589-406d-9285-72f975866025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735257ee-7f36-4d03-8c2c-a82d8923570f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d9299c-4044-48b4-beb8-a5a9c2fcb06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6818f893-96f9-40d8-b3f3-8f9371ff7f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6529de9-7bf5-405a-af4d-ab4582a8f046",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0148402d-ca77-4224-8d2f-debb1947a1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b926d962-aa7f-41b8-875d-209f7c8980d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934847e3-1090-4177-8f3a-276fcaef791f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a41ea06-0e35-4b89-bb49-a5e932486b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d27bc6-a748-432d-b1c6-feec7febdd16",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cd2b94-d22e-40a7-bc90-9e78c4eac122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716e306e-ae66-4e36-9ce2-e3c0a15850c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5800921-7b45-46b2-84ba-d01f59e03922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b835e10b-0ae8-4aad-8500-e4bf8d8136bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34860394-3d1d-4710-ae0f-adc981ce7a19",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c101ae72-b8e6-4358-80b9-9f5968441d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47440632-b011-4ace-9727-8327dab9a817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7621aa4-5f92-4591-9ebc-819f5cfa2bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88c701b-99f8-4daa-971b-0b88ff7ebaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755f8f05-89c8-4533-a0e1-fd414c1c46cd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c9ac27-e5ef-4200-aee5-a29a939466b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "606c0c1f-e636-4dc4-a030-01c3982a3038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a8c511-7782-466f-a9ba-62c302c1752c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a03d5bd-2cf2-480c-8d20-5d7f82d2d233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6404ae79-e9d0-402c-81db-fe65ada70adc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5014edca-593b-4188-858e-5eaf419b8b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72726207-92ad-4d43-ad94-e1fd1ecdebd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d3c90-3b24-4547-9074-152e2ddd2203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e869b30-966a-4505-9175-41df4cf43633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d6f9b-0515-410f-9bf7-f8d78069d5f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc91651d-4164-4e87-8abd-36135450e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c9d127-ad94-4ad1-8bc5-617c69c1b332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc522dc3-e776-4c6a-aaaf-fb7ca7252a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caea2fa-62ae-412d-a273-5fb2a27aa600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ce8289-7f70-4ec3-ad87-ba1088d29273",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f83c00-fb32-47fc-ba70-787a7c62371e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a9605a-ac27-4f22-a781-0338054e26d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c6e18-6433-469f-9f7f-0f0c15b07874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98310372-8a37-4df4-8e31-081f125b74b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8358b7-ad65-41f1-b409-ea9a7bbf13e5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a296b37-97fd-4aa3-8d3b-1b8f7fe3b63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae00c992-f6d6-4a08-acd4-7e251e574a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3ea1ac-70e1-48cb-9eb9-25abd20a0db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd3653a-f07b-4497-a753-33688e35e1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaebbda6-873e-4681-89cc-86b661fbf97f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e23bb3-fd7e-484b-b5f8-c9c2e46610a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5fee55-5f37-48f3-8f9e-584d656b130b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267483e8-0539-48d4-9705-6acc2d0ddf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e1adf8-60d6-4b07-a100-40e33b87d563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445d3c44-03f1-4b82-a1ac-5e003912cd88",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c8a31d-1b48-4818-b950-4d41f103ef3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ee5577-8440-41f0-88da-95f86dbcd467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85a7458-e6ff-459c-aa64-1c224b495f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3a6c21-7ca7-470d-ab55-443d9aee50a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a818d8-87d6-45dd-bcfe-8e55282273ff",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dfd2fd-abb1-4d4f-9cfa-65c6a27c9278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a248b4bd-aa65-45cd-bb95-6ca3ca35271c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d204a2af-c08b-44a3-a393-98a242c395ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7e3a35-f9b5-43d3-975f-7006d6c51e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fc12de-0b54-4210-bd31-3f0fc78dc214",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fedb47-2d49-45f8-bc5f-3afa7ea62baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96cda937-1cbb-42ed-984e-d00765f2a00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f1b276-b349-40b3-8b51-b4fa1deb4958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacf1f3f-a125-44bc-8f71-5b423c9d190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4c2447-58e1-4114-88db-1140b2ff7ce1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f50472-2fc0-42d9-8f5d-8b69d5173360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db99d684-7d1c-4f4d-97ef-fe86d24658b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5903e43e-eb66-4830-b405-93b0dc5cdc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b924fd2-2e67-4301-b3a8-de0adb7de811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fdfcba-63c1-4ce9-8764-93e957154396",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c77657a-bcb7-42bc-8e72-1597d75f6c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16134841-1337-48ad-b9e1-0fc916e036f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad009f31-eda4-4413-ba77-c2aa490ede9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4df819-3bad-45c2-ad1f-655173e5a76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086853e8-de65-46b2-9f7f-4f236a7e7c4c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e2d31f-ac6f-4ba0-bf0c-14c33a3565bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e5475b-2b8c-45fe-a4e4-462ef721d680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80fd52f-562e-48a7-a148-9d256281f240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6013d2b9-3712-41b9-a9e4-a72ddfcc68ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674ff2b0-dc58-4707-b8a8-ab6487d8088f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6aa48a-f252-49fd-8ad0-effc70a68b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5747e0be-aaa7-421d-92f2-a1b04620bb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0170fe91-8d96-499f-8874-971a67a56e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ca5b54-2d1d-44dc-8a45-4f70505e18f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c41afb0-44ab-4d5b-852f-db504fca7526",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0731bb4f-9f2f-40cd-ac1d-acc38a952dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b20414-105c-4f83-98cf-add88d808301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abafd0a-d6cc-4f03-b714-3aa60a73670b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaef0ce-9eeb-4662-bb3f-bf0cf48613d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa40754-d6e4-4620-b7f4-a87164269ce6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2b812f-7bd2-4636-9454-7b19c2437d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33cfc5d-2783-44e4-bb1c-ff3b55d44262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e698569c-cd2f-4ce0-9a23-1fcde653bfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e66186-577a-444e-84aa-01d54e582e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6427710-146f-44bd-b521-4317cb02fc22",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcada091-ad42-480e-8b2c-e37a6ef83bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adb0c6e-bf1c-469e-bfca-106eaa924d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efbbf0a-7091-4886-980b-2723e3abd5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184d7611-4df0-4263-a9db-0dff31ac20d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4287b31d-f55d-4d2d-b506-b74a227728d5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f518a-f0d0-43ab-88d7-f3b3a947ec7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f11a418-96fd-4a00-b49e-65681e391294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805a2db0-34b8-45b2-8afb-4c654903517c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6175ac-88cf-408a-91f8-e4a4f4b4a091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4c17da-f08b-492c-80f7-179469478428",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5a1894-589f-4f58-b33c-b69d9249d779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a75280-169e-4562-8d80-7fbf7e5e8a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec6f680-9f5b-4005-a51c-9c19da4824fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bef540-623e-474d-9253-42f08df841c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91daa3-e11a-4cbf-91c8-434a27b13bbd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9f8662-c2aa-4294-890f-2103c24a274b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95347733-eaad-4b1f-84e1-6c37b7007a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e8310b-36bb-4518-a215-a586728578db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b499c28-072b-421a-a5a6-a58f7864218e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e33e7c0-e3af-4386-b55f-dc649e256065",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa9f0ca-7020-4381-a265-e0ffdd759179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2dd3c9-50ca-453b-bd2b-ad8557d096e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be80fa5-6a23-41ce-aa4d-19fb31649307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb9476d-0cca-4d2b-b4cc-45fa3f3c71f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab7dd4c-8906-478c-8062-d0d0badca586",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053e2973-8f55-4e29-ad5e-dcb020c50cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0c48fa-aa76-4346-9e1c-834f29ca3392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c76efc8-fe9b-4257-9bda-b4372a88ee33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928125c3-169e-4cbd-89b4-7543d740765c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c44dc84-f09c-4abf-a08a-f2816ec012e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06082ab-86bc-4099-aa98-94fa7cdbab51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19396a46-b549-4d35-840d-df575f269291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076dbe5a-ded1-4c85-803e-8f88b399f7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705bff4c-976e-417c-9b45-a021bd08f37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a2d3fa-7098-48b6-93a4-61f13635293d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896ced8e-4541-40c5-930e-76b481d0a98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966c539e-8ec0-431e-a538-faeeee71ba9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9d3904-9407-4d2e-8c72-4f8b463ff75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6f7d0b-7b7b-4126-8824-2a2922208c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a52e37-f1ee-4712-b2a6-dd015af5bed6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22a880e-6854-4fa3-b131-0e7588c2a3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5530be-0f4d-4482-b95b-55ba6dad3b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1409ec24-32f8-438e-9cbf-8b35f6c66974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c1de5e-17c4-421b-bdd1-6c701bd4f04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe047f-b889-42c3-ae6a-2cf92fad80c6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ccf70f-d86f-4020-9341-862d80d8ef66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7436c8fd-c54d-40a8-9528-37794feedba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b89a784-57ef-410c-8d95-bcc20ce07da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a635eb-a177-40e1-8223-582adf53b0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefd426c-9f28-4dee-97fe-8b3e6240be4b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735134f1-664b-45b7-9a27-dfc6550219d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d905b4c0-993f-4d6a-a7eb-275814073eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4aae65-91e9-436e-82f9-95061930b056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a6f97d-6c84-4327-9bce-2e00d896bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72d6f98-7201-40db-98c3-6384e110cc65",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf25637-e081-481c-8239-798af95237f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46582ec-d669-412e-9810-3742c1de90b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b13a9d-ba25-4293-a2d2-0bf4cce00e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf3000f-c81a-41c8-894b-4c95d30abd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e3df0b-bf10-4575-99e0-756abcc45daa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb22636-4a4e-4435-8b29-64faf278eb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb269456-4032-4cab-8581-e97106ba6191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e982081-5b50-477d-b23b-e5d524af49f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8a368a-667c-401e-8972-765720ca2972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d210f7-fd8c-4de2-a7bd-dfd634124fcc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4172e0-62eb-479d-b727-870ee399aa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ca8be4-0f33-40f3-9952-03645772f4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9516e30a-fee3-41ad-8824-fd1ad67697df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a916c0-d01e-4262-822c-282de251ba88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811d4af3-b958-45b3-bdab-da03bf822abc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8aaf58a-dd1f-416e-addc-9cf9da29de44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80692bbe-e4a0-4048-a6e0-c8f140db50fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d01b60d-d54a-48b8-ac53-8ffed6e82729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5645eac-0149-497b-8ce8-544058fab58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf16d7d-7f13-42f4-a22b-315f70e25a3f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab453e-df33-45d3-bf5d-1b0dbc095973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba95a4d-500c-4749-b6db-65657ed6aa88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e088a-2469-4f24-83ce-7022f39282ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "decb7f3a-da05-4a5d-9db9-130071eaa55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff4419d-a39c-49ca-9065-04ee20ae810f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5e9257-ffd4-4564-938d-ebddebd9997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62e7079-cdb5-4283-8db4-fa210ed467ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c3acdd-fb57-43f1-b2cd-5324b7a1091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7843cb3f-5fad-4fa7-a450-c017e26e5496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd18272-0a91-48d2-b5f0-fbf7c56c209c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a9eda-ec8c-46b7-a4b4-ac21c434d64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99142681-11e8-4b68-9f7d-12dc9d01b526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20640fde-049a-4cd3-af5f-b2ded987b6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675b7b0d-dbbb-449d-aa61-f85c7bae13c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31b2399-1c2a-41ee-883b-4ab3f05ba58b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6339df-cfdd-4755-a0f8-939a718e7864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1250c8d-8261-4ad9-91b6-923f99cc2a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2901e4-151d-4fa3-9bb0-a62fd4ebe7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fcda46-2d71-401b-a5e8-26b37a9cbe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f34b6f-2b63-4856-a353-b5d639ccf254",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca6729d-faf6-4433-9c0d-4287dc1fb527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f4b96a-8977-43fc-97d0-b333669d7df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2791f6-9994-4062-a9ed-a17b3d64c54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035eae06-3b90-4656-9fab-6e14f5751b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2f4866-9cbf-4b66-8738-929021915f7b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b57e37-206b-42a5-b6f2-b8ce1807b75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40941c41-e166-4c78-a9f0-bb9810bea618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2d6dea-ad72-4569-a8a0-ac2154c12edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369437af-fcf9-4365-a700-2d0db00eb304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04b55d1-c404-4e6a-b917-3ec76c690573",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda5dd39-203e-4e43-9f7f-e8c002d37e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3c5479-6458-480e-b4f8-b11c60ffa54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a826aa7-e37a-4fef-aed4-62141996781c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4014649-4de6-4bb5-9dc2-d38a2716bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e45e2-27c3-433d-99a3-43e450a60b9a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495e7237-75fa-488c-ae85-50c31d73022f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947b6e4c-87e2-45bf-b53d-7e304666055b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad92d0-ed05-4474-8de9-b9ae6d35bdfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f8e18e-f44c-4ed4-9149-6e49b6ad7546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93944f16-2099-4753-adef-c2ffffca49e9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8290a3a-e634-4390-b6f7-152a309179a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b02316e-ec4c-4b73-a070-78558edd4162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38fd77b-af60-4104-a639-06efabd066ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dce876-7259-4622-bcb2-d251842d6d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137747d8-0333-45db-a5ac-56d53be9d179",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd64221-1d98-40a8-a29d-ba3e593cba5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98b2a5b-2a01-4990-bd52-dbaa1454ae37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b755e1-69ce-497e-b6f3-bb9425b7aa47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51ce1f9-5b09-4806-b21a-26b5a4b3acdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50281f6b-99b4-4eee-96bd-d13c526f9ff0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d8dabe-726f-4888-aed5-09958897bae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e755be1c-3f9a-450d-937a-e890192896eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3fbfc1-01bb-4b34-8e35-9d15a1a4dfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38daf83-93da-491b-9414-f9f4d053332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c239be8f-448d-4eb3-832f-4c98e128c21e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e522c1b1-f3bd-432d-9b72-63549150c861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa207f6-9f0e-42d8-8892-742e194ebc86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ab6582-b1a6-414d-bede-a16e70bbe3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cbb0e2-bab9-476a-9369-02144f48e1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26b162e-c91f-4f12-bfc5-053766f00a60",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b68a4b-60a9-49f8-8eb9-ed54e18b350d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17cf417a-3f47-40f4-9f2f-dc985ab49dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62a5f81-961b-4ffa-a63c-62b346fbb58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608fe173-ff9f-4f74-aa4b-14abeaf4d0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ed8fa2-8b06-4451-8469-e92305431a34",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e042d7-2b2e-454d-ba9b-bfb75e260dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ffc9169-fa4f-4019-9e0b-dfcf18dd1239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7e7eaf-0184-4d4b-ad2b-306b68fb52ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac009f83-4915-4924-99bf-3e1436b39fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dca7cf-1684-4558-884d-ec8103965291",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66181841-e2e4-4a5f-a6fe-be2371053c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2964d797-3a0f-42e6-a803-8d0bc370981f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7187e-d7a6-4613-963d-9cbe53ae2d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a788aca-e52b-422a-8467-aa40d3a3ecc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b271cc1-c5cb-4522-80db-ee000e864cd7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc8ed6-1fea-458e-971d-d107560aa891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50f88f2-486d-494b-9f9f-fb100ac375b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde7a3b4-8d8d-447a-866e-ebe2be2dd8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddd1a9c-982d-40bc-b45f-de65836af3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0940c85-fee8-410f-9e7b-2c946d8fd9c4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c4924-4351-4551-b961-fc2805eb9e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81acf18e-542f-4bfe-a14c-fe3e3b497ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d4a271-adaf-4d25-986d-e2bdb542d1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f562e0cb-4aaf-4f54-a8f2-e8daa9c9ef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de7fe15-5fa1-4b25-a983-00477d386905",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e6fb69-77a3-467b-bc00-c020e2793470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a660c6-43c3-4818-9b29-f9942931bace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3425b388-1473-42ca-b0ab-a1fbbd14a714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94334a07-54bc-48cf-bf92-6ac1ab59d282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a27cf7b-2c31-46b9-b97b-71f4a78c12e2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11afca31-c929-4794-b455-eb86a8ccc1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acae6376-aa9d-4ced-892a-02971a155456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8271dcf-e9fa-4271-bcdb-84510c52eaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43f929e-8e70-417f-8194-bac4913bb2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0378e0-0678-4e19-9504-9cadf632f49d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47317fe-3cae-46c8-bdae-e0ce0d8a4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a5211b-4418-4747-8cbb-15251f85d39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062b5745-702b-453b-9025-2c590e7681ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada7dda4-4e85-46b3-a2e3-3d2456c11a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93d0e07-8cb5-4a3e-881b-9b843bfdf68a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bb693a-a881-47cf-9358-c9a38ea51be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9680b8-ad9f-4110-b837-ad8433d7973d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8171ad2-7566-4248-b535-906d03dbcb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af04da71-7ffa-4998-bec2-b7a00fbe5d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae04176-ca89-42b4-bac5-9f1e45619f4e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0548cc-7d04-4fa1-83f6-cebc71b3cec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c223aa-e5c4-448b-af51-2a875e7e0507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0280f7c6-0a67-48c9-a3c2-9a29895cd37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ec9f23-39d1-441f-8b85-16a0abf5ef2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e9377d-b355-4deb-bba5-101d7bb9fc33",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b77219f-5660-47ab-aa29-d49e01f46569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ebe7b78-e6cc-4741-ba8b-3c89f065fc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56348b51-984b-40ea-961a-1cb0af2caec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861412bc-5aee-4525-83b3-5161920c7969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c66e1c0-9063-452b-bd87-1efebec92a02",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15423562-5bd8-4e95-8d33-89bcbc4986da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd34dde-6350-488d-9b35-2c747974bb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e489098c-a503-4a56-804c-87a42685b236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e9d63c-978a-427a-8459-e216f5307ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7b939c-b284-466d-8ae9-8635dc00faf7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb09c1b-166b-47a8-818d-837e6a775929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb56bde-2989-4dc8-b912-da03d1e0551a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f39920-33e1-457b-99f5-04e8dd9f9fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35293266-e1a5-490e-a1f4-085f929edb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516cf449-5a98-48ef-ad5e-4292c982aed3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c92d7da-9c11-4c54-baeb-1d8e578566a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79581ea8-c47a-4088-9de6-32a1b66da6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0736c5b-49fa-4aa0-9d8d-aab4aa6749d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba0e49-64f6-4984-9e16-16b870834474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46932691-8a74-4700-99ec-c2c8d8c7d1f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8e9ae5-d16f-4a36-8344-a588ff5c1d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e16631-96ca-4c60-9f6e-b7c287f720ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08af7ff6-04b8-4222-87a5-50b32bb66f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77db5e44-dec2-48b9-a1e5-4320ab2b46fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e7a0ad-8c81-4ebd-b87b-733977624e53",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31af0110-3534-4be4-b2b3-3f718c34b14e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31600bc7-e2c7-4ce1-b871-80ef0812c0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a319528-05a6-4254-a3d3-0c663bdda327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba3a524-671c-486d-b727-c89a19d38093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881881dd-0a09-41d7-94dc-92a56a66192b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c836c184-95a2-4048-8812-b6981d844dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aab9705-7dc4-41fe-8abe-ac8e567b017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc96eb3a-e257-4ca1-b629-1163142a6b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b01589-5361-4e11-ac3b-1d34068b3305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cba1b23-c795-4416-84db-e9beb0f80355",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5fadae-9a1f-4fa3-be8d-1f789ba7c086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a761138-f3ac-4149-b18a-d1fee93989fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685accd8-0190-4c9c-b798-c342e7406078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4081786-b14d-4414-8785-2d7caab44914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961e189b-d385-4684-8677-92d1249dfc73",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617d8837-3a84-414b-ac5b-1544791ef8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdce1b73-82d5-4752-9949-1dd8810c8980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a7dd52-6729-4433-964b-e99990262d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951ce0cf-bc12-4edb-a9b7-418ccce9d8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3f5d34-9349-45fb-b815-ce894d92a2f4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332d246f-208c-427a-9c19-97f07a02be3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11ebe8c-6b1e-4f0f-b6d0-88baff87eda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473cb74c-b48f-4c24-8929-c379fd934098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f22e03-ce33-4d10-855f-24f137ef909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c65c5a6-6e20-47c0-b527-05d91dff447f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26782d8b-1436-467a-9572-0f316854f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502134fc-551a-4375-841f-c79605f2d82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348c51c1-1e1b-46dd-b25f-497a4eb53f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d0f6ac-23f0-475b-9769-3c72edcad08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fbcf69-0af3-4c34-b241-cd9fc8051837",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b607bd-35b7-4f53-9ce5-bb452dec5bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e55b11f-c2ea-4873-95c7-7b01ed1107b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e05bee7-702d-4855-b08d-193803ed1401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b66b6a0-644c-4831-8250-c28fe4d950dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f69d45-bac0-433d-8015-1a830d0eadee",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c124c9-ca98-4d1f-bd51-6090a006a953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14966dea-3199-4cb6-8499-153f337927de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d92aaf-0e94-4001-b344-b3e009c4c8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84322b50-78b3-46d5-8d57-b243b69ce7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045aa811-8b37-4fdd-80a0-8bcb043c7301",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86351cf3-dbd3-4da1-a12a-ce3f36f0e8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350aba1d-9ca7-4e41-a4a0-e3b8784a9338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897d73b1-f721-4094-8a8d-9c18418d4d77",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4620e9bf-98e0-49b4-abf5-2781de097107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3a5206-3d84-4b07-98a5-fa28ef146bb5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84232b8c-c6ec-4981-ac45-251ccbd69580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd812b65-2810-4f74-bdde-e58acedaa8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dc23d0-85ce-4f63-987d-b4a4dabc7bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11aff4dc-1589-4daa-936b-396948b0a1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0935db90-0d4f-4be1-9611-ec81caf25c47",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fc70bf-9ac0-474a-af31-1a0bfcecba1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e728d3c-4226-44c4-8312-85b80548aa01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7423dda5-b74e-487a-aa31-0e704747a484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4733eaf-d0d5-4655-bb53-fad056065cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b211626-2d88-43c7-8c95-fe6c07975ba2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c6ead-cc79-4f57-80ec-260c872e6c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdea9a2-56b7-4289-8ad7-cfaecf003048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f392951-0e34-41a7-a8b3-69665b4c8b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0932f9d2-c586-4e16-b853-4ff547f82223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070c104-9ac5-4cec-8c03-a61df87ec7cb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c871931-6290-4188-9d10-5cc181b2564d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a7efb1-ad4d-4c1d-9e55-da432f1db49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153a9e8e-4979-424d-bae3-1e5b39fa7028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f919c14-9fa5-4c65-bb4b-98e9b0a773b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c47126-8a3a-42c6-b1f0-201a55c99a3a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b964d5c-3448-4129-a86d-13c1baccc919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00a6324-867b-4299-a3f3-a705d8c411de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc536a4-af58-4056-b00b-a1933c563c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0d5283-b817-44e1-897f-dae359e057db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80ab891-f2fd-4d74-ae50-25ba298e30ca",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdbd5db-ddf7-4b46-b853-3c9d504633cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd530de0-4f54-4deb-af10-0b21d426e8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dab487-721a-479e-af95-94092d9e4c9a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e231e8c-fe83-4b64-b44e-6c6655956026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f59faf-a4d4-4eeb-b8a6-f1cb6df6b816",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a639045-e02d-4170-8af9-8e2a7373f59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a55efd-dfc4-4ccb-9b5d-7e11575b8de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca5a0eb-dba7-4baa-a4f8-df59c4b6f60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7915d6-8466-4e6e-99d3-92c4c9e7fd75"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2100ce30-05da-4298-ab07-6aa1d04eb545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26ac10ab-b786-4b54-8a16-f71f60e19997"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8490914b-7525-43f8-8061-5bd46aa85ac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2887a5e-c200-44ab-a7b0-7cddf12a782c"
                    }
                  }
                ]
              },
              {
                "id": "edc23b1a-56ac-4d33-82cb-d9923bd29387",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef793d59-c544-4481-9e3c-771ae4916070",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fbbd5e-65dc-46d3-b46e-ef54c183df00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7fb4af8b-51c4-4275-8ff2-86a45f7e64a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded7d5c-b0db-4f9a-b7cd-6154de13d535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47da72f5-4672-453b-adfd-8b610373b687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "732ee373-be70-4d17-b2cd-7fcf30493362",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "668b9a20-aa1f-4eb8-9f81-2d5db719c9a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccce323b-5aa8-4ae0-8c04-72e0afeb17ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ad124be-abb0-4147-9986-127c301aa49f"
                    }
                  }
                ]
              },
              {
                "id": "91755fb7-9bd9-4b67-a7d3-49f397c23dc7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3cdb72bb-c21a-49de-bed0-9adc7bc43c6a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04703b4-81ae-44c5-aafc-764ede0c4e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1e038722-72ad-4d50-9b5b-ed9d214bf328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873799b5-50ca-4988-8f5a-c2a7594c4c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3aaa66-6e97-418d-baa1-1d6de81d8304"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "71488d2d-8345-4a98-a6a7-93d6cba54652",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29361970-1720-41e6-a6bd-5db2bcb2c8ef",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17c07784-db81-4a12-b184-a4cdd9fe75a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9c0eaddc-aead-4b8c-a0ad-54e0c47525c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "471834bb-544c-449c-8038-7c1df6608305",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71c62a85-a017-48d9-b942-cd5ebc9cefcc"
                    }
                  }
                ]
              },
              {
                "id": "ac552ff8-8e84-4e51-96a2-4b5bd78312ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70a69272-d999-452b-8ed6-2520f6b3e08b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95a46cee-23b4-42f3-a4ad-45502a047e96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f336f73e-9328-4202-83fb-71d75bca2dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79e372b7-52af-4c54-80dd-9e7f8b68bcd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75037144-4242-43c5-afc1-37c4e1f9bf4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1ef5ea03-5338-4de2-8043-fa756b607ec8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fe236f5-4740-41ca-8f09-ecbf0fd1105f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e282960-aef8-4e22-90dd-340d0da15552"
            }
          }
        ]
      },
      {
        "id": "6c299ce4-fea2-4f4f-b7cd-b76336ca75d3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "01dc1058-c152-4d6b-b772-458426223f90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89813b0e-fe9c-4170-b3e3-74ad0de36787",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9030282-4b7c-46da-a6e6-804014db4acd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2de94be-9356-4562-ba9a-fe80faa7c92b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd3b9016-8c65-4a9d-9e61-ffff8dab82bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cee949-0e27-44ef-9643-96284cc9026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26d3907a-4bbc-46c7-86b8-7be8413a3767"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5935433b-c4a0-4309-afbb-0e28f7d9d64f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c7b32e1-59f9-4fad-b638-03302cccf1ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4181966-5854-45f6-bf14-cc01df8e02ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1612adc1-54d6-4923-a579-7da224809fd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1ed52f7-22ff-49b2-a42a-f952c9be0a8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "940eda95-d509-4e56-87e3-2e4031e3b93e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "636374d3-78e0-4c27-954f-88d03d9d105f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e23bee0-1517-4cea-b9ce-1cd2afe4bb28"
            }
          }
        ]
      },
      {
        "id": "377f2a0a-9389-452f-9b90-44333dc7a4f0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1c7ef037-f9b5-40bb-9b26-711d7dcc47b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d723907-7965-4e6b-9d36-af876a15f664",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d05dfb91-23b5-4439-ba0c-e80cf1d32ae1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f46466-0a98-4ade-a38a-0841508d8597",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3464a02a-4a6f-4058-8ae6-04ee3f290f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1851ee-769c-4c50-a798-618c26f939e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "051b31c1-7e5f-4dc3-a5e5-c85eac7d7d74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e33d272-f24e-4296-8f65-0af3c7d56b1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b8ac53a-2ce7-4c61-ac41-e3830448cbd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62bafe5b-764b-4592-b87d-a14946fa5286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f368211-8d93-40a9-af75-5af18783e06f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "490ca11c-f4ea-42bc-a862-13fa5a63dc6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f99e8687-55fb-4053-961f-196e6624d0a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e8b50c3-cd8e-439a-8185-1e316fa18c73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dce0b590-32f2-45b5-b4dd-6ace066f7758"
            }
          }
        ]
      },
      {
        "id": "a499884e-9692-4864-a019-9f319d93c109",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0e9ccb75-00df-4791-a3ce-4c5700a16cd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fae09f4e-3ae6-447b-8285-13d0e9f952de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48f8e036-f6cc-4387-a121-79fe21e06700",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70caa27-0236-4018-85a5-b28a517acf55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38dd7bc6-8f68-41d1-918b-eeee115d242d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e7723a-8edf-4b50-b4c0-ad387af77e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f93894ed-ad9e-416f-afe6-c82caacf7d0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae7da322-797f-4036-b567-cadb3a6ae89d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96462eab-4270-4242-98c7-dbdb1b0a4e34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1688e96c-3db9-4c01-8255-058f1861e75b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d574290-5718-4cf6-a3b2-a04bba4a8d15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dec5db7-0328-40ba-b01f-14f8b86ddc3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da18e238-be86-4051-9d16-be23cab3d2eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a56f8cc-61f6-4b71-a210-b2dd85082da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24bfb923-d37d-44c2-bd00-344c5f4f6068"
            }
          }
        ]
      },
      {
        "id": "5a745880-d16e-4352-9900-e27a405e00de",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78795d5e-0723-4aa0-8e1d-e0d69a509f01",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d670e21a-510b-4da4-abad-755b04c0887f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7a41a3c6-93a3-494f-92af-5a2e45f13cfe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ab7d43b-9351-4cba-80c0-e630a56901ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "761d2873-f670-4c95-9aaa-72e7a6923bf6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.75396825396825,
      "responseMin": 7,
      "responseMax": 602,
      "responseSd": 43.196613349750976,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725324122316,
      "completed": 1725324134196
    },
    "executions": [
      {
        "id": "4c48ec0d-166f-4888-b0fd-13fbb7087219",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6aed41e7-e063-4e50-9bd4-3146297bbfc0",
          "httpRequestId": "2f5ef35a-5e3a-498b-a5fe-5e245e7e8ae6"
        },
        "item": {
          "id": "4c48ec0d-166f-4888-b0fd-13fbb7087219",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9f26ce61-1aa5-47ef-ab40-184284de4f39",
          "status": "OK",
          "code": 200,
          "responseTime": 186,
          "responseSize": 0
        }
      },
      {
        "id": "ff671dba-4c97-4334-968b-a7acec1ab9f9",
        "cursor": {
          "ref": "bdf6b1e6-507c-4d81-abf9-8a1db792fa2b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d73628da-a52a-4e8f-9444-7d1d0bd91d89"
        },
        "item": {
          "id": "ff671dba-4c97-4334-968b-a7acec1ab9f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7d410140-0a5a-4d94-9b74-1d6f720f5e81",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "3e48151d-ecee-42cc-95a8-4bcce09a585e",
        "cursor": {
          "ref": "7c3e72b2-bb7d-4a0d-9853-d49c9443f03b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "59fe705c-54dc-4d8a-80d7-9efe18f17130"
        },
        "item": {
          "id": "3e48151d-ecee-42cc-95a8-4bcce09a585e",
          "name": "did_json"
        },
        "response": {
          "id": "61d27cbd-6cd7-4469-bed2-1ba053612ade",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4f7174-cc7a-459d-95d5-c8ca8c6b45a5",
        "cursor": {
          "ref": "6c853d46-2a53-4fb3-8e3b-1202a0b1feee",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a50b8286-7798-40e0-a39d-a79016945702"
        },
        "item": {
          "id": "6c4f7174-cc7a-459d-95d5-c8ca8c6b45a5",
          "name": "did:invalid"
        },
        "response": {
          "id": "2640fd4e-d458-4ee0-a2cf-0c62f04c0f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4f7174-cc7a-459d-95d5-c8ca8c6b45a5",
        "cursor": {
          "ref": "6c853d46-2a53-4fb3-8e3b-1202a0b1feee",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a50b8286-7798-40e0-a39d-a79016945702"
        },
        "item": {
          "id": "6c4f7174-cc7a-459d-95d5-c8ca8c6b45a5",
          "name": "did:invalid"
        },
        "response": {
          "id": "2640fd4e-d458-4ee0-a2cf-0c62f04c0f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653c8f47-04cb-4c7d-acaa-956c75756493",
        "cursor": {
          "ref": "38b166b3-2ead-4610-bc46-c94ea2e11638",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b428ba9-638b-41e6-afd5-231e6de7e14f"
        },
        "item": {
          "id": "653c8f47-04cb-4c7d-acaa-956c75756493",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "58b360d6-01a7-49fa-b5fd-07657e5029c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 135,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d253d7-688c-446f-b787-8ef1d7c686f4",
        "cursor": {
          "ref": "e1349cce-2c8d-43de-847d-5c1780cc08e9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99e69353-a515-4fe9-8b3d-972003fe0f84"
        },
        "item": {
          "id": "16d253d7-688c-446f-b787-8ef1d7c686f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9aa78dfc-6336-462b-bad5-88fb3c329227",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38744e15-2552-4593-92db-44f7f72daa33",
        "cursor": {
          "ref": "07a401e4-ace1-4426-9015-82287ad0da79",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f3a164e0-3fd0-4770-a57e-2c3d940013e1"
        },
        "item": {
          "id": "38744e15-2552-4593-92db-44f7f72daa33",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "32c77d17-a6f0-4f3a-ad03-e841697b9543",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c25666-2682-491b-8c00-efeb6e5c8c17",
        "cursor": {
          "ref": "c9faf2c4-690b-42b3-856e-edd8a25cfcbd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ee1ff5e9-bb93-4393-b42a-a326691aeb21"
        },
        "item": {
          "id": "95c25666-2682-491b-8c00-efeb6e5c8c17",
          "name": "identifiers"
        },
        "response": {
          "id": "78b05143-330d-4d75-85bd-3b783212becd",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f7019a-0f23-4864-9cd4-357e842607a9",
        "cursor": {
          "ref": "ba90b897-dca3-4791-8243-eb26f71fe5dc",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "81bba8c8-bbcc-424d-8d48-b08bd0d44842"
        },
        "item": {
          "id": "b2f7019a-0f23-4864-9cd4-357e842607a9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62752e27-bb7c-4cac-b4e7-c803b888b3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45270e08-c9d5-4b9c-a2e0-51e16b4452c0",
        "cursor": {
          "ref": "b417e96b-471d-4fdb-829c-6d848220c9b3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3bdf8845-7444-462b-8116-49cd39fc8c34"
        },
        "item": {
          "id": "45270e08-c9d5-4b9c-a2e0-51e16b4452c0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7389c5fc-46e7-4343-90e9-a05d73657f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc477d1-0ae2-4f38-b951-e0e50dc7112b",
        "cursor": {
          "ref": "b02776c1-dbc7-4f75-8c40-1eba1f40d10a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd0a239d-d218-4f44-806b-6ef0c70c4782"
        },
        "item": {
          "id": "afc477d1-0ae2-4f38-b951-e0e50dc7112b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0d4242ed-47cf-4f89-ac0c-489c24e41df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1547ecb1-f488-48b5-9f44-3bf15cc9c13c",
        "cursor": {
          "ref": "e88b65e1-e3e6-4589-bd83-4e44a2f36f26",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bd010227-023b-43d6-b572-afc8557ec12c"
        },
        "item": {
          "id": "1547ecb1-f488-48b5-9f44-3bf15cc9c13c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9d1b0a69-5400-4fa8-9efe-9e2f20d685c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cab153-979e-47c7-bfcb-d6580cd66127",
        "cursor": {
          "ref": "5fc03045-5f26-4d69-bab1-96bb431a4d5f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c460a5f7-d4bb-45bd-9f5d-f998351f312b"
        },
        "item": {
          "id": "d7cab153-979e-47c7-bfcb-d6580cd66127",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "20a91d41-9e6c-4126-9c17-3f1cf484ba0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac271231-5666-4ffa-8996-fd6e11efa361",
        "cursor": {
          "ref": "f354622b-fa03-4b36-bad3-4479d11dec53",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0f5c653c-d5cd-4ecf-8986-db4d5e7101f5"
        },
        "item": {
          "id": "ac271231-5666-4ffa-8996-fd6e11efa361",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3562d557-87e8-49b1-94a8-1cfe72c82b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ca39ab-f41f-45c6-9fb8-0351a3b6fd2b",
        "cursor": {
          "ref": "507c7d93-879e-4deb-9c26-2709beb79e98",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bb0d388-b217-4732-a5b7-8ecc5eb63152"
        },
        "item": {
          "id": "40ca39ab-f41f-45c6-9fb8-0351a3b6fd2b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "56ba7b5a-ee3a-4669-93f5-f5f28193a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51308dc6-e189-46ad-81cb-2da0be572d4a",
        "cursor": {
          "ref": "2cf8b7af-9d35-433c-b8e7-a4a9bdc4399f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d7371f1a-12e3-4763-9b05-8bfb142694f8"
        },
        "item": {
          "id": "51308dc6-e189-46ad-81cb-2da0be572d4a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2cd4f71-4173-42f4-92ce-35eed12d1f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252fa407-5e12-4aac-b68b-c33a884c7fe4",
        "cursor": {
          "ref": "1e425b47-8914-41be-b1d3-b2ac8d9f99e6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "23a494f8-053e-4262-bb20-4b9fc8e4ee9d"
        },
        "item": {
          "id": "252fa407-5e12-4aac-b68b-c33a884c7fe4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5aa27022-ce5e-4b9b-b8d6-655a1c78c42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404b4d65-750b-4450-8976-0bc1d24a28f5",
        "cursor": {
          "ref": "e085dcb3-0e1e-4e92-8cf5-075143b37ecd",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b34345c-ed63-4528-9b46-6f3c2e7cc6f9"
        },
        "item": {
          "id": "404b4d65-750b-4450-8976-0bc1d24a28f5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2bc4df6b-d019-4d75-932d-a2598682ce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ac8009-c440-4638-a21c-fc250ccb4676",
        "cursor": {
          "ref": "f9c33cf5-7e1d-46cc-a2b5-715dc4769043",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c83af9f-962a-4d0b-ad0e-1b29569fdb59"
        },
        "item": {
          "id": "05ac8009-c440-4638-a21c-fc250ccb4676",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "46505ace-7f45-43e8-a568-b2d2ce2b6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa92a901-929d-4a6e-afe6-4977553260fc",
        "cursor": {
          "ref": "fb7e1ee7-4915-45d2-9af3-a5fe063d7887",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e01aeeb6-a120-4203-9264-92bf5b5b0e72"
        },
        "item": {
          "id": "aa92a901-929d-4a6e-afe6-4977553260fc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d334d9af-9f9e-453a-8844-682750d6bcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ecd96d-3c27-4f49-b840-558c0eb7cbc8",
        "cursor": {
          "ref": "bd1e034c-83f2-4b82-a8ce-e544b2fb41d3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5a5b3e17-db86-438b-a21f-961f77b20a81"
        },
        "item": {
          "id": "35ecd96d-3c27-4f49-b840-558c0eb7cbc8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "085df753-0227-4a57-8c04-23cc5f03dac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72febccf-16f6-48c3-ad57-f1138b58aa54",
        "cursor": {
          "ref": "55950a8b-f55c-41aa-b01b-5ec384989cb9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae20b433-40cf-4173-bbb3-c90388509368"
        },
        "item": {
          "id": "72febccf-16f6-48c3-ad57-f1138b58aa54",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5d6ab459-e068-4d59-903c-277b47a011ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6dc699-2ee6-4786-9a20-3191192a9e35",
        "cursor": {
          "ref": "76014309-171d-4061-a600-c71ec7ef52dd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "07005170-948a-4e10-beaa-ea009dc6a374"
        },
        "item": {
          "id": "ff6dc699-2ee6-4786-9a20-3191192a9e35",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7001bdfb-b2c0-4400-ba58-8f1e69b8c44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef67500-b989-4756-b15d-9a45e10623db",
        "cursor": {
          "ref": "76695e05-71c4-4d59-9631-9dd263d9654e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e151d8f-309c-4087-b632-cac4f98e356a"
        },
        "item": {
          "id": "5ef67500-b989-4756-b15d-9a45e10623db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "db0aeeb4-f231-4368-9404-e21f2a87f416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d21c72-18d5-4238-af30-7d5a6f3182f6",
        "cursor": {
          "ref": "b74b0924-9269-4ace-81bf-e041e38a41b0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "af5ac87e-3e3a-4f17-b63e-d6ffb0156b20"
        },
        "item": {
          "id": "c1d21c72-18d5-4238-af30-7d5a6f3182f6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5b4b2744-cb8a-48d7-af5b-20f706a952fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985a6b87-ca37-455e-b06e-37294e014ce9",
        "cursor": {
          "ref": "cd06123e-4f5d-42bd-8563-f5322a5dfc8f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "07c91b22-e2e8-4601-b206-8b5428d848de"
        },
        "item": {
          "id": "985a6b87-ca37-455e-b06e-37294e014ce9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "925f8b4d-a499-4e1c-8d1b-27edc9a6cd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75dc05a-8876-4f3e-a103-10ccfb492bb8",
        "cursor": {
          "ref": "b161fc6d-18a1-46f3-80e5-97e21477c502",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1d6e65d-8ff1-468a-b87e-27bb909b528f"
        },
        "item": {
          "id": "a75dc05a-8876-4f3e-a103-10ccfb492bb8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2dbef27d-29e5-4dfd-ba74-5e4d77ef3847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54b44c6-d524-4503-b827-ef8b35126297",
        "cursor": {
          "ref": "3b272e63-0a7c-473d-a3d8-61251c314b84",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "230ae6c2-2b53-4868-935f-b5b768f5a331"
        },
        "item": {
          "id": "a54b44c6-d524-4503-b827-ef8b35126297",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b8e94fab-87c8-43b5-b5c3-6e795d331ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dac92e-81f3-4052-9bc6-431470881637",
        "cursor": {
          "ref": "13e0734b-ac6d-4d45-b902-d7c65b0bdcff",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "951acf49-dd64-4408-a05c-287dfba051ff"
        },
        "item": {
          "id": "f7dac92e-81f3-4052-9bc6-431470881637",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "890a33dd-687a-4777-aa1b-c03ade7da031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577eab1c-e433-4a6f-ae51-1709ceb6d02d",
        "cursor": {
          "ref": "1245fd64-6f4f-4d32-a710-734984f1d961",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9e2d8cf4-df8c-4a9b-b84c-9e811fad23a6"
        },
        "item": {
          "id": "577eab1c-e433-4a6f-ae51-1709ceb6d02d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b856d9bc-76b2-4d0f-a826-479f4b78fc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f19f82-8cd0-45bb-b9f9-76b454609988",
        "cursor": {
          "ref": "6b7f7aeb-efb8-4f08-bc86-844992b72953",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7845b703-6332-48da-bcdd-78864ed6501c"
        },
        "item": {
          "id": "61f19f82-8cd0-45bb-b9f9-76b454609988",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2b0d953-956c-40bc-9290-2a5c649a2526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c011b684-87bf-4259-91b7-be028402563c",
        "cursor": {
          "ref": "a68478bc-a9f4-4aba-a299-5852c4b40a48",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0c09f2cf-b77b-4c97-8c0a-b591bc71f8f8"
        },
        "item": {
          "id": "c011b684-87bf-4259-91b7-be028402563c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cc10915e-c95a-47f9-ac04-4de09ed8d180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef342422-9a1f-4700-a8f6-43774a78c100",
        "cursor": {
          "ref": "86ced03c-ef6f-4552-be3f-7cc44c97796a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc9d278a-3f06-4e80-a2c5-99622cc19cf3"
        },
        "item": {
          "id": "ef342422-9a1f-4700-a8f6-43774a78c100",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3f98f36e-e702-4c7b-a59e-04b168b76b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1eee33-d35c-4901-9c97-b0aa91a82e6f",
        "cursor": {
          "ref": "03cb5d90-a043-47a8-9bd2-510ca77535c8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3580d191-eb94-47ef-ba2a-c59f6e455703"
        },
        "item": {
          "id": "fe1eee33-d35c-4901-9c97-b0aa91a82e6f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ff775f37-95a3-442e-8c4d-a8e2c5455c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930e6da9-2119-4b3e-bf52-938d8ec7e278",
        "cursor": {
          "ref": "977a4ba2-a0cd-4f12-9ca2-3909a26fa558",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb13cb40-9488-4ef5-818f-3a3c50c9df7a"
        },
        "item": {
          "id": "930e6da9-2119-4b3e-bf52-938d8ec7e278",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0d3b27ad-6779-4cf1-926e-4de852358f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe55d63-5912-4cac-a684-4a38bb5ee157",
        "cursor": {
          "ref": "b077c785-0d0b-46d9-97a1-da1c4bcc1cc2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "831b7e91-697f-4f1e-95c0-477214e55522"
        },
        "item": {
          "id": "9fe55d63-5912-4cac-a684-4a38bb5ee157",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a5cb3672-df1c-41ab-84dd-f894b506dfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89aaa47-c593-4236-adb7-fe984256d5d7",
        "cursor": {
          "ref": "76c119e5-a444-4d59-80f6-0269903f6fa4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e4a58e65-6193-47e1-8614-7a0696963254"
        },
        "item": {
          "id": "c89aaa47-c593-4236-adb7-fe984256d5d7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e27ea82e-624d-448f-a523-6176cb48fe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19d343d-876c-4cd5-b6c5-c8dc1ae6038d",
        "cursor": {
          "ref": "b6470b56-e7fa-4711-b805-3f3489bd01fe",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aaddaabe-4afb-4705-b862-1f88108342d4"
        },
        "item": {
          "id": "f19d343d-876c-4cd5-b6c5-c8dc1ae6038d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4b7a8eca-4f91-4829-874b-b31c75c101f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84fc4ff-7737-4a68-b970-7ba8beb19235",
        "cursor": {
          "ref": "b470d568-c573-4958-8891-38178271820e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db2dde1b-be74-4b76-aad6-7e24f108dd5a"
        },
        "item": {
          "id": "b84fc4ff-7737-4a68-b970-7ba8beb19235",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3c5a321e-3888-4a52-b0d3-ee3ce6b168f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17db3cf7-b2b1-4e47-bda1-369a5d61189b",
        "cursor": {
          "ref": "1dea1ed1-5db9-42a2-81ba-2f16881d53ba",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bbc4a6f1-7b6c-4a20-8048-aadf35a4ba8d"
        },
        "item": {
          "id": "17db3cf7-b2b1-4e47-bda1-369a5d61189b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8d76d7df-d876-425e-a89b-320561ba9fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc19c7ee-1631-4f6c-8fd7-84e36085ca56",
        "cursor": {
          "ref": "cfdb89bc-4b32-4e57-942a-f3969742ec07",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4dc05f4d-6202-49c2-9736-757204d30d03"
        },
        "item": {
          "id": "dc19c7ee-1631-4f6c-8fd7-84e36085ca56",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cddeb19b-c8ed-4802-a69d-85d707146fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c6b77b-c602-463e-ae78-58ac8f95ff93",
        "cursor": {
          "ref": "a6e995c6-3cbd-41e9-9bd8-88f8ebec00f1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c653d447-174f-4c84-aa6e-f7afbbe8ab55"
        },
        "item": {
          "id": "29c6b77b-c602-463e-ae78-58ac8f95ff93",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e720c188-6732-47d7-a487-0f521ef845e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478557fa-3b65-41b7-a580-7ae63c739a6c",
        "cursor": {
          "ref": "4f426f1e-e3ad-426d-8079-386c26811756",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a5a75760-c9a8-4625-85ef-274e7aa903bb"
        },
        "item": {
          "id": "478557fa-3b65-41b7-a580-7ae63c739a6c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ac43ed3-0764-4dfa-bdcd-ce03fafe7591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58fac33-7e9c-4b48-a64c-1863b2f9fedc",
        "cursor": {
          "ref": "2312e141-eec5-427e-8722-712ef2224b50",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "abbdd1e3-e0c5-4213-8988-bdbb8106c62b"
        },
        "item": {
          "id": "c58fac33-7e9c-4b48-a64c-1863b2f9fedc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3a159be7-b33f-4b95-9442-59cda754d4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82908739-0e0a-4266-b86f-8ae44b458966",
        "cursor": {
          "ref": "aecd68a3-9969-4edc-9a39-4080b1ed8917",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3d54ca7b-d996-4667-b1c0-5a87db4e2573"
        },
        "item": {
          "id": "82908739-0e0a-4266-b86f-8ae44b458966",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7ef17437-43b7-4c52-bc8c-6cd4114b0db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1bb273-120f-4600-9229-880805c821ed",
        "cursor": {
          "ref": "a7c6d838-1e82-4a75-a459-b84da8eef8a0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ee7a6332-d9d4-4893-b491-84405c9225d6"
        },
        "item": {
          "id": "cd1bb273-120f-4600-9229-880805c821ed",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "40000e37-dec1-445f-b9fd-bbda1d81764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedc3aa3-f0c2-4b59-8ce6-bad800192ffe",
        "cursor": {
          "ref": "dac742ea-f0b7-4d6a-b3d6-701ce04ca567",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5c9323a5-776e-4ca5-8bf0-276fac423903"
        },
        "item": {
          "id": "fedc3aa3-f0c2-4b59-8ce6-bad800192ffe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a33888be-66f3-411c-9be6-c7be9eab8cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dde65db-efbc-452e-ac81-09819f157f7c",
        "cursor": {
          "ref": "1eb748f3-cc50-4bc6-9bdc-4ae5cc4e7c01",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4b0ddafd-1008-45e7-9678-48957b1190e9"
        },
        "item": {
          "id": "1dde65db-efbc-452e-ac81-09819f157f7c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "edcbb489-f28e-4cac-b0f9-e0f1515838a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b994b804-6920-439c-9382-2481bc82b804",
        "cursor": {
          "ref": "a3eca7e2-619f-42ae-b10f-429d4984afe7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "324796af-e853-4352-bda2-050c188a96c0"
        },
        "item": {
          "id": "b994b804-6920-439c-9382-2481bc82b804",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9d04d81a-ac7a-4dd6-b064-8d9d3f93d855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10584f52-5af3-4afb-9f33-66151fa7d04a",
        "cursor": {
          "ref": "2a5155ab-cb34-4ec8-949b-f6d15b584b3b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "36558d2c-5434-4b8e-96a0-906516f0e643"
        },
        "item": {
          "id": "10584f52-5af3-4afb-9f33-66151fa7d04a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8d50a604-f48e-493d-b171-c11922b1e3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6a4322-1850-48ff-87bf-d33082a1209b",
        "cursor": {
          "ref": "3c7969f7-0a10-4c91-aa83-e9494aa3e31a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "111c27e1-2476-458d-90e0-cb08598e5844"
        },
        "item": {
          "id": "2b6a4322-1850-48ff-87bf-d33082a1209b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cf676719-fd62-43a6-90af-bdc7f60fd3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b110d8ce-1942-409e-b006-8931a6035f77",
        "cursor": {
          "ref": "97a448c2-0785-4076-b745-369ea324d322",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9fb7e20c-36b4-40d7-9c54-6a23dcd2ae21"
        },
        "item": {
          "id": "b110d8ce-1942-409e-b006-8931a6035f77",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "43a386af-c079-46c2-afc5-c30ac05e7be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73189600-86da-47e4-bcb6-a4f4614b3336",
        "cursor": {
          "ref": "7ee500cf-6e77-498c-8b89-f51f9bde1d87",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3eb7d591-e818-4829-997d-5b6e7ccc478c"
        },
        "item": {
          "id": "73189600-86da-47e4-bcb6-a4f4614b3336",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e597d6dc-4571-4714-9503-2641b5e72350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22713f3-bc83-400e-9857-14053c0d38f1",
        "cursor": {
          "ref": "85ec6428-e3de-4469-8194-8d045e9c2c47",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "50ee8119-88d0-40ea-aef5-61698f256473"
        },
        "item": {
          "id": "b22713f3-bc83-400e-9857-14053c0d38f1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5e97318a-d3cb-4293-8466-82842d4606ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b609d17-ce6e-43b6-9a3b-a54b8722271a",
        "cursor": {
          "ref": "6b8f1cbf-ed71-4703-a07b-bc01a78d12c4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2de82e2b-60dc-4c9e-b20a-fffa6dbfc62f"
        },
        "item": {
          "id": "3b609d17-ce6e-43b6-9a3b-a54b8722271a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fd144a12-239e-496b-8b4c-4740da404766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a91c64-df9b-4395-8a92-61fb09408498",
        "cursor": {
          "ref": "a8a32e43-d90a-430d-a704-cb7cbbc68173",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "73af5eef-d70e-47e9-a14f-b6b3cc5de313"
        },
        "item": {
          "id": "c2a91c64-df9b-4395-8a92-61fb09408498",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e852160a-71b7-435a-b1ae-bd08ada1c38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e889d343-c9c2-4ac3-b6d1-4b27f8842d69",
        "cursor": {
          "ref": "36231959-c690-40aa-b3c7-1c4b7a5a3d95",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "08e78e96-e8d5-482a-838e-870a89bd11af"
        },
        "item": {
          "id": "e889d343-c9c2-4ac3-b6d1-4b27f8842d69",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "163efc5e-e385-4b26-b1b0-6ab4371620e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aeea19-b0c1-4a5d-ba5e-01e907137774",
        "cursor": {
          "ref": "33deefa7-d3b3-4e8e-8fbc-bd10175e38a9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5cc560ca-30c5-4854-9a3a-beb5b55c5615"
        },
        "item": {
          "id": "18aeea19-b0c1-4a5d-ba5e-01e907137774",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c91c8602-2859-43ef-b138-c3c0dbc5463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624b23ee-2fe3-4080-81d1-ee2f681f72b8",
        "cursor": {
          "ref": "19e35473-bec8-415a-b1f1-31a75a1c12b9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c6c089a7-4815-46ab-8bae-4341162d5929"
        },
        "item": {
          "id": "624b23ee-2fe3-4080-81d1-ee2f681f72b8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d411887e-9429-46ed-8da4-47d5a341dfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b22315e-6d18-4816-89fa-2447a4d07ba4",
        "cursor": {
          "ref": "a194eb95-a338-4593-83f7-9668f2d8bbb3",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "be72d3be-e6b1-4975-a40b-afeef07dd53d"
        },
        "item": {
          "id": "2b22315e-6d18-4816-89fa-2447a4d07ba4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb6d3479-f341-430c-ae09-1e9fcb2caf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e3b92d-6e02-4720-97d9-9e8fcca995d1",
        "cursor": {
          "ref": "9f40bcc8-179e-4315-aa09-2d1a79b4460c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "51ab3e46-3bb6-4307-b3b4-1dfb85222e74"
        },
        "item": {
          "id": "35e3b92d-6e02-4720-97d9-9e8fcca995d1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8fad2992-9ef1-470b-84bb-90a5b7b9f6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9bcce4-d519-499a-9275-e2636b3d0e77",
        "cursor": {
          "ref": "bef1d8d2-7f70-4e33-9f73-486c4d2cb886",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "792abb42-5174-49dc-9252-b92f59b3d5ae"
        },
        "item": {
          "id": "7a9bcce4-d519-499a-9275-e2636b3d0e77",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6470a27a-1f4e-426c-90fe-cd7d38215152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb87c0cf-229d-4dab-990d-90f2019e2b43",
        "cursor": {
          "ref": "48f0f112-90f3-4a91-8b73-3eb485a30853",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "66814898-dd70-4c39-aa5e-e70535a56770"
        },
        "item": {
          "id": "bb87c0cf-229d-4dab-990d-90f2019e2b43",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4d17bcf6-f292-4a38-aa19-e0a7ced1562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba84dc24-1ab2-4513-b945-d67bb25f3722",
        "cursor": {
          "ref": "7a2b3e92-ab2a-44ea-89f3-b3968dd41157",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5b1283c8-18a9-4823-9f8b-0646b2433631"
        },
        "item": {
          "id": "ba84dc24-1ab2-4513-b945-d67bb25f3722",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3503c048-0a1b-4f26-a5c2-4e59a22d1eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0424de31-c183-4891-9572-fd38f253a756",
        "cursor": {
          "ref": "2c7d4a75-47ea-48a2-95ad-71ef61734e4c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "be068c47-19e9-4238-bd5d-1b5d21973368"
        },
        "item": {
          "id": "0424de31-c183-4891-9572-fd38f253a756",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c5354ac5-024a-4c71-9c67-22c46f6d641c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c8ddea-2458-46d2-9bf0-f8d7706d5e31",
        "cursor": {
          "ref": "40208e86-b1c3-455f-892a-62609faaed57",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "91a440a5-dd0c-45dd-8fa4-0654baca0ee4"
        },
        "item": {
          "id": "21c8ddea-2458-46d2-9bf0-f8d7706d5e31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c61fc071-1bc6-49d8-85d7-120e126bc086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cf8c1b-845c-4b97-bdd9-9af556e59312",
        "cursor": {
          "ref": "d8928f6e-0ba2-4ee9-9dd5-cdacc3a6d3a4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d6b159b0-4633-425e-be08-59a3755820f5"
        },
        "item": {
          "id": "64cf8c1b-845c-4b97-bdd9-9af556e59312",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bef08cd3-5509-4ee8-92c2-e470a085fa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266fcb1a-c861-4dbe-a1e3-4018add38dac",
        "cursor": {
          "ref": "60f7c4c9-99ba-405d-9224-207a87377b23",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6565e4ae-e611-45a1-9a04-4795cb20c286"
        },
        "item": {
          "id": "266fcb1a-c861-4dbe-a1e3-4018add38dac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8be4200f-4e74-4a16-baa2-67ca510d1a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3f6707-3c38-44ce-9b9a-f91343a5dd05",
        "cursor": {
          "ref": "6ac45462-f986-490c-86ac-cd0911ebe491",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4bc6ff61-417f-4f84-b6e1-5b515c19c9e1"
        },
        "item": {
          "id": "4a3f6707-3c38-44ce-9b9a-f91343a5dd05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6bd20184-eae4-4b25-874e-a9ee45cb25c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36535a5-b681-4d16-9076-cd29bfbb678a",
        "cursor": {
          "ref": "eb3fedf9-7b96-4995-8bd6-a9aad8e653a2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d916b6c-19ca-4134-a6a5-ce29f7e44422"
        },
        "item": {
          "id": "b36535a5-b681-4d16-9076-cd29bfbb678a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1d1afa39-c544-4def-a7d7-281ec9d97173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7afed7-f08d-499e-9c44-86439f3b6304",
        "cursor": {
          "ref": "5e23d44d-de5d-4648-a7f3-8e36450ff947",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e671d505-f7a1-40ae-a266-d10fc7b234e2"
        },
        "item": {
          "id": "ac7afed7-f08d-499e-9c44-86439f3b6304",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "701b8c06-c88a-48f5-beb3-23f00788bbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3937e-abc4-4bcb-a2bf-83d9abacc8c8",
        "cursor": {
          "ref": "9a93d3a3-7532-4e26-8d71-e0fb71d430d7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2b0aff30-ccfd-4c94-afd3-3ec48fb9a7fb"
        },
        "item": {
          "id": "b2c3937e-abc4-4bcb-a2bf-83d9abacc8c8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aa1a3916-7905-43df-b455-fc6e31d7990b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11002017-06dd-4ffa-911e-51e4af768f88",
        "cursor": {
          "ref": "10c98272-2e67-4487-9a02-7aeb961bbbd7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "216498f4-8e78-449b-9781-a02aa8d80cd2"
        },
        "item": {
          "id": "11002017-06dd-4ffa-911e-51e4af768f88",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "33ca5267-34c9-4041-ad36-62d3412b4560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd43271-c7ac-49cd-b38d-bea6c604d6c7",
        "cursor": {
          "ref": "426519d0-d46d-4d7e-ac1a-1c588f8f60b9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "de1fed93-a3f4-45db-9cd2-bae60c6b4161"
        },
        "item": {
          "id": "1fd43271-c7ac-49cd-b38d-bea6c604d6c7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f3a4eb00-033e-4e96-b082-e0dc38110d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd824f7-ddf5-468d-ad19-8b40b68729be",
        "cursor": {
          "ref": "dd3d8092-ce94-4dba-b49e-7d55c60d6c24",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "83b96aea-e086-4a8c-bc34-c95159089834"
        },
        "item": {
          "id": "9dd824f7-ddf5-468d-ad19-8b40b68729be",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a1580996-4c17-4229-8ff5-6775c3d7f1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6fb78-3a12-41e6-9a39-a3d90d286737",
        "cursor": {
          "ref": "0b99ec11-4a3e-40a6-872f-993fdf5a4c1c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "34f1488e-d548-49be-b2e4-bb2a2f0c069c"
        },
        "item": {
          "id": "e4e6fb78-3a12-41e6-9a39-a3d90d286737",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ee66376d-c07a-4c5a-867b-e1dbba7ade3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044714fd-cac8-4309-b6fc-1168ef53576e",
        "cursor": {
          "ref": "a091eae8-e7a7-4458-a659-80991f1bf3b6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2c9e4520-6063-4948-966b-f61b7022f766"
        },
        "item": {
          "id": "044714fd-cac8-4309-b6fc-1168ef53576e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8cf2980a-3f7b-49da-aa9c-2fa52b88430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46177d17-d862-4f5f-9ea0-fe3635cbb871",
        "cursor": {
          "ref": "d58cec37-5443-4c91-b9c3-bc90b1785bb8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "509a9073-24a8-41dc-a17b-c6fcbfe653c2"
        },
        "item": {
          "id": "46177d17-d862-4f5f-9ea0-fe3635cbb871",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "851cabf9-803f-4e4b-84db-72fb49065c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d26035-cbd9-420f-98ea-8b227125b004",
        "cursor": {
          "ref": "3a010e86-cf91-43c6-8042-4d32d4052290",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "924300d1-3e60-4388-b5ca-c416c900d70e"
        },
        "item": {
          "id": "00d26035-cbd9-420f-98ea-8b227125b004",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "222c2d9a-05cc-4be0-bb90-180f5c3c0035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3256dc40-5c77-4436-9820-a4f4faf7f054",
        "cursor": {
          "ref": "ee510800-7a41-415b-8b9f-e3acfbca3961",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d9c2754a-e8e3-4bf9-b136-93bcd0434544"
        },
        "item": {
          "id": "3256dc40-5c77-4436-9820-a4f4faf7f054",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6a8a4f4e-1489-4b0f-9acb-32f2a3146182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fba65e1-8b58-4920-bfa9-83bb74f582ee",
        "cursor": {
          "ref": "2922a681-5042-4948-9b91-c41e32c96b7b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1fccf606-3710-4d6a-b05c-360524313601"
        },
        "item": {
          "id": "3fba65e1-8b58-4920-bfa9-83bb74f582ee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ddc62716-ef7a-4d71-b235-70cfe77ab5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ef457c-9f31-4165-8ed9-467b692aec5b",
        "cursor": {
          "ref": "6dd11e19-87df-4b2b-a26d-debd9ba0c068",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6ddbeeb4-d187-41ac-9101-e212357f50b7"
        },
        "item": {
          "id": "01ef457c-9f31-4165-8ed9-467b692aec5b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0c3fa101-3368-487a-83f4-b22196c42d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f90ec2b-a78c-448c-80b3-a6b20e673f92",
        "cursor": {
          "ref": "ff3339d0-69ff-430c-be38-1dd37762d4c7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "be524913-0ecb-4c84-a6be-b908fba9d9e5"
        },
        "item": {
          "id": "8f90ec2b-a78c-448c-80b3-a6b20e673f92",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b84a9797-2129-4462-aacf-bb9c2196d01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4602bfc-b871-4106-a5bc-855b6e732dd3",
        "cursor": {
          "ref": "4df106c1-b45d-4687-beae-00ae6b94577d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "32443df9-5085-4979-828b-2e422146233f"
        },
        "item": {
          "id": "b4602bfc-b871-4106-a5bc-855b6e732dd3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ab8609bc-0955-47e3-864e-34380f459f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b15c6e-5354-4a79-b5a3-34b38512dc5c",
        "cursor": {
          "ref": "19c81eac-aaf6-4e32-be03-aecbf98212e8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "783c70a6-1ee9-46aa-967b-f272bf73c89e"
        },
        "item": {
          "id": "76b15c6e-5354-4a79-b5a3-34b38512dc5c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "adb622f5-0c50-4231-84eb-8ad7f187aa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51a6c56-b94d-4646-97cb-5297c02eca64",
        "cursor": {
          "ref": "a57c9c01-73c7-456f-b4ef-3d405531eed4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a3535fa1-48d2-4ff8-a323-fa702fc2e242"
        },
        "item": {
          "id": "d51a6c56-b94d-4646-97cb-5297c02eca64",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a0085861-7dec-4af9-98f1-31fb700f89d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4136e421-6f37-4481-91d1-864e4c22d9b3",
        "cursor": {
          "ref": "9bb23bb6-f828-4743-ba56-eef6d8578957",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8a4d5b91-bb9e-44ed-99a4-1a590efef6f4"
        },
        "item": {
          "id": "4136e421-6f37-4481-91d1-864e4c22d9b3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a808d61f-21d5-4349-9e7c-f68c8a0160a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0fe339-f154-40a0-9705-7aa92cde58c4",
        "cursor": {
          "ref": "79e1d9ff-597d-445b-aa8a-98b7a81bf17f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "994a614b-d27a-488a-b1dd-fc759aa9806b"
        },
        "item": {
          "id": "9e0fe339-f154-40a0-9705-7aa92cde58c4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bbe83d78-e17d-4cb3-8416-527dd25c21ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53239f48-992d-4188-8c17-5f30e2becaae",
        "cursor": {
          "ref": "ac90e7e8-580d-4efd-b3d6-537df475b87e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c6b4f26c-2a1b-4658-90fa-49ee228b19d9"
        },
        "item": {
          "id": "53239f48-992d-4188-8c17-5f30e2becaae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "55ada316-e267-476b-9d8d-86702a05fe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9420257b-4ee4-41e7-824b-4d57501f0d59",
        "cursor": {
          "ref": "f70b68bd-8b1a-470b-9631-70fb56cfe55e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1e272b22-8801-4ad4-b490-ed592d4bfdfb"
        },
        "item": {
          "id": "9420257b-4ee4-41e7-824b-4d57501f0d59",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "19a618cf-dd10-4afa-9ffd-f3c144300f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c641e4bd-51e5-4d02-af8b-cec1aa126f19",
        "cursor": {
          "ref": "122fb9ab-45c0-467d-85b1-b46e678a2767",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4d2ae44b-b195-4abf-b465-8899e3aa8ea8"
        },
        "item": {
          "id": "c641e4bd-51e5-4d02-af8b-cec1aa126f19",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "51d3ce7e-bdb0-4be3-852f-c3d273a82bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34885abd-5289-4ad3-80f8-337b9f2a5e02",
        "cursor": {
          "ref": "9330c4f4-591b-4fc8-b1b8-7c7f75b3eef9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "644bf87a-22d9-41e0-8bb0-86f6fc06ba82"
        },
        "item": {
          "id": "34885abd-5289-4ad3-80f8-337b9f2a5e02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "86b6433a-084a-4269-9773-bc7c1afa2576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9456d10e-7959-4717-8a22-a3e6917ec682",
        "cursor": {
          "ref": "8f88e9eb-37ca-4bcb-80e8-c4c3e765d50a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2f386287-9efc-4931-bfc6-8521391c4d7d"
        },
        "item": {
          "id": "9456d10e-7959-4717-8a22-a3e6917ec682",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "554101ec-c4c6-4e4d-b365-8aa99bdfeb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce54d582-43e7-42ba-92ea-8b342bc89e5e",
        "cursor": {
          "ref": "a32104ac-fbc9-4f3f-b052-cba6d19d14d2",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fb5f7222-0016-49e9-9a23-45f4fad41a40"
        },
        "item": {
          "id": "ce54d582-43e7-42ba-92ea-8b342bc89e5e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f2c37f75-1093-444e-84c7-3dc392361acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39719488-6594-4afc-b10e-dbb850d11ae9",
        "cursor": {
          "ref": "d821d39d-5c04-4057-a279-b8b744e18170",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7b908c01-f722-47e9-b36c-a121a0edb5a5"
        },
        "item": {
          "id": "39719488-6594-4afc-b10e-dbb850d11ae9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "42072765-7629-4dad-933a-0177c690ece2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36de656-6af4-433e-a3b9-891f55843c8b",
        "cursor": {
          "ref": "f679fcee-2460-4372-9118-b44c9e984602",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "beacb398-2e8e-4f33-86d5-bf7f3607270f"
        },
        "item": {
          "id": "b36de656-6af4-433e-a3b9-891f55843c8b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f2c9ab5b-5865-4b87-8a64-4b3a3583d1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa5fad6-68ba-495b-83ca-541e4bdf8b66",
        "cursor": {
          "ref": "9336ef63-d086-4fea-88f5-b79df0fa03a5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d829dd66-905a-4f51-9f62-fffc119141b2"
        },
        "item": {
          "id": "eaa5fad6-68ba-495b-83ca-541e4bdf8b66",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "665f0dff-1f7a-4337-848f-dc34a0dd435d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414f6e1b-b2d2-4486-a517-d31e09ce7f87",
        "cursor": {
          "ref": "0cc5388a-48ce-4828-8775-e4312f407e84",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f38bdd25-f46f-4912-9a00-54fc0b7fc804"
        },
        "item": {
          "id": "414f6e1b-b2d2-4486-a517-d31e09ce7f87",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "04fcdcc4-bfe7-4b21-8336-51675c6a9bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de9c0fd-6b69-4db4-a2a0-8649ad32fa50",
        "cursor": {
          "ref": "46e74ba3-5934-41b2-a9cc-6bf12ee7d8ba",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a47d31b2-e12b-4b2f-b1ad-7a2408173ddf"
        },
        "item": {
          "id": "5de9c0fd-6b69-4db4-a2a0-8649ad32fa50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "57600623-e0b6-4dc2-bc06-cb262854a304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eba4ad-c22a-46c2-8495-81c132eb2cc3",
        "cursor": {
          "ref": "8a19beda-1853-4d9c-b1a6-698b0a09a35f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "df3e3f9c-fbc9-4c58-ad5c-51c46f2bc47c"
        },
        "item": {
          "id": "f8eba4ad-c22a-46c2-8495-81c132eb2cc3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c4a3d58a-c0ac-45bf-89c0-6d73a054b2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b234a2bd-628e-4aec-9ed9-94846c39a8c0",
        "cursor": {
          "ref": "5efdf046-6f55-43b2-b7ed-2b2cbc0e48fd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "58c2f1be-627e-48fc-b5c2-7bd696fe288a"
        },
        "item": {
          "id": "b234a2bd-628e-4aec-9ed9-94846c39a8c0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b022ba45-ea81-4317-b089-5d7f56c524f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733eed3-773f-4383-8b09-c51ec6dc5150",
        "cursor": {
          "ref": "08ae8ad5-144a-43c9-a014-11a8ccb9c931",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "39c71760-22f5-4bd2-83e0-39203558ac53"
        },
        "item": {
          "id": "f733eed3-773f-4383-8b09-c51ec6dc5150",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d8e38d2b-ded2-40d6-8627-2ec172bc8fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "975cb10a-a331-496b-8314-0a2baf96487e",
        "cursor": {
          "ref": "1140f0dc-0c35-4896-b69c-1ee6b2d0a95b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fc243fb9-0521-4c9a-8bc6-914b6f995061"
        },
        "item": {
          "id": "975cb10a-a331-496b-8314-0a2baf96487e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fc0326ce-7a63-4d97-865e-62a20b022047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "85bdc00b-ccb2-4c24-bcb9-89ba69fa6402",
        "cursor": {
          "ref": "83c9e8e0-a65d-4b7e-9c4f-31d006560eca",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4669a887-c018-4d60-a29c-ee4bceeaa916"
        },
        "item": {
          "id": "85bdc00b-ccb2-4c24-bcb9-89ba69fa6402",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6bdee54e-6490-4bba-92ed-2c0f9f1d2d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bc2700f0-452e-43fa-b69e-a38298a5af6b",
        "cursor": {
          "ref": "e2e4f16f-96da-4ff7-95ac-43a3c4923f45",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ce82f558-f85d-46d4-98a1-6f7b11827613"
        },
        "item": {
          "id": "bc2700f0-452e-43fa-b69e-a38298a5af6b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7e65db54-e149-4c3d-80cc-6b125d78b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "842639e3-653d-4d48-bf91-f8fe02a0c871",
        "cursor": {
          "ref": "51f5ae42-dda1-407e-a948-9a18a533c871",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8e752349-7538-40ea-84a4-6b64914effc2"
        },
        "item": {
          "id": "842639e3-653d-4d48-bf91-f8fe02a0c871",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "614f288e-d874-4850-acd5-c5725a42d66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "50fd139c-1e2c-404c-acaf-a380f15a1da8",
        "cursor": {
          "ref": "d344ea0b-ae5c-49d8-bc3b-bb70a5009152",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "406ba77f-1806-477f-bacd-c7dd8b693e63"
        },
        "item": {
          "id": "50fd139c-1e2c-404c-acaf-a380f15a1da8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e496ee7a-5782-4440-a150-07df2f5a12c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "09f85188-deda-479b-84b9-21cb22924e8c",
        "cursor": {
          "ref": "cad7ecfa-3283-4499-9108-19cdba3a0c04",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "01af744a-364d-48c0-b2af-e0aeeaabde03"
        },
        "item": {
          "id": "09f85188-deda-479b-84b9-21cb22924e8c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7413208-b7a1-4f05-b6a8-9d77168e0f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "56fb408c-9eaa-4f6e-9f06-846415694dc9",
        "cursor": {
          "ref": "eb9ecfdc-f335-4d3c-bb1e-d050a518359e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a8985c0e-1776-4ecc-9b50-aec361a4ff9e"
        },
        "item": {
          "id": "56fb408c-9eaa-4f6e-9f06-846415694dc9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bec722e2-121d-45aa-b96b-7e55e4a71a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a13a49d-31ac-450b-be02-41d82f09b519",
        "cursor": {
          "ref": "2648f78a-532f-4760-967c-c20342519f19",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ba110eee-4407-4c86-ab3e-05ded79d4d4d"
        },
        "item": {
          "id": "7a13a49d-31ac-450b-be02-41d82f09b519",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0e4901de-6d0c-4dd8-b4e3-982daba863d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260c0ae-cfe8-4b35-b72f-41a172d1c4b8",
        "cursor": {
          "ref": "6c272450-1d2b-4eec-8996-d0db94606d4d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e11f2f17-e0eb-45f1-8bfa-b73c47efa74d"
        },
        "item": {
          "id": "9260c0ae-cfe8-4b35-b72f-41a172d1c4b8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3748f84f-16db-4bb4-b416-abdff85b86a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4b3b3a-3ddf-4497-80fd-e0c922a60681",
        "cursor": {
          "ref": "d3a4d88d-9fee-48e5-933d-6ed0083a0e63",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b6e337da-eba3-4ed7-8f48-78e848a60ee5"
        },
        "item": {
          "id": "cb4b3b3a-3ddf-4497-80fd-e0c922a60681",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bbab7546-7470-4683-bbc6-caa49c38047c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b11934-5757-4f30-9a9b-25bf5a44cfae",
        "cursor": {
          "ref": "87a559b1-b1eb-43f9-bfc7-d681a3d90566",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf194af7-8778-450a-8932-f76835f51a62"
        },
        "item": {
          "id": "98b11934-5757-4f30-9a9b-25bf5a44cfae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea852491-137d-49a8-a551-a1cdbfd4dc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dc037-b761-4231-8f6f-df77b09571e7",
        "cursor": {
          "ref": "ddf4c116-4176-4400-a882-1ab564a3690c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "31a94240-497b-4751-8caa-d043af53603c"
        },
        "item": {
          "id": "f28dc037-b761-4231-8f6f-df77b09571e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9de77f60-10a0-4bc6-a516-c02b0df8b6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656b6a73-2012-4d3b-b669-5fb5b3dd83e3",
        "cursor": {
          "ref": "979a8f41-629b-40dd-bc1a-c27ecf3e074f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5251b751-46bb-43aa-aa34-45f2868dc793"
        },
        "item": {
          "id": "656b6a73-2012-4d3b-b669-5fb5b3dd83e3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e0c074e-df94-4fcd-96bc-e284a98602bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc82316c-dee5-4bbe-b7e8-fa8de910a86d",
        "cursor": {
          "ref": "eabab389-6282-45d2-b4ed-c2d235f82143",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "79fac6fe-08ae-42eb-9003-4a940d41e5ec"
        },
        "item": {
          "id": "cc82316c-dee5-4bbe-b7e8-fa8de910a86d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4e046e0-7bb0-4d8e-b8eb-b5c3f82f9d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50cd17-9065-4184-9679-ae3f2e68d399",
        "cursor": {
          "ref": "d3219af8-6b7f-4a07-86ff-d31995a5ff5d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "060e9b61-4143-46ef-899f-21e1296e2be2"
        },
        "item": {
          "id": "ed50cd17-9065-4184-9679-ae3f2e68d399",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b6a0e710-d2c6-4c8f-815a-5df92ec97a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a5838e-6b5b-4bd9-924a-e1ef42f7a124",
        "cursor": {
          "ref": "18a6d34f-f5bd-44bd-acf6-d9a8453dcceb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "000ca574-d520-4ef0-b335-968a344bad2c"
        },
        "item": {
          "id": "34a5838e-6b5b-4bd9-924a-e1ef42f7a124",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c83f50a5-8629-4b5c-8730-50b1515f85c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a85ef76-c8c8-4d3f-bf50-0079f6c9f835",
        "cursor": {
          "ref": "b18c5a79-844e-4616-bfba-8e2ff0238a9a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "43603651-3b6d-47d8-94e2-a96c8765be34"
        },
        "item": {
          "id": "9a85ef76-c8c8-4d3f-bf50-0079f6c9f835",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb87e383-a0bf-44ed-89fd-fb8d0961e268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffded66-3448-43aa-97a9-b923d6ad4384",
        "cursor": {
          "ref": "66c4553d-2d97-40f7-baaf-6a6775a00fe6",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69b3c729-c4a8-4ea0-a7c1-46f1377623be"
        },
        "item": {
          "id": "9ffded66-3448-43aa-97a9-b923d6ad4384",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d771d827-7856-4310-b70a-7177cb2276c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f62cb4b-b02b-4981-a8e2-51a4ba1eda71",
        "cursor": {
          "ref": "ee64f5b4-10a4-46e7-bc6b-6f877050070c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bbeb354a-2308-4e6c-ad2a-fbc93d610e12"
        },
        "item": {
          "id": "6f62cb4b-b02b-4981-a8e2-51a4ba1eda71",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64d4d987-5ccb-4c08-8c32-a9e19ed4d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314416e5-b99f-405d-a867-dfb709f99f2d",
        "cursor": {
          "ref": "563fa740-f81b-447f-ac6c-ed8dbf89d68d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "995c30bd-2f11-4828-951b-8a2bef07b987"
        },
        "item": {
          "id": "314416e5-b99f-405d-a867-dfb709f99f2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27cdbe0f-4fc0-49be-b62c-ec3fe9c10d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db01e8d-9c60-4cf4-8c3c-8323eeacfba4",
        "cursor": {
          "ref": "d37f68e2-9f75-4f1b-add9-619475ff1b58",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9090054b-0887-4869-9f9e-3d40cc1a02ca"
        },
        "item": {
          "id": "2db01e8d-9c60-4cf4-8c3c-8323eeacfba4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b5d02972-539d-408b-8818-21dd55c194f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d27385-11bd-4012-9615-ccaa9bb86f38",
        "cursor": {
          "ref": "d9377595-821c-44b0-a0db-fba302656cfd",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b90b9abc-3776-4b09-a44b-9002968843af"
        },
        "item": {
          "id": "b7d27385-11bd-4012-9615-ccaa9bb86f38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb016f3f-5f5b-4168-9a47-8790d97db9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983caf7b-1234-4859-825d-f250927b8021",
        "cursor": {
          "ref": "e67735b1-f4ba-47ec-b574-e8b836a09822",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3739a3b7-3e26-448d-bf79-a69ec89a8b2d"
        },
        "item": {
          "id": "983caf7b-1234-4859-825d-f250927b8021",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04cf3e44-2644-4df4-8628-0cb6e8734960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475ccd9-4c05-4e98-b5cd-2701de01fa24",
        "cursor": {
          "ref": "0fde4f33-0782-45e0-a613-20c0aa94c4d5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "98e00529-394c-49a3-8e9c-548969d5d56f"
        },
        "item": {
          "id": "4475ccd9-4c05-4e98-b5cd-2701de01fa24",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "88c7398e-e68a-4267-95b9-034cd32eeb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500120fc-8f38-492a-9370-f5213ff80dee",
        "cursor": {
          "ref": "0c9a088d-0a6e-48b0-b300-ff2e98d3166c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "95232b2b-a46d-417c-87bd-a1aea870eae4"
        },
        "item": {
          "id": "500120fc-8f38-492a-9370-f5213ff80dee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb21e4ff-bd97-44b8-bb7a-8179e9949049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e606fe2-38cc-4b78-8448-c39b7eae14a4",
        "cursor": {
          "ref": "31d3d289-777e-431f-9353-2ac9e249a1cd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ed92e5a-6f85-454c-8ecc-a596d47d10d3"
        },
        "item": {
          "id": "7e606fe2-38cc-4b78-8448-c39b7eae14a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a19cbc4-08f9-44b7-881a-6d9818c6d41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9154616-1bd1-4eb1-a50b-1337d9bf4b59",
        "cursor": {
          "ref": "3297820a-a84c-4126-aaae-7e4d9b8bc62a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e91b96a2-cc99-4e8d-a689-a1f753a96a2a"
        },
        "item": {
          "id": "d9154616-1bd1-4eb1-a50b-1337d9bf4b59",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "91b8084a-b4c7-4ab9-8cca-f67674f7f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8202e-8a14-4ede-9a1a-bd61fc84ea35",
        "cursor": {
          "ref": "5bc1515c-7f2b-4e07-9da8-13a4907a2495",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "56abae09-fe67-46b1-82c2-b8f3acd99f75"
        },
        "item": {
          "id": "7bb8202e-8a14-4ede-9a1a-bd61fc84ea35",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5def103-d31d-41a9-835b-d116af55ab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a60d096-7bd6-4bc9-9368-cc663aca2bba",
        "cursor": {
          "ref": "a4a11582-a0ad-44fb-93d0-63d860a80f88",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d3157170-51f6-4b2e-b568-f1711d317715"
        },
        "item": {
          "id": "2a60d096-7bd6-4bc9-9368-cc663aca2bba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d7580147-f02c-48e6-8460-9e0f2a624cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798c4ae4-a69a-4f64-88c0-019c9cb4d7b2",
        "cursor": {
          "ref": "4289eea3-9fa7-4d8f-b75a-e159d22c4ad9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6efbd9be-4c09-4d11-a5c7-1680082f5013"
        },
        "item": {
          "id": "798c4ae4-a69a-4f64-88c0-019c9cb4d7b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8d740574-3652-4df9-976d-4c6c95ebbc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee9a64a-be6b-4e6c-8707-cb6ca32b6ee2",
        "cursor": {
          "ref": "f2dbfe1a-123a-4c1d-b1e0-7b8eae77bf46",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c4b38c72-d9bf-41e0-8a95-69b2a218f6fb"
        },
        "item": {
          "id": "1ee9a64a-be6b-4e6c-8707-cb6ca32b6ee2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "59be3b6d-2c7f-4d25-b950-13200e76fc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cae859d-6432-45b3-8926-0e21e492fd85",
        "cursor": {
          "ref": "f2a64cf9-75eb-4184-b821-8e5171cb68d9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "52ec9283-dae8-46dd-9d4c-e6fe50eb5c83"
        },
        "item": {
          "id": "8cae859d-6432-45b3-8926-0e21e492fd85",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "73ed7751-7d31-4106-94cc-6e1fcc73a57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad741e8-aaf9-4020-a0aa-554ebc51d597",
        "cursor": {
          "ref": "f097b028-d836-4119-8575-f05924d86cbf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f3fc3b02-d280-4e38-9556-527e6cefb7af"
        },
        "item": {
          "id": "cad741e8-aaf9-4020-a0aa-554ebc51d597",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "82917418-c933-4480-b03f-ef28ade6069c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec75b67-2f4f-4e95-8e81-333db7629f76",
        "cursor": {
          "ref": "38937b2c-6efb-4d6c-856c-7179d2dae53a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b252bda3-9417-4054-9e78-09636dcca2a8"
        },
        "item": {
          "id": "5ec75b67-2f4f-4e95-8e81-333db7629f76",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "20a2c98b-aada-46a1-a764-c6cb580b22aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d91f53-c2e6-4fd4-8655-8d90a93137ce",
        "cursor": {
          "ref": "6bc42c9e-7ff7-4fb7-8cac-54ef4235c16d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cd608105-a9bc-4be2-8474-f13aadfb827d"
        },
        "item": {
          "id": "57d91f53-c2e6-4fd4-8655-8d90a93137ce",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a376d7a0-e77c-46b7-8e2c-04da688fd332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920d885b-c7d7-4e33-82da-29919e252284",
        "cursor": {
          "ref": "6b36ebc8-c588-4ba9-b259-79f8e8770caa",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd9a64a7-2fbb-49b2-9263-5e4a41f4d3dc"
        },
        "item": {
          "id": "920d885b-c7d7-4e33-82da-29919e252284",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bd0aedf9-3d45-4761-9e2c-61b7db0be2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ecbc88-0c7c-4d5d-bbc5-1d68e84041f9",
        "cursor": {
          "ref": "e482b95c-a67f-4442-8cb4-8db3b715d626",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dea67640-659e-46ab-9819-e368ef34d97f"
        },
        "item": {
          "id": "74ecbc88-0c7c-4d5d-bbc5-1d68e84041f9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b640cce-784a-4756-bb51-5b4256968508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e036d3e-b65e-475c-99b6-f02c24d3773e",
        "cursor": {
          "ref": "3f6b9b3c-45ae-4cf0-a363-46759bd4c475",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8742274f-6794-482a-bc5b-4c4509d1cc4a"
        },
        "item": {
          "id": "8e036d3e-b65e-475c-99b6-f02c24d3773e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "053a7128-d8e0-44ea-ab64-4ce209978e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df71dd2-cabe-454f-9584-93ad52845c29",
        "cursor": {
          "ref": "7dc78567-0658-4d11-b3df-1b7949aa3a38",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f527d63-f3d2-484f-a524-00aaf4f543d1"
        },
        "item": {
          "id": "1df71dd2-cabe-454f-9584-93ad52845c29",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4bd773bc-a62a-4061-8624-90520528b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29c091a-a534-4940-8d56-e3e542b9440b",
        "cursor": {
          "ref": "81696035-2375-4624-a092-24e65638ebb9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0fead808-7da7-4c10-9089-8f22cf43d57c"
        },
        "item": {
          "id": "f29c091a-a534-4940-8d56-e3e542b9440b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e70fda39-591c-4f7b-ade1-136f0218faa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ef9e59-8247-4737-b943-1b36478ccfd3",
        "cursor": {
          "ref": "051a6930-e7a4-41f2-bd96-5ac23f78836d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1ee535b-acc9-49ce-b79f-b5286f9bc7c5"
        },
        "item": {
          "id": "03ef9e59-8247-4737-b943-1b36478ccfd3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c2a05a34-2835-4c1e-a8ff-6a2333a4ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6c2c78-1848-4f5c-983e-9af77cc402da",
        "cursor": {
          "ref": "801b37f8-097e-460d-89d6-6ea8d9a800e1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d06e1a55-12e7-4001-a68d-2c3dc8b14d52"
        },
        "item": {
          "id": "fd6c2c78-1848-4f5c-983e-9af77cc402da",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fb38ba0a-5cb8-4481-ad56-608f7683a4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3449d5-817c-48c5-b7e3-e81422498564",
        "cursor": {
          "ref": "93a85318-91c9-48e2-9d3b-f4e4b3303b53",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ea9129b3-06da-48eb-b42c-30d613628d7c"
        },
        "item": {
          "id": "2e3449d5-817c-48c5-b7e3-e81422498564",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ed2b8056-32de-48f8-a8f1-97d000873f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0b587b-7f47-4c93-8dba-d3c8317251fe",
        "cursor": {
          "ref": "83f151f0-26a7-467b-8f39-99615596ed67",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "878f8247-63be-4e62-91a9-8d9b402cc07d"
        },
        "item": {
          "id": "ee0b587b-7f47-4c93-8dba-d3c8317251fe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1c98ee95-7312-4721-bf17-cfa5c137f033",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b8024a-7294-4a93-87e3-fefae1d3410d",
        "cursor": {
          "ref": "202a8c92-a25d-49cb-b462-618666b20686",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6ed42886-fa82-4df8-8e1f-77c75c15e2c3"
        },
        "item": {
          "id": "87b8024a-7294-4a93-87e3-fefae1d3410d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aaa0ca29-1d13-4241-8491-7c3316058561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe59cb86-d414-4aee-a832-ba7a15fff331",
        "cursor": {
          "ref": "fbdd1274-0adc-4542-a45a-7f490ccf31fe",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "44aa3f68-9710-4af6-9020-3e8030ebc974"
        },
        "item": {
          "id": "fe59cb86-d414-4aee-a832-ba7a15fff331",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "289d0629-7bac-4be6-81e0-b55096b94b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee67e41-e1cd-416d-bf66-9b5416956b1c",
        "cursor": {
          "ref": "ebd52534-68e6-4ee0-b56f-e4fc111037e5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e8c7dd7a-f72f-408b-87fd-cc928ea2c035"
        },
        "item": {
          "id": "fee67e41-e1cd-416d-bf66-9b5416956b1c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "52b72695-054f-46a9-9165-918c1f59ff36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ddb747-61bb-4af9-9060-96cc66d81fd7",
        "cursor": {
          "ref": "38e36dd6-8f10-4353-92c7-62ea4792de82",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8977f2c9-d8cf-4315-8c8d-45fa6b402155"
        },
        "item": {
          "id": "24ddb747-61bb-4af9-9060-96cc66d81fd7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7da0c6d-697f-45a6-b3c7-83ea05c6d4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c89ef0-112b-42fb-99f7-10a4006a3f0a",
        "cursor": {
          "ref": "330db901-d9db-4092-bb46-53af97eee95b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "118def01-a43d-45ee-ba44-8048c04f80ee"
        },
        "item": {
          "id": "26c89ef0-112b-42fb-99f7-10a4006a3f0a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6248f58d-82ff-4121-86e4-22aaaac45fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33487947-fce0-4a57-b4fa-59315daf75ab",
        "cursor": {
          "ref": "17b70030-e9d8-4442-b337-541491065aa6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bb095bc3-fc63-421c-8f9f-be26f368f218"
        },
        "item": {
          "id": "33487947-fce0-4a57-b4fa-59315daf75ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "20178b0a-815f-4310-9ac6-d34c736577a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4af1ae7-3f92-4562-9535-d9aead76ce52",
        "cursor": {
          "ref": "db744ed9-b2c6-4fd8-b826-25f4f55ac757",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9940b1d8-799a-4b4e-b87c-3b75b8515f72"
        },
        "item": {
          "id": "f4af1ae7-3f92-4562-9535-d9aead76ce52",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "13b1f432-8d3e-41c2-a67a-b0b0170d4fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e55417c-8231-4eed-b642-016f1f21caf4",
        "cursor": {
          "ref": "194345fd-cd2d-491d-9041-cf9ceb1c2dd1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e25eb06a-f52b-4880-a5c9-05ba72f87cea"
        },
        "item": {
          "id": "2e55417c-8231-4eed-b642-016f1f21caf4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e6a5e95a-e3f6-49da-a8d1-9a4eb701857c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c0736a-b98b-4790-8ccc-9e725d729bc0",
        "cursor": {
          "ref": "42b00f7a-d750-4818-97af-fe167f202108",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "48aced09-205b-415b-99ab-7f1f761d5b04"
        },
        "item": {
          "id": "96c0736a-b98b-4790-8ccc-9e725d729bc0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b3855d89-abe6-4f8c-9d64-4c07a88f992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f389c9-2226-40e9-a9d8-9f0a0fa5f90a",
        "cursor": {
          "ref": "90962d11-6bd0-4922-a84e-9f8f852c3e76",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3310eb59-15af-499b-9601-aad1ea6867bf"
        },
        "item": {
          "id": "a7f389c9-2226-40e9-a9d8-9f0a0fa5f90a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5a4568de-3881-4850-93b7-6b313510ade2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40d368c-4f65-4837-b382-059298d8afd8",
        "cursor": {
          "ref": "9ed2256e-1eb0-4dc4-b6b8-f876d1fba550",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "67b261e9-4250-49fc-97d3-7907b012bd51"
        },
        "item": {
          "id": "a40d368c-4f65-4837-b382-059298d8afd8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1d845758-8306-4908-850e-6c98484b366d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581bedfe-9d79-42e5-a1b1-7854e3fa49d4",
        "cursor": {
          "ref": "6b44b384-64b5-46c6-943f-f781f8e292e8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "19efe313-98bd-456e-a233-72109148a2bd"
        },
        "item": {
          "id": "581bedfe-9d79-42e5-a1b1-7854e3fa49d4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "671830b6-1f0a-4c7e-ba45-6ac66aaa628b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7509be38-f53b-432b-91ea-0afe7b9ed4e8",
        "cursor": {
          "ref": "a41058f3-49e8-4c02-89af-ac276a20340e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2218b899-5e56-4b3d-b24e-1d770fc7ae05"
        },
        "item": {
          "id": "7509be38-f53b-432b-91ea-0afe7b9ed4e8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "07352354-bef7-4dea-bb83-3489c3d534b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dbb7ec-bfb6-4256-8342-bbe49d5cbbb0",
        "cursor": {
          "ref": "4c5e56f3-25df-498c-beb9-0e96b5a0f978",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "afd12284-0d9d-4702-b542-947090f98776"
        },
        "item": {
          "id": "a9dbb7ec-bfb6-4256-8342-bbe49d5cbbb0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "94e81c50-2570-41ff-a47a-64b236f1df02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bbc725-6f39-42b4-a7b9-6fa53fc55fef",
        "cursor": {
          "ref": "42e05702-e3e9-4d75-8725-ed787cff9e42",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "28e70e73-2bd3-43b9-8acf-4239685d153a"
        },
        "item": {
          "id": "b2bbc725-6f39-42b4-a7b9-6fa53fc55fef",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "62e6d1b6-4c58-49f5-bcfd-ef96d4230e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a62696-e2bb-4d59-b18f-964c7b685219",
        "cursor": {
          "ref": "928caabe-d888-46ba-9f2e-0f5d17dfea6b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "faba5c9c-44cd-4870-bcf8-cc9e94e3d7e5"
        },
        "item": {
          "id": "57a62696-e2bb-4d59-b18f-964c7b685219",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2fe5030f-0371-41a8-a33c-3fb63b2fe7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e338debc-dfe0-43aa-bace-23dd98395d93",
        "cursor": {
          "ref": "b4cb347d-5a03-4757-b1f7-1c8fed18dda9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f6249295-55e1-4f5a-a849-93bb06e092bd"
        },
        "item": {
          "id": "e338debc-dfe0-43aa-bace-23dd98395d93",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1bf3e6d2-2d04-4999-8b79-cb50de18135a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f806157-b150-45ec-b31e-835702a999b5",
        "cursor": {
          "ref": "a7d1ee14-1b81-4053-939b-69beb8dd208f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ae8abe86-d526-4437-9297-1720d941d8ae"
        },
        "item": {
          "id": "4f806157-b150-45ec-b31e-835702a999b5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd10656c-bfad-4d49-a097-41643210b3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd053df-7aac-4a71-ae87-a8a8fd75ae55",
        "cursor": {
          "ref": "821e24f2-55ab-4901-9076-7fba0942cc77",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c36a9608-4fe7-40a6-80e7-d470ff27c6c9"
        },
        "item": {
          "id": "ecd053df-7aac-4a71-ae87-a8a8fd75ae55",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3b0f6bbf-ad21-4cfb-85a1-74949f9d98d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be426794-84c2-4a26-a576-254bcaf35124",
        "cursor": {
          "ref": "d3849a8e-ca80-40a6-8b14-cc60e3523074",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "77c9a11d-8356-43ff-885b-df297a8bbb98"
        },
        "item": {
          "id": "be426794-84c2-4a26-a576-254bcaf35124",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0cdca183-dae7-4bf3-9486-ead946ebdbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c451f7-a904-43d9-9512-6511a549a393",
        "cursor": {
          "ref": "7467176e-e6b1-4fd8-91e3-025e25e023aa",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7eb4101b-463b-447a-8c7f-e0cef866ebff"
        },
        "item": {
          "id": "07c451f7-a904-43d9-9512-6511a549a393",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e03e2d70-8bbc-4bc1-98cf-e90546af73cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6529de9-7bf5-405a-af4d-ab4582a8f046",
        "cursor": {
          "ref": "4a9d331e-4a29-40f2-aa11-9bf0af0f4da1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1a81ce4c-1c44-45c2-ba13-8c5c81fc3c69"
        },
        "item": {
          "id": "f6529de9-7bf5-405a-af4d-ab4582a8f046",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d8cedbf4-b614-4ccd-b23b-64ee5d7d4735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d27bc6-a748-432d-b1c6-feec7febdd16",
        "cursor": {
          "ref": "41197cd9-35c5-455a-8ad5-fe3a2bd3f9cf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f3f1d9b1-df5c-43dc-a629-0439484b5766"
        },
        "item": {
          "id": "08d27bc6-a748-432d-b1c6-feec7febdd16",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "993f613c-89f4-4332-a568-26a2db063a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34860394-3d1d-4710-ae0f-adc981ce7a19",
        "cursor": {
          "ref": "3e0bd6bb-0578-465f-8edd-bf1794884314",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "26de9a22-5bc2-4f4a-9ef2-ba619d2cd09a"
        },
        "item": {
          "id": "34860394-3d1d-4710-ae0f-adc981ce7a19",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e359abc2-1840-4749-869c-5af05e7d4eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755f8f05-89c8-4533-a0e1-fd414c1c46cd",
        "cursor": {
          "ref": "965cdead-7f07-4ada-807d-ae3fcfbac0c1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "458e3673-4a25-4a36-ab1b-9ade34e66347"
        },
        "item": {
          "id": "755f8f05-89c8-4533-a0e1-fd414c1c46cd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6db636c8-4e3e-4e59-8f6b-803730ebb68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6404ae79-e9d0-402c-81db-fe65ada70adc",
        "cursor": {
          "ref": "858a1ce9-15c5-413a-b950-4d98f4d48037",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d2b7e99a-8250-4642-9f8b-d3a05cdfdc43"
        },
        "item": {
          "id": "6404ae79-e9d0-402c-81db-fe65ada70adc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "06b7267e-21b3-491a-b677-11202a7a9e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d6f9b-0515-410f-9bf7-f8d78069d5f5",
        "cursor": {
          "ref": "0050ba1b-fb36-4847-9749-9dd5d406a8b6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "568d47e0-2ab8-45c3-8dc9-f5cdf5a09a8e"
        },
        "item": {
          "id": "ab5d6f9b-0515-410f-9bf7-f8d78069d5f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "337cc167-1e92-4f44-a9b3-c6b8405ef48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ce8289-7f70-4ec3-ad87-ba1088d29273",
        "cursor": {
          "ref": "2476e896-a0de-48c7-ac99-d3053504ecb1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "08f33b7e-09a0-4529-a874-5f564af16123"
        },
        "item": {
          "id": "67ce8289-7f70-4ec3-ad87-ba1088d29273",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c2561ce2-0463-4472-8595-ca5253812f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8358b7-ad65-41f1-b409-ea9a7bbf13e5",
        "cursor": {
          "ref": "738978f7-8ebb-4eed-a51b-f47bf7b2d7c2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "78ae37ad-1d2c-4f02-abdc-b4c7187e0b0d"
        },
        "item": {
          "id": "fd8358b7-ad65-41f1-b409-ea9a7bbf13e5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f9365290-849e-420a-ad00-2cd671dd9a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaebbda6-873e-4681-89cc-86b661fbf97f",
        "cursor": {
          "ref": "bbc00030-af8d-4bb5-8e09-697dff67ad6e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aee29dce-a866-4302-b319-18b8704accaf"
        },
        "item": {
          "id": "eaebbda6-873e-4681-89cc-86b661fbf97f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8eda8e71-db74-49f1-8268-8a9dc223058b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445d3c44-03f1-4b82-a1ac-5e003912cd88",
        "cursor": {
          "ref": "613889b5-5ca0-4651-80e6-759d2aad1dfe",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7da648f4-4a4a-47aa-9d2f-d342a495b4d7"
        },
        "item": {
          "id": "445d3c44-03f1-4b82-a1ac-5e003912cd88",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2cccf0f2-5cd2-48cd-a8a5-3fca92c31c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a818d8-87d6-45dd-bcfe-8e55282273ff",
        "cursor": {
          "ref": "e692a7ed-939b-462c-b12e-7c884290765b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6e287bba-534f-442e-8146-3dd633673ffb"
        },
        "item": {
          "id": "a0a818d8-87d6-45dd-bcfe-8e55282273ff",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a0e19e9a-5a02-48ee-abfb-e57db2fedef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fc12de-0b54-4210-bd31-3f0fc78dc214",
        "cursor": {
          "ref": "694f38a5-be1f-4f5a-b5a9-23c891c8956b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cfd5b30f-9a6b-48df-b78b-7155beb2fb2e"
        },
        "item": {
          "id": "f5fc12de-0b54-4210-bd31-3f0fc78dc214",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fe900579-087b-4c26-98ed-afee21c83571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4c2447-58e1-4114-88db-1140b2ff7ce1",
        "cursor": {
          "ref": "efec77bf-ce47-4fe4-a204-dd015193fadd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "422feb76-1294-474b-95f4-00ff9d70520a"
        },
        "item": {
          "id": "7a4c2447-58e1-4114-88db-1140b2ff7ce1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cd251dd6-a2b6-43cc-999c-f9437a4b5b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fdfcba-63c1-4ce9-8764-93e957154396",
        "cursor": {
          "ref": "0ef8a3a2-a72d-445b-b3b2-7d047b1c5152",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9a4c43b6-f52c-4d7a-973d-22a9a890568d"
        },
        "item": {
          "id": "57fdfcba-63c1-4ce9-8764-93e957154396",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1fca0569-b9ea-4040-affc-c93bf4c05899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086853e8-de65-46b2-9f7f-4f236a7e7c4c",
        "cursor": {
          "ref": "6835b48a-a8cf-47be-882b-d50d03ceabf8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4ad9c94a-6ea5-4eef-9291-1c6c2c91aae5"
        },
        "item": {
          "id": "086853e8-de65-46b2-9f7f-4f236a7e7c4c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5ab88152-1e7b-4e74-ae49-d15f0f5f2ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674ff2b0-dc58-4707-b8a8-ab6487d8088f",
        "cursor": {
          "ref": "4dee9214-9def-4ace-829d-27b6662579d8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "830551da-2046-4848-869f-82915d0090db"
        },
        "item": {
          "id": "674ff2b0-dc58-4707-b8a8-ab6487d8088f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9243dba5-2354-4f9c-a257-696258c6c727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c41afb0-44ab-4d5b-852f-db504fca7526",
        "cursor": {
          "ref": "b4c904c0-bdec-43f9-baac-1e734fdb243b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2b7aca32-a992-456b-91f3-83c86bcce8e0"
        },
        "item": {
          "id": "1c41afb0-44ab-4d5b-852f-db504fca7526",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "72beff64-296d-4819-be54-fb2d3ee60cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa40754-d6e4-4620-b7f4-a87164269ce6",
        "cursor": {
          "ref": "bdaa8404-bfc2-4708-9ea7-45ad171ceb05",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "263b0dd6-b62d-41e1-a5b7-4f9c0ec84f23"
        },
        "item": {
          "id": "1fa40754-d6e4-4620-b7f4-a87164269ce6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0ef0e05f-c770-4957-88b3-677cd1138bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6427710-146f-44bd-b521-4317cb02fc22",
        "cursor": {
          "ref": "caffa22e-c13e-4229-a5b9-245a256b724b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0f4caf3f-4524-4d07-8910-904c8dca1a8c"
        },
        "item": {
          "id": "b6427710-146f-44bd-b521-4317cb02fc22",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a576a5e-ae4a-4e58-a802-1000eb02dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4287b31d-f55d-4d2d-b506-b74a227728d5",
        "cursor": {
          "ref": "2e281d48-0464-4ef1-955e-6b364e8b2d69",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "26792045-0fdf-435d-a6d3-69a95f2d4137"
        },
        "item": {
          "id": "4287b31d-f55d-4d2d-b506-b74a227728d5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3051f11c-ab66-42c6-b2d5-93790b058b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4c17da-f08b-492c-80f7-179469478428",
        "cursor": {
          "ref": "786e688d-4c1b-4fe3-84d4-37255f504b10",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "432f3bcf-4732-446e-ba50-c4d97cd2860f"
        },
        "item": {
          "id": "6f4c17da-f08b-492c-80f7-179469478428",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8d302855-a9df-4cc9-83b8-265f27ae0356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91daa3-e11a-4cbf-91c8-434a27b13bbd",
        "cursor": {
          "ref": "04927e69-0887-4a95-af8e-d5eca14081a0",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4e4d24be-4d0b-4c95-9cb9-dc0aa63341d1"
        },
        "item": {
          "id": "3e91daa3-e11a-4cbf-91c8-434a27b13bbd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2566013d-59be-460d-adad-4ea4fbd9b467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e33e7c0-e3af-4386-b55f-dc649e256065",
        "cursor": {
          "ref": "b7f49dfb-763d-4d88-b794-0cbb51befaf9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e799e86-fa27-4528-8b70-98133c761b5e"
        },
        "item": {
          "id": "0e33e7c0-e3af-4386-b55f-dc649e256065",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "71857a97-7ee0-4ea5-933f-7ccbf6394b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab7dd4c-8906-478c-8062-d0d0badca586",
        "cursor": {
          "ref": "2627afda-6594-476e-bcd0-3895bfec17e4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02103d5e-9536-47a7-9cfd-698a8ef0b4c3"
        },
        "item": {
          "id": "bab7dd4c-8906-478c-8062-d0d0badca586",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "083ee1f1-893a-4c86-96ac-75007dd5ad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c44dc84-f09c-4abf-a08a-f2816ec012e0",
        "cursor": {
          "ref": "bbc01438-3469-411e-9870-59cf318ed1b1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "08194aac-1a3f-49af-9bc7-ef89a47352d7"
        },
        "item": {
          "id": "4c44dc84-f09c-4abf-a08a-f2816ec012e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "286960cc-de9e-480d-9e95-3efe5282f1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a2d3fa-7098-48b6-93a4-61f13635293d",
        "cursor": {
          "ref": "ac3ea00c-5a77-4339-a499-13d80169f9ac",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dd23a102-2c7a-4c5c-b0b9-7cb9e871ab29"
        },
        "item": {
          "id": "77a2d3fa-7098-48b6-93a4-61f13635293d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf6c77f9-2dfc-4f24-9917-f15bea29c3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a52e37-f1ee-4712-b2a6-dd015af5bed6",
        "cursor": {
          "ref": "befca944-7b09-4842-8221-e930b97b463e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b7217c52-f8fb-4e47-bab8-cceac8a1cfb2"
        },
        "item": {
          "id": "b5a52e37-f1ee-4712-b2a6-dd015af5bed6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e7cee7c2-22fc-4792-b95b-c37aff65712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe047f-b889-42c3-ae6a-2cf92fad80c6",
        "cursor": {
          "ref": "5dbe0358-5eae-47f7-a1e5-30bcea34e033",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd2fadc7-3918-44c8-a3d8-1320b5b98c5d"
        },
        "item": {
          "id": "6abe047f-b889-42c3-ae6a-2cf92fad80c6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "369bea0c-8355-484e-a30d-feb44c9374ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefd426c-9f28-4dee-97fe-8b3e6240be4b",
        "cursor": {
          "ref": "48c5a93b-07bc-4452-b40d-230ff22d60c4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fc5a32c1-b159-4556-a3fa-b75e788173b8"
        },
        "item": {
          "id": "cefd426c-9f28-4dee-97fe-8b3e6240be4b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0c11a37c-b709-4bbf-974d-04a85edeabce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72d6f98-7201-40db-98c3-6384e110cc65",
        "cursor": {
          "ref": "ae0392d7-6329-4787-a28e-a33644ed1230",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4b78c8d0-5e2d-40ff-aedb-30013423a93b"
        },
        "item": {
          "id": "b72d6f98-7201-40db-98c3-6384e110cc65",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ad59cfbf-8f0d-4637-b936-379f210f715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e3df0b-bf10-4575-99e0-756abcc45daa",
        "cursor": {
          "ref": "e229a788-f142-4f4e-a51f-d65b5727d917",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fb30ccf7-6996-4c35-82ca-6c3dd7525cef"
        },
        "item": {
          "id": "e0e3df0b-bf10-4575-99e0-756abcc45daa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "29aa438e-56c2-4362-8c55-1180f3f5dafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d210f7-fd8c-4de2-a7bd-dfd634124fcc",
        "cursor": {
          "ref": "8f544615-d0db-452d-a3a7-4dad868702ee",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "175e5766-5be1-47c1-ba04-f562ac6f5aac"
        },
        "item": {
          "id": "35d210f7-fd8c-4de2-a7bd-dfd634124fcc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2f8932e9-31ca-41a3-8acf-8af3a24e0825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811d4af3-b958-45b3-bdab-da03bf822abc",
        "cursor": {
          "ref": "a5e392e9-b5bb-48fd-9c77-8ea11d7bbe61",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fe7a608d-6dad-408a-9d10-c3abfa726efe"
        },
        "item": {
          "id": "811d4af3-b958-45b3-bdab-da03bf822abc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "687c25af-6dcf-45a3-9bdf-5bf42eda2f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf16d7d-7f13-42f4-a22b-315f70e25a3f",
        "cursor": {
          "ref": "a3505398-ec21-4079-b0eb-9eb2dd940fe2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e89944b0-f840-4438-b11c-674ee05b1500"
        },
        "item": {
          "id": "ccf16d7d-7f13-42f4-a22b-315f70e25a3f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3c431159-fdf5-4ee5-a7f2-f75dfb12caf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff4419d-a39c-49ca-9065-04ee20ae810f",
        "cursor": {
          "ref": "31de4283-0504-4f3d-803f-8e7ad877b44a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dd7b35cc-0781-4b82-8b88-ff5a2fe43377"
        },
        "item": {
          "id": "9ff4419d-a39c-49ca-9065-04ee20ae810f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4ffe2cc2-c58a-4286-9fe2-470262ddad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd18272-0a91-48d2-b5f0-fbf7c56c209c",
        "cursor": {
          "ref": "2d6e0d54-96b6-465f-b3ae-1e1246218623",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d812dd9d-f4b5-4786-b8f6-84046353b6c3"
        },
        "item": {
          "id": "1fd18272-0a91-48d2-b5f0-fbf7c56c209c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1cbc3c08-bdab-4c18-afdd-38da6f3229bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31b2399-1c2a-41ee-883b-4ab3f05ba58b",
        "cursor": {
          "ref": "1454657c-ff80-4c32-874c-23bf877f309f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "72f205b4-9c64-4a86-81bf-ece7e1a39300"
        },
        "item": {
          "id": "d31b2399-1c2a-41ee-883b-4ab3f05ba58b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e5c83376-2691-40cc-b354-154e5f66e596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f34b6f-2b63-4856-a353-b5d639ccf254",
        "cursor": {
          "ref": "92f3ae16-d367-4282-89cc-db525e440c34",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "abd2fa67-7e48-41f2-8f44-8f32a54129c9"
        },
        "item": {
          "id": "e0f34b6f-2b63-4856-a353-b5d639ccf254",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c916e181-1d40-48ed-8e0e-70bddb65d982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2f4866-9cbf-4b66-8738-929021915f7b",
        "cursor": {
          "ref": "24e8fd22-2d7f-4170-9974-470031a7f588",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "73f8ad5d-3465-49f6-b155-373afa61f493"
        },
        "item": {
          "id": "8d2f4866-9cbf-4b66-8738-929021915f7b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4accb8a1-030d-41b0-88bc-7bb1f9a8d6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04b55d1-c404-4e6a-b917-3ec76c690573",
        "cursor": {
          "ref": "ddda30a5-6912-4124-aa57-943adaae068b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ff51ebd-250c-40aa-8ce6-29e17c325296"
        },
        "item": {
          "id": "a04b55d1-c404-4e6a-b917-3ec76c690573",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d35b6a9a-0e8e-46c3-8b62-29127a02d314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e45e2-27c3-433d-99a3-43e450a60b9a",
        "cursor": {
          "ref": "29331e77-94c3-40b1-a72f-38fb8d72ccdf",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c4fd7af8-1792-408b-a9ce-c404b68df449"
        },
        "item": {
          "id": "a97e45e2-27c3-433d-99a3-43e450a60b9a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4a199104-a31b-4798-ad1c-dc1dc1bce147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93944f16-2099-4753-adef-c2ffffca49e9",
        "cursor": {
          "ref": "5e1b5644-1b04-4864-bcf4-b707643e58ce",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "71cb715f-1fe2-4c41-9d21-da5a731e9e6f"
        },
        "item": {
          "id": "93944f16-2099-4753-adef-c2ffffca49e9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a46086d1-aa00-452a-87a6-f034f39b02ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137747d8-0333-45db-a5ac-56d53be9d179",
        "cursor": {
          "ref": "8a8de10a-1bbe-4058-aa44-72d49c9f201e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "57e3a508-2c34-49bb-9342-5b6456a8f6db"
        },
        "item": {
          "id": "137747d8-0333-45db-a5ac-56d53be9d179",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3b8adf62-49bd-4890-b6ed-d5549673263a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50281f6b-99b4-4eee-96bd-d13c526f9ff0",
        "cursor": {
          "ref": "f7081ae8-84dd-46ed-a62b-890cc912bb1a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2866e302-3a2d-4bac-a591-fc30be383b54"
        },
        "item": {
          "id": "50281f6b-99b4-4eee-96bd-d13c526f9ff0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4a41bac-3955-42d4-b128-5563ca0fc26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c239be8f-448d-4eb3-832f-4c98e128c21e",
        "cursor": {
          "ref": "08f78abe-89ce-4df4-a098-b8bed0849b6f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d11b301a-3b13-40de-87c5-a489a7dedd1d"
        },
        "item": {
          "id": "c239be8f-448d-4eb3-832f-4c98e128c21e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d8b5392-f295-4b42-a2db-3e4bbbf38e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26b162e-c91f-4f12-bfc5-053766f00a60",
        "cursor": {
          "ref": "b956f17f-6083-49dc-bfd4-e2578f40f0e8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "65713a6b-0bb8-40d6-917c-cac5453cddf8"
        },
        "item": {
          "id": "f26b162e-c91f-4f12-bfc5-053766f00a60",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b98f6c5c-1fc2-4482-95fa-f3bdeeded104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ed8fa2-8b06-4451-8469-e92305431a34",
        "cursor": {
          "ref": "450a6d78-c092-4e13-8893-428d095e923a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c5afa0ac-5161-4537-9f04-4fc7a0d85299"
        },
        "item": {
          "id": "58ed8fa2-8b06-4451-8469-e92305431a34",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "59e37562-2095-4993-b619-fa8f27d62006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dca7cf-1684-4558-884d-ec8103965291",
        "cursor": {
          "ref": "8d3e6d1b-b8ba-4ae4-bc24-4cdf93c0ee81",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c4058e6b-9837-4de0-b215-ad9936a9c629"
        },
        "item": {
          "id": "f0dca7cf-1684-4558-884d-ec8103965291",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "93895a32-078a-4386-b116-b19d203d5b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b271cc1-c5cb-4522-80db-ee000e864cd7",
        "cursor": {
          "ref": "b196653e-2199-425e-97e6-d60bebc52bdf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "259d0a17-f79a-4f28-9f9b-26ca2d4cb7c9"
        },
        "item": {
          "id": "4b271cc1-c5cb-4522-80db-ee000e864cd7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c1b40679-c1a3-446a-aeaf-886e07df115d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0940c85-fee8-410f-9e7b-2c946d8fd9c4",
        "cursor": {
          "ref": "5844704a-65a4-4857-ba2f-cf2431a6e4ee",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "94060961-f4d0-4ed4-8ee5-407cc41e4d91"
        },
        "item": {
          "id": "f0940c85-fee8-410f-9e7b-2c946d8fd9c4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4c7d4760-45fb-473e-bb18-8146ce4cd21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de7fe15-5fa1-4b25-a983-00477d386905",
        "cursor": {
          "ref": "92bebafa-d1df-4cde-8ae8-033af8a3ba1d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1dbdb3b2-c1ea-477b-a376-cd7eede9dc27"
        },
        "item": {
          "id": "6de7fe15-5fa1-4b25-a983-00477d386905",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "67162c9f-8330-4cb2-9b09-c318a1d2e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a27cf7b-2c31-46b9-b97b-71f4a78c12e2",
        "cursor": {
          "ref": "4bab749c-176c-4dad-a185-be89b5b31979",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "49370f92-734a-41dd-b4e7-df895890b255"
        },
        "item": {
          "id": "2a27cf7b-2c31-46b9-b97b-71f4a78c12e2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "84c4b2cc-954f-4999-80fd-acb42b8739aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0378e0-0678-4e19-9504-9cadf632f49d",
        "cursor": {
          "ref": "f2495f8e-6998-4ce4-8f99-656e7085f22c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d080b10e-ff9f-4976-9baa-d0e0aa1bc955"
        },
        "item": {
          "id": "8e0378e0-0678-4e19-9504-9cadf632f49d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9b6d16ce-449e-409f-8e67-452b6f823113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93d0e07-8cb5-4a3e-881b-9b843bfdf68a",
        "cursor": {
          "ref": "7264638b-6176-4a2f-bad9-a50c71be2f36",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "51fc4944-6e80-44ec-ba7a-16f9a4082dc1"
        },
        "item": {
          "id": "d93d0e07-8cb5-4a3e-881b-9b843bfdf68a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5a7542da-5754-415d-aa75-2c77f3cfc093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae04176-ca89-42b4-bac5-9f1e45619f4e",
        "cursor": {
          "ref": "2a5a0e6d-a361-4eb2-a74c-154f011a4087",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cd31c3ac-f262-47e5-9b52-9f16530da14f"
        },
        "item": {
          "id": "8ae04176-ca89-42b4-bac5-9f1e45619f4e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ce740383-99ff-4c5c-9e6c-54c2cfabeb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e9377d-b355-4deb-bba5-101d7bb9fc33",
        "cursor": {
          "ref": "c202d91e-c0fa-4b2a-93ca-498472f241aa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1942d33-0a70-4f88-b627-e477edacbef5"
        },
        "item": {
          "id": "c4e9377d-b355-4deb-bba5-101d7bb9fc33",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1ffa0470-eb84-4477-a919-7a0d9a005759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c66e1c0-9063-452b-bd87-1efebec92a02",
        "cursor": {
          "ref": "35bb92fe-0c7f-4530-85fc-bc9983cdbc88",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "13b3bfa9-d25f-4b86-8e48-ee2cce1b368c"
        },
        "item": {
          "id": "0c66e1c0-9063-452b-bd87-1efebec92a02",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "77999be0-ec68-4361-b98e-d33fc5c586a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7b939c-b284-466d-8ae9-8635dc00faf7",
        "cursor": {
          "ref": "b7ef3cf0-87fe-4837-90d7-c1557519cceb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d9868900-8dc9-40be-a951-a87130a62306"
        },
        "item": {
          "id": "eb7b939c-b284-466d-8ae9-8635dc00faf7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6d59f4e7-d847-4f58-a548-d3356214cb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516cf449-5a98-48ef-ad5e-4292c982aed3",
        "cursor": {
          "ref": "ec0340eb-daae-418a-a5db-841bda87e75f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f4224bb0-7653-4acf-8112-4a80082fc360"
        },
        "item": {
          "id": "516cf449-5a98-48ef-ad5e-4292c982aed3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f6e1638c-6883-417e-8222-a65107b85d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46932691-8a74-4700-99ec-c2c8d8c7d1f7",
        "cursor": {
          "ref": "a6a2b998-3540-41f4-835a-d0171c242ee1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "127d02d5-353f-41b5-a8b9-af59b0135110"
        },
        "item": {
          "id": "46932691-8a74-4700-99ec-c2c8d8c7d1f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "61ef77c2-5830-4435-b89e-58de957de7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e7a0ad-8c81-4ebd-b87b-733977624e53",
        "cursor": {
          "ref": "f397b88b-1d9b-493b-a2e9-bedfbd27b655",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e75407bd-3c92-47ec-a929-93d302da3e4a"
        },
        "item": {
          "id": "18e7a0ad-8c81-4ebd-b87b-733977624e53",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7b4a697c-562e-4a72-9906-357dbf5bdcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881881dd-0a09-41d7-94dc-92a56a66192b",
        "cursor": {
          "ref": "280cb0af-b9f5-443c-9901-679618371658",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bac2f295-6693-4d9c-8503-7fbc7d98ea39"
        },
        "item": {
          "id": "881881dd-0a09-41d7-94dc-92a56a66192b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "03be65c2-8cb9-4647-9fc3-ce6cfd8759c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cba1b23-c795-4416-84db-e9beb0f80355",
        "cursor": {
          "ref": "e2290f13-68c7-4aa3-9bb7-27f751d916c9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f55c5070-3bf1-46da-be6f-7f10c05a2bbe"
        },
        "item": {
          "id": "2cba1b23-c795-4416-84db-e9beb0f80355",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "58fc0b01-d000-4220-8efe-d6e15e891fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961e189b-d385-4684-8677-92d1249dfc73",
        "cursor": {
          "ref": "5d411219-85ac-4ef3-b841-59fcf5fa7c40",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "90149375-93f7-418c-a497-0efe002d956d"
        },
        "item": {
          "id": "961e189b-d385-4684-8677-92d1249dfc73",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "54d87f90-92b0-4d7c-91ab-242f5badf9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3f5d34-9349-45fb-b815-ce894d92a2f4",
        "cursor": {
          "ref": "0801a790-2fd2-4a3d-9d9a-0435259074a8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1950979e-011a-4838-ba3e-8bf162efcdb9"
        },
        "item": {
          "id": "9a3f5d34-9349-45fb-b815-ce894d92a2f4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c57e3d46-a724-46f6-b4af-acc410fc3e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c65c5a6-6e20-47c0-b527-05d91dff447f",
        "cursor": {
          "ref": "1f722c16-6c3a-4b9e-a46f-1a34a968ae50",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "01de66f4-85dc-4c08-adc0-4bae7371bf57"
        },
        "item": {
          "id": "3c65c5a6-6e20-47c0-b527-05d91dff447f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0b105f90-df18-4c8a-b193-461fe6796836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fbcf69-0af3-4c34-b241-cd9fc8051837",
        "cursor": {
          "ref": "f1517082-9c26-4a69-a0a6-09b7b75ee4ba",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad98584d-c1e9-46f8-868c-b8aefb3bfa25"
        },
        "item": {
          "id": "31fbcf69-0af3-4c34-b241-cd9fc8051837",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a394a42c-23a9-4e40-b3a5-8a570848221f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f69d45-bac0-433d-8015-1a830d0eadee",
        "cursor": {
          "ref": "a5e5bc6e-94d5-4f7f-9a0f-4e02609362ec",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "96056e86-f11e-4268-9c29-3be27b064fbd"
        },
        "item": {
          "id": "90f69d45-bac0-433d-8015-1a830d0eadee",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bfb45204-c689-400b-bcde-abd503850a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045aa811-8b37-4fdd-80a0-8bcb043c7301",
        "cursor": {
          "ref": "bd11a3cf-52c5-46f5-8334-69846f37d38f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e550e951-5be6-43c8-b932-0e3a8b75a4a4"
        },
        "item": {
          "id": "045aa811-8b37-4fdd-80a0-8bcb043c7301",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5f74d16a-644e-4586-b489-ccec05bce9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3a5206-3d84-4b07-98a5-fa28ef146bb5",
        "cursor": {
          "ref": "137af730-39cc-433a-aae0-d1fdea45b0a6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "19e9d935-49df-473e-b0f3-289b29f698cd"
        },
        "item": {
          "id": "be3a5206-3d84-4b07-98a5-fa28ef146bb5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0c7d5e9b-6216-4f37-9094-80a4fbf9724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0935db90-0d4f-4be1-9611-ec81caf25c47",
        "cursor": {
          "ref": "7f754331-2f71-4c9c-a1d6-001e6446ec85",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c41aaa01-0538-4af1-a4ad-bcdb77bdbccc"
        },
        "item": {
          "id": "0935db90-0d4f-4be1-9611-ec81caf25c47",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "89aa00d3-1df5-485b-b93f-4e1e870b1acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b211626-2d88-43c7-8c95-fe6c07975ba2",
        "cursor": {
          "ref": "71c6b010-c217-4e98-8dd8-045b9abc5ef7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0f804911-fe65-47e7-91ee-ffc4edcdd8dc"
        },
        "item": {
          "id": "1b211626-2d88-43c7-8c95-fe6c07975ba2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "22c43c21-6829-4201-a894-aa30b56bb4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070c104-9ac5-4cec-8c03-a61df87ec7cb",
        "cursor": {
          "ref": "dd6ac9e4-8d59-4354-88eb-f2b3a0609318",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1d3b565d-11eb-49f9-a3b5-3bf59b844737"
        },
        "item": {
          "id": "e070c104-9ac5-4cec-8c03-a61df87ec7cb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d740e03-239f-4eec-be39-931cdf21d838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c47126-8a3a-42c6-b1f0-201a55c99a3a",
        "cursor": {
          "ref": "c8aed177-0cca-4f1d-9aba-6d1170079668",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ac2da3fd-761a-4c04-b043-20a5ca4b5bdb"
        },
        "item": {
          "id": "32c47126-8a3a-42c6-b1f0-201a55c99a3a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be47c5f5-b4d1-491d-ad74-8120e7da5252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80ab891-f2fd-4d74-ae50-25ba298e30ca",
        "cursor": {
          "ref": "0e9616b9-2fec-4b6a-a6f5-9a1c22d6b4c5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9eeefb49-a316-413d-bb0a-eafc4c6a6852"
        },
        "item": {
          "id": "e80ab891-f2fd-4d74-ae50-25ba298e30ca",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e3823606-78a5-4b1b-a96e-62e7814a205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f59faf-a4d4-4eeb-b8a6-f1cb6df6b816",
        "cursor": {
          "ref": "289c9b6b-5495-4cc1-aa36-d493f2453d27",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "937145b9-27f6-4827-ad14-39903401b276"
        },
        "item": {
          "id": "79f59faf-a4d4-4eeb-b8a6-f1cb6df6b816",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ecbfe00b-1153-4593-9963-d53c412ad207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef793d59-c544-4481-9e3c-771ae4916070",
        "cursor": {
          "ref": "30690d80-c2a6-45c8-8b65-0331ac8b33ac",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0b62d57c-b727-4b7e-bd84-addf28bebd19"
        },
        "item": {
          "id": "ef793d59-c544-4481-9e3c-771ae4916070",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d065e378-043c-4efd-b533-c7db47d0f0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb72bb-c21a-49de-bed0-9adc7bc43c6a",
        "cursor": {
          "ref": "0317509b-f98e-4220-9307-87a4ed93b2f9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2dc43899-6f08-4934-b588-beb5ecc100a6"
        },
        "item": {
          "id": "3cdb72bb-c21a-49de-bed0-9adc7bc43c6a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "88b08554-3709-404e-bf6e-7929222ea829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "29361970-1720-41e6-a6bd-5db2bcb2c8ef",
        "cursor": {
          "ref": "61361740-6b20-4a3d-a6c2-2ce98289d6f2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e5469410-1e77-4dae-80da-da6a199d9b8f"
        },
        "item": {
          "id": "29361970-1720-41e6-a6bd-5db2bcb2c8ef",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b986f4b8-d1ad-413a-9259-c3731990fa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "ac552ff8-8e84-4e51-96a2-4b5bd78312ce",
        "cursor": {
          "ref": "7cffdf8d-c9e6-4f7b-9279-c3a5b9859db6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8ac9dc6d-bf6b-4e42-aab6-5dd7717889f8"
        },
        "item": {
          "id": "ac552ff8-8e84-4e51-96a2-4b5bd78312ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8dfe60a2-e4f9-487e-8b75-125b915b5497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "a9030282-4b7c-46da-a6e6-804014db4acd",
        "cursor": {
          "ref": "cd56e8cf-8e0c-4e45-965f-5cd84e81705d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "15c09724-b6f5-4974-92fb-fcebb30f1fe2"
        },
        "item": {
          "id": "a9030282-4b7c-46da-a6e6-804014db4acd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a60dfe88-da63-4c88-a266-40cb620edcf3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9030282-4b7c-46da-a6e6-804014db4acd",
        "cursor": {
          "ref": "cd56e8cf-8e0c-4e45-965f-5cd84e81705d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "15c09724-b6f5-4974-92fb-fcebb30f1fe2"
        },
        "item": {
          "id": "a9030282-4b7c-46da-a6e6-804014db4acd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a60dfe88-da63-4c88-a266-40cb620edcf3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05dfb91-23b5-4439-ba0c-e80cf1d32ae1",
        "cursor": {
          "ref": "ea101a68-b60e-44f5-b82e-e348abdba4b5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5590bb48-0ce0-4964-9f85-412f0593623c"
        },
        "item": {
          "id": "d05dfb91-23b5-4439-ba0c-e80cf1d32ae1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "39271faa-968d-4b66-9040-3d43d8b7fec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f8e036-f6cc-4387-a121-79fe21e06700",
        "cursor": {
          "ref": "a6d01949-1758-4d22-ac7e-012031bdc25d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "28b12451-590c-4a7d-b502-1cf05b83c3b0"
        },
        "item": {
          "id": "48f8e036-f6cc-4387-a121-79fe21e06700",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "df1ef49e-6527-45ab-9770-eec817658a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}