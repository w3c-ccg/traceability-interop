{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "064f6b0b-3790-40f5-ba52-89535c7909a0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "be3fb159-956e-4926-b230-3ef9b3e3260b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf58f088-a2a7-44b5-8260-935ed3b77557",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7802fdff-95ed-4a08-ab8c-828dfb99792c"
                }
              }
            ]
          },
          {
            "id": "ce2bbf53-bb91-4330-9292-38269086a34a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cee3ccc-1d7f-4c55-b065-35fe8170048f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa5a084c-ef6a-441f-b19b-c74e9c687ddf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f7f0c098-63a0-4797-8dc7-145fb471cccb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "32ea66da-3457-47a9-88a5-43f208de431e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39691bc7-70c2-4e73-80e7-9d15d82af911",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01d5a4d8-cbde-4c48-a591-25da42ff1430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c735e0bc-7699-4d00-80cc-73a85088cc2d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c62a3a1-97c0-44ab-94b9-5411e0879e8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8255315a-1c20-4c9c-8fd5-a0c0888212f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41aea8a5-72f3-425c-919c-6faabcdc94e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "058a6b07-403b-4828-9d9a-d5428299d550"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ca5ff12-a2d6-4800-96f7-b9598b09ac16",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "35f9feae-4bab-4ef4-8198-c99ddd913256"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2513044a-d2d4-40f4-88d0-1c370ba3b555",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cafe3949-6b9f-47ab-954a-4df52b33cac3"
            }
          }
        ]
      },
      {
        "id": "204616b6-2813-427a-a61c-1d162c8801ab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "25209761-4002-4f62-b376-7e0f591559cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bf3ee5c-4136-49a2-add6-6432a36197b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba7fb6eb-674a-4710-8a39-e7c3aa5672c7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefc33cd-953b-49a1-8446-bbf759caff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ab4be4a-66e1-487f-8713-5eb970167513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78905563-b315-4d9d-8e7f-94aff75975f1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a6e506-a7e8-4d62-8438-5f9fe59ab4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7687a86c-a92a-46cc-8e66-18740ad51d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37d9bdd-d209-4133-9d38-ce9a170908b4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dbb94e-18b2-4a00-82f8-9b4dc335017a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfc92637-ebf3-4909-bba5-af4c15d02b9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "532056c7-ec80-4de3-9594-3ab77b5043a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5457dad1-d06c-48a7-b920-c9fd8797a54c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81221ad1-58cb-4ac1-a994-54caa44e7f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "096f5564-c24f-4657-be65-36b682a51db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63039595-8b52-4cf8-87c9-f81935e138ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d67be8-6a85-41c8-8663-982a33193be7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef9ab2bf-0923-42a9-9136-e410d44c6446",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfa495e2-c82b-4947-8fa7-8960828a89e3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "457111fb-2ea0-4d5f-bbec-e051a16da0e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f0fe893-d759-4bb1-b94a-227454c1a336"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dfe9692-3f67-4bc2-b807-b261606622d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f79f8635-2375-4a5f-897c-3fdfba936758"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "726eb7a2-4528-4639-a5f6-0bec42c890aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbad03d4-693f-4370-9d3f-2f555ef53173"
            }
          }
        ]
      },
      {
        "id": "1d69e477-e737-43be-9b31-7d8131c57b64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d3c47e9-5c02-4950-8885-4079e06d9a4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dec6650-8604-47dc-8396-12a2784a543e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "763c4b68-f783-4293-892e-f42f77617011",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4669bba6-4d8b-4700-8e9b-c334d618d6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0d26dd-36bd-46af-9499-b62b783cf793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b11fc1-836a-4f62-996b-8d011c7496be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e33e3c62-defb-490f-b100-fc46b27faaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbabd48a-4400-4082-81c6-074a8c1f4d46",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23e9f59-9be1-49ce-8acc-73a29765b349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc3093e-2e97-4905-884d-92f33f03a1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e43ab4-6976-484b-be2e-e165f12f23ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b530885a-ddd1-4451-8f5a-79cb62bc67c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8c7444-ce9e-4a71-918e-ddaa3904b5fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35723e6f-cbcd-4f9b-8fd5-ea12a8188e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e661128-f703-48b3-886f-fcec8454e7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360b1cea-7c0e-42e8-9c3a-0f1ad25847a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ddc1795-b470-466c-97af-749abcdccb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b6b827-9716-451a-8050-29d38374559b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3551d31-8084-4d9b-90d1-2ca805ad0eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa59c70a-5580-4343-8d33-2dccb24a193e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2abdc75-dc76-4ca9-b34b-f1b0aff4ba3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e32331b3-3f1f-41bc-8355-f3712330a1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab049b6-3bc4-4c11-977b-0199de96cf32",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ad4482-745c-4334-8d39-0939e3070976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3074bc7-d529-41ea-983c-e8d6c20a033e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a078fa70-00f6-41c6-b454-b8614d7dd7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2705d984-fc2d-47b0-aa42-c557f96db898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc19bb8-ea9c-4df2-bd36-936068f8039f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28b4023-dd31-4956-b3a4-87ac4b7a6363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcdfea7-46af-4a44-a2fa-4e73b1e095ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee9f63e-1117-4230-b8de-848bad44148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22e94cc4-b5da-483a-8800-872c30fc871a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad549ad-18c9-4ce3-973a-fa3de8f96ef4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19263e9f-1a71-4785-8943-f3265eaee0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26d3cde-93b4-40c3-884a-52208abd2920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760a7eea-bbd4-4e00-b09f-841d40db1b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02e8b8b3-b677-4181-8d53-9a4e359cf787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4fca38-529a-4802-8d43-7b534dadd2fc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f988aed1-adbf-40fd-85a0-37b5553dc276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603da0b0-512a-4363-b82a-958009eb9613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab46daec-8dc6-4dd2-96e5-12f6ff0928f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eb64372-f27e-4931-9878-63d3b8db4938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf22a02-4122-49a3-9068-d0fa0d94cdef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6fccb3-6b48-4f6e-bd98-9b53508456c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8b0961-6545-4556-89c0-4d97ff890b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402a0700-ec8b-4b56-a0a1-213734d87fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d383160b-a029-4c63-bafe-26383c9ed7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9904a70c-582e-4044-91bb-35cd7bcccede",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ec44bd-b632-40a8-a470-f4996de90d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfe0838-4fd2-4e18-804f-c56bfe285e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91935077-2a52-463b-976e-944350a53d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b14a9483-c57b-4381-815e-99b39c5626c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73408cb5-9a66-47a9-a12d-bf15f324efaf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d9ef64-20ea-419b-8e5d-3a20c89f1c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fa567d-42c2-4add-8d76-54c5c6e03b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe73385-883b-43a1-8833-72b65e184825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e7ac4b9-7a4f-4097-9125-b95baa3d3ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eb9a4d-890b-4def-a1f2-b329890f478d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb38cb3-dc4e-4cf8-b46e-93aec4018d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcb56ef-1686-4ebd-94c3-1b5f5db5c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c530022-82fd-43fb-b0ed-5fbb65294b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0aaaa0e-f193-4a4b-8a47-01dd1eb57f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2243ce4a-d9ac-40bf-8e13-ae5f5aabd529",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2a7480-e1f0-4ead-a946-68ee7e2039bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831f9d62-461a-444d-b2cd-f9d2b98d9b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4629081c-b187-47a8-8f37-b9d94d9d43d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "939892da-eb36-46d6-8fa1-b86b31a78206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05004946-7ed5-4d63-8399-1fed56704451",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdbd927-fa88-4b58-90bf-7650a8bd8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965d3271-a15e-40db-ac8f-a8bac971a793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0273fd7-063a-4301-9f6b-b7dba1113b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d5adb82-6965-48c5-8625-c609c3d58359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63788478-647f-47e0-9fec-de223cdcc0d5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083d70ea-f49d-4fac-a1d1-5a62515ed7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977d2b94-4b8b-4abd-969a-2aad4acec186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4947e7-2118-4efd-8b66-fc4fef732807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "601bfbcc-e29c-4b0c-8345-e3e937eaf948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ac4788-12f9-4b75-9fd2-cc4e3e172274",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df236f30-910c-40c2-8212-c92f2e962e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3724b5d-b6be-436e-ba87-6fd07ec7e98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9fa73b-1761-4d61-ba91-7067d5755da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49d213da-87de-4d93-89f3-3af774cb751d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df43730-0556-4b37-a0c6-c25985515593",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bbcb7c-3dcf-43ab-9cae-3f93d2a68fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dbd49c-5fd6-4a08-af76-5d51b027839a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c8138e-5a4c-443b-87db-b24f08dc7c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f6448e-dee8-46e4-9f40-3e545621e490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d29227-7717-446d-98e3-d7ccd27c4ae2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b085002f-8ef1-4430-a4f2-3795f73271bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09fbf3f-5833-45af-9de5-3e42cd734c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f368e247-e273-4592-9a8a-eb928e37ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14f9d71-6b37-4bb3-8a25-74b3ab4fff8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726f76d-206f-4e17-bf43-44186b022cde",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5e9b86-5bee-4693-9289-4668d25bdbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb347f9b-9e7f-4429-99d4-00fe0dd38e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0143a5ac-92a6-45aa-9925-30e070af0f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b14c1198-27f8-464c-bed2-76abcab81caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a7e81c-e226-4f34-abf9-c6fb1e4d54a4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a5c323-1184-4bf9-b36e-f95232802fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7392add-ddb7-4355-b006-7c754b96de1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2ab53a-342b-49fa-af3c-478237df1849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55564c86-3dde-433f-909a-f200c9ea4909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d25c6a-96aa-4c24-a8d4-d41ba028ba18",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d93058-6f27-44fb-ae3e-676caa170faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1601fda8-05a3-4baa-b644-4c36c86e9ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcff864a-e660-4833-96c7-162b6c6fb209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31215a19-374c-4a9a-b4ad-6eb78ed07017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee0d759-7b89-4c70-b835-172c9df29211",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044738a1-6243-4e35-8bd4-8a59f8cc279f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f7d282-c5af-4298-b884-8ed150b0f1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2b05e9-5e5f-4bfb-9693-6aa26cb62790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02a0a2d2-119f-42f0-aa02-6f450c234c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d531d305-da25-4e07-ac59-2ea5c5974b4c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf8046-ad1b-4ef9-a7ba-4054850ec450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cab58df-508b-4614-9c31-f1601716eaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b812aca-8119-4b9e-bc04-045045999104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "577e2e88-7000-490e-99cb-1459d77db97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2e3191-6454-4949-9422-b548e20f549a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815584bd-d438-4e3b-8b6f-1e9dfc31cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03893598-e086-4bdf-8db7-0121b96105cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0990754c-9ad1-45a8-abb9-3d3a657c21e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50e2b69-6110-4dc6-a0c6-4ee2253b8171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f304a90-8a27-4cd6-bcf2-3d0dd181e9e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69964a81-44e8-4530-be93-19867bebaa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cc2d20-2aed-4c75-a201-09331ee177ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cb7c2c-4053-4a51-86b5-efbf652d359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ec2ea1-3d9f-493f-a348-e2afcd8cf8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138f2720-4e9d-4459-8ec8-7ca79e2eb616",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052487ff-981a-4f40-92ce-e8eacdd5deec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0861873-a730-48c1-86ed-d4a09d027962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ce822e-1407-43f1-b172-cfcfe11af7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a6c8bd-f8a0-497f-a21b-a4c9aaebdb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289d5323-9ab9-4a2b-b32a-d299a87483b0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed94564-cf36-4865-ad81-75734facf623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d52f06c-83a2-45cd-8258-21253185a8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1864d7a-31d2-493d-a3bb-e4bc5a11a57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea16d89-1940-4eb1-9615-1480d798215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da36425a-2e81-42aa-933e-e0fbab253683",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8a7f7e-5a0a-42aa-9246-74b4f4d8994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d962010-05e5-4108-b609-2282d3d8909b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b942487-0b64-4ee5-9295-f7862caf4178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c79e91-9c9b-4e7c-9f12-e81964b50c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f206b5-0642-47b7-a722-1cc0c5c26a72",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d289bf-79a3-4cc2-a717-62d5c53f55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324d4cd8-8c62-4fc9-811e-f9849c6b865c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c367598-d962-43cf-9354-e004a6d0e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa51764-3231-4de6-a16d-8a829d3aa8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5c602b-d000-48fa-8e5c-47f43bef3b44",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cb451f-9081-4d8d-aac3-c32287a945e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2e895d-00a6-4beb-9715-67630377c4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99581b1-7da6-4799-a476-9407da700b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf1a7ab-5b3c-47b8-96e0-4a5d78db984f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f0c1d-b1ed-490f-aa29-b2f7f68f46a0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0fa946-329a-4960-b8e4-4af72ee7729b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb360ab6-4ef4-488f-8590-6978f99959b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbefbbd6-b6b8-47f4-9d1a-841638280697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "910507ab-df62-44f0-b2fc-d3ebcebf653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b75e0d-15ae-48f2-a04f-68757ff980a9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5af8fb-928b-480b-a94b-ca0328b87eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6a168b-d881-4686-9694-b886f3e5c0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8b548-5125-4756-8fea-fa8b2dc83a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c7f723-2d66-4379-b183-f07f1801a4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405d0eb6-590d-469d-9ec3-6c01e2eb8026",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c375492-244b-46a4-8c15-efc7d7a0ec2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a014809f-ca77-4ef7-b371-350e6089fbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651e5afb-5357-4787-8062-ebdce7cc3630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b47aa9f-db8a-489c-897b-e66d87976aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f91039-8fc5-48c5-9e13-f7d3f6f92c6a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84836598-5162-412b-8b9b-1b3b6c56265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e96361-1ac5-4665-ab05-33e656acf20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2d866d-54e0-44a4-a30f-07534c884067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4093c1-5675-4af3-a225-dc67a2768230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39750e0-80b8-429c-a2c6-a04464d13cb4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f03418-17fd-40f1-b99f-76593f89dcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181f3b0d-d5c5-4d8b-9a09-4f78daa7d8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f169428-b873-4f96-a8b7-a535947a43e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b0483c8d-5e73-416b-a241-19f08037d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df7793-bd4e-43d4-8612-31f1a83812b5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6bc2ef-0393-499f-b2f7-2a40606dc75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d25a7118-3342-44e7-a2ed-39b0e3fe4fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148d02f1-2ad7-4c9f-bf68-bbfcbd74a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aec49fc-5246-4fc4-86ca-f5c77800145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dcf32a-1344-4ebe-b398-d540315f4c2b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66405e65-f575-463e-ab21-12e11be66242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcb27ae-1455-4f74-8ec5-5dad92c5e794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0db1f8-3e89-4e88-b39c-03bd58bda1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83998b15-f3a3-40cb-a595-3b97cee212c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ead49c3-1017-4501-834c-803e1cc84d3c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaedb180-e888-4e61-8ba5-2c875d8f9074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae89ef3-a953-4294-89ca-62f3c76e314f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13df6978-c97b-4e1e-a8fc-b5543e9abc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdecc54-a95d-4e8b-8c95-4fd9853ff70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2b9346-75e6-4c4b-847a-01a89c430a28",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989688dd-9797-4c55-8ed8-3ce4e6ddb13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b44554-e330-4df0-af96-ac44127abb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30e2649-d686-4fd7-83e1-67d43c0a5293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2977043-1139-4040-8c03-4a4cdc91aefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47381fab-8eb0-4c5b-8b01-cde4ab1edfb3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2506c90-79af-4678-aa5d-5458a90da72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0c720e-6fe2-4ae6-8183-ee1e128c127e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b836aab-2a44-489c-a1ca-e1fdd3220f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e38b563-e922-4faf-ad49-64850d4f8084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd5b4c0-4a71-49fa-a3fb-757db68f93ed",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614aa0a9-200e-4dfc-b0cd-b7b41c27f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8349221-7576-4dfe-995d-f19fa1fa187b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e19f454-4a83-4e6b-ab01-e77a4cf7949b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1c488c-595f-4c06-9962-091de3c8da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f515ca-6f4f-450f-8f70-ad6ce99b9e44",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77b227a-6135-4112-89bd-943afae5ec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b347cfb6-3d78-4e9b-b23a-a83316a3792e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5722e81d-dae0-4fb8-bcac-c55a144808f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d44e2d-0bd2-4af6-99d2-ec41d320afb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d484a75-b007-4e16-bfc2-5c25d74da8b5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1089b26f-e792-4a81-8479-e8c55cf9656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae5aace-1bb0-4166-8f94-2f19b6167a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336ccf4b-e59c-4cf0-a5bc-ff4a2f720d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0507e242-9174-4357-a338-c2d10bc268ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6b3342-e0b1-441f-b767-ef07c5b7520e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ac200e-2254-44d6-a7d5-b6b53095f613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0d16e4-b952-447d-9327-8d6a656b2fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc0c4e7-f178-4a65-96ba-451ebfb36b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfba1aa-912c-49bf-9ec3-1c5723a06260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3222e37-fde7-4b60-a474-b1235cc8c125",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e8729b-fa7e-49b0-84ea-dec995b382b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f81976-5e75-41b8-bf38-74a9df842721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c42696-b5a7-4c1a-9d00-308e13fdfeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1281b5-ec4b-4bfe-ab85-3829d52354dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fceaa8-9af3-4a67-b22b-dc955c66d29c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2348bd-72fa-4d17-8429-cfa8b584b70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdfb6ab-274a-462f-83e6-9c25776897cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581a93e9-a577-473e-b91c-92718366e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22b694d2-fcbf-4770-84ac-797dc4d380f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce77714-3e2a-42d9-a964-76c1dc4d1947",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8cd61a-2b3e-4cd3-9203-ef8e7d071a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cacb29-8cd7-4fda-81ef-41bf80379fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1d0df2-6383-4994-810d-8722147e1791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25855541-0072-4509-a30f-663a2f8e19e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161775a2-0b5c-4bff-8a61-184ea7a79988",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f95a416-6dd6-4c03-812e-a380a16033c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222e4873-4a85-4e4b-8398-6bfe3d1446e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d433efff-0adc-43da-996c-e975dfebe115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c116f147-2167-47bb-b45b-2e4f09ab56ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def02fb8-9237-4bd1-9974-fef0f24066a2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476d35c8-2d29-4255-ae01-5a3b5c76b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bace324b-8757-4d02-aec9-d05a63b51183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbd8599-1b7e-471c-8ce0-085dd2f52d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34f74594-a6a2-4cbd-9091-5ad92f32d7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b330a3c-4e6a-4aff-a48c-ed92cb10bb11",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9598f21-762f-43f0-a094-048257725b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac05c6a-9477-41e9-9324-db48bde8f471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76100c5a-c5c1-421f-893b-55c714e50657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28f2a5ae-cdf2-40d5-8096-8d053c713ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b697e7-77f3-4eff-a8a2-ecc32074fce2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef614c61-6bb9-4ae7-91f8-c83827965c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8c80ce-79aa-4b9c-a46f-2eb3640d43f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951e1855-5081-468b-bb8b-eb413b5ae369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d812919f-c7c2-45d8-99ef-bce1e36b2dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f4d55e-a5dd-48e2-89fc-b4a3817ead8e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62352c4b-e673-4171-af46-33c43acfe82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e14d2b1-5aac-4c2e-bdc6-f9551f9fea45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cf719d-1961-452e-8cc3-6fd5981d7bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af7052f-5b29-4e94-a913-f9fb45484646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d859df1-96f2-4cd7-b7b3-0b3b7711c071",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2028f906-9c05-4400-911d-9011441a72ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc43c27-9114-4077-bb98-b297d38c4fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9474b28c-a9a9-4ac7-9dde-2452496cb2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87462d3-f93f-4712-b6bd-28057449cd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e54cae-839f-42a8-ae6c-32ce7ebe9667",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc89424a-4e99-4545-80e0-92fb60aa1911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd0cdf5-8afd-4be2-b8ec-2309f5ab745e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac432f3-afe4-4bf6-adce-513f7c3e25cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcb0115-4f8c-4208-8b30-b4713f1319e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5aa789-cb65-4d3d-a9e5-c9e94f673d07",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacbdd69-114c-49ae-8fcd-d64f240639da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ed80c4-991c-4b52-9cc9-c302f1cc9bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a797114-7693-45bb-b4e5-79fed60a0847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b86297c5-2f8c-4f88-a498-1527213bcb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f21efdd-fbf8-4f33-bc81-8d1cf9caeece",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4d4e8f-1166-4bc8-8951-69e5d5909e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6c1e9f-e8bb-4d3a-a021-a36739d1c518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae82d13-0e52-4130-8219-b30915993d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9c9481-1ef8-4b04-ad4a-f28b5405d5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9b7a9f-6ee7-451c-ad6c-67a105c96189",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732341f5-f287-4637-9065-77b06c040778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6187cf9-9ea4-457f-8fcb-4cb46411ad45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dfa231-e3f1-40f7-b661-6c166e836668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec284b5-0488-426e-bbaa-7a1a8a6d7ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edeb21e-8275-4b52-abfc-67829eb0f3d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce3ed17-663e-402c-b97c-55438ee25d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd2f489-d8ce-4e35-a49b-8eaafb74ed12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b83c8-e32c-4db8-b2a1-64feb450edc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64ace78-09fc-450f-b64f-80d9f12b5db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b90ca2-3b2f-470a-a778-d22fe2ed0e09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70430bf5-d30b-44d7-ab63-41ff4c6ebba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb37910f-aebf-4882-ab68-f545519b45ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828d0f41-ad05-48e7-b84a-0dc6913f6ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dca2d944-985c-4eaa-82b6-8ce651ac69e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf815f1f-e8cf-4696-8a0d-a43f3b218e3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea591e87-e2c9-4858-a769-4ae2d23ffe63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d666ae32-485f-4145-8a94-ccde1f2ac88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f99aea4-e906-44ba-8dec-93779c5dea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1136876a-ca06-44b3-9785-5f72db4b70de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f5146b-53fd-430b-8acc-b2636120c726",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f363bc1-0f16-46ae-944e-2d4520f8c252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15841d51-cde4-49f1-a78e-81d2284777cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf75d08-eb0f-460a-a0ba-068e3d915f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdc9c5f-f0bd-4104-97b6-c3327a1b8ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d226735a-5de8-43f2-81c0-ca1f68f7420a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4ef56d-72ad-4c42-9561-d31123589e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed4ecaa-c2c8-4138-baa7-1d407bed48e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3841f882-9263-4fde-b7af-42ec2808353a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8779c434-fde1-48fa-aa1f-e74c23402af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7441456c-09e6-441a-b516-550fd5d1350d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbafcc22-8b5d-415f-bb9c-03f56eba7b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca4596f-6797-40ea-a296-a75b36c0f8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f37ae4e-dc56-462f-a77a-16049b626fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "196a9b62-59b1-45e9-a1b4-c5af772011e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111618f7-c04e-481e-8858-59c84f39344b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b47d2b6-1886-43a3-a769-622adf1867c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a0f1ca-eff2-4c01-81fb-ce33aa8be831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ee6efe-9707-4be2-9640-d1a1cf7b34b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e154322-5493-4033-bf92-0a606016f493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd3f24c-c7c7-4aa0-affd-2d39b56af46c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba45bc2-df97-4871-90c5-d0d71fca9d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c4c5b9-d3b2-4172-a51b-96afe86804cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f27c4-e2ef-4a91-91f0-e137be2e5221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d6e2c5-6b2a-46c2-a897-5f3e71c3fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73c9c53-6a0f-484a-b183-1e69754db088",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2e5578-50f6-4746-976d-a5872e83c3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9009cb01-e170-442d-9f0c-8f3e02904e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5987cf13-824c-49f4-8ab6-3059501442c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8620ff80-4260-4a3a-9724-23754ca07109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2177d70-ad97-4586-9bf0-4c84ccdd5828",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d5b78c-643c-4bbe-ab0c-bf6b0f18b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a31e094-606c-4eb6-9219-b521a08485f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ea7926-1e6d-47d6-af43-1369ca281122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efa0b610-226f-4bd6-8776-ba99bad23988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4c664c-188c-4239-9c4c-1ed8743a96f7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4708cdf4-6515-477f-a32d-0d08bf2e84ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df06d82-78ec-4bde-80b4-6bf5259ca177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efe4958-8e63-4d56-a94e-eda847efa554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "801d0336-d925-48c3-8d25-d329bbacc0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9d9eb8-46b7-4dee-97c5-a119df7a728c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1888ea2-f7f7-4aa0-a53a-264c4b956464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182dbace-2e4f-4520-93a4-bd788c7dc819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e17cc5-e7ca-4bf0-ae30-da6b9d5bf585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5924bd6-b5d1-4317-9734-7de865493a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b4dccf-2e25-4583-9c70-3ccf658125b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaf61fb-9000-4cda-81fa-2d760f414348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6679ba4-cfbd-45d3-9145-a3ec45ff6475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f40ecab-98dc-4623-b4e0-95720b867c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd119abb-9ea7-4884-bf97-4883fc6bb1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fcfb6e-ef6e-4392-a93c-2bda4a564335",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384ea144-abda-42e8-9563-96e165f15ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d2a5f1-30c4-44c8-ad5e-fb83246d911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df4493-c33c-43f4-a972-46e838ec1efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "055f8167-0b7a-4b64-b4bb-d8339062faec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4a1823-f305-450a-bcee-b54a3ca37f48",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5b7b1a-1635-49bd-9efa-a58ed408b437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0160f9-a20d-42cb-aec9-935841e9693d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c25497a-35f2-430e-912e-fc5b6ca4e1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e966399-96a8-4a42-8a61-1b4badbe6b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bccc854-154e-47e4-a785-e30cb4fe2cc7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ddfd4e-651a-402c-a34f-2c252c56038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e052b6-cd97-4051-8e89-06e385bbfed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85de7bad-09c6-4c04-b758-3f5ea3862792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4cb379-eceb-494c-9a2c-8df232cc21be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a63cdc-0651-4588-971f-b5a3f049afb9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310ba11-afe3-4eae-9da0-c57d3448adfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92b7897-0e8e-40e5-b13a-2c6ef6888a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b354f0-43ed-45a5-b2f8-0758078b300e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec8fde6-0fb8-429f-9bf2-20b45d8bf76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95990c1f-f8dd-439a-bd21-8707d8fc8d3d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6dacfe-b77f-4c6c-89b1-63d8cf42e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743c2872-fc66-408a-a750-268564491355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d96884-bf03-4429-83be-4e23a3e312aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48bc731-14c5-4e3c-a96b-70b2b4e95849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058ed508-7937-4cf0-9fe9-4cd9503e73a8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71dd37e-48b2-4168-bd33-23d1f6e62e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c206ae43-c2fe-4160-9cf5-2470be49ad6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cb6b89-2596-4da5-a5ba-b37c592a879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b041f2b-cdec-43fa-9ca4-04043a431658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7f0032-4140-4022-a522-5bfae6532093",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea999f25-4b18-42f4-b0a5-fdd6304f9d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d18d09-e39d-4c49-8d48-123e84dc0aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53aea1a-a339-4bb2-b488-ed7da48b53dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0aa48c-b800-44ca-a216-7cb4ef254112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81c7016-8ac4-42a7-b08c-27d9f5132b36",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48399dcd-c740-4910-86d3-e3ae74721018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ced63a4-dafd-4ebd-910f-4258fc42bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d8a5a4-c286-4fdd-a164-919d594fda64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e67099-c5e2-4b21-9688-da056579d7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b77e61-4614-4534-b5e1-eba5e3eddf96",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1499d243-f82d-4d04-b223-24a683504635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08690777-d226-4f85-bc87-570f2e18bc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177b3457-d711-450a-b509-29cd17436869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77290dc1-04a4-43b6-a9b0-7dcc81a5ce82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30669f58-c92c-4146-b188-a362d3216a35",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bd7029-2194-4692-a733-f65ed576245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876ae5a7-53c5-4662-a41d-0e00cbc7c147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24b5145-1c72-4c2c-b44f-646809dd836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1866c84-0dca-47dc-9398-3be0759d6ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257d64e4-1b7f-4423-996d-ab6bcc8b930d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eeb3a2-38eb-4162-816d-0f4d716a984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a82a0fb-59aa-478d-9714-52a8724d37af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbf9a48-0307-406b-abe3-d5cef5e3daa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4f759a-57c9-4504-8896-e7bc1bd95f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba102c69-1c4e-4a79-af4b-80d2410c7b6d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a95793-4eec-4af0-b75d-e35172a5aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23733a97-71a7-452b-b488-b154d613b9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96af55e1-2331-4295-859f-5ae6637fadd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af8d8d7-2b6c-4551-9aed-98925d833fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccd5ed1-cef3-4ba6-87cc-b839953bfb7c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8dbe4b-9d30-43a2-a6e1-2a48525afafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9498458d-ca50-4309-a368-8664ea0cf23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259f259f-5ccf-4243-8fe2-05c81ef419a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d314a-f729-431b-8b03-c65ce5c91136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95a247d-2ec3-42b0-b24f-dc38caa5db20",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f6b888-58fd-476a-8285-d0f2eac34bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1156fc7e-471d-4005-9fb4-01020518e748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe89751-fc7f-4e80-8848-6bdd3c7301c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec067ba0-afde-477d-925f-fe117e31a4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5521a689-64eb-474d-8b03-33d2f3b32284",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b508ea2-1162-4687-9883-39e303e85e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2dd59f-0f4f-4486-840c-5d672de34e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a8dbfc-033f-4768-8adc-ddd38b416dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c1b6db-dfa9-4f62-9190-57c5b77f55e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8254e65-bca6-4273-b4cf-f0316cc37caf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47e964-c1fb-4bbc-96ff-61a2d364d063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9b6e11-68e4-43a3-b1c4-8c06294808c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2f3b09-b3df-41ed-bbaa-cae7b478dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d1054e-1791-4b5f-974a-ed5e11149e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2c4f4f-c10c-4c0e-9c84-4f00720aedee",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28e0ae9-b0f7-4be6-bca4-96ba790a9913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c966640-0862-4e80-ab23-3442e36e4505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943bf0f5-c8a9-42ad-8ee9-dacce2e08348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f366f79-ad59-41de-97ad-9407421cecea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b54eb-8804-4c94-b9f7-fd11b6427a90",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a19717-9af7-4f38-bfe3-8f557b4fb039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d68692-eedb-4d5b-8503-b6804f2d1083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82a021c-4974-4f70-a05b-2d97e0d38ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "873a6a76-c215-4028-8923-75f9b7021202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13848f9b-d8f4-4768-b210-4b0879976cc4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5629a41c-3384-4f94-b737-ac8cf25b37f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109795bd-0ca1-4c0c-8b9e-c967230e2e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a081a7e-2cda-46a7-a65c-9ef89b08dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4c16c6-062e-47c1-9cc6-a30a22eba501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d303f1b6-05f6-4c0c-a348-421abd6dde08",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344df51e-008a-41b3-88a6-fa1f38134f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a61707-331f-4b69-818a-50bf468b406c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110b99f3-64ab-4c7a-a14c-50a01ababcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9411f2-ecea-4dbb-b307-7944d171f1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97b6ce4-c2ba-4f16-bd4d-687aa75cfd02",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fe661d-d389-4281-bd0b-3e11f78b1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab57b60-e587-48d2-ab39-9b046a71c85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3d90a0-ad84-4057-9faa-8be0b4f08d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b400718b-ab7b-4f28-8114-3747eef9b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fe5b3-fc4b-4146-a603-d1cd950e2b5a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45832043-a4da-4256-87b1-42a55ad4da4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e3ef612a-7675-4c8a-a4c7-fc17cf9d1a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a7f2ce-127d-4b17-846b-baedc29b5fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75afb333-d8d3-4dcb-9fe3-32748344c621"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "674fcc17-480d-42f4-97a2-20f789496212",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "979e2268-53fa-4b4b-acef-13866754f0f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de2ffb1-bffb-418a-81e7-22ac1015c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f18b3ad1-d493-4fdc-ac45-c95e56db7a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dcdf1e-7a17-4e3f-a955-b601986e86e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f970e0f-60a1-4bb7-9cfc-c24ceb38e58a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17923734-cc45-4e38-8fc3-e49bdb2f314c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5edc5d1a-9ed2-4c61-9b4a-6da1f05d979c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dae9ce3-fee5-4883-9706-928348c89f2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09f25da3-694f-44db-8540-3b5139311fa7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8518363d-c620-42ca-879d-358b32966704",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "893d489d-5f2e-4024-a4dd-185c7ff63c39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed007bc7-ff4c-45ac-88f7-8a962514b8e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa12c07d-f0ba-42fa-9950-ae038c4dc12f"
                }
              }
            ]
          },
          {
            "id": "9ed2fd13-85db-4ab7-b537-e41c86d5cee5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0dba0eba-139e-4c26-a16b-dadb245c2687",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "24488225-d550-4d31-a804-f37d15dddf1c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d351170-aea7-454f-94d6-8f5d3caf0178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a726ccf1-7a4d-4cb3-9461-714eb44cfc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56875d67-c487-42b4-b5d3-88361872e015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b845025a-3870-48db-972f-1fc18581bc1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c603cc9b-4c21-44db-a6c3-237a3f2085eb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8f92868-55fb-42b9-88d2-4e76839828a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7cc83b6-84ca-43c5-9985-4499253ccdd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef170c9-b161-4d88-91e6-daff7490411b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71a745c7-80d4-4d54-8b31-26320c2a1549"
                    }
                  }
                ]
              },
              {
                "id": "5a297505-39eb-475b-a0b3-8b18074f318d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7762a42-390a-4777-8430-6eb8780ec913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87bcae21-13ca-4421-963e-6dbf37cf358f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ebad691-63fc-4ac5-a6b2-7bfd30c538a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f6d3d82-a55e-46b5-bd94-7db6f854543c"
                    }
                  }
                ]
              },
              {
                "id": "c217f6fd-fccf-4218-8678-2c5405bef655",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6176fc2c-43d7-4d8a-b4b1-d14d66d40e9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a8e0e80-9436-4310-88b9-802a720439b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63b5b0a2-78a2-4130-9d4f-007881c0d278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07cef1d7-d2d0-4822-8a24-b2f1a31bccac"
                    }
                  }
                ]
              },
              {
                "id": "e809dc59-ded8-498b-bd9f-8bb61e7a5196",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21c29212-5a9c-4370-ab7b-9f3052c76803",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b66b87a7-a18c-43f4-b8df-4cf53a9333a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5a1bad9-59f3-419d-aa02-790b6dcf2110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "23e6f3c6-668b-4a97-9bb6-04d4f9dd74a4"
                    }
                  }
                ]
              },
              {
                "id": "db4c7ecd-d4da-4cd4-900d-52479f62e037",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56b90245-2a26-4828-a631-dcffc988e2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b457fbe0-def4-49e8-b996-a8cd924722d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f8b4bd-604f-4c2b-8911-590a2d71c4e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "758b60d4-034d-4095-9da5-d4c7b31f40ea"
                    }
                  }
                ]
              },
              {
                "id": "e93630b3-147a-4f15-977c-f85d1c2ef905",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9906035-c61f-45e7-a7e6-58987f81bd47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7997e40-7e94-4a8e-8824-e26f5a24b14e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b17a232-7b4b-411d-89dd-db26298145fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b68ca796-1428-41b9-8756-fa6a94e1be8b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34c99d1b-1f58-4689-8234-7fa1451b82aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "229d92ef-f27e-4afd-b7ca-f215bdf80141"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71b727ab-7cb9-4645-98cb-7ef64c250ac6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8885766a-49b8-4284-8d76-16024b134ff9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fde11206-b618-4444-9461-76ceaa4952ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7eb88aad-4e34-4cc3-b852-c37c0968a2ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "198022a5-8c6b-46b9-8032-c3cf0b729171",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "154f0f46-5d23-4e2d-8e5b-cfda08ef0812"
            }
          }
        ]
      },
      {
        "id": "b9e5b213-f8c6-4867-af8a-25b020f63cb6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "634f502f-bdb1-4fbf-9def-1e6725366ad2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9f1b918-597b-4791-87bb-59586c7e247b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b56f268-2e2f-4da9-b737-d893779ed356",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c98a3e4-7279-4ce3-b507-aa19be286af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c6ba40-61a6-4b75-a98b-cd38d8a2692e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c7731e-3bd8-4d3c-a12c-8cefc92bec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3a6f55-72d1-4219-9561-41aa14b1db9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12fd2c6-64da-44bc-86ba-c17f4edfd2cf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f17ec72-f3b8-461b-a73d-637a43c84404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c102cb4f-01f7-4f6a-a613-4b66e2275989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07b9d04-94da-4ec5-861d-678a2327e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3d075f-6837-4c8b-be8f-ade8a289b549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc20d952-c535-4b3c-8992-a3500249634e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d851e6cb-6a03-43da-b28b-817da16caf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d9b5c5-f55c-41eb-a26d-381e17b54c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a27f66-f1f0-479c-a30e-b8b85725bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "949b10a3-f92f-4bb9-8916-3a69fd87cca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80aafde-a1bb-478e-8c9e-eb185b0a2621",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe46d96-0d31-4c52-b2fd-9c8e1e097fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc87507-9b98-4b7f-9556-74af036c6188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec745cc2-6083-4737-9a94-0198003e135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e688945d-de2b-4ca7-9380-8bdc32d9de58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f583b589-6693-490d-9e97-9df0a73db92d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a837c174-cd76-4cc4-be19-d585745d8df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6703fab-e6fa-4794-9fc2-1252ad663f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2a0e82-e94d-4917-8589-0d4ba0f5067c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b18d29d-c90f-419b-8447-92fa571b54cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a637b8-6e7c-4a3d-9a01-1d89eee508c3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66243df2-8af3-4a22-bd00-51fb94991631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf52a49f-774a-41ac-a624-15baa1c3a824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe55558d-ff43-4cc6-9081-e6a60c0c5585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2036b87-7d45-44c9-9795-455c0f8a174d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eda6297-d419-44c6-aee1-1b07d51d29e6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6fa843-801f-4cbd-94ca-d520fa7869b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f5b1c0-4d56-4028-bc43-2a5773a3965d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a627376-3ad1-4231-8057-0ad91381fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "38071711-fde4-4382-8977-def5552609b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a48e16-221a-4d63-a315-045032ec19bd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e78585-51c0-478b-a51a-f713be98f238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db191cd0-162a-444b-98c9-7beca920ba9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a584e8-cdf7-4390-9507-83f8d502cbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f459d71-ea40-4c1f-a862-290c74443dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f61bba-ecde-4e2e-8853-015e04fd3dac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cbae07-9565-4daa-b646-8b6214683032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7a0d4a-483e-4201-b5b0-98a52818373e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2fb62e-bf17-45e8-913f-aede9fcad330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fef52fa-b02c-4b2a-9974-f5326afc4e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b9d9bb-9fcf-437f-9ce6-0261bf242514",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318d5027-4951-4c1d-be26-e1077be325dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40d371c-a7da-46c0-9fc9-8f5ebb9cd89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0c2b36-5ed9-4a8f-9af7-508153ceca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfe8c8c-e9ad-4045-8f52-fa513dc0eb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b357f6ab-b497-41df-be39-8f35d8a79eff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc96b6-625f-4c8d-acf2-b347487188ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f04124a-fe97-4ddf-a696-21fc5e220664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253be277-8534-4f17-a49f-e99a5a00a941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fb660efd-46c2-44e8-9d1c-a098bc27aad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f9edf2-bdac-4f6b-9aad-85578cae69c3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407eae3f-df1a-4841-90a0-c1e225911584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f86bc12-a75f-4b15-8c7c-63b670ab635d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b3e09-0103-4d3f-9831-4db8ff26a083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0422535-f868-4623-9077-a575af982f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457de069-b050-46c0-b3cc-d210ad426a1a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ded265-efe2-47be-a8bf-91e68923b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e37952-4509-49b7-b250-caab2c0bcb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61874e25-bc54-43ff-a4fc-8994cd813c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "932a5cbb-7a0e-4b1e-97dc-48b25df47e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a07a07e-f3b6-40eb-8b97-228dc6cf3dd7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1627e035-a7e3-490b-99cb-f101eb0414fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df918a23-3708-4e28-8293-5664231cf59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8703e1b5-4b01-4699-b6a8-673ed7ce006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1107a553-2e5b-4add-a1e4-a436b394d4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390c1eb3-9b28-4b7b-8228-47e89e9cd8de",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700f1cd5-1c9b-473a-af7c-f95ac79cc068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d6dbe4-f552-4c40-9bbc-14c1c64bcaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632310e8-9497-46a7-977f-ef2c82e1fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3854614b-0ec8-4fb1-ac83-343ed883026c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6abcfc7-7b1e-4fcb-beee-37e9fac07bf9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1544c8-03e5-4e88-a9e8-14fbe126fd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be31333-d855-4bc0-87e3-1ceae3e42613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d24b621-57ef-47c5-95b4-3116ff17bed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2064631f-ce81-4eb0-9c62-25ee2c23ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c7bba-a6e1-448c-a80b-235fccbddb0c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0817c512-0f41-4582-899d-b278d6ffd16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e47c1e-4014-40e7-ac5a-d1dcb76c52ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c70801-cb7a-497f-a841-da9bdbc27770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f20d9de-7e59-481b-ba24-4f79748a4783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da2b4a0-3130-4979-91e1-6a021c12a41c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f0ba9-3523-445d-ae33-2c4427004c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0276e4f-674d-4529-9796-d0b5f0aa5eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ccf81-9429-4ed9-a6b8-0e30f963954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d68134da-09de-4be7-b7d7-38235b994ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6b2831-ed27-4ccb-8aaa-c9571e4d80c5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd16942-b1ac-4231-bc99-e3815bf9c4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbcc543-2d6f-45c8-ba0b-4c47e5fde4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b24c21-72ef-4dac-ba01-ef37de15d66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a735f67e-ad09-49f4-8e7a-ee8062cadee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d9f1ba-9124-4c8a-a8c0-9398627584c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2963f4a-bac0-4421-870f-7964d401bd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c06616-b2fc-4ff0-a198-46c8bbabcf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143c40c3-917e-4b83-8fa1-8dba8c26cdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f45b251-12b3-4995-bb5f-b304c20df4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bea7e88-a859-4978-91cc-d0d3525e651d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39291607-476e-478b-8ade-3bac7cbf9879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e949b169-356f-4c1b-ba7a-e2be9791b1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e5bd01-e55e-4f33-95f1-7b3321c7b6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583820e2-3a8b-4d0f-b7a9-853521f1325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69386316-f38b-4784-84f2-67e28aec1cb6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f2497f-73ba-4849-9833-ed3457b5aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800c760c-6b23-4773-a348-78c16999287d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace7f10a-2763-4f25-bbc9-2e7e871b8627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408db854-cdcb-4182-82ee-97c24d8ed0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d6c5e4-02e6-4670-881b-e6a5a230c135",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52818e8a-e1cb-4f11-be9b-5a2599c7c6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2836ee-1c4a-4ea0-92e7-9185a751fc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6120cfc-fcb5-4331-92af-d5b3104736c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df7815f-646d-4bf8-aac4-ba330db6119d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba64299-9986-4715-b041-35b9dcdef5d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bf9f05-81fe-45c6-873b-2f3f820862c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecc3155-50d6-4d51-8be3-c1c26781fff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8d1b8e-a10d-47c1-8af7-e525697fdc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d5f096-1f66-4de3-b977-e1f300b57deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fdc218-edad-405d-996c-9dad39aa6337",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0568b35f-027f-49f6-8f9f-7c9f9708d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8484cea8-d28d-44ee-ab0a-a88ce36e037f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42779498-4c4b-435f-9b3f-1c3fec790bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3603d382-6aa2-4bc9-b3d9-521047851e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6501bedf-0572-4a4b-a7b1-6874cc9d483e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e524db4-6d6d-422a-8b4a-5e235636313e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe163ff-9176-4ca1-bd28-8fbcc3526d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f866fd73-1b33-494d-98ae-8e57f0bca11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef9a25e-b8eb-43f6-8670-79ad49317199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb571d3-0eaa-4e9c-954d-9e80f27b772b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b96396-9dad-42a9-928b-80862da78515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c51ca4-fd7f-4af1-bd88-eab1b7e8b3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd504a28-7e94-42f1-a263-2518aaa76084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb45bcae-4b4f-4e4b-aaf6-2ef7b79a6ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b9cd83-d749-4ad3-b163-69f6c31cc521",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6337b7-57c4-40ae-95cd-c55e954dc604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47236119-1904-46ad-876b-ed745d19c7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52164a81-af77-4c16-b5e7-db668cf77940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5fef56-6d56-44ff-82a1-50cffc51adc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713a8dce-46ae-4b5d-937b-063a02a65d04",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfdc139-3795-4d32-a6c1-ff39a5bcd06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad3e294-bf84-4ec6-bf78-c7fa65184303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac786c5d-b683-44bb-89d7-916318996fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b601269b-22e5-498c-bd95-fef5f979a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bee762-fe12-4a65-a8a6-0505aa2568c9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409b7e2f-dc3d-4624-b733-b70438fbdbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dc36c2-b922-4f34-9d43-63b69734a5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b67895f-a9c9-4562-bb5b-5a21354a8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f387eb0e-9834-472d-a36a-d37478d65f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c72caca-afe4-4cb0-ae1f-4643c6803f76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffdf432-5a7a-48c0-85c6-7e62613918f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4e02e9-2a80-4bbc-83a4-44f8ded08fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34a9f85-1484-4d31-bfe3-492b6c468392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "076b996c-ee31-4fe8-9823-cadf78d698c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cc5a9e-9a99-4a20-9517-7badaaee8fd0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c1818a-e4af-46df-b766-91c9f75b1aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7acb04-f707-4419-84be-9e66d8f9486f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd369db-f6bd-46c6-982d-1cdf65eee91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1edc9b58-32bb-442e-b1c9-7713c64ac264"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "175d032c-e203-4c1c-bf65-592c9002020f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "537f18d4-2a7d-4879-90f7-fe091df3f440",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088d9771-3d82-474c-a99f-b06e31bf202b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "82794bce-598d-462a-b64a-fb8a95e3c6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6e44b7-af6a-4159-aaef-498b996bf27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb0cbbbe-55b5-4f80-81d0-9353dd3b7788"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64fcd769-3dba-4add-9f17-578ca817fd38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec9a503c-3b58-4235-bfb2-ba0988acd8d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9a6e95e-69ea-473d-8296-8a654fdfb2e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9ef659a-40f8-46f6-990e-7859184e13f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c26be83-5596-4ca1-93ff-500d70c8e385",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c52c13e7-5c89-4d3b-9387-4325a906c914"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b94ac9e-b082-40b4-bfcd-5e1f38cf71d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33b01776-acdc-413c-9f4e-ec678d75c9a5"
            }
          }
        ]
      },
      {
        "id": "e43d758d-6365-4f30-b883-d1cf9b8d8b53",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "efd183f7-d169-40cc-84ac-b459ea7b44aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a664b429-e7f4-4553-947e-a606be6bfcfd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fdca93e-5cc4-4c95-b96f-9b29ec5e0c29",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0ec169-3bcc-46df-9c3c-31894b4a1af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25801146-c168-42b3-9aee-501ffd8675af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1867cae6-0284-495d-a2b7-1104d36b74ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05714d3-c5b0-4be2-a425-448d3265a7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b5645a-3df5-4b81-813a-7733afa135cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccc652a-d3e0-441e-8cf9-d4b9416d52b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331d8b37-9cfc-4e79-bcd1-97fdd20e9a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d13a5-0b12-4b9d-93e5-c8337eee8cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6495edf-4a7a-464d-a465-2a94ffc47ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71830028-0cc0-499f-ab10-a92cb031fd6d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b468061-a75e-424a-9131-6d9d3fba0e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eccc5f9-17d7-42f4-8019-c1399ec8685f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06691631-f743-4059-bbcd-e5c7d94c076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a055ee9-03fc-434a-87f3-80868833ef11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fa9ddd-a0d0-41e2-b446-299b2b3b1f1b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd449ef-2471-45bd-979c-5323e0668bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa38232-2f10-43ed-9cc4-56b3c60ebbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e487d9e4-2fab-4529-951d-36c44fc14089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d638963-4e99-4b04-bfbd-5d01cd4e1fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4899d78-48ae-45ac-afb0-fc49f8dcb45f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719f9f57-9f03-46ce-97d0-233e94381660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538b6808-296e-412d-b42c-42a7d28b9c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a83a21-95d8-4698-9ff5-63323c4ea6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "312b2de0-95d2-4e22-97c6-c7b7dbe24dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef01d39-105d-4aa2-bc51-5f5d97d71d98",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6e1f60-764a-45bb-9ce4-db951da5e2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd5eee5-faa7-497d-9f98-5bbcf27595ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a57d923-69be-4436-be19-c491ff6c8afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8b8a12-64a1-4ae0-9b79-f63a690c2649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427af90f-9e60-49ed-b3ee-c2732ccf2889",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c8a846-d537-4b1c-9aaa-cc25fe33d923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d382ae-3df2-4cfb-a6bc-bab90eca18c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de87c463-85d4-42c8-93b5-b136a552412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e555e825-3e76-4e14-b48b-440aacb63139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936e5927-0830-40d6-b9ec-6dffd099c60b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a496d4f9-335f-4478-bf3e-11d17eda3450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8d20c9-784f-4224-ad72-898eed479e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46939761-d78a-49ad-bd8a-6d5e013d6f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57d23cb-45d4-4f49-9f25-5271b2989c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe47a7f3-a82a-4477-ac05-e0f0d8d31c4f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956c8e51-ab38-4669-aec4-dfeffdb60c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19d2914-7aa8-4e2d-a2ec-998833decae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfaf43f-4154-49a1-9928-cf4f282d9ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "925e4df9-6796-47db-9f30-b50fcd62778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195a5ca1-5c0c-497b-a4e2-d2bb25ac82c5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f570c9-be68-4394-bc8a-a5046baeb1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc8355c-b61b-438e-856f-62aa74d4939a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd217935-4ea2-44cb-8fd3-9cbe87f70e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12c5e79-d4e3-43f2-ba78-1f0d90600c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ded3318-83f7-4f47-8617-932ddde26fbb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e5c304-84a6-4136-b52f-3cf150a729c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d928318-e18d-410b-9d46-a16f10e43f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c08e5d-7c68-4d63-a73e-54c06c93d2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6c705b-24c7-491d-a3b9-0589f18a58ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaa50b0-7b3a-491a-96fb-711b8ab8d8ec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a76105c-2f27-408b-8674-11b8a2a213f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae03231c-8ada-4b72-88fc-6fe8b8712a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a9167-514f-4d50-9923-4c7a9f3fc8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9225e0-34c5-49b0-88b6-3d4beab5d843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcc26ab-7d24-4458-bd06-562fb00e4a55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fbbb6a-b345-4827-8b96-5989e8e6a3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c770425a-f9d4-401a-bd83-c9a859c40c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d15675b-7614-415c-adda-a73460d1ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "822be048-2120-47d6-9fda-ed16f1bebcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a4c65a-db20-445a-95f8-5c0bd83381e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608f2a64-e272-4119-8e46-cea2af01f54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e8c023-5bba-485f-ad8a-e2cdfd2a4931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6ea4b5-16a1-43f2-b6e9-fd123ad31e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49d1fce-0dcc-4315-b75e-c45a66263959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de096ed-13e1-4f7e-b51e-09b17b24f16e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eb89e0-e7da-4ead-9398-20cbbec4966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f25a0fe-1bc5-4b37-8ef7-6de8bef05b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98c9278-a084-451b-9a0f-a4b8485a7b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace0ecae-01e3-4b47-a874-bf7e10641302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fbb0a4-0c95-41e0-b9ae-65bbcd6751ab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103e0286-cbc6-417f-bbfe-7c3a1af89708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d928673-6275-4bd1-8c2c-3ff8bd07ab69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8103f8-db18-46e0-897c-3c66bb6c07de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2413fca-4a93-4328-867a-e5896071209c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac3d882-af63-41ee-a03a-e36358088c84",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1148c314-3ad0-4064-ba9f-21bf76b3ad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e79e49-0cf4-4aa4-bbf0-f3447381ccc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c2b1f3-d03c-4676-a25f-94b0b961aedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a899fb-514b-4cc8-8532-d5c7259fbd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15450c79-5075-46c2-87a1-259a1d6df20c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b5d294-2b14-44c2-b92a-1a3e9c5f0468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d624511-4bce-404f-9759-cc74b899fc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd34889-411d-4c52-aa9f-a3e55018d219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38191460-98b3-4158-9f47-644dfdec3814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e770837-c617-46a9-8a03-d95acf17f578",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b1ee9f-de8d-4b99-a135-8a8829bc9f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310c44fa-d550-4521-8467-0d579e5253c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35577ad-4cc8-46f7-9ff3-2d7f032aa552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc72ee8-3b24-417c-8c9d-77d9d9c166b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f301db03-fcf5-4175-a218-20c541a81c7f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3107aa42-03c5-4a98-8890-c1d098b2bd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f543077c-3319-4d7c-a4b6-646e4812d8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6987bb3-1e3b-4acf-8ecc-94643d02fd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc61755d-e597-4b9b-bd53-0444cfe9d7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7e5434-d7c4-42fa-b9e7-d3e17b336797",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5ab9fd-c742-4be8-8913-135ec0a80da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3a9502-1837-4e29-8790-8071b34e948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a14d0fc-fa6e-4ff6-966e-b424f074f633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44331abe-c38f-4079-9295-f412e8516c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbf4b1b-5eac-404d-b143-5dcf50baabea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f6dbb1-ea70-4750-a3cc-48c3ef114245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d64c6f-e2bd-4acf-8f66-6976ab9ae12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d35d462-30d4-4c27-bd83-29f1a5120659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58be0f1-fc10-4c1d-9c7c-3a603bbe8e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd89b3-0881-4156-b283-0409d7dac772",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f360cf6-4c4c-441e-abc3-c964a7106d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b4338d-296e-4d7c-846e-f380193062ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5463028-d0a3-4be9-9b96-ad5e877208c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c720c0-b4f5-4ecd-8908-acaa690ed75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb9bb57-2efe-49bd-8e0d-be55583c9142",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7ec99d-ebb9-4f0b-ac04-b20c0ea9e36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa9a222-3ac7-475c-b2fe-fb1a941d1de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6584e0c-bc2e-43af-a5ae-66fa3bfa90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15228dd0-47d7-40c4-83cf-ab591e9466a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f090eab5-91b1-446c-a4bd-1fab80241013",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0780fa-3afd-4dce-8128-4047d7a60455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d53eb4-4d0d-435c-970a-3537b9ad82c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8bbda8-45dc-4bab-8ad5-a96f42763d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ea07ae-7f60-45cd-8278-91174b59b68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fca923a-0692-4eb0-b691-658a79108018",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aae03a7-f60c-4ac9-98df-d53e19fa0108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca94455e-4cd4-4f3f-90be-fc62dd95dac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe193e1-0e28-4d93-88f9-ca7cd5b05d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d4372d-1878-4c75-ae63-488aea16ee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dd9730-10fa-4511-8775-410469dabef4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0da715-844b-4b99-86e2-1ece2ffcfe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62cbfe8-563d-4e0e-b62b-b79711f7147e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07691802-abcf-4fd6-8820-e470fce50b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a8ab13-9f15-4b99-843f-809040445d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc98f37-818b-426d-a1f8-3091120e02d4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6a46aa-afeb-4d50-be36-b44e3e050944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dd049c-7590-45c8-8659-167756a33320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1045f34-cb87-4925-9f7a-6a1098c88ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d73540-8bf3-4187-bcde-48bbb3c1cafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdfa453-4227-496c-a430-51627ec5ee12",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a13bc73-f9fc-4dd3-940d-e11423ec76b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bf29e7-1e95-40bc-ae38-2ed93ea3ad93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6004f7b2-e12b-4b6a-8a78-1cdd97742585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36970531-10dc-4949-97ed-c28c4ce9fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34a3f88-ad53-4163-bad1-162723d853aa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf5a827-9610-47a9-a664-6a34a6a55ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b779553b-6a90-404d-bb2a-63c4979b48a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd0c63-45d6-4b14-9a73-5063bb670d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e22d6b-7b56-4a93-a1f8-903b9aeb7c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f8312-6fec-4f15-bd64-37aaba750002",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc0b632-375a-415d-b35b-bb450030dc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5960b6d-e59f-48cd-9a4c-9ee06deb6348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f385d12-c5eb-4b6c-96cb-5f05134666b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a5ee96-9e6a-45d3-8ff4-c690b85f740c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cbaa8a-4c82-4fbd-90e8-b21f9efdd890",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f9c657-a440-4f57-9289-5f9220e048b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6172953d-6afb-427a-878f-bbc5a058a5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75723f6c-ffc2-4107-9901-85e5d6a44610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1b8db3-c7f4-4912-a2e8-5e17a784a6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b5e326-4b33-4e48-896f-734d10b8c4c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e5ac3b-f983-4b98-ab97-71c256fe2c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4ffd82-6e0e-48b4-a581-c5cebfb2c2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86b73a4-c542-4523-bf03-0f6a396a7343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "719bbec1-11e1-4d0f-bafa-8c39eec6fb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5241fba0-881c-4095-b7d3-85bcabe74cbc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de4e6d2-9d79-4949-877a-3e285c9875ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fef4e8-1579-4c5a-8b48-e67153f7063e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a5e5af-1d36-40c4-a7d0-cb52706b2c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c87baa1-ef74-433a-bea1-40f36a9068fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2d2283-a586-4b64-b4a4-6ff6d3ec0bd7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527226bd-5819-4747-b510-0cd2b4c8e853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d074224-1d7d-45b7-bbb2-5c40805af612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edf804d-fef3-4a49-b0a6-5c3c67e77eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2c1420-0327-411c-af2a-017d580eb474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a887c4-b668-4026-8c9d-8d51823f7639",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867f0300-c43b-4e3b-b90b-8090cc634f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a313e78-d114-432d-8aff-cbcd9503d683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56ee6c0-77b4-4566-8113-918bbfc84681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1eb8b2f-0174-45ef-8189-d5949364cbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae1e5db-795f-4d72-813d-3949b1ea3e9d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49c61c8-ae10-482b-9a19-b3780d8bab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a8ee3f-1d5b-476d-98d6-5de22227122a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2901740d-cf95-455c-9caf-8bfb52fc197e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1201c4d2-4d5e-480c-819d-573e7dd5f546"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "252d9adf-ba3d-40b4-b16b-fc02c648bd1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d178771b-8a9c-4b22-a7a6-d483b0eb89ce",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f64544c-a1ea-4019-a764-347d2df40981",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9b980d10-f54e-4704-b647-b1580d3849c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911f0190-a195-4944-9028-0cb582f81ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38e628f9-2b55-4412-a6d1-b685b4c71e09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0e1530c-cadc-483d-8c0d-89cc79eaf467",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e05a92f-7117-4276-8aca-ea250a19aeca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3237a56-0e7e-4d54-9da6-ef9a3382f1fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31976597-26b3-493a-8a24-226bc500939a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5db6fb6d-b777-469f-8dbc-1d1623a3ae34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f23e8925-be40-4c38-b3f2-75fcff598978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0e4dbe2-f3ec-4334-be03-c499a80a215b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88269281-04c9-4a14-9da0-aee443e29429"
            }
          }
        ]
      },
      {
        "id": "5cdd307c-1578-463c-b86c-963199c009d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a034c7cd-a4d9-4886-b9b0-31c6e674792a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8dbc9f2e-00f0-41ab-a2d5-5d352f82971c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10ad973e-c447-4eeb-95d6-77e78048625b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea3ad9-ac97-47ab-9356-f9121069586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d768a0bc-0b4a-4a58-a261-55b91a1febcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d401ea7-003a-47cb-b371-8c2907d7ea62",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9025c1-a29d-4a57-b5f1-22bd107a27c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f454fd-b939-4eb8-a915-69e8ae6d22db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c788dcb-ba90-4446-95fc-55a16b05922e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b2d9a2-1adf-4665-9ee5-82d0904ceee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1117c518-3969-41c9-b91c-6a4af6ef18f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024d4607-a426-4382-a3b5-b2ff00542480",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc46bb1-77c8-4551-af58-2681923e0f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d916dbb8-980c-4351-b442-7825ded999e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f730e8e-8b5a-44a3-83de-b1ebef73dd57",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfbfc5e-e8d6-43f9-95e6-2ead26910767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab9dc68-7ad3-42b0-91ee-6ec43e45e611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42564443-a2d9-41f2-b48c-d436826dbe2c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6bf3f6-3e92-48ae-8ccc-3c8cad1ebdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8335f087-2892-4c2d-8541-4b683765b1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094973e7-723a-4b3b-9fa9-add5fc29a452",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761bd267-8ef5-4336-a4c1-1733df79d341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3fece5-6de2-4ed4-948e-149322ea17e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5afd47-d78a-4bf6-9436-a02bca77c7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a8e080-d51c-429c-94c2-06aa030f71d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449455e3-ff05-4459-b030-0270f77f6cb9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070ae252-b3e0-4036-b7f6-e780bc7f7467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c860b03-6d32-4151-aec1-3879240b038a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29172ed-97a5-4503-9c3a-dad4fa844dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2b8e88-5e1e-4207-b04d-dfea909e3f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3273a34-7f03-4524-ab2d-49a94bf7f615",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b683d-2008-4a3e-97dc-5ce8c2c72687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4bb1720-872c-4ac9-8b1d-bffa7a5db8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710dfd4d-d517-4a1f-a734-de93e5a7c20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64697fb1-05bb-47e8-b296-0d3a3e533f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba6c021-f358-4fcc-a27b-1aaf4eb0d542",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188874de-a6a7-495c-8ae1-b6847daea61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca6297c-4895-41a3-a084-1f47e4b5d385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bb12f2-7bc6-4d36-8314-f5cdaf9df666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64eecf2-075f-4493-a61e-82f6715cb767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413a1ff1-e253-4638-bc14-46287bc22039",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1a1eeb-4b78-463b-a60f-ce3a79e832d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c4d224-faad-421c-b7be-dd7dba82c706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229b49af-2d0a-4ff3-a527-0f67568ea1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525b8a16-d95a-47fb-a48f-c72d0ef4e030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d97c61e-9285-4db1-bc09-11e1b7935a12",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a9881-fdee-4374-b89c-7a9676a00f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadbfc78-0159-492c-ab78-5e51885f22ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcdecf1-8c89-4e50-a439-fec763fb8df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5cd4a5-367c-4d05-a2d9-6c832e474ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67fba0b-bc39-4913-b05b-cac27936d998",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d58658d-ec75-4b0e-8914-cfbd560b42a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da58dbe7-d35c-4ff2-9f65-7f0f561828b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85549ee4-735f-482b-bb5d-d513732aa7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434efad3-4730-4fe5-b605-6a085ca0147b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670b95a4-e873-4d93-aced-6be6c1b61149",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb45e72-7271-4c67-bf1a-7788f7f50e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba5cb594-1c32-49a4-a664-cd3c2c3333d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071e2c13-c654-435f-8452-7c6308fefecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495fc103-1d55-47c4-b50c-513b7f50328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93eb2d8-1bbe-4938-8799-7eb98ad445a1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ebf56-6550-47c3-80d3-02f878e5591f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f11c5d3b-988c-430d-9250-22635a76f036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02df8cc0-55ef-4ee7-b1e8-03a5a24e570c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c3a45e-7973-4321-8b90-12bb423bc11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a897c-aed8-4faa-8557-562f02a7032c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e2d4a-2c2f-491e-9017-b0096b46efff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f40ee872-0163-4e54-a415-3e3bf380b833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8831e68-bde9-4051-9f2a-bb5e0fc194df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c3ced7-c1ed-46d5-81a1-991ddf10b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad824e4-46ea-4c74-be9f-cb7796a41f51",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca1b237-661d-4442-a3c7-7dfb30c97d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50770256-3e93-47cc-9324-5fb095d5d67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff34085-a453-4aee-913c-86a97ea146c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f9ea8b-12d1-46d5-b159-7540670d1556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1154d10-07ff-45c8-9800-1db3bc96079d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610916e6-fdac-4ba6-b9e3-be4aee3a7b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623f5906-8582-4eed-b353-de951027abe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cab0827-c108-4610-8967-85fba3902c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60b27d5-0db9-4dfb-a29e-df2e5e8b122a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3361e-d9a2-4027-b536-c79ce21aa13a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78831936-5b21-4afa-bf46-10ff5e052f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd14f1c1-1a3d-456f-bc3c-5c5449841213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c0ec7-7596-4ada-bb16-087c477b3ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83610ed-ee08-487f-ac30-34686306b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d015ccbd-bed5-4222-8576-c2cda37b5f1b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f452d96c-bb91-438c-9677-9f629f0e4f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e7db91-242a-4270-9c1d-d080ef3ce333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a74be0f-a929-452e-81ef-a6129f8fb1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e253c93-dd31-4dbc-bfb6-e294401ea39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a00cf2a-2e12-4b84-b58d-8756c3b61861",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd518324-92b0-4ce1-80a0-5277e995332f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77baec68-57c5-4f0d-b432-f4ac960da2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cccf3c-0959-4237-8e80-8013086718f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf29c9b-5d52-4bf3-819a-1c222e671cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8c05b6-919e-474a-8a56-eae0ff1121fa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e124ca6-bc5a-46e1-96ca-25b8d41dc036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e2de16-1c95-43cb-b0bb-2ab9f275ec65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcfa7e9-b452-41ee-b014-14b6c1d25f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a298b5-03e6-42dc-b706-c2e5f539cc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3297d84-382b-493c-aa28-b41633d676d0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a07084-cc92-4ac2-870e-b4d52a54e23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd924f92-269c-4396-ab7e-5144b7a307fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e630c80a-767c-4b9a-8b90-02345349b41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f6d4cb-f680-4002-8965-087542fafc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7b8545-d37a-477c-8617-932a6a8f4e3d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd22b24d-f897-4352-ab2e-3677f446366e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451cdb4f-cd6d-46c8-b086-2695bb7c8833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f0daf2-fa5a-4743-b95b-009ea42ff205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500f7b72-c84a-48e2-961b-30d0ba197277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70485c8a-ae72-4d3a-ae5d-6a59f07132e1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3e3fdd-6ced-48bf-9908-9a761af30fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1eb711-add3-44cf-ba95-9aaf5420abe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbae468-6f01-44ad-9fe3-e23ee44d5b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e458f01-5abd-4fe2-808b-598b8fcb40da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997b9295-47eb-4758-aaab-af9f5cb42a36",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ba650c-b08b-457a-84ba-f192fcba5dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14dac5b-3cbb-4914-9a40-99b9d44af965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f89be2c-1280-47a2-a212-c2f7aacfd998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6daf083-a97b-4018-9e84-ea423e752288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d01030-9c58-4caa-9694-fde63039253f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94deaa2-4e6e-4cac-a8ca-e1bed453b64b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4b08fb-cf4a-4098-a04d-c0b3cc86f658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e73554f-b00a-4fbc-9f51-9280c98e3915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3056551-db22-4243-9614-fb050df1323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c0fbbf-f7fd-4f7e-a659-ae978a9e12c2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9bafad-5b24-48af-a392-4d7e6b8cea51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0780ad92-dae1-4f54-a06b-a97377f85b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece41f7c-3106-4ec0-b51d-312d48d9cd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975e514c-3e79-484d-9d47-b18483f7873a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ca46b8-ea33-402e-b7e1-794dd38d77f3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f52a03d-276a-4bac-9931-c2e1048cb181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d38024-36ae-4643-ab3a-36b40b326e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8016efd3-e386-4e89-af4f-1da7e32bb763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0641b1d7-46bb-43b9-bd31-4a5c30ff2aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4c060f-2f09-48fa-a6bb-ee4f2b399e96",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7afd30-a384-4dc6-a7ea-fa11ef1048e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a063f4-0c54-426b-b56b-7bc7547bf4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c792fa95-ab56-438e-a9a8-b19461ecbe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481cda92-9555-4c9b-8474-68245f77f952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4157d0-bf0a-471f-a310-5e0346e3aa64",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e681441f-2cf4-49f7-8281-0ed8febdca57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499dace1-8d9d-409f-b8b0-21e8d8ab0730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe448954-d655-49c1-a3b9-67417c9ba44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc41e0b4-c211-42c3-8103-8ced83395eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d3d6c9-423e-43ca-b454-e66427227c1c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fb6d70-0a01-46fc-90b6-376d8e0a9705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152caa69-235f-4e22-94b6-a796a5bdfffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d7ebde-bda1-48ce-a270-8e0c15602993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a96a25-5bb3-4f19-92ca-19ffb6b79c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04a5a17-4245-4407-be46-3ca0e9fc1928",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6971bba9-2109-49c3-a398-f86f0d51e8a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39d9bed-237e-4000-9267-9c324a030c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672124f5-8608-42c6-a853-8b031fdaa705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ccb583-2622-4344-bbb7-99fbd6bc2f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89732fa6-76c2-4513-ae83-1e143c8af6dd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91cac19-69de-41f1-bec7-3a4c1da06e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2343482-878b-4548-a64b-b1e8420b4e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f79eff1-e623-40de-9139-e6184dafd940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5793d2c-0533-404b-86d6-16be2001d489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f83a9a6-c9ce-4d7b-b261-e2764ee5a166",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d79a45-d926-4c44-b00a-5a22641680d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81bfc9e-1f47-4eca-862a-9c5cd40e37bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99796e17-7c53-4b25-b497-0507d5c2054f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cabe637-758a-474c-a54c-a2f65d9c61ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c22e0e-b2f3-4f2c-b731-ca3b1f039830",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878b1072-b9d6-49d9-a028-c368ce24bc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22028cc-0a99-4ca6-a4f1-6385864c1f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa875c29-f3a8-4540-9535-0c21f384b3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc40447-e4a2-4fa9-87ea-48923f413212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82314aaf-5b82-46b5-a244-22a2d942a833",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ddf8e6-2662-4938-b6b0-56e9f5bc74b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04da839-4df9-4918-b482-4c9d69c45b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d521e4-5394-4aa9-9e08-24ce654755ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6773fc0f-7676-4742-8ff2-6b35c74b9cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2e16aa-8796-431b-88e0-1dc4a7ea7cd9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184a882c-98c0-4171-966d-47652139f763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcf870c-393c-4cc3-b8d1-ac6d873157fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d3d39-9169-4901-a0af-833ec0044209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffb6574-fb38-4ec8-99df-39bc8f7a18e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f02f2e-6a37-46f5-b8ee-1da47cfa54ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dbff66-95f2-4dc1-bd85-d642d4bb33b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cf9f87-32bb-4e08-a86f-861c6ac1c64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac17500e-a8ef-4cff-8ad7-7f1cb94244b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82372f2-7d99-4129-94ca-b98c326f07f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3014947-74c7-4111-b892-adcaa014fbd8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4b3a43-0a13-4af4-8a08-a8ff3c35ea2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbf37b8-0ca3-4a3b-83ed-f356706c0bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b34962d-7a86-4186-a986-1e6aa096ee50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec1ef7d-5a94-4f99-a442-90532f9dd2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad6cab-fac3-4a41-8bd6-754631900cf3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8203b0-0204-4584-994d-e63d191726d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411549a0-478d-47f1-8f1e-e5384d40f3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74afcc6b-b8ed-4279-9fc7-80ab1823131d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a5c400-e7e0-45ca-b65f-f26dcf2aa1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba50261-7764-4fa3-9230-df545a4533a0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8436e320-e51e-456c-9030-2604ec55e0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48db0f0a-88f9-474f-ae2f-b45be3df3906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7952d7e8-424d-4750-b537-250a532dac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46a0099-ce26-4b57-a87d-81b96e9d34b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ded40d-15e4-405d-9c77-9a77642fcd2e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b6fd8e-6265-4e83-8aa8-1a32f1841f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2eeab1-5277-42e9-8040-3e335c0ef552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884acb0-6096-4dc4-94e7-9c10744933c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c907e4-6efb-411f-9ad1-b7128d507906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b448659-69ed-4c31-b104-1192493adbb7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26f6899-765d-4bf8-aa06-728ba9c49204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce358f19-1e74-4de0-8703-0b0c7bc2d87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baecd3bf-59d5-4716-83bb-6283e4bd2ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734e9f29-2633-4935-85a5-3413ed1485ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa50699-3de1-4bff-aaca-be7f65f9381f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d451772-090b-40b5-accb-8a38498f7227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172d19cd-f40f-484f-8a2c-79274a41637f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8326a870-576e-425d-8c1a-a6d8378199ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ef7c9f-ea54-48ed-821f-b49cf1191e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48229d60-6bc1-49fa-8d91-fb52bbba0e15",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29feb1da-4a27-46ea-bf1c-ff1e2dc898b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2999f5-2ace-498e-8fb6-97e2d3a1cd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831fcf2a-8617-4ae5-958c-e49b20984ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a89e66f-0b04-466e-b3bd-1ff17f0d8e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbe67ef-bd18-4f86-9612-c9829025ec4b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676ebc43-6e25-477f-b034-677a5bb2a946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d650d336-c3e0-4d9e-b3f4-1f0bcd0e5846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea15bb-e020-43fd-8c24-1d012aaf765d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc5b3db-c695-4910-a15c-d89fe19e9bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a4f28c-4a30-4a0c-8944-79015ae6b894",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffc37a0-511d-4400-b8e2-f63dbe831043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ff6b49-1421-4a56-a24e-ee313882b738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a809d17-ff12-450c-b694-2089f047e538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0d4960-f6b4-43cf-8821-e238278ebbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9077f3e-007d-4f5a-a1ea-f0ce30e3eaef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e698cb-b815-42ec-a234-25e7c6d1d533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31613e9-2bd8-4d36-9eeb-5033b15afb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2606886-d3af-48d9-a4a6-46f3be1f490e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc50108-b75a-4245-bdd6-53b9cb34abff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafa8ac9-0b08-48aa-a3d8-3a394c35f686",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a740286-344f-4508-81e4-faf4b48f5cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57a7281-a9af-4f23-bd7d-9e9c6b0a292b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4708261-da9c-4a37-919c-2fba311227bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355fa973-b714-4d08-a6a8-7f13c1ea4072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3edd2c-99e1-4813-b633-57c6d4aa022f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3bb71d-ba26-4654-9c98-44ce4cf02e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640f73d2-513f-4ea4-9568-f70093b49f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1dbbb-0a36-4092-91ef-96291853a9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98b08ab-8ae3-45d9-b182-6cb1e1295aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d1280b-5553-4f21-bdb6-9261881c06fd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708995c9-dfd5-4051-9ef8-503a63c1de15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16edb883-2cb0-4b63-8bdc-cba4798e67d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4cb75-6c70-4e37-bad9-6d8cf1031186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6160dec-59a1-40f1-9435-22edd3371b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5759f00-ab8c-41ce-ba0b-d8b4ab7c9332",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70be409d-8702-4c7f-943a-47ea88f6d384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d464b4d-2426-4e0c-b2bb-06a688007a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9072ef3-b276-444f-b8e7-a8b182119217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cb5663-3cce-487b-bb14-bba87e4eeac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de2657-de60-4e8d-b11f-8d1788303de9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc559a-7ad2-45c3-a0ec-d5aab9a6670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208245f2-e4bf-4fb1-bdc4-f109ef13608c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1856fecd-4942-4c62-874c-a0c284376b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2eaf9d5-26fc-4851-9004-703ddb84295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2093118-16aa-474c-b290-9991fe843fad",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca220a47-d430-45f6-8a0b-4e49cc7fa3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652c6081-0350-4615-8e1a-e31509fb5a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0622780-06cd-49bf-9224-91f0aa63d0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241edaef-302c-47ce-9c7c-d4e9a53c4d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a805f5-0e81-4210-ad80-1770f5835cb2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401505f3-ea19-457b-a84d-3f97ddd54150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07f8c7b-35ac-4f58-9e3e-0e182e4c9e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd4907c-6d5f-43ab-8ca1-ef2f5caf9205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f55e06d-50e6-4e80-aebe-c04f430064aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd8b08a-79d8-4e74-8aff-692c63757211",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33cec6a-8f57-4676-aab2-bad68e923ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af6cc3c-8474-4019-b7c8-9338cdb4b59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb4b622-f0b6-415c-bc8c-cdacbe42d5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050d05fb-f7c8-4cb9-a4fd-0429de41e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d63d8b-8b29-4f5c-bfc9-73dbdc14d31e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a87965-754f-4835-852f-def1babed8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17aa9ebb-c5cb-4550-a41b-7e5eacb3387a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ea26b7-705b-47ea-834d-bfd707345c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6089d2-e56b-4921-ba23-59c86d637d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758516b3-47af-47a2-8572-f251c07afd64",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fba7423-fab5-48f1-9a4d-53dc195e733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3f0cd1-baac-4113-abfb-ce3b39f21351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98215a5a-73c5-4956-8a45-1fd72dbfe4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37bf24b-012a-4e72-b9f1-dbbf297387ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8b4156-e27c-4fd5-b4a4-12f529b933f4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afa2342-ba28-43cd-a18b-f4e1b008b177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6097132f-44f2-4a55-b292-8993e7491c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee01393-b4bb-4e31-8ca2-7248ba070de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9415cbda-549c-4ea9-9c28-ba96128ff2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881bf335-8c2b-4f95-964d-466ec79c1f7b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c48f7a-5438-4631-a8f3-4217ef0ffeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddf568e-9024-4b83-b7b4-87710d96f087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e49b341-6d5a-48b4-b175-4691d952d641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dbb0da-6610-49ab-880a-1d6cc29c6ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e82933-9224-48e9-92ff-0c86186b55bc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bfc468-bdaf-482f-9252-47a0b3e90a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e28604d-4f57-4f8f-a191-205eb3c8a08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bbaf24-9d8b-4999-80ef-36dcb813a96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c96f503-59a9-4d2a-bcda-f512a7df6046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44de987-3e8c-49d2-8237-18f18a6a845a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bae3079-4014-47c2-9b01-9163e7248758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ce728a-d982-45c7-b34f-b84a5908228b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066ff84d-670b-49c0-a079-dc81951d7d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d177df7-4f21-484e-ae39-6237c287da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ee3d06-65b6-41f2-bcdc-de1df6ea2526",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8615c90-bec3-4bc7-8f3a-4fb818706a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc8ab36-7fe3-410a-bd2e-c658763e5afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2178aa3-7730-4e43-8bdf-0ae5521479ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8e9e0f-0cf3-458c-b2f4-bb1bef5560a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02bbe1f-9e71-4837-8ed0-a84a5f4a68d1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc97a10-7a85-44cf-bdf6-79a0a6b1bbc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43f150a-7ff2-4e6f-8225-da75864cbcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d18955-d510-4d62-ac03-b5b5b8e70f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474ca868-adee-4b8d-993d-b7cea6ff2917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c9ef9-43e0-4224-b778-32fdfb4d4e64",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5a44b1-0639-4fe1-81e8-92cb175b9f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acccf63-cc91-4f07-b9a2-3f132649f0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e0f9bb-b082-44f1-91a3-9ee2dd15c034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abad644-8178-4ed4-ac5f-6a28bf107848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d933deed-2d90-4768-ab7a-75756b379ad4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d186f2c-4740-4f04-9bff-8df3096f92a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aff2604-ccd5-494e-9b8a-99cd71196a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0338504-f48e-4afd-b5ed-fe41c0af1ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f773adb0-8eb5-4844-a85b-ce162b87806c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a897816-c719-4bf9-9529-52f4fcf9fc81",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0934e40d-4905-49e1-b695-327a1c23f570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3362f8d7-c426-4604-9027-2df2b07150d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466fc276-882c-4405-aa22-9e2decd1adf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53b760c-47f4-48c5-89bc-58cc74245cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab783ae-3e58-416e-8771-ad2526e18e98",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5890f9-f3c6-4766-bf0c-d9a4079958a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff84005-b2d5-4300-9229-47fe6b633de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d545f8-d73a-4b76-818d-4b6d387af010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281f8194-fd22-4afe-8100-1c3fac599646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29450dd1-706e-4e88-bb01-72ffe8bbecfa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9256045-e195-497e-b91f-2b51925c3726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9e9a9c-fffc-4b70-955b-dc852b2cb687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8034fc74-a026-4f4b-8fc9-786167791b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b03a40-162e-4bd8-9b3c-309331bc6717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd31b73-56f9-4f1f-8ca2-62480afcc112",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e68528a-3e36-4ca6-bc31-4f2299b4cf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad56cf9-8d12-427c-91fb-6bb82b09e8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24fe29c-f578-49b0-8ddf-38fe084c8793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ec1c2b-1b35-4154-b7d9-9738210a3591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96642a66-aed2-440f-b997-4bca701f313b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddefc9d-cd98-43ac-9093-81a5fc9289e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a965c7c-78eb-4cc8-81d1-ccdb03478340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ff0092-111d-44f1-8871-f5701d2a2f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be21e0c6-d80c-4c28-9747-4e8ed346224e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f68137-ca7e-4abb-8151-d97c4c82d6ef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae600ef-6157-4438-97c2-7733602c2a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e909a8-08aa-422b-98a1-416197da05d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4f3c07-38af-415b-b9ca-a93867712870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e31dc08-0ea4-4eda-954f-dc8d13f0170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da62983-2cc5-466c-88fb-dbd71dbd3642",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae116dd3-b192-4918-b68c-5578f742e832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769b44a0-0bab-473b-9c96-af71df3d5484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555417c3-35b8-4790-954d-6bbc66e31884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09ba690-76bf-4cfa-8801-d904a8f389c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42111ce8-681e-46cb-bbac-9438460d06c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8804008b-d974-4c65-9c85-76ef153edf7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96120318-eae9-40d1-b2e6-951108c0e09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bec5fb-2071-45a9-b900-9bc5aa683605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d639455-1d1b-43bb-8446-846b724d539d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc6ce1f-db1a-4585-be8b-ae9cba1cbf80",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05278656-67bc-4fb9-82a4-8c13063ea381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e9fc00-0e43-49c2-be9e-1fb9deee797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7cd58f-07d5-4a15-9b0a-340bc9da22d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099ac45a-7b83-46a3-b308-1d710bfcc9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3542075-c2f6-495c-b1bd-c3b762494c6a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f7064d-d086-46d7-920f-28ff797d825a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba675b4f-c677-4049-b8f6-d3902fafef34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a074a4f-8b42-46d6-a714-9370aa46e79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9dccb2-4e43-4c92-ba51-5347e8f654c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b6afd8-3e76-4112-8813-ae0338dee4fc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8d48b1-dba0-4a8d-b628-f632b9037673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5eb9f1-e0ee-4aad-84f9-d0510ecb5c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e3c085-f973-4fb0-ab9a-f2f8c21f5897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e412ac6f-99e9-4a02-acc2-f179c6175ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474bd06d-5ed2-4c1d-83cb-0548dd68ac0d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a39d061-6ddf-43d4-b000-fb1c467b110b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37cb5ec1-314e-4bc5-958a-d56911a6944e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16194cf-dd8c-429e-b8af-2e835ef6192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c229c51-7252-4049-88b4-0e9053068736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91395957-54d6-4bbe-afa1-c6c1707074dd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847eb3a8-04b7-4303-9d0c-f6710a227508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec96509-64aa-42b8-abe4-2a6f3c4ec332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952ff7fc-bae9-48ac-9e67-cc018d88208a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f895405c-0411-4595-926a-50b970626199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97bd989-8637-448b-ac10-a8889ce67986",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fa98a6-b2fb-408f-9935-d7f8b2d42797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dce1384-8303-4b33-95d1-d6d598d31e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b05c96f-b53a-4f82-8729-177d6dd6a930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7438594-5c0b-4f46-abe8-044052acc9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fda921-2511-45e3-b744-84d5e054f6fd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1dcd08-1f81-4df2-a0c0-231a5739b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fa57b4-cad7-49ac-b81e-40c813e4b8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1427c353-bd66-427e-8e43-3acec647273a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0514e074-df11-4d47-acd1-bba293845251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf9dfca-6511-4a38-a53b-8bcf02fd92d3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e195a8-4c59-41a4-b5e1-a96b3e1b1388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0012998-daa6-4390-98e0-729872aae7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8588ed-d1a9-44e3-82e8-6e3481419852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c6f0e8-3216-40eb-96e4-be368376e141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef41354b-ec9d-4fce-be32-67c9e6b2993d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a7027f-f80e-4ea5-8a8f-4ca2885246ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255eb9f5-04f2-48c0-bf8f-399b716edb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d9b29f-a622-497f-af1f-7db5a7ad01d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a40ffc3-c62c-45f1-b3d6-417d94fd6ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0a16f6-ce53-49ee-ad8d-8d9de6a7f935",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4e43b2-8c76-4cc3-af25-09be212882e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a750bf78-5146-45a6-83e5-de83ed6ce559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ab5811-879d-4c04-b330-1c847e6df599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065b9e71-5bf5-4bc2-b4dd-563d334b9366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524da077-abed-4768-ab65-a0f29a05b4cd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4431fcba-4f03-4fbd-9b52-bae52b9a29a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5ff045-4c63-45d5-bb2b-f5338344b608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42bc6b6-d70b-469f-b42c-330c9e7b8139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07987b6f-9ab6-46a1-82f4-135433855157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52439ba-e7a0-4f07-8c7d-f6ad5255c43c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d03258-7b86-4e12-a8b1-e14e728e291f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e486e91-604c-4566-b6b0-d311931b7647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2ecbc5-b5e7-40f3-9c8e-3c135c1dcffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9df1d8-b806-49a1-a574-657d1e26fb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5cbd67-383b-4801-a869-52a3d5c48ab1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66f8e54-4d73-45a5-83c9-eec35feacbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9aa408-6899-4ff4-8ece-0e11124a72e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "852156bc-6729-4190-8da3-9dc85dc89897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee98e65-502b-49de-a93b-ff377fe36b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6f40fb-d834-433a-a026-c724705b5075",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37159b9-a301-4a20-a810-06591cd77eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5740afb0-566c-4f39-84f6-ec024ebd7f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb3fa0c-d303-4b87-97f2-14fbda767276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32164a67-9019-4484-8f70-47cf401210bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059cb3f3-a568-4b9c-86bb-93cad8892e3a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5f8fdb-eef2-47ee-b128-8605d4cc81ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda1c698-0f52-46cc-b03e-e6225210276d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21362719-ce52-4c37-acec-468e27befb3a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972ea166-33b6-4932-8d1f-964e89065f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65700fe5-8912-4c61-b900-cf84df377034",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d7114-1afd-42a7-aa44-0f87dcca00b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade9c019-109b-4a86-b2df-49c6a89275d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39ff5e8-66e3-42af-b048-97eaaf6751a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037258f2-a566-424c-9050-63d4bb690805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bd0dfc-e821-4daa-8f69-604d6351747d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aba92d4-5b91-4606-9543-6d4eb5c3c567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f204bd90-3821-4218-a4d6-2f987c67a985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693aa027-c604-4f77-8c38-f085ce40efc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4834a760-43f5-4d5f-8a5f-1bb623f4dbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a13c237-dca5-4704-a380-859ef73859d1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2022be0a-051f-452b-a8c6-9ebad2450bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04adcf5f-cd0f-428b-a9c0-3d59184cb7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508253ec-0d72-4e80-97f1-8655cf0200a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7138a5b3-229a-4750-916f-bd620ea46152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7081caff-f310-4e17-9c21-ab39812e9ac9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbf5acf-a0bf-4c21-9e73-15ad2d3ff9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b1f517-1a5d-4856-b8ef-87ef96e5c90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c73e113-9b11-402d-9b96-fe3ced82433c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe337e4-21df-4155-a2a5-86a1407b309d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe60e6-0449-451e-9744-73299ef61ba4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e634e9-5b75-43d1-b46d-03c704079b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4528d33-08f4-4625-8dc2-9f19e089114c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29adf43-8d4d-4064-a3aa-df552425847e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90db9941-cc9b-4872-8b4a-5733411e3898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6102ca-a11b-4598-bcb5-de6d03f8fbff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ffde8-6644-466d-b8fa-525dc0c2d038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419283d4-0fb9-496e-a0c4-fbf7cb9ff2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ff7ad5-5171-4f9d-b73b-b2abfa2aef39",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df29405-0c64-41c1-aa19-0bd3baa6a8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e447faf-4ece-462f-849d-d949b8b49b81",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbefe43a-954f-41e9-81c1-0d2ac77063d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9047534-4947-4923-9a32-e4b53511a0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658b66ae-1227-49ac-9e71-b7404c29fff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e246c3b-3fa0-472f-8d7e-289a0aacdcba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "697d97f9-2e71-4c35-aa96-a9abca5401e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60572537-e24b-4817-b4c2-fdc4bc54a089"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac157c6-7152-45bd-86fb-f27628aec187",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f13c051d-cab8-4110-a18a-e855cd572e7d"
                    }
                  }
                ]
              },
              {
                "id": "6d5863b1-2708-47f5-9310-936119cba32d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1c1e9da-2b3e-43ca-87fb-23288b6ec4af",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75fc8a0-b512-4625-825f-e321bd803575",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bcf90b85-e911-4e1c-bdce-d17e0debd9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dc3656-c80a-4097-9a4b-082c583e4df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba204d03-f34f-42ef-a37c-9e9e6817b1e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee50888-13ef-4a8e-b786-4576546e33dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84539002-8ca3-4765-af5a-e8932ff2155c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdca9b03-5d4f-4510-a237-e90ee3b285da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cddc3f35-addc-49d8-a6be-fca4a2c99f6a"
                    }
                  }
                ]
              },
              {
                "id": "a11e24b8-c8ae-41f5-8bd9-67042383b96c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3aad98d3-78e1-4a6a-b587-7b14b8049692",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722edf9-6aa6-4994-bf25-453a13bd8339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f132fe00-9247-4a1c-8f9b-adb00c47a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2284eefd-1561-4c81-89d1-b6939bb515af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b33762-5a77-472e-9a49-df1b2d5ffa83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b480844-af9e-4e3b-abaa-b31dcae21e83",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5cae5614-fc1b-40f2-95e6-e6a5530c85d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6dbb5af-20dc-4853-8091-3e71e68ce3b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4678884-188e-4225-881e-5cb005920edc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0dff694-490d-41ac-9a2d-0f7c9c472273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f696597-907c-4022-8c80-729e5966d3fa"
                    }
                  }
                ]
              },
              {
                "id": "f63f5403-0fee-4d3d-b076-286344e4f2e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "502536f6-0e35-4617-a743-f4181096b7a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "660a6992-bc0a-40b8-9f20-82a7237c67d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "442806c0-b566-484f-94ee-e78f3d2726c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6702dfdb-7918-4c04-8df6-4fc4f58994fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e94469e-51cd-49a1-b781-bf6361ecca6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "57daccae-cf9b-41c1-ac17-5b8d1346c2fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74b260fd-468f-45af-b0ef-7fc7608637e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a856f66-bac0-44ad-a0c7-c0c75f4655d9"
            }
          }
        ]
      },
      {
        "id": "46919e77-e463-4b66-ac96-8c7dab9f4dd6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f6367636-7ffa-4de4-b0a9-45bcbb08de71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4147296-d804-48fd-b368-53c082cc23e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45007e1e-b73f-4905-81b1-b726b2ee47e5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1ed3ee-9d1a-40a4-ac1e-b32f405eea10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f67c40ef-337c-4932-80d6-07d75c90f3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9899c-09f2-4110-9f14-23941ca0d279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "188a58b6-d68d-4427-b5be-937a86279b83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a2af0c-51e1-4ff0-833a-44780848ca73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fa93072-d26a-41b4-a009-4ee25dea7a96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3505dcb-4b32-402a-9746-1483cc4444ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d75abdc1-f4cf-4f50-840c-6a0367fd9718"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7176af72-ba87-46b6-b10c-e4d3e5216af3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c23e9912-c747-4f97-b43f-7697bf63687d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ee50837-6ef5-451f-9737-5c280fe0cea6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba36f8d7-62a0-470d-a117-10ba34f4870b"
            }
          }
        ]
      },
      {
        "id": "306a4e5d-6f06-4d73-a510-56b9063e9b7c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "73302914-7789-4815-acd6-3528fff2a82e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0970dbb3-7e91-49dd-81dc-31cd63c2d316",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e44a7ecc-c002-4f9e-84c6-ba40c6962dcd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb8c84f-df5f-4025-9a27-1d3fb0309473",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66379d82-67fa-43bb-8e22-fdaa01e68ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b71d84-f4aa-4d72-b26a-d7a3475c9e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e66c1cb5-bc20-41f6-80a5-a7bd67229161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab668887-ed09-48c0-a9b5-2c86cf556dff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfdee410-9e79-454d-81f7-63b62cf1fd0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d877bdc5-fe33-44b4-bd59-b13bb8c9b2b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c1e4383-d79f-4ee0-b257-ee1ccc6e2781"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ef761f6-623f-4204-acb4-4903bf5e9710",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "392f4cd8-f39d-4a3c-8e69-5bb2e5687b6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05133155-9b41-495a-9c02-38ebfbbe9eee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e9a1dcf-e16c-4af0-a5dc-7de8b9594476"
            }
          }
        ]
      },
      {
        "id": "61580354-d7ed-4e04-907f-4b515fbc5367",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "135a13af-6e77-4781-8a48-3c0c4578cfc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e764970-fa7c-40d5-940c-a0302cefea9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11827158-d8b9-4e5d-a44d-d56a62ec1426",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137462e4-19b0-4048-b249-0411ed826074",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d64710d-1025-41e0-976a-bb7a5ad3cc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2acb7d-5ea6-419a-960d-a948dc26fd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc151962-dfd1-403e-b2b0-1a2493e250bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28b6657a-45a6-4b4c-bd80-ff20fac4b416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36db74a6-af51-434a-97a7-efc89911ee17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f127448c-4f2e-4c2c-ac3f-935e03c00f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96268418-57ed-406b-a82c-6c1b5d4ec9d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c2aa228-5543-4f45-a65c-eb20898c6d12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f61856b-3f65-4b5b-8619-93b3690f4184"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd5d1407-416d-4e94-a897-064318f7e4b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abaaf093-0766-427d-8099-78985db87bb0"
            }
          }
        ]
      },
      {
        "id": "e92bd41c-a4f4-4941-82a3-64a8e5fdc5b5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c7bb3e0-1751-46b8-bb7c-b174e2a68c56",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9a40c01-627d-48f6-8186-af66c916c3c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "65dc968f-c961-4053-860a-7742ae52dd21",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86475b05-19d6-49b2-957a-a2cccb097108",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac5d9164-bc32-4104-8703-0137f0d532c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 459.04210526315785,
      "responseMin": 10,
      "responseMax": 18786,
      "responseSd": 1786.1455722433946,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698107617811,
      "completed": 1698107761033
    },
    "executions": [
      {
        "id": "be3fb159-956e-4926-b230-3ef9b3e3260b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a246982c-4360-47a7-84eb-74c1bfd4e5dc",
          "httpRequestId": "69fbc299-8c58-47c7-a4d9-14467440a6ae"
        },
        "item": {
          "id": "be3fb159-956e-4926-b230-3ef9b3e3260b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9cf8cd47-bc30-4a48-9010-0fcdb691c901",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "ce2bbf53-bb91-4330-9292-38269086a34a",
        "cursor": {
          "ref": "825f4575-d9cd-4740-9267-80a4b01ac517",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7f08394-62f7-44df-b1cd-9281b6b45dd4"
        },
        "item": {
          "id": "ce2bbf53-bb91-4330-9292-38269086a34a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1ebb64e3-fa2d-4db0-ab40-688917827b50",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "39691bc7-70c2-4e73-80e7-9d15d82af911",
        "cursor": {
          "ref": "b4428fec-ba6c-48f6-98e4-cc1824464c52",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "46b95ba5-ddd7-447b-b8f3-f0238572b4fd"
        },
        "item": {
          "id": "39691bc7-70c2-4e73-80e7-9d15d82af911",
          "name": "did_json"
        },
        "response": {
          "id": "a0cf9b2f-5427-4641-9f6f-ef9f87268748",
          "status": "OK",
          "code": 200,
          "responseTime": 2100,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7fb6eb-674a-4710-8a39-e7c3aa5672c7",
        "cursor": {
          "ref": "d0b7fb6d-cfb0-40df-983b-a37bad388276",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dfb0f03e-e96e-4227-b49a-e5096fcdc646"
        },
        "item": {
          "id": "ba7fb6eb-674a-4710-8a39-e7c3aa5672c7",
          "name": "did:invalid"
        },
        "response": {
          "id": "72c68753-c0a6-40dd-a1fd-ee77fb4df88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7fb6eb-674a-4710-8a39-e7c3aa5672c7",
        "cursor": {
          "ref": "d0b7fb6d-cfb0-40df-983b-a37bad388276",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dfb0f03e-e96e-4227-b49a-e5096fcdc646"
        },
        "item": {
          "id": "ba7fb6eb-674a-4710-8a39-e7c3aa5672c7",
          "name": "did:invalid"
        },
        "response": {
          "id": "72c68753-c0a6-40dd-a1fd-ee77fb4df88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78905563-b315-4d9d-8e7f-94aff75975f1",
        "cursor": {
          "ref": "953bf58e-3d00-483c-88e2-dc6f705caae4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c335252c-8345-409b-946e-45628fdf5cc5"
        },
        "item": {
          "id": "78905563-b315-4d9d-8e7f-94aff75975f1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fb4fdb06-289e-48d5-90ef-a72a9bf51840",
          "status": "Not Found",
          "code": 404,
          "responseTime": 404,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37d9bdd-d209-4133-9d38-ce9a170908b4",
        "cursor": {
          "ref": "0611015a-ad9a-4ee4-91b8-fd96040c4dd2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa58f16a-81e2-4978-a191-0fb1c2353e5e"
        },
        "item": {
          "id": "e37d9bdd-d209-4133-9d38-ce9a170908b4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "84e1a774-6f39-4da5-9d2d-40931c48fde0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 271,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5457dad1-d06c-48a7-b920-c9fd8797a54c",
        "cursor": {
          "ref": "067f2dfb-7871-4f9b-aaa5-4517fa331942",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ade7de8a-4442-4a08-9cdf-744a28c2c444"
        },
        "item": {
          "id": "5457dad1-d06c-48a7-b920-c9fd8797a54c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b92bf97-42b6-4233-b198-68ecadfa43ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa495e2-c82b-4947-8fa7-8960828a89e3",
        "cursor": {
          "ref": "ab082c31-0135-4359-9dd1-1f12e43b985f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "45e054d4-0069-4da8-896d-08831b9b7b5f"
        },
        "item": {
          "id": "bfa495e2-c82b-4947-8fa7-8960828a89e3",
          "name": "identifiers"
        },
        "response": {
          "id": "c63c7513-c457-443b-b513-c9d2eff63831",
          "status": "OK",
          "code": 200,
          "responseTime": 1673,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763c4b68-f783-4293-892e-f42f77617011",
        "cursor": {
          "ref": "cbd7f642-adb9-4372-b69b-95fd181a5b90",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7d291424-d284-4493-a1b3-0401f4281a1e"
        },
        "item": {
          "id": "763c4b68-f783-4293-892e-f42f77617011",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7dc2c634-256b-44ad-9bea-cb40115cb7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabd48a-4400-4082-81c6-074a8c1f4d46",
        "cursor": {
          "ref": "c662d58c-c5e7-4f8b-9824-cecb13367cc0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "00e88992-0d90-4384-83b5-51f7b8165352"
        },
        "item": {
          "id": "fbabd48a-4400-4082-81c6-074a8c1f4d46",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f30ad6cb-4c15-4ac0-b69e-752b8844510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8c7444-ce9e-4a71-918e-ddaa3904b5fa",
        "cursor": {
          "ref": "976003fd-e65c-4a73-8dce-03fdf9d2ab4a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60091028-baa2-44c5-adee-eeb83e1a2ed5"
        },
        "item": {
          "id": "bd8c7444-ce9e-4a71-918e-ddaa3904b5fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "19ff4df5-ad84-4d67-9925-cbe04ae593b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b6b827-9716-451a-8050-29d38374559b",
        "cursor": {
          "ref": "d8e1cf10-47af-48ed-a1b9-587e0cd0eead",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7c087a40-a9ea-4890-9fba-76a326e23dbb"
        },
        "item": {
          "id": "d5b6b827-9716-451a-8050-29d38374559b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6e176e25-defb-4d58-95db-0f4e4b2defb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab049b6-3bc4-4c11-977b-0199de96cf32",
        "cursor": {
          "ref": "40214980-3c06-4bb2-9ed3-0e53c71a1af8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fe759432-46a6-4f9a-961f-9869b4294f5a"
        },
        "item": {
          "id": "3ab049b6-3bc4-4c11-977b-0199de96cf32",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "03a991e9-8ebd-4f95-bb24-e8585494aacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc19bb8-ea9c-4df2-bd36-936068f8039f",
        "cursor": {
          "ref": "84441bfb-c1ea-46db-a74c-887f6f82b1f9",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "adb6b664-ddcd-4139-bdb6-d85902ad2141"
        },
        "item": {
          "id": "5bc19bb8-ea9c-4df2-bd36-936068f8039f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "09b1a27e-8b57-438f-9f25-15a9429d2966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad549ad-18c9-4ce3-973a-fa3de8f96ef4",
        "cursor": {
          "ref": "b711f7ec-8ce3-4246-b98d-82e42435ad0b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8476f6a2-79ce-4d2a-84fa-edb87db11f7f"
        },
        "item": {
          "id": "3ad549ad-18c9-4ce3-973a-fa3de8f96ef4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "773790e8-45ad-4e12-b434-a82978d71117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4fca38-529a-4802-8d43-7b534dadd2fc",
        "cursor": {
          "ref": "060c87b3-96ba-48e6-b59a-a670c13fce8c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c7ec7d62-5eed-4c1c-b40b-ad2d266c3422"
        },
        "item": {
          "id": "9e4fca38-529a-4802-8d43-7b534dadd2fc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bce01e6-f143-426c-ae23-b978ad75e42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf22a02-4122-49a3-9068-d0fa0d94cdef",
        "cursor": {
          "ref": "c3078ef1-3909-417b-a356-88f1998d09e1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8081de76-f5b6-4bcb-b6b5-75ecf8fd55a7"
        },
        "item": {
          "id": "fcf22a02-4122-49a3-9068-d0fa0d94cdef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b938d62-d75b-489f-ac09-7d5b3d1b0e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9904a70c-582e-4044-91bb-35cd7bcccede",
        "cursor": {
          "ref": "8956d2f8-e5fd-4b96-aff8-ca258e1ce410",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c899335-7251-4206-8a16-de12bf897294"
        },
        "item": {
          "id": "9904a70c-582e-4044-91bb-35cd7bcccede",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee72db62-0ae7-480a-aa53-3e4a963aff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73408cb5-9a66-47a9-a12d-bf15f324efaf",
        "cursor": {
          "ref": "f62b827a-3c48-47eb-9b52-9d1ab2197839",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e77217cd-a4d7-477a-a318-df47e7fa7123"
        },
        "item": {
          "id": "73408cb5-9a66-47a9-a12d-bf15f324efaf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75498c53-2107-4b96-9710-1fb2e93f2664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eb9a4d-890b-4def-a1f2-b329890f478d",
        "cursor": {
          "ref": "38a95e35-b3e7-4f82-a628-e284bd63f293",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8b6c9d11-02da-4588-8b85-20c1dd01a711"
        },
        "item": {
          "id": "71eb9a4d-890b-4def-a1f2-b329890f478d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "92ad8965-6256-474f-8852-63b36c4877db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243ce4a-d9ac-40bf-8e13-ae5f5aabd529",
        "cursor": {
          "ref": "e717edcb-34c3-4b97-bdea-a40099c99a49",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1fb9e3a9-93f7-448d-8388-3a06fb47996b"
        },
        "item": {
          "id": "2243ce4a-d9ac-40bf-8e13-ae5f5aabd529",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c4c385aa-9c29-4648-a2c0-2040ce561853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05004946-7ed5-4d63-8399-1fed56704451",
        "cursor": {
          "ref": "11a7bde7-e479-4521-8203-5121a7c51eb0",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d11f9bb2-4846-460f-afbc-fb3f26dce938"
        },
        "item": {
          "id": "05004946-7ed5-4d63-8399-1fed56704451",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bb3ff1c1-18b0-4fe7-a54c-e01c3892a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63788478-647f-47e0-9fec-de223cdcc0d5",
        "cursor": {
          "ref": "486bdd48-a335-49ee-984b-b7dc69c2eb94",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eb0359b3-48d0-47ef-8836-3460829cc007"
        },
        "item": {
          "id": "63788478-647f-47e0-9fec-de223cdcc0d5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "63aefc11-3771-40d0-89c2-841b71201e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ac4788-12f9-4b75-9fd2-cc4e3e172274",
        "cursor": {
          "ref": "ccd6c876-664f-4430-834a-2422011ea80e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3c9a34f0-c17a-46e9-bb43-0d6eee924a75"
        },
        "item": {
          "id": "a5ac4788-12f9-4b75-9fd2-cc4e3e172274",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6949602-d930-45f3-a54f-b3c6eab1835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df43730-0556-4b37-a0c6-c25985515593",
        "cursor": {
          "ref": "3d3c48da-eb32-4444-a224-bbeba958515e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83013aec-b10e-41f9-b697-bd73e6b428be"
        },
        "item": {
          "id": "5df43730-0556-4b37-a0c6-c25985515593",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4e3235b7-ec3e-4bc0-9d18-ee8a8abd534b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d29227-7717-446d-98e3-d7ccd27c4ae2",
        "cursor": {
          "ref": "788ea652-9f24-4e8f-af08-b41d5ef25875",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5f6b36aa-bd21-4f23-a92c-e523bc42e6c9"
        },
        "item": {
          "id": "f2d29227-7717-446d-98e3-d7ccd27c4ae2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "21c56321-cd36-4ea4-adc2-aaf08a4317d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726f76d-206f-4e17-bf43-44186b022cde",
        "cursor": {
          "ref": "7ff55db3-2216-4d03-aff8-8be8d58f8de0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "32287794-2156-4c82-b3c1-ebbd3374f16d"
        },
        "item": {
          "id": "b726f76d-206f-4e17-bf43-44186b022cde",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e1937990-558c-4a0b-9772-1e70029c4c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a7e81c-e226-4f34-abf9-c6fb1e4d54a4",
        "cursor": {
          "ref": "8a9fd3d1-3210-42c4-ae03-371a40a853e9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e3b39ec3-b4ba-429f-b1b4-99837eb0e951"
        },
        "item": {
          "id": "12a7e81c-e226-4f34-abf9-c6fb1e4d54a4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "83abb164-3dd9-441a-97f2-1b4f3371ad31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d25c6a-96aa-4c24-a8d4-d41ba028ba18",
        "cursor": {
          "ref": "75031a40-8da1-4e83-8926-e9b8dd2db5af",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "52aa173c-76c2-4ef8-a464-d659b233eb64"
        },
        "item": {
          "id": "a5d25c6a-96aa-4c24-a8d4-d41ba028ba18",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "447d5f1b-37d8-4ade-8994-220eca0f8009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee0d759-7b89-4c70-b835-172c9df29211",
        "cursor": {
          "ref": "5cf22c19-101f-437f-b8bd-8d4398e47caf",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f3be09c5-fc11-485a-a8ad-152acc498bc9"
        },
        "item": {
          "id": "aee0d759-7b89-4c70-b835-172c9df29211",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8335666d-68d4-4d2b-980b-ab835983d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d531d305-da25-4e07-ac59-2ea5c5974b4c",
        "cursor": {
          "ref": "0f7cdeff-c213-4c08-b477-a7d4109eea2d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb12f97e-6c54-4b96-9a57-414e404f76cb"
        },
        "item": {
          "id": "d531d305-da25-4e07-ac59-2ea5c5974b4c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13863a0f-2863-407e-8233-f4cb69721d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2e3191-6454-4949-9422-b548e20f549a",
        "cursor": {
          "ref": "6ab6c5cf-23ad-45d8-abed-3ee3230a0696",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "13dd0013-9677-4cfb-abe3-a16aa8f66653"
        },
        "item": {
          "id": "fa2e3191-6454-4949-9422-b548e20f549a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0bd670d3-ffcb-4851-a5ea-c339bf9ba19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f304a90-8a27-4cd6-bcf2-3d0dd181e9e1",
        "cursor": {
          "ref": "148a7f98-29fc-49b9-90ba-f04cd3f9cc56",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9ba5545a-5b3c-4843-952d-10debbcb6665"
        },
        "item": {
          "id": "4f304a90-8a27-4cd6-bcf2-3d0dd181e9e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e046c645-7d76-4efe-9728-d2129ac257db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138f2720-4e9d-4459-8ec8-7ca79e2eb616",
        "cursor": {
          "ref": "12af2481-425e-4b65-948c-e9c3e519e172",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c3701329-1639-4928-9bf9-30467ce940e2"
        },
        "item": {
          "id": "138f2720-4e9d-4459-8ec8-7ca79e2eb616",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8e9e86ba-f181-4439-84e5-9b2fc1b9fc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289d5323-9ab9-4a2b-b32a-d299a87483b0",
        "cursor": {
          "ref": "67bea605-9f21-4d1b-8cb9-0b3b4eda49e4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "311261f5-3a39-4313-8d9f-dbb9c888b043"
        },
        "item": {
          "id": "289d5323-9ab9-4a2b-b32a-d299a87483b0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a405a0b2-7d0d-47fe-9253-3062096977f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36425a-2e81-42aa-933e-e0fbab253683",
        "cursor": {
          "ref": "8fe67fd5-5e65-489e-96be-3b528ec72054",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "00623968-0fdb-48db-9684-53456f0baee3"
        },
        "item": {
          "id": "da36425a-2e81-42aa-933e-e0fbab253683",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d4d6124f-615f-4ed5-8994-e3b203f34315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f206b5-0642-47b7-a722-1cc0c5c26a72",
        "cursor": {
          "ref": "1f8960b8-729d-46bf-8c6c-e27252362b0b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2c1fe357-1d30-4b7e-b310-21ff6eff2224"
        },
        "item": {
          "id": "39f206b5-0642-47b7-a722-1cc0c5c26a72",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8a36f2f4-0599-4cf6-b492-19efeba33d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5c602b-d000-48fa-8e5c-47f43bef3b44",
        "cursor": {
          "ref": "60d8e102-623f-45b4-af07-76b8ef371a33",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8e815cfb-afe8-4369-82de-3c98115aae10"
        },
        "item": {
          "id": "8b5c602b-d000-48fa-8e5c-47f43bef3b44",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8945ea5c-08d2-4e79-b824-7c8003a41d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f0c1d-b1ed-490f-aa29-b2f7f68f46a0",
        "cursor": {
          "ref": "eb8e5971-e0d0-4eb6-8e56-271443fce882",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b27fcea-9b27-4fb8-9fe0-23c575766bf0"
        },
        "item": {
          "id": "d92f0c1d-b1ed-490f-aa29-b2f7f68f46a0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "936f4d0c-cca4-4f43-bcd0-7946d8be36e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b75e0d-15ae-48f2-a04f-68757ff980a9",
        "cursor": {
          "ref": "d4709747-f950-451c-898c-11a51e43259f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f9eb287f-a367-4631-8065-543d53b1f2cf"
        },
        "item": {
          "id": "b4b75e0d-15ae-48f2-a04f-68757ff980a9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6b1d013a-7def-4424-b309-cf4435041f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405d0eb6-590d-469d-9ec3-6c01e2eb8026",
        "cursor": {
          "ref": "4f95cc00-6f36-4631-aacb-2e818c75ffee",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1bef2162-4f6b-40e0-92c3-6c0fc8486373"
        },
        "item": {
          "id": "405d0eb6-590d-469d-9ec3-6c01e2eb8026",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c77c4e35-c341-4933-a50c-48c15e1a1c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f91039-8fc5-48c5-9e13-f7d3f6f92c6a",
        "cursor": {
          "ref": "9fc25d57-9c19-448f-a98c-1cc2e31fdbf9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0f65d161-8ac6-4ffd-85bb-0ed8d574c18e"
        },
        "item": {
          "id": "a1f91039-8fc5-48c5-9e13-f7d3f6f92c6a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e3cbf4b4-0db1-4197-89d5-2a4abced0342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39750e0-80b8-429c-a2c6-a04464d13cb4",
        "cursor": {
          "ref": "b403cc98-9f6d-4a37-ac4b-f1701c6a3944",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "93dbd238-b7ea-4c3d-8d6c-77c6d7048f0e"
        },
        "item": {
          "id": "f39750e0-80b8-429c-a2c6-a04464d13cb4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "94306c47-c3b5-4045-af33-157e108656ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df7793-bd4e-43d4-8612-31f1a83812b5",
        "cursor": {
          "ref": "c3d46276-c42a-4b16-a390-5fb169419668",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "462a6d66-66a1-4135-8509-10ed01cbb982"
        },
        "item": {
          "id": "d8df7793-bd4e-43d4-8612-31f1a83812b5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "36d289c1-8d04-4f4c-a79c-5608c4077683",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2486,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dcf32a-1344-4ebe-b398-d540315f4c2b",
        "cursor": {
          "ref": "2afb3bce-bcc3-4ec6-8b6b-afe43cf1a100",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8888a267-3c9e-4ba9-9cc2-6bdc22a85a23"
        },
        "item": {
          "id": "43dcf32a-1344-4ebe-b398-d540315f4c2b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "11d5e00e-10ca-4a17-a89d-5bc12287f590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ead49c3-1017-4501-834c-803e1cc84d3c",
        "cursor": {
          "ref": "7a776ac1-b92a-4166-99f3-9e7500944a45",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "06e30ade-7a29-4415-8eef-183fb49c43e9"
        },
        "item": {
          "id": "8ead49c3-1017-4501-834c-803e1cc84d3c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7b73daae-f42c-4952-bd0c-ac7d7bb1d4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2b9346-75e6-4c4b-847a-01a89c430a28",
        "cursor": {
          "ref": "34dc552f-208f-46ba-9d43-a8c3dbc0607f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "84e0b7c2-e13d-4a71-ac9b-15ab92e5fd2a"
        },
        "item": {
          "id": "0c2b9346-75e6-4c4b-847a-01a89c430a28",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6004f725-f44c-4131-9408-becdf7e5e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47381fab-8eb0-4c5b-8b01-cde4ab1edfb3",
        "cursor": {
          "ref": "cc597a26-40c1-4978-8f39-b156d9405f0d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e2f29770-88c0-4b26-b157-86b0679de78a"
        },
        "item": {
          "id": "47381fab-8eb0-4c5b-8b01-cde4ab1edfb3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2c5328c4-fec6-4788-9502-16fcc6a4aa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd5b4c0-4a71-49fa-a3fb-757db68f93ed",
        "cursor": {
          "ref": "86337132-d93a-4a3a-bfff-3efc9e1ba649",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cd25cef1-c92b-472d-86e6-34efaccee861"
        },
        "item": {
          "id": "7bd5b4c0-4a71-49fa-a3fb-757db68f93ed",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49af5982-a3f6-4906-a14c-93671288baff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f515ca-6f4f-450f-8f70-ad6ce99b9e44",
        "cursor": {
          "ref": "d1c95dc8-6f26-4910-a3b7-a0801b9552ae",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aada235a-9955-46e4-a733-2f5ee5183b0a"
        },
        "item": {
          "id": "a5f515ca-6f4f-450f-8f70-ad6ce99b9e44",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ade82a33-2dc8-4c82-89fc-bb4cf9e9874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d484a75-b007-4e16-bfc2-5c25d74da8b5",
        "cursor": {
          "ref": "8c58e9e1-5aab-4dc8-8af7-2359df427786",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b31a8877-3e30-4347-acda-717bcbe8fed4"
        },
        "item": {
          "id": "6d484a75-b007-4e16-bfc2-5c25d74da8b5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f33ca0ce-f132-43d8-a213-1e5a3436d42c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2390,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6b3342-e0b1-441f-b767-ef07c5b7520e",
        "cursor": {
          "ref": "2d160eb3-3d5f-4d4b-a411-ce211ddbdaf6",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "078a09b1-2f81-4746-9ec5-1bf6a09bf168"
        },
        "item": {
          "id": "7a6b3342-e0b1-441f-b767-ef07c5b7520e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "187c80f1-7aac-40f9-ae81-7ce823a07560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3222e37-fde7-4b60-a474-b1235cc8c125",
        "cursor": {
          "ref": "6a2af960-6e99-40f6-b175-10920d320a60",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fdb89675-4d83-4e8a-9456-8829fa7d9139"
        },
        "item": {
          "id": "a3222e37-fde7-4b60-a474-b1235cc8c125",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "45ad941c-9860-45da-9b11-eea02b99987d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fceaa8-9af3-4a67-b22b-dc955c66d29c",
        "cursor": {
          "ref": "73c3db05-4957-497c-b9b7-22f5e946d70d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bbbb6da3-45a2-4a27-a2e2-6eff6e17ba7c"
        },
        "item": {
          "id": "a2fceaa8-9af3-4a67-b22b-dc955c66d29c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a12d822c-1116-461c-85ea-a807b3ef428e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce77714-3e2a-42d9-a964-76c1dc4d1947",
        "cursor": {
          "ref": "119902ec-3083-4992-a9f8-3f67d3181bf1",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "137211f1-dd67-45b9-9e69-7f79097849f3"
        },
        "item": {
          "id": "3ce77714-3e2a-42d9-a964-76c1dc4d1947",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "33446a47-65bb-4515-a8bf-5e2fcfd5fe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161775a2-0b5c-4bff-8a61-184ea7a79988",
        "cursor": {
          "ref": "11cc91ac-550d-4f8d-a0d6-038d30322f48",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e862488-c9e2-48fe-ac1c-7db443b88894"
        },
        "item": {
          "id": "161775a2-0b5c-4bff-8a61-184ea7a79988",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6d26b6e9-2a67-4c4f-b4b8-86f7356af3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def02fb8-9237-4bd1-9974-fef0f24066a2",
        "cursor": {
          "ref": "4b3c75e7-696a-4569-8fda-33fce013d85b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "26d29585-05ac-41ff-930d-81de69f3c830"
        },
        "item": {
          "id": "def02fb8-9237-4bd1-9974-fef0f24066a2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "91affb5a-3652-4be4-be37-9c0ed5608ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b330a3c-4e6a-4aff-a48c-ed92cb10bb11",
        "cursor": {
          "ref": "286eaa53-2fe1-45bc-bbfe-48ee5e6ab5a7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b6baa0fc-c487-4a8c-b3fb-c31a0fc9c62d"
        },
        "item": {
          "id": "8b330a3c-4e6a-4aff-a48c-ed92cb10bb11",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2aafc610-7f95-4f2a-ad3e-3cd54ff40f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b697e7-77f3-4eff-a8a2-ecc32074fce2",
        "cursor": {
          "ref": "b05f011f-3547-4150-9a2e-4437c2ae40f6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "63b74d84-de4b-4eb0-ba37-4ba5481cbf5a"
        },
        "item": {
          "id": "a2b697e7-77f3-4eff-a8a2-ecc32074fce2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "95ccbfcb-38ca-4882-b732-a6cb1b77f58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f4d55e-a5dd-48e2-89fc-b4a3817ead8e",
        "cursor": {
          "ref": "f1767a00-aec2-479c-9148-f7b0c96b3e27",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1588689c-9b52-4e3e-916c-4c1eedb57598"
        },
        "item": {
          "id": "37f4d55e-a5dd-48e2-89fc-b4a3817ead8e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e13dc661-af6e-4b8b-8918-65db4a532399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d859df1-96f2-4cd7-b7b3-0b3b7711c071",
        "cursor": {
          "ref": "7b5a5b5f-1d82-4f97-9d16-c7285f2632d4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b85bd05f-ae22-45c8-8f80-a7ea0b27d663"
        },
        "item": {
          "id": "1d859df1-96f2-4cd7-b7b3-0b3b7711c071",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "32a0b100-e21b-45a8-9568-b39945588d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e54cae-839f-42a8-ae6c-32ce7ebe9667",
        "cursor": {
          "ref": "5787663b-0475-40d0-a3f6-41dfa626bd78",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a26dd2d3-947f-48b7-857e-5882e8cb4df2"
        },
        "item": {
          "id": "72e54cae-839f-42a8-ae6c-32ce7ebe9667",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "28d7844c-2308-4155-b112-d48e31eab4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5aa789-cb65-4d3d-a9e5-c9e94f673d07",
        "cursor": {
          "ref": "e9dab5a2-ef8d-4d06-bf78-d212b13a4022",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "648ac273-da82-4a82-b525-450ea1d70b77"
        },
        "item": {
          "id": "ea5aa789-cb65-4d3d-a9e5-c9e94f673d07",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "01fe24f1-9b78-4c38-acfe-4ca3b7cd6dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f21efdd-fbf8-4f33-bc81-8d1cf9caeece",
        "cursor": {
          "ref": "a0afee2b-e243-4f76-9c84-9a97bdbbf68a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74b90141-049f-46d4-adcc-692fbe750223"
        },
        "item": {
          "id": "9f21efdd-fbf8-4f33-bc81-8d1cf9caeece",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "189c504c-9903-4913-be56-49cfe320e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9b7a9f-6ee7-451c-ad6c-67a105c96189",
        "cursor": {
          "ref": "ffb0681a-7328-4cd3-b933-d201d6f0afbb",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "407d65e1-0dc5-4add-b6c8-712ea19e4925"
        },
        "item": {
          "id": "5b9b7a9f-6ee7-451c-ad6c-67a105c96189",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3defd7a8-da58-4b86-83ad-8ca1499fe65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edeb21e-8275-4b52-abfc-67829eb0f3d1",
        "cursor": {
          "ref": "c093c7b9-c10d-4073-bc37-6a76f95dd965",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bc0d57d1-fe0f-43a5-9da1-cc470fae2f71"
        },
        "item": {
          "id": "7edeb21e-8275-4b52-abfc-67829eb0f3d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "60609288-d4db-46e8-ab96-1a7d8618179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b90ca2-3b2f-470a-a778-d22fe2ed0e09",
        "cursor": {
          "ref": "037376f8-39d3-43e0-8c77-bc8fc9432422",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5d55117e-68b3-4ea9-a089-eb78a5985804"
        },
        "item": {
          "id": "98b90ca2-3b2f-470a-a778-d22fe2ed0e09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2f9a7fa0-d5c0-478f-9072-5d811da659f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf815f1f-e8cf-4696-8a0d-a43f3b218e3e",
        "cursor": {
          "ref": "fe4c6218-fcbd-418c-80cc-9de7680c4eae",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "897d0247-ae7e-465c-9f77-d75c2aadf3e6"
        },
        "item": {
          "id": "bf815f1f-e8cf-4696-8a0d-a43f3b218e3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5fb46e8c-2a45-418e-9e71-b3a8b9df9394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f5146b-53fd-430b-8acc-b2636120c726",
        "cursor": {
          "ref": "bd0f3323-849a-41c1-881c-687367f17d2d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0c34317f-3e01-460b-bec9-254eff270ff2"
        },
        "item": {
          "id": "c1f5146b-53fd-430b-8acc-b2636120c726",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "251aa6d0-c038-4740-bedd-ee17adb271f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d226735a-5de8-43f2-81c0-ca1f68f7420a",
        "cursor": {
          "ref": "755f0274-a589-45da-9c30-ddf82e54cedb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b7ca2897-5257-4b8e-a281-4a6d3ff24ec1"
        },
        "item": {
          "id": "d226735a-5de8-43f2-81c0-ca1f68f7420a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c503cae7-e400-4422-8f70-9b63a291e531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7441456c-09e6-441a-b516-550fd5d1350d",
        "cursor": {
          "ref": "1e0515fe-8a2b-4cd7-96a6-b30703d31cab",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a97b726e-cf59-4b74-a18d-3793e6122726"
        },
        "item": {
          "id": "7441456c-09e6-441a-b516-550fd5d1350d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "71b8a44f-a06b-4074-be23-a7aa86dc6332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111618f7-c04e-481e-8858-59c84f39344b",
        "cursor": {
          "ref": "d9238623-3863-4e94-8544-aa8907d92110",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a7fa2bc9-cca0-4401-9fd6-a7c42190412b"
        },
        "item": {
          "id": "111618f7-c04e-481e-8858-59c84f39344b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3cb14dec-68c5-45e3-8893-bd19aa8f2af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd3f24c-c7c7-4aa0-affd-2d39b56af46c",
        "cursor": {
          "ref": "7ba2f2e9-2920-4188-9a01-4eeefc291000",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7651027e-6515-44be-8239-4920048b0db9"
        },
        "item": {
          "id": "6cd3f24c-c7c7-4aa0-affd-2d39b56af46c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f984aedd-218b-497e-b909-3d74fd094bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73c9c53-6a0f-484a-b183-1e69754db088",
        "cursor": {
          "ref": "f7d8ac90-e2de-4bc9-881a-8ffcdc29ac38",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a67ab33f-a000-4034-a926-96c82ea377d3"
        },
        "item": {
          "id": "d73c9c53-6a0f-484a-b183-1e69754db088",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "00263032-41e8-46f7-8bc9-bd086ca0676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2177d70-ad97-4586-9bf0-4c84ccdd5828",
        "cursor": {
          "ref": "9ebcde3a-17e9-4d53-ab10-7b0e227b0c0d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "262c7a5e-0eb0-45e4-9770-794e741f1b11"
        },
        "item": {
          "id": "c2177d70-ad97-4586-9bf0-4c84ccdd5828",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "10d86cab-bcf4-4c9e-951f-b855bb228c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4c664c-188c-4239-9c4c-1ed8743a96f7",
        "cursor": {
          "ref": "6ce27b5d-44eb-4664-8ce8-f701e7a49120",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6cf98d8c-8964-4434-a55d-c236574c3b5b"
        },
        "item": {
          "id": "9c4c664c-188c-4239-9c4c-1ed8743a96f7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "298daf63-12bd-4a95-a99c-72018be80338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9d9eb8-46b7-4dee-97c5-a119df7a728c",
        "cursor": {
          "ref": "a0e4fd18-223d-442f-a8d1-7de3ecb19603",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4f1df0ec-5855-4f28-90bb-50e09ca88636"
        },
        "item": {
          "id": "aa9d9eb8-46b7-4dee-97c5-a119df7a728c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f57465fc-44b8-4700-b63c-6410f4189d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b4dccf-2e25-4583-9c70-3ccf658125b9",
        "cursor": {
          "ref": "a631f7be-0a0f-401d-af87-e9017efbb448",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "97cbe1e4-06e5-4f2b-9a06-bcb7de64cb43"
        },
        "item": {
          "id": "13b4dccf-2e25-4583-9c70-3ccf658125b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "355a7919-ecce-46ba-8fce-6dfb73b699a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fcfb6e-ef6e-4392-a93c-2bda4a564335",
        "cursor": {
          "ref": "d8135974-a307-4ed7-9eb7-9a533301c225",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ef0e6b8c-277c-4519-8320-6b7fcb03b860"
        },
        "item": {
          "id": "62fcfb6e-ef6e-4392-a93c-2bda4a564335",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9b20c088-b487-4e25-85ed-d06aedf2bfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4a1823-f305-450a-bcee-b54a3ca37f48",
        "cursor": {
          "ref": "a583811e-6e16-4c2e-8c04-44fa4bdc6548",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c2b26a58-db17-419e-983d-ff42c6088711"
        },
        "item": {
          "id": "6c4a1823-f305-450a-bcee-b54a3ca37f48",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fda24e16-e3b1-43f6-aaab-a86413ee32a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bccc854-154e-47e4-a785-e30cb4fe2cc7",
        "cursor": {
          "ref": "a5256bf1-de9e-47fc-8e20-60614553cbd5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "47ffd9a5-2fe6-4361-8ac3-71a1b94b0e0a"
        },
        "item": {
          "id": "0bccc854-154e-47e4-a785-e30cb4fe2cc7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4d2f9f62-9f8f-46fe-b91a-92f4a11d1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a63cdc-0651-4588-971f-b5a3f049afb9",
        "cursor": {
          "ref": "ef1bdc32-caa5-428c-ad3a-7a7e735b312c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "70c303d7-7aa4-45b9-9923-0bf4fdd5adad"
        },
        "item": {
          "id": "98a63cdc-0651-4588-971f-b5a3f049afb9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "adac72af-f0c7-4491-ae80-191984975c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95990c1f-f8dd-439a-bd21-8707d8fc8d3d",
        "cursor": {
          "ref": "aa9c56e8-f3a7-4280-8e06-2c24cd529eee",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aa22e326-5705-46fb-a94e-bbca52b90e2d"
        },
        "item": {
          "id": "95990c1f-f8dd-439a-bd21-8707d8fc8d3d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "95d897f0-386b-47cc-ba3f-5cf8a91b4024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058ed508-7937-4cf0-9fe9-4cd9503e73a8",
        "cursor": {
          "ref": "cc64b24e-fbe6-4f65-bf3f-0910f629615b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1e51eb1b-2ceb-47c2-b33d-61734b88adf3"
        },
        "item": {
          "id": "058ed508-7937-4cf0-9fe9-4cd9503e73a8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ef00e7d-8782-48e7-8124-5b2ca95e3c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7f0032-4140-4022-a522-5bfae6532093",
        "cursor": {
          "ref": "e6f11da3-6c5f-45ac-8dce-d6425c2de128",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f552efaf-94a1-41cd-aa79-02227f6311fa"
        },
        "item": {
          "id": "5c7f0032-4140-4022-a522-5bfae6532093",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "24522614-0bc8-429e-b3ff-ae65ea0246c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81c7016-8ac4-42a7-b08c-27d9f5132b36",
        "cursor": {
          "ref": "bcb1affb-aa04-4f1a-b51f-64309365f0a8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "388858ee-f42b-4859-8d00-3ac75348ac17"
        },
        "item": {
          "id": "b81c7016-8ac4-42a7-b08c-27d9f5132b36",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cb8e0162-1799-4bba-9413-10626a46cd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b77e61-4614-4534-b5e1-eba5e3eddf96",
        "cursor": {
          "ref": "4027dfab-71f2-4627-8f94-e03b9fde2b08",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9e9857c6-483c-4648-9521-1b40a3790a04"
        },
        "item": {
          "id": "d6b77e61-4614-4534-b5e1-eba5e3eddf96",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8fb2e037-86f8-41aa-a4e8-b9f8d2bfa315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30669f58-c92c-4146-b188-a362d3216a35",
        "cursor": {
          "ref": "1116aceb-2833-44d4-865b-e38025fcec2c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d361ebf8-7d3c-4729-a2f6-cd5a8452fc8f"
        },
        "item": {
          "id": "30669f58-c92c-4146-b188-a362d3216a35",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e89c082b-3add-441e-9388-604f533f547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257d64e4-1b7f-4423-996d-ab6bcc8b930d",
        "cursor": {
          "ref": "6eb89c2c-a8c3-42fd-a056-f434fd977621",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6f11b2a1-a0e1-4a10-8d83-c514196eedad"
        },
        "item": {
          "id": "257d64e4-1b7f-4423-996d-ab6bcc8b930d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bdc339b9-80ab-4ca0-9cc0-9cfad9521d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba102c69-1c4e-4a79-af4b-80d2410c7b6d",
        "cursor": {
          "ref": "c6abfd85-aa70-402d-8a36-37440e82bb66",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4ed9992a-6aad-4fbe-9b8c-c30f0a3383bc"
        },
        "item": {
          "id": "ba102c69-1c4e-4a79-af4b-80d2410c7b6d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6233eed9-d288-4f4a-8eed-ddb326c45166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccd5ed1-cef3-4ba6-87cc-b839953bfb7c",
        "cursor": {
          "ref": "505df3c1-189e-4a0c-bdb9-b87bf921225a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2dadc3a3-bef3-4eda-aab6-2fd23c555a31"
        },
        "item": {
          "id": "9ccd5ed1-cef3-4ba6-87cc-b839953bfb7c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c6c73fe8-4017-4746-8714-741d400fd486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95a247d-2ec3-42b0-b24f-dc38caa5db20",
        "cursor": {
          "ref": "8c0f711f-5aac-46c1-8fa7-c5321b04f00d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e25b7e68-2904-40c5-be14-ded333118ed5"
        },
        "item": {
          "id": "d95a247d-2ec3-42b0-b24f-dc38caa5db20",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88731b37-ff73-4261-bdd1-d4d76b960aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5521a689-64eb-474d-8b03-33d2f3b32284",
        "cursor": {
          "ref": "33783f92-6140-4e53-85f3-826282a8b00e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "86692d00-220b-450b-aa38-420db7b0833d"
        },
        "item": {
          "id": "5521a689-64eb-474d-8b03-33d2f3b32284",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ab15e9ff-00f6-44b7-8164-f8c3d55fcd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8254e65-bca6-4273-b4cf-f0316cc37caf",
        "cursor": {
          "ref": "954a34b4-0973-4b2e-ad2e-c69b8e48f4f1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "511bdacf-180f-46d2-8a51-f5194c7ed333"
        },
        "item": {
          "id": "c8254e65-bca6-4273-b4cf-f0316cc37caf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f9e164a7-c39a-4fd3-931a-3cc2d0d75f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2c4f4f-c10c-4c0e-9c84-4f00720aedee",
        "cursor": {
          "ref": "bb0d5270-7204-4560-a496-cd217de167d4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f53dd19d-8ad4-40f5-9fcd-f4290a8f0c96"
        },
        "item": {
          "id": "7e2c4f4f-c10c-4c0e-9c84-4f00720aedee",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4132b6bc-7710-4515-8f7f-281873f0c22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b54eb-8804-4c94-b9f7-fd11b6427a90",
        "cursor": {
          "ref": "0ae7ceb7-ad5b-410e-be47-6407c06b8201",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c1aa9353-5cf5-40b6-996b-94d3e9d45262"
        },
        "item": {
          "id": "a32b54eb-8804-4c94-b9f7-fd11b6427a90",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ea754145-83bb-4ec9-810b-8279ae92bff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13848f9b-d8f4-4768-b210-4b0879976cc4",
        "cursor": {
          "ref": "443c220e-c0ea-4bd8-a182-215d6f2fb9ac",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e6997408-ec93-4cba-a630-f0a5b851e3ad"
        },
        "item": {
          "id": "13848f9b-d8f4-4768-b210-4b0879976cc4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3fe6ea11-cc7e-46d3-add6-b0cc7e92e38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d303f1b6-05f6-4c0c-a348-421abd6dde08",
        "cursor": {
          "ref": "e5d3ad3b-3b71-45ba-9714-19e90fc8e04e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a5036db3-ebb3-4a3d-aa26-61e08d1e76a9"
        },
        "item": {
          "id": "d303f1b6-05f6-4c0c-a348-421abd6dde08",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "129ce115-0089-40cc-bb2f-e4f40e08f315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97b6ce4-c2ba-4f16-bd4d-687aa75cfd02",
        "cursor": {
          "ref": "305abfa7-39db-449d-b39c-579ace4747b2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "24f3810f-3659-48d9-be54-ad98dce79be8"
        },
        "item": {
          "id": "c97b6ce4-c2ba-4f16-bd4d-687aa75cfd02",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a2bf5ac8-2989-45cc-af47-2ec2798adfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fe5b3-fc4b-4146-a603-d1cd950e2b5a",
        "cursor": {
          "ref": "a8ca03cb-e786-4c9a-944f-ea85f0402b27",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "46451209-dbdc-40e5-a7a3-1ab414bde758"
        },
        "item": {
          "id": "653fe5b3-fc4b-4146-a603-d1cd950e2b5a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b877931c-d1c1-4b32-bc5d-9285af3839f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979e2268-53fa-4b4b-acef-13866754f0f7",
        "cursor": {
          "ref": "5468bff9-be75-447a-a84f-1a7c34836391",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac223c64-c0c9-41d7-85c1-914776312dd8"
        },
        "item": {
          "id": "979e2268-53fa-4b4b-acef-13866754f0f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5b4dc61a-9b1d-4442-ad7b-237dc4c282da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24488225-d550-4d31-a804-f37d15dddf1c",
        "cursor": {
          "ref": "745897c3-bb45-4393-bca7-671476dbae41",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8fbd69d7-a2cd-47bd-8c6c-76c3fc42db09"
        },
        "item": {
          "id": "24488225-d550-4d31-a804-f37d15dddf1c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "521eea90-a6f9-4a46-8298-edd990426315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c603cc9b-4c21-44db-a6c3-237a3f2085eb",
        "cursor": {
          "ref": "102c48fb-0203-4d30-87a4-4c0ab8347055",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b5243e86-7a71-47a0-ab4f-ab1f5e240f00"
        },
        "item": {
          "id": "c603cc9b-4c21-44db-a6c3-237a3f2085eb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1247eaec-6bd8-4f75-b1d7-97e34df4fbc3",
          "status": "Created",
          "code": 201,
          "responseTime": 11684,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a297505-39eb-475b-a0b3-8b18074f318d",
        "cursor": {
          "ref": "37e2c46b-d56d-442f-852d-89c23c11d2cf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "21a0f56c-6a71-42a4-bd3c-f8cc288021f5"
        },
        "item": {
          "id": "5a297505-39eb-475b-a0b3-8b18074f318d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "db96f883-e1b4-49fd-a7cf-4594fb780693",
          "status": "Created",
          "code": 201,
          "responseTime": 11426,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c217f6fd-fccf-4218-8678-2c5405bef655",
        "cursor": {
          "ref": "5fce170e-528b-4b9d-b36a-51c95123cbf8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "395e53ed-64f5-499f-9429-e88c6bd2ebe3"
        },
        "item": {
          "id": "c217f6fd-fccf-4218-8678-2c5405bef655",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a851489-cb11-4de1-abfd-d4846e7f6292",
          "status": "Created",
          "code": 201,
          "responseTime": 10868,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e809dc59-ded8-498b-bd9f-8bb61e7a5196",
        "cursor": {
          "ref": "91e2c884-733d-4bea-a426-c24637811c3b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1108e811-ada6-47dc-ad7e-432816407344"
        },
        "item": {
          "id": "e809dc59-ded8-498b-bd9f-8bb61e7a5196",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cd37a9c6-2a43-4c2f-9d44-0a7c97c39138",
          "status": "Created",
          "code": 201,
          "responseTime": 13875,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c7ecd-d4da-4cd4-900d-52479f62e037",
        "cursor": {
          "ref": "61fe39af-336c-4f3f-b996-e9a6ec7cdd98",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cf841e10-b44a-4950-92c2-96c61692d3db"
        },
        "item": {
          "id": "db4c7ecd-d4da-4cd4-900d-52479f62e037",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c3dabb7b-bcdd-4399-8920-4ff0cd5f8259",
          "status": "Created",
          "code": 201,
          "responseTime": 18786,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93630b3-147a-4f15-977c-f85d1c2ef905",
        "cursor": {
          "ref": "18d11a8a-b416-4435-9114-d642f4a1bd39",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2dbde856-d06e-4818-80a9-09a494139bb5"
        },
        "item": {
          "id": "e93630b3-147a-4f15-977c-f85d1c2ef905",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a6a25d68-e73b-49a4-bc95-bd73f9d4742e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6b56f268-2e2f-4da9-b737-d893779ed356",
        "cursor": {
          "ref": "48ae0b98-bbfc-489e-a23d-ca85b8d2dc5e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eb1a0baa-c7bc-42ae-ad25-c6c3a76e410d"
        },
        "item": {
          "id": "6b56f268-2e2f-4da9-b737-d893779ed356",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4a20fed7-d2ce-421f-a23b-4e74462fdebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12fd2c6-64da-44bc-86ba-c17f4edfd2cf",
        "cursor": {
          "ref": "592a5003-8655-4f06-b67d-d50ee60351c0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1732b94-2793-4c76-bbc7-5ecafc03bf45"
        },
        "item": {
          "id": "a12fd2c6-64da-44bc-86ba-c17f4edfd2cf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d70e3388-421b-4699-be0d-195246c9c0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc20d952-c535-4b3c-8992-a3500249634e",
        "cursor": {
          "ref": "b36f761a-388d-4ffb-94c5-a2ee6d8d007a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "479fb101-80e0-4362-a82d-c566eb7850f2"
        },
        "item": {
          "id": "cc20d952-c535-4b3c-8992-a3500249634e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb111c98-6a36-4811-8fa6-91ac69d17913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80aafde-a1bb-478e-8c9e-eb185b0a2621",
        "cursor": {
          "ref": "56819b00-a939-4fb0-b6ba-0f2ef606820f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e591dfbf-1438-4626-b67a-d7120919deba"
        },
        "item": {
          "id": "f80aafde-a1bb-478e-8c9e-eb185b0a2621",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60ea3f23-e1e3-4d85-ba85-8e6c1059a0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f583b589-6693-490d-9e97-9df0a73db92d",
        "cursor": {
          "ref": "5e8122de-497c-4350-b3ea-061cc080d932",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "37005e9b-ccf6-4377-ba25-47a5324626bd"
        },
        "item": {
          "id": "f583b589-6693-490d-9e97-9df0a73db92d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1578e50b-9266-41f1-a1ed-94f1f8f8ee99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a637b8-6e7c-4a3d-9a01-1d89eee508c3",
        "cursor": {
          "ref": "672b2147-1a03-4dea-b09e-f579c77bfe74",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "25bb1e59-cd0c-4052-baac-7960ba22c822"
        },
        "item": {
          "id": "36a637b8-6e7c-4a3d-9a01-1d89eee508c3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2ff7daf-6009-4917-8775-b62ec611abe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eda6297-d419-44c6-aee1-1b07d51d29e6",
        "cursor": {
          "ref": "aea98799-cd52-4bdf-bb0d-f512e21cf56d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "db7fc4d5-698b-416a-8d3e-4ede73d8a5cd"
        },
        "item": {
          "id": "7eda6297-d419-44c6-aee1-1b07d51d29e6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9ca51436-1fb7-4d80-92c5-565d945a2eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a48e16-221a-4d63-a315-045032ec19bd",
        "cursor": {
          "ref": "3223e97e-1c2a-4491-bbae-dfa2a0ab223b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "195e2511-9ac4-4a58-94cf-7b4675684034"
        },
        "item": {
          "id": "62a48e16-221a-4d63-a315-045032ec19bd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61da1a0b-6f35-4fb2-a79c-79d330130ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f61bba-ecde-4e2e-8853-015e04fd3dac",
        "cursor": {
          "ref": "b510c8a2-b84d-4d15-bda7-5a62bebb1862",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6d4e24b4-156f-4d10-8ae3-80c77d0b31a6"
        },
        "item": {
          "id": "c5f61bba-ecde-4e2e-8853-015e04fd3dac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "597f7311-68ab-4a66-800e-08fb1537129e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b9d9bb-9fcf-437f-9ce6-0261bf242514",
        "cursor": {
          "ref": "c6602d4f-f6fc-4d80-acc7-c8dd20e24765",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c5d9fd30-452d-47a0-b2cd-7f1b7404e34a"
        },
        "item": {
          "id": "e1b9d9bb-9fcf-437f-9ce6-0261bf242514",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4ce6dddb-6ea7-40ba-9e6d-f64a1b30a8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b357f6ab-b497-41df-be39-8f35d8a79eff",
        "cursor": {
          "ref": "b72db50b-8b3c-4a19-af84-4abefa15d8c1",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "387038d2-d930-45b2-a60c-0c4902563411"
        },
        "item": {
          "id": "b357f6ab-b497-41df-be39-8f35d8a79eff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ac7fa7f-1249-45ca-9b00-70eff2b14be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f9edf2-bdac-4f6b-9aad-85578cae69c3",
        "cursor": {
          "ref": "79bb7a32-f30e-4847-ae12-3e15799d9fce",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "07b8a56b-c4fe-4721-a61b-6c4eb097a3a0"
        },
        "item": {
          "id": "a5f9edf2-bdac-4f6b-9aad-85578cae69c3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f8b03a96-5c96-4887-a098-4a74b881c473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457de069-b050-46c0-b3cc-d210ad426a1a",
        "cursor": {
          "ref": "e4577150-c276-4350-8682-658955aed7c1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3ad72f63-ee19-4cfa-b375-bbc3b8a523f0"
        },
        "item": {
          "id": "457de069-b050-46c0-b3cc-d210ad426a1a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f0921380-90de-48b1-b066-5ea4f3c0bee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a07a07e-f3b6-40eb-8b97-228dc6cf3dd7",
        "cursor": {
          "ref": "d661d7e7-2bfc-4cb9-95c3-aea94ce79815",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4a82ffd9-a1e1-42f2-8e5f-a640a1374056"
        },
        "item": {
          "id": "3a07a07e-f3b6-40eb-8b97-228dc6cf3dd7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "769a4d9c-0053-422b-a78f-b5c565c2339e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390c1eb3-9b28-4b7b-8228-47e89e9cd8de",
        "cursor": {
          "ref": "0ea145b2-e711-4616-8047-857d0f7bbea0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6a105ae0-4528-4ef0-9558-e073270329f3"
        },
        "item": {
          "id": "390c1eb3-9b28-4b7b-8228-47e89e9cd8de",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9cc3d78b-e265-4789-9624-dedef11be5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6abcfc7-7b1e-4fcb-beee-37e9fac07bf9",
        "cursor": {
          "ref": "98e0de4c-8574-46da-923d-8c2161be2b39",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf04321c-74a3-4dcf-8e60-cb477b42bed9"
        },
        "item": {
          "id": "f6abcfc7-7b1e-4fcb-beee-37e9fac07bf9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "81e51b4d-a911-4248-9f2a-e65438fd17d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c7bba-a6e1-448c-a80b-235fccbddb0c",
        "cursor": {
          "ref": "74612d3a-a300-4b9f-b414-af85b0c07078",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "39dffe0f-8271-41dd-b05b-107bb6ddceb3"
        },
        "item": {
          "id": "f86c7bba-a6e1-448c-a80b-235fccbddb0c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2fbef748-b417-424d-974e-b7d9b3cef48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da2b4a0-3130-4979-91e1-6a021c12a41c",
        "cursor": {
          "ref": "20a570f1-8fb9-40d2-a21e-f28c3b10eb97",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8b5e160c-0f55-4856-9168-5647c9f1f199"
        },
        "item": {
          "id": "2da2b4a0-3130-4979-91e1-6a021c12a41c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "289c013e-c54d-4ea7-9f24-d2f51df59de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6b2831-ed27-4ccb-8aaa-c9571e4d80c5",
        "cursor": {
          "ref": "f9baab6d-2eaf-4b23-b913-ff7965c827c5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cc7f227f-ecb7-436a-872d-30679ee9926a"
        },
        "item": {
          "id": "fc6b2831-ed27-4ccb-8aaa-c9571e4d80c5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6b24f807-caeb-4530-bd7c-9c789f58f309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d9f1ba-9124-4c8a-a8c0-9398627584c9",
        "cursor": {
          "ref": "0e1e03f1-d4e7-4628-b2c7-3bc8dfecc6c7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87913e85-4425-4869-a89c-de72d81ebfc5"
        },
        "item": {
          "id": "42d9f1ba-9124-4c8a-a8c0-9398627584c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ddded5bd-e298-4b1a-a327-eb28487ccc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bea7e88-a859-4978-91cc-d0d3525e651d",
        "cursor": {
          "ref": "2d80f6fb-a743-4c6e-bacc-9a44008c1ba6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77ba16b6-361b-4d4c-a711-3d5ac7e411a1"
        },
        "item": {
          "id": "7bea7e88-a859-4978-91cc-d0d3525e651d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "475e598d-9c82-45cb-bd6c-f63009a71138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69386316-f38b-4784-84f2-67e28aec1cb6",
        "cursor": {
          "ref": "d44bd0c9-c4ef-4741-b164-6110d13fea4d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eb8de2da-818b-4539-a24d-6b1b6065fd28"
        },
        "item": {
          "id": "69386316-f38b-4784-84f2-67e28aec1cb6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "36e8994a-b693-4355-b67e-49a9cf78d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d6c5e4-02e6-4670-881b-e6a5a230c135",
        "cursor": {
          "ref": "b127ec26-19e0-4151-9ed4-59ba7d32073e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f8036a81-7463-4b1d-91c4-9a41785b5394"
        },
        "item": {
          "id": "80d6c5e4-02e6-4670-881b-e6a5a230c135",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "285232f7-0797-4638-b471-e63e264727e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba64299-9986-4715-b041-35b9dcdef5d5",
        "cursor": {
          "ref": "adaecae6-835f-44a6-950f-ca24ad97a7d4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e5c16f9a-5794-4255-af56-841b55c39278"
        },
        "item": {
          "id": "aba64299-9986-4715-b041-35b9dcdef5d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3fb18964-5853-4aaa-93d1-46cfcdb4e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fdc218-edad-405d-996c-9dad39aa6337",
        "cursor": {
          "ref": "1fa00d82-0bdb-44a9-9239-3715e6640c8d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "096959c2-36e5-49b8-b5f2-78a29501a151"
        },
        "item": {
          "id": "f2fdc218-edad-405d-996c-9dad39aa6337",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "514b20ad-9ffb-4add-b5b4-434c7320e38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6501bedf-0572-4a4b-a7b1-6874cc9d483e",
        "cursor": {
          "ref": "cb5fbde8-60d0-43d7-85d7-52bdb18c683c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9a4b67e5-c814-492e-8a02-0fa18810dbb6"
        },
        "item": {
          "id": "6501bedf-0572-4a4b-a7b1-6874cc9d483e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a58b341-2614-4ced-b48c-745642db636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb571d3-0eaa-4e9c-954d-9e80f27b772b",
        "cursor": {
          "ref": "4186c62d-c60a-417a-a780-d2ed9a4172b5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "40eb9a30-ee0c-4526-a81b-2c1ae38a1056"
        },
        "item": {
          "id": "7bb571d3-0eaa-4e9c-954d-9e80f27b772b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4afda69c-05ff-4c34-aeaf-4deac3f538b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b9cd83-d749-4ad3-b163-69f6c31cc521",
        "cursor": {
          "ref": "457f8b41-5411-41f6-ae2c-7a872d7f3456",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f37c908c-fc23-4e98-bffe-a70f07c398d2"
        },
        "item": {
          "id": "55b9cd83-d749-4ad3-b163-69f6c31cc521",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "30ded0fa-28de-48d7-a226-370516174fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713a8dce-46ae-4b5d-937b-063a02a65d04",
        "cursor": {
          "ref": "4e8584fe-abb6-48f7-9274-15b180c7e975",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "daccd546-1810-4554-bcbe-1fe2e1a57964"
        },
        "item": {
          "id": "713a8dce-46ae-4b5d-937b-063a02a65d04",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e32b6a3f-c830-488e-9da0-f2dc372facbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bee762-fe12-4a65-a8a6-0505aa2568c9",
        "cursor": {
          "ref": "ffd76787-8674-4e15-ba20-5086f4d6f78b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cb03e556-a7f1-4484-a9c1-dfcbe1d4693e"
        },
        "item": {
          "id": "48bee762-fe12-4a65-a8a6-0505aa2568c9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11b10ca7-ec49-4686-8608-21dc0a63ca1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c72caca-afe4-4cb0-ae1f-4643c6803f76",
        "cursor": {
          "ref": "069f39f2-2b31-41a4-9284-c956cf7561fa",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b6e4a252-24ce-4e2c-b4f6-a9ae6c9d0c09"
        },
        "item": {
          "id": "1c72caca-afe4-4cb0-ae1f-4643c6803f76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a29e1043-3d19-4cad-b04e-6d6f30323057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc5a9e-9a99-4a20-9517-7badaaee8fd0",
        "cursor": {
          "ref": "50afb387-0359-45fb-8a9a-dcf45f94a323",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0307eca2-1a8e-4e52-ba41-e43c9afdd76a"
        },
        "item": {
          "id": "42cc5a9e-9a99-4a20-9517-7badaaee8fd0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d338a439-e500-40ff-ac70-3688c5b07ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537f18d4-2a7d-4879-90f7-fe091df3f440",
        "cursor": {
          "ref": "0db710fd-3291-4831-bc31-f6d5ac05efad",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9ca2909b-63c2-4e17-8a2a-51d18866e22b"
        },
        "item": {
          "id": "537f18d4-2a7d-4879-90f7-fe091df3f440",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "14cc7dd5-c71c-4051-a8b7-d8c7322c3ab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdca93e-5cc4-4c95-b96f-9b29ec5e0c29",
        "cursor": {
          "ref": "c9050338-8ecc-449f-85e7-440878399d70",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "db915f9c-2ca7-4bf4-8cf5-97750182b527"
        },
        "item": {
          "id": "8fdca93e-5cc4-4c95-b96f-9b29ec5e0c29",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dcb5d126-a566-41f3-9f8c-090ff3c8a703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b5645a-3df5-4b81-813a-7733afa135cb",
        "cursor": {
          "ref": "f45a9779-3ac0-4094-93e1-913199541e4d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "25596777-7c67-41e9-aff3-d0f8129cf5e7"
        },
        "item": {
          "id": "89b5645a-3df5-4b81-813a-7733afa135cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e99a50da-2f68-4a2e-9a5f-f8e44d8f6f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71830028-0cc0-499f-ab10-a92cb031fd6d",
        "cursor": {
          "ref": "104fb7cb-f832-4f76-914b-cd0e0848abe0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f12930f4-da7b-4391-869c-79a57fee607c"
        },
        "item": {
          "id": "71830028-0cc0-499f-ab10-a92cb031fd6d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "75d2bbac-0b0f-4b05-a989-d56a7af62866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fa9ddd-a0d0-41e2-b446-299b2b3b1f1b",
        "cursor": {
          "ref": "f1631616-e09f-466c-906c-cf6ac7fa9e5f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6b9608e0-570c-427d-9429-1cca97fceb66"
        },
        "item": {
          "id": "04fa9ddd-a0d0-41e2-b446-299b2b3b1f1b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ea4eaa7c-c7db-46aa-80d6-11bbfb03cafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4899d78-48ae-45ac-afb0-fc49f8dcb45f",
        "cursor": {
          "ref": "babaadba-d325-4f05-9b27-65e4565e97b1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "69b1e66c-8a3f-47e5-8887-f61f93c983d7"
        },
        "item": {
          "id": "c4899d78-48ae-45ac-afb0-fc49f8dcb45f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "71e735b6-aa67-40ec-a1f7-f0f5a55e600f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef01d39-105d-4aa2-bc51-5f5d97d71d98",
        "cursor": {
          "ref": "6de27f12-18fe-495d-ab55-7edd112e91bb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6a1a4df7-0ecf-496e-9dfa-c2fae1a387df"
        },
        "item": {
          "id": "cef01d39-105d-4aa2-bc51-5f5d97d71d98",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a06d1fd-4eb2-4cbc-bebc-375f8089a398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427af90f-9e60-49ed-b3ee-c2732ccf2889",
        "cursor": {
          "ref": "d5a5401e-ca87-434c-8022-74ced5e27ae5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7aadfd82-2a56-4f76-a880-7c00ebb06f7a"
        },
        "item": {
          "id": "427af90f-9e60-49ed-b3ee-c2732ccf2889",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a9f1ea7a-9336-44ab-99da-768a13a62cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936e5927-0830-40d6-b9ec-6dffd099c60b",
        "cursor": {
          "ref": "9456fc0f-1f81-4f74-8042-b868d271579f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a75f8963-bae7-4fb0-84ab-95434327d43d"
        },
        "item": {
          "id": "936e5927-0830-40d6-b9ec-6dffd099c60b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d12c54d4-200c-4f37-8a9d-743aaaadd366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe47a7f3-a82a-4477-ac05-e0f0d8d31c4f",
        "cursor": {
          "ref": "39e383db-9050-4ee4-b2c0-62ea5a7eae2b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fc8ff794-f827-4f1b-9319-c141beb4eec9"
        },
        "item": {
          "id": "fe47a7f3-a82a-4477-ac05-e0f0d8d31c4f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "353405ba-e271-4f37-af45-57c097b7ff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195a5ca1-5c0c-497b-a4e2-d2bb25ac82c5",
        "cursor": {
          "ref": "ac14ee79-0391-4e8f-8db8-bb27b21ec5fe",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bc53a93b-2658-4367-87cf-451aa623afc1"
        },
        "item": {
          "id": "195a5ca1-5c0c-497b-a4e2-d2bb25ac82c5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "481aaf88-234c-45e2-aa13-d4b0cb77a0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ded3318-83f7-4f47-8617-932ddde26fbb",
        "cursor": {
          "ref": "f6fbbe3e-fa13-4c54-8234-41ffd4900b75",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "69ee7cc3-fbba-49db-8aba-504119f287e0"
        },
        "item": {
          "id": "2ded3318-83f7-4f47-8617-932ddde26fbb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f17f644a-2d6d-4b9b-8e17-92d88c06f9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaa50b0-7b3a-491a-96fb-711b8ab8d8ec",
        "cursor": {
          "ref": "0ab61e52-48fb-4baa-8c34-52103279c984",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2e3f2927-bd33-4b83-a0ed-c99e7786cacc"
        },
        "item": {
          "id": "aaaa50b0-7b3a-491a-96fb-711b8ab8d8ec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74de8bff-4935-4353-a485-ab2b18794a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcc26ab-7d24-4458-bd06-562fb00e4a55",
        "cursor": {
          "ref": "b1ece4a5-8759-4bc3-850c-d6f4a23be006",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e57501c6-a8e1-491a-b21d-463bd00b718e"
        },
        "item": {
          "id": "3bcc26ab-7d24-4458-bd06-562fb00e4a55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d3f29d1b-36b7-43d7-9b47-2f3c90ff5f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a4c65a-db20-445a-95f8-5c0bd83381e7",
        "cursor": {
          "ref": "515ffc93-ce11-4f1b-affd-a065c08ab68a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31c93594-2f0d-44d0-8725-00d8228fc1df"
        },
        "item": {
          "id": "92a4c65a-db20-445a-95f8-5c0bd83381e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d38365c2-9733-4cd0-8c1a-66328140db75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de096ed-13e1-4f7e-b51e-09b17b24f16e",
        "cursor": {
          "ref": "549d9aac-ea7d-48b4-bd09-ecdc7c6afff9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c6495c3-6b8d-4b86-8ba0-f8270e5804b1"
        },
        "item": {
          "id": "4de096ed-13e1-4f7e-b51e-09b17b24f16e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27b5ada0-6519-4a63-a49f-bb7bf2f0096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fbb0a4-0c95-41e0-b9ae-65bbcd6751ab",
        "cursor": {
          "ref": "845827ef-b7e3-40e0-b431-0cfc4a577360",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2b4e46ca-82e6-4110-bdfe-7af73a17a189"
        },
        "item": {
          "id": "70fbb0a4-0c95-41e0-b9ae-65bbcd6751ab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ea42bb5a-0fc7-4ce6-8fb3-d451f07217ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac3d882-af63-41ee-a03a-e36358088c84",
        "cursor": {
          "ref": "363432a3-9263-451f-be76-9d6c2e077fec",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d4c6c850-ce34-46c9-9652-265dfc502bc2"
        },
        "item": {
          "id": "6ac3d882-af63-41ee-a03a-e36358088c84",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df2c2562-9908-4f02-8624-37e889b9adba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15450c79-5075-46c2-87a1-259a1d6df20c",
        "cursor": {
          "ref": "6f644a3e-57f4-43a3-a841-1b1232ae0c45",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a0109623-cbe0-4d06-8693-4011b6411d47"
        },
        "item": {
          "id": "15450c79-5075-46c2-87a1-259a1d6df20c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c44f1a39-bd69-4dd2-917a-094f9bbc3786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e770837-c617-46a9-8a03-d95acf17f578",
        "cursor": {
          "ref": "95a3e412-5373-4ff1-a670-405301fb6b64",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a1f0b59c-e0fa-45b7-ab97-65450d078184"
        },
        "item": {
          "id": "4e770837-c617-46a9-8a03-d95acf17f578",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ee6fb44-8155-4a88-b74c-1ea3f03b4447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f301db03-fcf5-4175-a218-20c541a81c7f",
        "cursor": {
          "ref": "cba6984d-9441-4169-97fa-a6eb75bd9475",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "781328a4-d367-4421-98a8-71a8be21ea0f"
        },
        "item": {
          "id": "f301db03-fcf5-4175-a218-20c541a81c7f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3dac29ea-0ea0-4c3b-944c-9deb16cfae82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7e5434-d7c4-42fa-b9e7-d3e17b336797",
        "cursor": {
          "ref": "9892e5ed-a02c-44a1-b71f-7531cfb3e230",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da1d0787-e528-4970-8a02-fc2c73e1e55b"
        },
        "item": {
          "id": "5f7e5434-d7c4-42fa-b9e7-d3e17b336797",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27cc2e9a-6a0e-4a7d-a5ad-918cfa1baa0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbf4b1b-5eac-404d-b143-5dcf50baabea",
        "cursor": {
          "ref": "8b7ffda8-251c-4e1b-8d45-8575a65a187d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "633ddc68-c43d-44a1-859c-eb59777d80c2"
        },
        "item": {
          "id": "9dbf4b1b-5eac-404d-b143-5dcf50baabea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8c4197c1-45c4-44b0-9081-bda52b1125e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd89b3-0881-4156-b283-0409d7dac772",
        "cursor": {
          "ref": "5a0f01ae-bd25-4104-b989-7821a99130bf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "88c86187-9d8f-4e6b-8cf3-6e78d06336be"
        },
        "item": {
          "id": "62dd89b3-0881-4156-b283-0409d7dac772",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b85816e-377b-4c53-b2be-20aa72d85f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb9bb57-2efe-49bd-8e0d-be55583c9142",
        "cursor": {
          "ref": "50403c9a-bacb-4144-8f50-b7d8a1b7ab5a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfceb696-09eb-48b7-ae7e-254abb4d618b"
        },
        "item": {
          "id": "4cb9bb57-2efe-49bd-8e0d-be55583c9142",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4e3ccf59-683a-4dfb-bfab-cd37cd5c0f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f090eab5-91b1-446c-a4bd-1fab80241013",
        "cursor": {
          "ref": "f45a7b04-a3eb-47af-9e06-b7a3182d42f0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4c7c607a-331c-4c10-837f-13f287df31df"
        },
        "item": {
          "id": "f090eab5-91b1-446c-a4bd-1fab80241013",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ce300bab-34ee-4956-90ae-3494e64aab0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fca923a-0692-4eb0-b691-658a79108018",
        "cursor": {
          "ref": "90a42b21-a0d9-4228-9451-a2750734325a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "22c06ec0-39c5-4115-a674-866209a77a21"
        },
        "item": {
          "id": "4fca923a-0692-4eb0-b691-658a79108018",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "283e2638-3f8d-4ce7-bd69-c0458fcd0c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dd9730-10fa-4511-8775-410469dabef4",
        "cursor": {
          "ref": "9eac2a8d-9d23-4f26-a287-27d3f902d7c6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "729f0774-68ba-47b0-83e1-17f1bffb71ab"
        },
        "item": {
          "id": "d4dd9730-10fa-4511-8775-410469dabef4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e690b58b-07b5-4bef-a2d1-77bbe44e6b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc98f37-818b-426d-a1f8-3091120e02d4",
        "cursor": {
          "ref": "29f2910c-ed1a-4ba8-ac76-a3ecfbd16184",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e8f0301-f92d-4477-8aaa-88d9fb5d20ab"
        },
        "item": {
          "id": "bdc98f37-818b-426d-a1f8-3091120e02d4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ab25f21a-25e4-4f91-b9b3-1b66fd14aa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdfa453-4227-496c-a430-51627ec5ee12",
        "cursor": {
          "ref": "9f7426cf-a4e1-40e2-a9d1-aefc1b4dea58",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "95743a9c-ca2e-4b02-a26c-0e559aeed33f"
        },
        "item": {
          "id": "1bdfa453-4227-496c-a430-51627ec5ee12",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57a71a99-4a91-4614-a527-b5edc5671933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34a3f88-ad53-4163-bad1-162723d853aa",
        "cursor": {
          "ref": "27d6413a-f1d4-4e3b-9b16-855d8e9383e3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d391f21d-daa6-47d8-8948-a253a4e4801a"
        },
        "item": {
          "id": "c34a3f88-ad53-4163-bad1-162723d853aa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3fc34fc1-c3fc-4c0e-8ac5-77bd09d4f18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4f8312-6fec-4f15-bd64-37aaba750002",
        "cursor": {
          "ref": "235fe8a2-38a1-4b8b-be41-f46d487e9d93",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "752b347d-b88e-4dd7-9228-ca6d96bd471d"
        },
        "item": {
          "id": "4e4f8312-6fec-4f15-bd64-37aaba750002",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "12aab63e-fab4-437c-80c3-3b0bcc9a9a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cbaa8a-4c82-4fbd-90e8-b21f9efdd890",
        "cursor": {
          "ref": "699e190b-5b39-4f96-9e0f-e2a1769ec61a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "586d46db-0096-423e-962d-f07baac75076"
        },
        "item": {
          "id": "b8cbaa8a-4c82-4fbd-90e8-b21f9efdd890",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fe2f7003-080f-46f0-b82e-2eb11c15debb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b5e326-4b33-4e48-896f-734d10b8c4c5",
        "cursor": {
          "ref": "04b5bc6e-4f90-4f33-9bc5-faaf0eeae7f0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b3f7ffd8-03ac-47aa-9c89-c43bc1071275"
        },
        "item": {
          "id": "19b5e326-4b33-4e48-896f-734d10b8c4c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f1a00822-cf7e-4b32-8f46-9a58a098d230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5241fba0-881c-4095-b7d3-85bcabe74cbc",
        "cursor": {
          "ref": "6ebbdc77-6804-43cf-97c4-504b0b4d7f73",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f9e5b8dd-d325-4515-972a-99b1e03452e9"
        },
        "item": {
          "id": "5241fba0-881c-4095-b7d3-85bcabe74cbc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3abe940a-cd8d-4f69-9b61-a2f37c98e0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2d2283-a586-4b64-b4a4-6ff6d3ec0bd7",
        "cursor": {
          "ref": "7528b917-9074-485f-add2-113716648d19",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "027a955a-931b-4ec6-9d61-afc34a552483"
        },
        "item": {
          "id": "dc2d2283-a586-4b64-b4a4-6ff6d3ec0bd7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5cad5dd5-3e23-4f6e-808c-66ab41dc2eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a887c4-b668-4026-8c9d-8d51823f7639",
        "cursor": {
          "ref": "3f109862-31fc-4e85-b531-ab72b482449a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "75860e59-5da7-48e6-9455-3883ef44f131"
        },
        "item": {
          "id": "98a887c4-b668-4026-8c9d-8d51823f7639",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b65acc59-01b3-489d-aa7f-deb6cd3a73b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae1e5db-795f-4d72-813d-3949b1ea3e9d",
        "cursor": {
          "ref": "5c543cbf-59c6-41b3-84fa-ad6882e9d74c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "082d7db9-8ae1-4173-9426-f07d68d96efa"
        },
        "item": {
          "id": "2ae1e5db-795f-4d72-813d-3949b1ea3e9d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d87f16c5-c0fb-4d68-9ac5-7f526cf2754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d178771b-8a9c-4b22-a7a6-d483b0eb89ce",
        "cursor": {
          "ref": "fb099a10-5e0a-4793-8dcc-3ebc087a94ff",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "de388fb9-0428-40dd-ab19-1b0a22aca83b"
        },
        "item": {
          "id": "d178771b-8a9c-4b22-a7a6-d483b0eb89ce",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de9588b2-718e-4903-806d-38548fadf2c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad973e-c447-4eeb-95d6-77e78048625b",
        "cursor": {
          "ref": "6c0ac22d-f7dd-47df-929a-b409e5964db2",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "60b2ca85-ac8d-4053-a2bc-6f08db7653a7"
        },
        "item": {
          "id": "10ad973e-c447-4eeb-95d6-77e78048625b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "76c38495-6cdd-4fd4-9631-b2e8f4388b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d401ea7-003a-47cb-b371-8c2907d7ea62",
        "cursor": {
          "ref": "95b1a7a9-3371-4358-b25e-78d6393f0ddc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "893195c0-b705-4cb4-adcd-74475570e5b6"
        },
        "item": {
          "id": "1d401ea7-003a-47cb-b371-8c2907d7ea62",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ba38fd7b-3702-4602-9f21-7e07d4ab083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c788dcb-ba90-4446-95fc-55a16b05922e",
        "cursor": {
          "ref": "4a355bcd-4355-4d22-8e1e-2a25c6f824ef",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dbd04d1c-a1c9-4de0-a712-0e5cde385d37"
        },
        "item": {
          "id": "3c788dcb-ba90-4446-95fc-55a16b05922e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e2bf7efe-75cc-41c5-a388-f24c37d7e341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024d4607-a426-4382-a3b5-b2ff00542480",
        "cursor": {
          "ref": "44a28eeb-be30-45b8-83cd-2621e8b64473",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "483b538f-1504-4558-ad9e-8419c82dd92e"
        },
        "item": {
          "id": "024d4607-a426-4382-a3b5-b2ff00542480",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "55763d35-631b-4d7d-9532-4f0287781487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f730e8e-8b5a-44a3-83de-b1ebef73dd57",
        "cursor": {
          "ref": "9176e184-41be-473b-8b48-53aceeac3a57",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9f5814aa-c33e-4984-9541-fb93d8869618"
        },
        "item": {
          "id": "6f730e8e-8b5a-44a3-83de-b1ebef73dd57",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dfb5df24-2308-435f-b363-76f90ae70556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42564443-a2d9-41f2-b48c-d436826dbe2c",
        "cursor": {
          "ref": "2ec8ad28-2c47-4164-bd08-2922d9504fa9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9942e6b6-afac-4d2e-a9af-f101293da199"
        },
        "item": {
          "id": "42564443-a2d9-41f2-b48c-d436826dbe2c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c4aa7e5-8e33-46fe-866a-0597d7d1ac8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094973e7-723a-4b3b-9fa9-add5fc29a452",
        "cursor": {
          "ref": "b1c8cfda-0b3e-48e5-9fa2-b96e07e430b6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e7303fdb-4599-4cad-8a74-5cd8ab17521f"
        },
        "item": {
          "id": "094973e7-723a-4b3b-9fa9-add5fc29a452",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b595d168-745b-4240-bfd5-8b114a2fef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449455e3-ff05-4459-b030-0270f77f6cb9",
        "cursor": {
          "ref": "22b7d993-fd85-428b-8bf7-987dc157432f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "94a7bee7-d2cc-4bf8-a3e4-8368a15141f1"
        },
        "item": {
          "id": "449455e3-ff05-4459-b030-0270f77f6cb9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "df85127e-a512-43c4-ba75-d8c72373821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3273a34-7f03-4524-ab2d-49a94bf7f615",
        "cursor": {
          "ref": "c1ce17bf-08dd-462d-8aec-b16aefeea636",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8e1f6b44-8bdb-47c0-b6d4-9293b4efe582"
        },
        "item": {
          "id": "b3273a34-7f03-4524-ab2d-49a94bf7f615",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "673e397d-d4cc-4e2d-9b12-9726f68d7e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba6c021-f358-4fcc-a27b-1aaf4eb0d542",
        "cursor": {
          "ref": "0fb23c52-4d30-4a7a-ad9e-4899c754d582",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d3ba8c5-b66f-4368-b745-ad6c3580f027"
        },
        "item": {
          "id": "2ba6c021-f358-4fcc-a27b-1aaf4eb0d542",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c60039f6-25d5-4612-aa10-d4fa6186bbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a1ff1-e253-4638-bc14-46287bc22039",
        "cursor": {
          "ref": "6ea29d0d-362a-458d-a109-0817b6eef35e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0c23446e-f858-47e3-9390-8491ce84dde3"
        },
        "item": {
          "id": "413a1ff1-e253-4638-bc14-46287bc22039",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b7e0e53-bc75-47ac-9711-47869321d490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d97c61e-9285-4db1-bc09-11e1b7935a12",
        "cursor": {
          "ref": "aa0ede91-cc82-470c-81ad-08fab605d358",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8a6d88aa-72dc-4bdc-9ab1-57dd49886c02"
        },
        "item": {
          "id": "8d97c61e-9285-4db1-bc09-11e1b7935a12",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c61b6694-51cb-4e0c-b0a5-96442b859ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67fba0b-bc39-4913-b05b-cac27936d998",
        "cursor": {
          "ref": "57de4f33-7e8c-40b7-b3d1-ef63013c9ed5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dc61201b-6ef2-4c14-a3d3-a1f725af85d9"
        },
        "item": {
          "id": "b67fba0b-bc39-4913-b05b-cac27936d998",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d3151e8d-b7ed-42cf-b160-16bc2f7da861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670b95a4-e873-4d93-aced-6be6c1b61149",
        "cursor": {
          "ref": "67bf8c51-a5ee-4fdf-bda0-d438c11ad7e8",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "92202b46-e3d9-4542-aea5-1b3abfc7c1e6"
        },
        "item": {
          "id": "670b95a4-e873-4d93-aced-6be6c1b61149",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "98f427d4-f478-4669-ab9c-44a69a69eed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93eb2d8-1bbe-4938-8799-7eb98ad445a1",
        "cursor": {
          "ref": "07e25266-e825-471f-b588-c8370a59eddd",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4112bcf8-57ad-43a1-a404-0051b42a0c9f"
        },
        "item": {
          "id": "f93eb2d8-1bbe-4938-8799-7eb98ad445a1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "63ff9015-fd22-43e4-b3da-b6f13cfeb90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a897c-aed8-4faa-8557-562f02a7032c",
        "cursor": {
          "ref": "0c71d7a1-7579-4c63-a34d-ac2b9aeafc4a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9e1ad23e-57e4-4d81-95e9-aca12d93f574"
        },
        "item": {
          "id": "dc7a897c-aed8-4faa-8557-562f02a7032c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74211016-31da-4892-81d8-9b38e2827667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad824e4-46ea-4c74-be9f-cb7796a41f51",
        "cursor": {
          "ref": "09022689-c981-4915-94c1-e5eef9e16873",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "31313d15-b32d-4301-b447-e52394c80da4"
        },
        "item": {
          "id": "bad824e4-46ea-4c74-be9f-cb7796a41f51",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "abbbbe66-c5a8-403b-b511-22cf58a80281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1154d10-07ff-45c8-9800-1db3bc96079d",
        "cursor": {
          "ref": "8300a2b2-f403-4e17-8931-1ec6ff881a16",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "702b1fcb-d191-4a58-9e32-80900f790e64"
        },
        "item": {
          "id": "d1154d10-07ff-45c8-9800-1db3bc96079d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9b399c45-bbab-4078-a0ac-1f1d6fd71eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3361e-d9a2-4027-b536-c79ce21aa13a",
        "cursor": {
          "ref": "926ab9b4-0bed-48db-adda-ad1c56aa9727",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3b1f0727-f977-445e-b0f3-514294cb04f4"
        },
        "item": {
          "id": "82e3361e-d9a2-4027-b536-c79ce21aa13a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "470d4666-6ada-456a-8c1a-96d12f6fb0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d015ccbd-bed5-4222-8576-c2cda37b5f1b",
        "cursor": {
          "ref": "55cb97ad-7193-45ab-a2de-e983fcd1421b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bb3b99c1-d60a-48c5-aaf2-e6e611182060"
        },
        "item": {
          "id": "d015ccbd-bed5-4222-8576-c2cda37b5f1b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a7140de7-78ca-49f7-b111-ecce3438833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a00cf2a-2e12-4b84-b58d-8756c3b61861",
        "cursor": {
          "ref": "c321f38e-93e2-4df2-aabc-1573e675a1fd",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e6b502b6-22e5-4f72-8fad-38fce545250d"
        },
        "item": {
          "id": "2a00cf2a-2e12-4b84-b58d-8756c3b61861",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9af06b2e-6b86-4572-a816-bc207f80d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8c05b6-919e-474a-8a56-eae0ff1121fa",
        "cursor": {
          "ref": "378a6f1e-deae-4b6a-997c-92e51e58bef2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e1f56d25-308b-4cf1-92e0-ab33d25dcd50"
        },
        "item": {
          "id": "1c8c05b6-919e-474a-8a56-eae0ff1121fa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7e15cb06-39e4-4385-a524-9281da0311e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3297d84-382b-493c-aa28-b41633d676d0",
        "cursor": {
          "ref": "433930fc-48ae-4944-a089-ee63c8857bda",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "26ce606f-e52f-486a-a0bb-6e8090b4f86a"
        },
        "item": {
          "id": "f3297d84-382b-493c-aa28-b41633d676d0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d46cd782-0085-4bee-80f8-601db23d47a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7b8545-d37a-477c-8617-932a6a8f4e3d",
        "cursor": {
          "ref": "e8c92e44-4e05-4f4e-a86f-5e4460d7f575",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3e483de4-f21f-4827-a77e-11553ca1fb8d"
        },
        "item": {
          "id": "8d7b8545-d37a-477c-8617-932a6a8f4e3d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "65a038e6-ef3e-4b04-9914-e6355b15faa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70485c8a-ae72-4d3a-ae5d-6a59f07132e1",
        "cursor": {
          "ref": "879465bb-3323-49f9-b16a-23eaeac3e33d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eb015ce7-b9cc-499f-9f7b-7184a74a666b"
        },
        "item": {
          "id": "70485c8a-ae72-4d3a-ae5d-6a59f07132e1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a8d4afb1-2dc1-47b9-b995-0c414b689321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997b9295-47eb-4758-aaab-af9f5cb42a36",
        "cursor": {
          "ref": "c7e00956-fa3e-4ac0-9946-0e46f04a6b57",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "99dac6a0-6d9c-48a0-bf9d-24bbe86caa9f"
        },
        "item": {
          "id": "997b9295-47eb-4758-aaab-af9f5cb42a36",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a7803696-7ed9-4602-863f-299102e73c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d01030-9c58-4caa-9694-fde63039253f",
        "cursor": {
          "ref": "1957d10d-0bd3-478e-87e7-3efeed016f5d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "30b9cb81-e7fd-42f3-90cf-c735c233da92"
        },
        "item": {
          "id": "c1d01030-9c58-4caa-9694-fde63039253f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "45738dd2-37d6-40e6-9d7d-dc208dc6212f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c0fbbf-f7fd-4f7e-a659-ae978a9e12c2",
        "cursor": {
          "ref": "272f4703-83a8-4edf-a235-562222cb6d2d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e7f53767-011c-4515-959c-cf204d8d05fb"
        },
        "item": {
          "id": "77c0fbbf-f7fd-4f7e-a659-ae978a9e12c2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2baaa6bf-e767-4e55-9e4f-9833d71b39f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ca46b8-ea33-402e-b7e1-794dd38d77f3",
        "cursor": {
          "ref": "ad13a9e8-5ef5-42d8-8185-85d5c2e6b70d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ccdb69a2-c412-4ce9-90af-2ef725060a16"
        },
        "item": {
          "id": "79ca46b8-ea33-402e-b7e1-794dd38d77f3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a581aadb-cc64-4953-a1a6-0526c5f5b00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4c060f-2f09-48fa-a6bb-ee4f2b399e96",
        "cursor": {
          "ref": "4755e5da-9b0b-49ee-81a0-7575ee57d4d4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e27ae090-123b-4769-a796-449824954abf"
        },
        "item": {
          "id": "0e4c060f-2f09-48fa-a6bb-ee4f2b399e96",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4d6a9922-9a33-4608-8b62-14780a1bbbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4157d0-bf0a-471f-a310-5e0346e3aa64",
        "cursor": {
          "ref": "96b1acab-c0a8-49c0-af96-78629108844a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "14898e6e-a665-4554-9b07-72e107ca1e00"
        },
        "item": {
          "id": "ae4157d0-bf0a-471f-a310-5e0346e3aa64",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0cdafec6-a9cf-4409-8999-fefcc82f002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d3d6c9-423e-43ca-b454-e66427227c1c",
        "cursor": {
          "ref": "046ee604-ef21-449f-a1cc-5342962c874a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bcdc94c4-cac8-425c-b549-d0ca2960e827"
        },
        "item": {
          "id": "f7d3d6c9-423e-43ca-b454-e66427227c1c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a1858a8f-38fe-4e37-a37f-cd1a47b0d388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04a5a17-4245-4407-be46-3ca0e9fc1928",
        "cursor": {
          "ref": "5487ec17-66a7-48c9-9625-654ee26a75ac",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d89b8241-a71c-4e55-85c0-9bb6de2c78a7"
        },
        "item": {
          "id": "f04a5a17-4245-4407-be46-3ca0e9fc1928",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e87b1fbb-c735-47ce-8986-7ae491e0a5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89732fa6-76c2-4513-ae83-1e143c8af6dd",
        "cursor": {
          "ref": "16ffbb4f-6a08-4913-a950-87487f4c77dd",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "27ab23f0-b954-4aa6-b0d7-42d5cf5b4437"
        },
        "item": {
          "id": "89732fa6-76c2-4513-ae83-1e143c8af6dd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "058c61c0-61dd-4955-9609-9db3a127dfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f83a9a6-c9ce-4d7b-b261-e2764ee5a166",
        "cursor": {
          "ref": "6434cec5-673e-4407-a10c-381eacbf58a9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "045c8eea-5e3f-49ab-9083-1ec0befe2019"
        },
        "item": {
          "id": "9f83a9a6-c9ce-4d7b-b261-e2764ee5a166",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9bb3015f-3d24-494c-a227-0fca1dae21a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c22e0e-b2f3-4f2c-b731-ca3b1f039830",
        "cursor": {
          "ref": "753e2df8-2b07-4dab-86c9-24cc3e418b23",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f4072c26-92a4-4ed1-89e4-b84b74dfe9d6"
        },
        "item": {
          "id": "f2c22e0e-b2f3-4f2c-b731-ca3b1f039830",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a036af58-a279-41a7-a1fa-6d3b913d3e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82314aaf-5b82-46b5-a244-22a2d942a833",
        "cursor": {
          "ref": "9d09ff4b-5063-465f-bf1a-93679f11075f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "34a4fc1c-6dc7-4cb8-a427-9dcec27ac811"
        },
        "item": {
          "id": "82314aaf-5b82-46b5-a244-22a2d942a833",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3f8c62dc-07a0-4d9d-91e7-e29f135d5865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2e16aa-8796-431b-88e0-1dc4a7ea7cd9",
        "cursor": {
          "ref": "c27d333d-1e33-4fe1-8f23-3f2c553b091d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "47678665-ee4b-4215-a0e6-428acdd59d83"
        },
        "item": {
          "id": "8a2e16aa-8796-431b-88e0-1dc4a7ea7cd9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "42e969d6-4202-4c40-893c-25771b57f0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f02f2e-6a37-46f5-b8ee-1da47cfa54ce",
        "cursor": {
          "ref": "d1159a45-5966-4130-a106-62b134ed1b83",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9722c2d2-0808-4d5f-a115-5816b26cc7b3"
        },
        "item": {
          "id": "51f02f2e-6a37-46f5-b8ee-1da47cfa54ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f5681046-3e40-4cb3-a843-896695d90680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3014947-74c7-4111-b892-adcaa014fbd8",
        "cursor": {
          "ref": "351bcf9e-0fb8-456d-9a22-1743fec8af29",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ab5a7e37-a950-4d02-ab31-e24c200880f8"
        },
        "item": {
          "id": "b3014947-74c7-4111-b892-adcaa014fbd8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "371656ae-eba3-4517-a277-50bb5c7fa8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad6cab-fac3-4a41-8bd6-754631900cf3",
        "cursor": {
          "ref": "f27d8b83-58b6-4f75-9d7f-4c4d07b88b14",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7203f588-be12-400d-80ed-e8c879360f34"
        },
        "item": {
          "id": "e0ad6cab-fac3-4a41-8bd6-754631900cf3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "541160a6-48d8-4a1f-8edd-a95b5a9f0e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba50261-7764-4fa3-9230-df545a4533a0",
        "cursor": {
          "ref": "7dc142af-bdf8-4886-937c-0aa99c93e4c9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b86c38ec-e88f-446f-9416-888f2a3858b8"
        },
        "item": {
          "id": "5ba50261-7764-4fa3-9230-df545a4533a0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7337735b-4030-4b3f-aeec-9bacc2cf2c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ded40d-15e4-405d-9c77-9a77642fcd2e",
        "cursor": {
          "ref": "ee6132ff-2f66-413b-8253-71a431293827",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fbf60249-7f18-4105-982d-eb8884cd1ea7"
        },
        "item": {
          "id": "95ded40d-15e4-405d-9c77-9a77642fcd2e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6da6d6b-9ad4-405c-bd45-0e670223ad4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b448659-69ed-4c31-b104-1192493adbb7",
        "cursor": {
          "ref": "45eed806-f995-4e44-821c-2d5dbb3ba278",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "30ad7a91-4221-44c7-9262-f36975919a4f"
        },
        "item": {
          "id": "8b448659-69ed-4c31-b104-1192493adbb7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8f6aa5f1-ce0a-4e7a-a42c-4a963d14c41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa50699-3de1-4bff-aaca-be7f65f9381f",
        "cursor": {
          "ref": "6864087a-4eff-44d0-a5f2-f806807056bf",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a13c8fd2-eb32-49f7-bc1a-a0ed0d67de7e"
        },
        "item": {
          "id": "efa50699-3de1-4bff-aaca-be7f65f9381f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d98a54ab-d3ab-48c3-9093-627831aeb296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48229d60-6bc1-49fa-8d91-fb52bbba0e15",
        "cursor": {
          "ref": "c3356129-c4d0-4f84-ad28-fb04ccdef071",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d1807fe0-39be-4c56-9dce-f30062a7a3b2"
        },
        "item": {
          "id": "48229d60-6bc1-49fa-8d91-fb52bbba0e15",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8fa816dd-9f6d-473e-827a-eef09a6f9104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbe67ef-bd18-4f86-9612-c9829025ec4b",
        "cursor": {
          "ref": "1f42d532-adc0-4bbb-889a-44c86c56fab9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b3abe530-addb-4a53-ade8-264b8b13249a"
        },
        "item": {
          "id": "fcbe67ef-bd18-4f86-9612-c9829025ec4b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0dfc00a0-5e83-49de-9311-82a34103161b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a4f28c-4a30-4a0c-8944-79015ae6b894",
        "cursor": {
          "ref": "c16c6646-37e1-4fec-8d8c-1a2251ac94b2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "10bf38d0-aed4-4833-b72d-38e4fac05ddf"
        },
        "item": {
          "id": "87a4f28c-4a30-4a0c-8944-79015ae6b894",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bde1fc9d-a570-4eb5-b6e1-bc9cc282acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9077f3e-007d-4f5a-a1ea-f0ce30e3eaef",
        "cursor": {
          "ref": "cb2d236f-123f-46d4-9a0d-017681f4e051",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "104081c9-3690-43fc-a729-a175e3af9bd7"
        },
        "item": {
          "id": "a9077f3e-007d-4f5a-a1ea-f0ce30e3eaef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "818db7fe-a50a-4cda-b9ec-a7e7f87d445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafa8ac9-0b08-48aa-a3d8-3a394c35f686",
        "cursor": {
          "ref": "d0f59e96-f4de-4e2d-8e2f-2d3317289628",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d5f49aa4-9972-481a-98ef-0be7962d7af4"
        },
        "item": {
          "id": "fafa8ac9-0b08-48aa-a3d8-3a394c35f686",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9541ffe9-fd0a-4f8e-adcc-a643e8d43b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3edd2c-99e1-4813-b633-57c6d4aa022f",
        "cursor": {
          "ref": "c49a0b72-9158-46b0-b629-4f478bbdb303",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "908a3113-008b-4358-a1f0-e9e33df78a1a"
        },
        "item": {
          "id": "aa3edd2c-99e1-4813-b633-57c6d4aa022f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1939e429-8d0a-4c86-a771-1e989c5d0211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d1280b-5553-4f21-bdb6-9261881c06fd",
        "cursor": {
          "ref": "d72688bb-7877-4797-aec0-dba8927d8571",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ce4ee98b-ced4-4843-b781-e6bf45626e26"
        },
        "item": {
          "id": "f0d1280b-5553-4f21-bdb6-9261881c06fd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fc27655c-cd31-4bf0-9b07-3709b1d789c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5759f00-ab8c-41ce-ba0b-d8b4ab7c9332",
        "cursor": {
          "ref": "13d4bc4d-4537-4741-8a37-7930d23d85c2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "50424acd-aa8b-4d1b-8246-42576ba3f226"
        },
        "item": {
          "id": "f5759f00-ab8c-41ce-ba0b-d8b4ab7c9332",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e241ecaf-1c20-4bcc-b246-8156c07702e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de2657-de60-4e8d-b11f-8d1788303de9",
        "cursor": {
          "ref": "e998c7ef-d4eb-4803-8646-02dadcf7b51b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8f0b76fa-6280-4117-a0d9-f2e893af5b06"
        },
        "item": {
          "id": "86de2657-de60-4e8d-b11f-8d1788303de9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bf1807c9-054f-48c6-a741-7e8e85589e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2093118-16aa-474c-b290-9991fe843fad",
        "cursor": {
          "ref": "aadade14-b928-4faa-bb05-ef159e3902e0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b6c0e5f2-74b8-401f-a810-3e782034f224"
        },
        "item": {
          "id": "e2093118-16aa-474c-b290-9991fe843fad",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f90fed6-1a37-4344-90b7-9d3bebf85a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a805f5-0e81-4210-ad80-1770f5835cb2",
        "cursor": {
          "ref": "c16e8f39-9b18-476c-b87a-7d11e2cf2741",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "25b52aa4-5698-4940-b5f2-a24c161c25a5"
        },
        "item": {
          "id": "62a805f5-0e81-4210-ad80-1770f5835cb2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c0e64819-e37f-4f88-8a2a-b1b05bd0cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd8b08a-79d8-4e74-8aff-692c63757211",
        "cursor": {
          "ref": "24730ac6-0f94-420f-9c3a-aa4b52d35a25",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "06d6da70-b6d8-4132-a09c-5097d1cd2741"
        },
        "item": {
          "id": "4bd8b08a-79d8-4e74-8aff-692c63757211",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3523add8-558e-4f53-bf03-d362b9153aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d63d8b-8b29-4f5c-bfc9-73dbdc14d31e",
        "cursor": {
          "ref": "c068cc9c-2526-4123-a254-f0d201e26965",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b899d516-f8ca-4290-bdbc-6f4a31a88ffb"
        },
        "item": {
          "id": "d2d63d8b-8b29-4f5c-bfc9-73dbdc14d31e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0cac942b-0605-4096-ace5-39efffdb84e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758516b3-47af-47a2-8572-f251c07afd64",
        "cursor": {
          "ref": "d58541a8-16d2-49cb-a816-86e770716229",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c29d03fc-fb5f-487b-896c-becef033fa7e"
        },
        "item": {
          "id": "758516b3-47af-47a2-8572-f251c07afd64",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "297a8fe0-24ab-44a8-a529-2810f18e094c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8b4156-e27c-4fd5-b4a4-12f529b933f4",
        "cursor": {
          "ref": "c32e2aa9-c6fd-4318-87f3-83ec26b2676e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c959d2d6-6c10-43b1-98d8-96c941d21312"
        },
        "item": {
          "id": "5c8b4156-e27c-4fd5-b4a4-12f529b933f4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99b5556d-f88b-4fc7-a6f8-6ae909c5d7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881bf335-8c2b-4f95-964d-466ec79c1f7b",
        "cursor": {
          "ref": "f724711c-75b6-4ac9-a1b5-14115b1a2952",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a8b2f3a5-0f7c-468d-89c8-4654efd16ea8"
        },
        "item": {
          "id": "881bf335-8c2b-4f95-964d-466ec79c1f7b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3ba15adf-9984-466d-aefc-45cd1ffc7d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e82933-9224-48e9-92ff-0c86186b55bc",
        "cursor": {
          "ref": "7b400ae6-acbf-4230-adab-86a03ce306f5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fad16389-de7c-4c6b-a157-2f55abe417f6"
        },
        "item": {
          "id": "10e82933-9224-48e9-92ff-0c86186b55bc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d00923dd-d56f-4db2-8b77-609ced650baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44de987-3e8c-49d2-8237-18f18a6a845a",
        "cursor": {
          "ref": "76cb6d68-0d39-4680-af68-0fbb7426f4c1",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8d43a746-ef9c-4b8e-b743-1b487f764aae"
        },
        "item": {
          "id": "a44de987-3e8c-49d2-8237-18f18a6a845a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "63a3a2fa-5f08-4160-8e6b-9a6c11cf16a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ee3d06-65b6-41f2-bcdc-de1df6ea2526",
        "cursor": {
          "ref": "35d0f9f4-1b91-4d41-9b89-adc26ca15514",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e2566f9-662a-4f0f-9381-d6b952ca8508"
        },
        "item": {
          "id": "18ee3d06-65b6-41f2-bcdc-de1df6ea2526",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bed9ec93-e59d-4104-b9b9-cf8b54b76d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02bbe1f-9e71-4837-8ed0-a84a5f4a68d1",
        "cursor": {
          "ref": "5b308015-2f97-4b16-9719-d70dbd44db65",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2a63f57f-bc7e-4c73-8fd3-07840587ee59"
        },
        "item": {
          "id": "f02bbe1f-9e71-4837-8ed0-a84a5f4a68d1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bda48feb-0b02-4388-9783-cf6ceea6c06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91c9ef9-43e0-4224-b778-32fdfb4d4e64",
        "cursor": {
          "ref": "a8ae2542-0e36-46fc-9207-fc6afba65bf6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9b9726b5-9681-43ac-8a41-ed9a213303ae"
        },
        "item": {
          "id": "e91c9ef9-43e0-4224-b778-32fdfb4d4e64",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "68d9ffea-ffbd-4400-87a5-835bf829a9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d933deed-2d90-4768-ab7a-75756b379ad4",
        "cursor": {
          "ref": "5c835972-7a26-47c9-9106-ee1b7cc451cd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "abaee1aa-63d9-4874-93d8-4a7ebd93ac39"
        },
        "item": {
          "id": "d933deed-2d90-4768-ab7a-75756b379ad4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e8536dbd-a930-45a9-a8a6-aab89fae47f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a897816-c719-4bf9-9529-52f4fcf9fc81",
        "cursor": {
          "ref": "1ee2c247-a124-43f4-b90c-1e64081b7e71",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "755b3273-df3d-4b85-8dda-74a04034d20a"
        },
        "item": {
          "id": "8a897816-c719-4bf9-9529-52f4fcf9fc81",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3d4950c6-0593-4c67-b7aa-6cfc1f308a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab783ae-3e58-416e-8771-ad2526e18e98",
        "cursor": {
          "ref": "a962c753-4d43-4a9f-bd41-d1dccbc8b27f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c710588e-4046-486e-a6ec-d4783f2ea797"
        },
        "item": {
          "id": "8ab783ae-3e58-416e-8771-ad2526e18e98",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb4c4beb-a97a-4f95-bbbc-4a12301fb284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29450dd1-706e-4e88-bb01-72ffe8bbecfa",
        "cursor": {
          "ref": "2a7df3f7-cbc7-4d25-94cf-feea2c6f8cce",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "87b94955-2923-4e55-b3bc-825299398fd5"
        },
        "item": {
          "id": "29450dd1-706e-4e88-bb01-72ffe8bbecfa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1bd899fa-58e7-4154-a7c3-f6290031e54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd31b73-56f9-4f1f-8ca2-62480afcc112",
        "cursor": {
          "ref": "d676ceda-fe02-4d09-acf7-aa7ec2fdfdfb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00e67989-7369-4812-b20a-70ac7cb86e30"
        },
        "item": {
          "id": "abd31b73-56f9-4f1f-8ca2-62480afcc112",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d97fc5c1-2850-4318-ad3a-d260be1a96d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96642a66-aed2-440f-b997-4bca701f313b",
        "cursor": {
          "ref": "0d181982-18be-4877-bd35-39993f9ff463",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b6599bdf-d872-47dc-a321-cbc0ebcb5592"
        },
        "item": {
          "id": "96642a66-aed2-440f-b997-4bca701f313b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c34596be-b77b-43fe-a0c6-ec4534ddbf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f68137-ca7e-4abb-8151-d97c4c82d6ef",
        "cursor": {
          "ref": "7711993a-12ec-45c6-822f-f36788034784",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6feca281-35f7-414b-b1df-d94b234d39af"
        },
        "item": {
          "id": "25f68137-ca7e-4abb-8151-d97c4c82d6ef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef056e26-e5bc-4568-9da6-ddf2046caac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da62983-2cc5-466c-88fb-dbd71dbd3642",
        "cursor": {
          "ref": "2cc5df5c-d204-4344-9327-37710976f3ab",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9807b0af-d4a1-4b15-9238-3f9a46ab5f82"
        },
        "item": {
          "id": "9da62983-2cc5-466c-88fb-dbd71dbd3642",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb9f7910-115a-46a0-bf1e-9bd7311e81a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42111ce8-681e-46cb-bbac-9438460d06c6",
        "cursor": {
          "ref": "b7e704bc-c708-4015-b16f-85b7799dafa1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1a4c52e2-efbe-40e8-a728-aafdc361b9b1"
        },
        "item": {
          "id": "42111ce8-681e-46cb-bbac-9438460d06c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fcaccc65-8ad8-49ca-b1e2-0c13e1f7bb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc6ce1f-db1a-4585-be8b-ae9cba1cbf80",
        "cursor": {
          "ref": "a1d2fdd3-a95f-4efa-8b8b-02ab4a0b2aea",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5333a1cd-65d7-4c9c-aae5-642dd848dd0f"
        },
        "item": {
          "id": "2fc6ce1f-db1a-4585-be8b-ae9cba1cbf80",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5d63252c-57da-434c-a8a9-5f1171acd618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3542075-c2f6-495c-b1bd-c3b762494c6a",
        "cursor": {
          "ref": "42183ef5-7924-44e6-a318-4134623124c4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7a3b057e-a217-4491-87d6-126c7d01ba93"
        },
        "item": {
          "id": "d3542075-c2f6-495c-b1bd-c3b762494c6a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b18cf624-5a83-4406-9671-c8f12509c12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6afd8-3e76-4112-8813-ae0338dee4fc",
        "cursor": {
          "ref": "d51dd194-a7cc-4bce-9fcd-f2ea2f5b4e67",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f6746854-8fc2-420f-9afb-a8b7a886557d"
        },
        "item": {
          "id": "53b6afd8-3e76-4112-8813-ae0338dee4fc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "35fa3b23-f509-4fde-bb53-793bfa683478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474bd06d-5ed2-4c1d-83cb-0548dd68ac0d",
        "cursor": {
          "ref": "3b09ee8f-a520-4e01-851b-4ee40626d686",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7b26e84e-4ec5-4731-a8f2-3d69e0ba21e5"
        },
        "item": {
          "id": "474bd06d-5ed2-4c1d-83cb-0548dd68ac0d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "39ba3921-a817-4624-a35f-57bda911e771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91395957-54d6-4bbe-afa1-c6c1707074dd",
        "cursor": {
          "ref": "f9ace704-5dd4-4c49-a630-e449759619b0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8da6e5a7-aab1-4be6-99b2-b1e2a1257451"
        },
        "item": {
          "id": "91395957-54d6-4bbe-afa1-c6c1707074dd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "01f3dd55-414d-4b67-892d-7a13c1dd1e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97bd989-8637-448b-ac10-a8889ce67986",
        "cursor": {
          "ref": "460aa9ef-8b82-45ce-9edf-e3d10f2566e5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8233ade4-5cea-44c7-9f8d-434676d8f3ac"
        },
        "item": {
          "id": "a97bd989-8637-448b-ac10-a8889ce67986",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d4f6b649-2a72-4c48-8a1c-b9b3640fcd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fda921-2511-45e3-b744-84d5e054f6fd",
        "cursor": {
          "ref": "373715bf-92c4-4d0a-b246-c7a20ccc7984",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cb996e95-cd7b-4952-8db3-abcdf5c6bfe0"
        },
        "item": {
          "id": "e1fda921-2511-45e3-b744-84d5e054f6fd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "abaa9666-9839-4e80-8845-080a17319de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf9dfca-6511-4a38-a53b-8bcf02fd92d3",
        "cursor": {
          "ref": "604e6ada-47cd-463b-8dda-cff5e48a6376",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9bb959fb-1fc3-4f1e-aef2-08d4975a1bdf"
        },
        "item": {
          "id": "9cf9dfca-6511-4a38-a53b-8bcf02fd92d3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "64c074f3-033f-43ec-b5b3-2bc2b7a0ba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef41354b-ec9d-4fce-be32-67c9e6b2993d",
        "cursor": {
          "ref": "3f7d8a72-7db9-4916-b079-409f0d4b795a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "729be4c5-4f66-4f2f-9b73-22e8c7570800"
        },
        "item": {
          "id": "ef41354b-ec9d-4fce-be32-67c9e6b2993d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c458e406-a1f7-4b86-8999-89f854b97c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0a16f6-ce53-49ee-ad8d-8d9de6a7f935",
        "cursor": {
          "ref": "d548ff8a-b4a5-458f-8726-2c615c38f43f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0c4a52f3-8f50-4f57-9b98-4449f262240a"
        },
        "item": {
          "id": "5e0a16f6-ce53-49ee-ad8d-8d9de6a7f935",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b4c1de99-9c84-4f9b-b2b3-a4c612d14e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524da077-abed-4768-ab65-a0f29a05b4cd",
        "cursor": {
          "ref": "66558f29-8a91-46f4-a029-e03c78116ffd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8385891c-985f-45e5-823d-f7d4a0c69a62"
        },
        "item": {
          "id": "524da077-abed-4768-ab65-a0f29a05b4cd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2d31b88a-5934-4683-be3e-1bf70856eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52439ba-e7a0-4f07-8c7d-f6ad5255c43c",
        "cursor": {
          "ref": "152cda3f-0be1-40b5-83e7-6bf026268f1d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c5ff1d6d-d590-4ccf-a0e5-ddba10acefdf"
        },
        "item": {
          "id": "c52439ba-e7a0-4f07-8c7d-f6ad5255c43c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79fe427c-957a-485c-ab8c-7b3a4f424619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5cbd67-383b-4801-a869-52a3d5c48ab1",
        "cursor": {
          "ref": "e570a080-58e0-4d2c-aed6-8c0f6e483e39",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "94b113bd-3e2b-41c8-9979-628b6ede08f9"
        },
        "item": {
          "id": "7d5cbd67-383b-4801-a869-52a3d5c48ab1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bcc9b191-5e88-415f-9f98-14134094a2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6f40fb-d834-433a-a026-c724705b5075",
        "cursor": {
          "ref": "94257588-bedd-47c2-a197-c009a148bd08",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "673542f5-bbe5-4b1c-a699-24ee7a60a70e"
        },
        "item": {
          "id": "bc6f40fb-d834-433a-a026-c724705b5075",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab105b1a-8c56-4362-8823-51f2432beae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059cb3f3-a568-4b9c-86bb-93cad8892e3a",
        "cursor": {
          "ref": "15264c52-0968-4066-9805-b6d85f166928",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2e2ddc99-3172-4d1e-993b-fc7ad8bfa8b5"
        },
        "item": {
          "id": "059cb3f3-a568-4b9c-86bb-93cad8892e3a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "50298279-ecf1-4738-87d0-86f7594e62fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65700fe5-8912-4c61-b900-cf84df377034",
        "cursor": {
          "ref": "caaf5188-fc0b-4cf5-a863-e2382039bccf",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "88701832-e507-4479-99b3-53578e532808"
        },
        "item": {
          "id": "65700fe5-8912-4c61-b900-cf84df377034",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7f6621ad-ae7d-4688-aad2-2557a5a9bc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bd0dfc-e821-4daa-8f69-604d6351747d",
        "cursor": {
          "ref": "895fb427-e6f3-493c-b9de-bbe651aff023",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c19d8043-65de-484b-b9d8-ae57ed90efed"
        },
        "item": {
          "id": "51bd0dfc-e821-4daa-8f69-604d6351747d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9e99b78e-e4d3-43a3-b0ac-49b132d1c23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a13c237-dca5-4704-a380-859ef73859d1",
        "cursor": {
          "ref": "ea14b1fa-d66e-49b9-9642-7c1c5a39a6ec",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cf348e24-bec1-4fba-be7c-d3ecb5022067"
        },
        "item": {
          "id": "8a13c237-dca5-4704-a380-859ef73859d1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "446c5d60-5ed9-471a-bd87-40bd16b44652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7081caff-f310-4e17-9c21-ab39812e9ac9",
        "cursor": {
          "ref": "a22e2dc5-b60c-4323-8eee-05628090a7fd",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8bfdd575-1c71-4509-87ea-49d09cec3fdb"
        },
        "item": {
          "id": "7081caff-f310-4e17-9c21-ab39812e9ac9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f229e511-6462-4043-a503-65f596ddc6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe60e6-0449-451e-9744-73299ef61ba4",
        "cursor": {
          "ref": "00fa88c2-7f41-46b3-a1ae-f0620cc90912",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "369e7304-bbe6-48ea-aa62-7d199d20fe4a"
        },
        "item": {
          "id": "40fe60e6-0449-451e-9744-73299ef61ba4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "76ac1809-4de4-4b56-80f9-d3b68d2a2ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6102ca-a11b-4598-bcb5-de6d03f8fbff",
        "cursor": {
          "ref": "9639441b-0f7e-47ea-9927-042de809546b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a957c39f-26fd-4137-9ac0-40ba172970cb"
        },
        "item": {
          "id": "7c6102ca-a11b-4598-bcb5-de6d03f8fbff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "156e1260-9236-46b4-b440-cfb9c29d2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e447faf-4ece-462f-849d-d949b8b49b81",
        "cursor": {
          "ref": "5343542f-ccef-4235-85c1-913496d0a84a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "92deb5c7-85bb-49ca-b662-cb3eecdaaaf8"
        },
        "item": {
          "id": "2e447faf-4ece-462f-849d-d949b8b49b81",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7da615ee-49f1-4b51-b3d2-44577a2810b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c1e9da-2b3e-43ca-87fb-23288b6ec4af",
        "cursor": {
          "ref": "2d8b0c85-fd8f-4e5b-a113-5a3c715a9d10",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c5fbc1c7-a38b-488d-bbe1-922917e43a82"
        },
        "item": {
          "id": "d1c1e9da-2b3e-43ca-87fb-23288b6ec4af",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "44d3cb75-08b0-41a6-a0e4-e8aa264191fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aad98d3-78e1-4a6a-b587-7b14b8049692",
        "cursor": {
          "ref": "86083cc5-e98f-40fa-bb8f-1308bcb28ca9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78b1fda6-3b1d-4f3b-8b28-0dc29382bc1f"
        },
        "item": {
          "id": "3aad98d3-78e1-4a6a-b587-7b14b8049692",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2e94f657-c739-4217-b866-3ecf51773abe",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cae5614-fc1b-40f2-95e6-e6a5530c85d5",
        "cursor": {
          "ref": "de74aa4f-0735-441a-bf42-b66cc8de8339",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3782b04e-38b6-4bd7-bb77-a21347ed9156"
        },
        "item": {
          "id": "5cae5614-fc1b-40f2-95e6-e6a5530c85d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f4d1fa1a-2ca8-436b-9860-58f28d4a0bf2",
          "status": "OK",
          "code": 200,
          "responseTime": 1568,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63f5403-0fee-4d3d-b076-286344e4f2e9",
        "cursor": {
          "ref": "973e3e18-b028-4f3d-9fb1-d4bcc3bd130e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8919b2b9-ea29-4c28-9259-5b0c97042fe5"
        },
        "item": {
          "id": "f63f5403-0fee-4d3d-b076-286344e4f2e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f527d2c3-77be-45e9-9f82-29cc585890ef",
          "status": "OK",
          "code": 200,
          "responseTime": 1481,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "45007e1e-b73f-4905-81b1-b726b2ee47e5",
        "cursor": {
          "ref": "f6e10e53-a558-4039-9ea3-b1ca853edc28",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0c632631-d86d-43e7-a1fe-1c72db050786"
        },
        "item": {
          "id": "45007e1e-b73f-4905-81b1-b726b2ee47e5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b15e1c7f-7247-441f-9f51-a2e53d04369c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45007e1e-b73f-4905-81b1-b726b2ee47e5",
        "cursor": {
          "ref": "f6e10e53-a558-4039-9ea3-b1ca853edc28",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0c632631-d86d-43e7-a1fe-1c72db050786"
        },
        "item": {
          "id": "45007e1e-b73f-4905-81b1-b726b2ee47e5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b15e1c7f-7247-441f-9f51-a2e53d04369c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44a7ecc-c002-4f9e-84c6-ba40c6962dcd",
        "cursor": {
          "ref": "fd452ef0-29e1-4b17-96f4-7f6f4d648a24",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fcbf7c69-31dc-45c5-8cb4-a63d70462b12"
        },
        "item": {
          "id": "e44a7ecc-c002-4f9e-84c6-ba40c6962dcd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "adac44d6-2010-4447-9342-909063787f77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11827158-d8b9-4e5d-a44d-d56a62ec1426",
        "cursor": {
          "ref": "4d3e3b95-618f-47af-a857-aada8f3f84ca",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "02e132c0-634c-4cbe-87fc-d50691ab2c8c"
        },
        "item": {
          "id": "11827158-d8b9-4e5d-a44d-d56a62ec1426",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "191d9ad3-92e5-431d-9c0b-a3cc96468d5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}