{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eafee828-bbcb-4285-85e9-5b4463157a9e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2332c928-9820-47a2-bb07-841c29c2ad2e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c59ead20-c549-4fca-ac28-6b835fb5902a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ca75c62-a186-43c0-9050-fd809a2a73e3"
                }
              }
            ]
          },
          {
            "id": "e0846fa4-58c1-40fc-8227-02a3f649dcf0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7c63bdc-95b7-4329-9b6d-b5a8d4ed339c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed970a7b-1a25-41eb-88b8-fa48419c6a0f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6337031e-c1cf-4d0c-9ed9-f5bad017fe16",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1a99a6e3-bcd1-49d3-acab-d7d1890e68bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d383bb19-b74b-4770-9dba-961c9bce9dc4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e9b4c8b-6733-44ad-8fe1-1de9c1ad6e5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7523d6a9-7af4-42ac-ab8e-3be2dfd76980"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75a2616c-0fbf-4655-9206-e9802311a7a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "047cf7c9-139f-405f-b525-472166e32418"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a2d8ac8-38c0-49ea-90b5-a0e5ac086afd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d43938e-51b8-42e1-a470-a7207e185ade"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41d06ac0-ed9a-4a8d-a613-6d9d98a143e6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c388b6d7-914f-4ac5-9142-67e1564b2df7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6295d6a-d9ea-4db1-b84b-49b341f8d231",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f3cfb80-b6a6-42f9-aebc-3e1f6469d1b0"
            }
          }
        ]
      },
      {
        "id": "fcd6440d-bce7-4b51-97c6-999f604bc9db",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "057a98b5-d909-4221-b21a-67b561d3f180",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cbbb7ad-3f6e-4915-85bf-592083b033cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30c160fb-7115-4bfb-97f2-a768adbaada7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c92bbf0-8663-424d-93af-13c692f9d32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd649f61-540f-4560-8848-06b57e0f7348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac677a16-295f-42ef-af70-025a4b1166cf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd89d552-a739-4e70-be69-6a0eb3e9f8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f98de5d-d08a-49ab-b2b5-f01b20cf80f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef578b72-2431-44fe-81ec-8a78be550703",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4798ac6a-c32d-4e7b-9c16-accbf9935461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac7e1f2c-503a-4761-91a5-6c6d9ae67ab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fb94175-fbef-42d4-8049-8076416589d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f796afac-1d4a-4c90-9516-ce6d1e58f103",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da9d6f7-5bbc-479a-935d-fa7dd8bcd9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8579b9e-76c8-4306-b397-def6c3e2ce4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc5c3df-27f1-4fb2-9857-9d0d474a5ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef41c473-9e06-4a01-8a9e-c520d528a336"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78482885-ebcd-4016-941d-67eacc159f98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55a468f7-da22-4ef1-a59c-50461da5f7d6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43c3b072-ffee-49e8-a329-cef4eedb7c25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b4695d3-eae2-4d55-bd06-31cbae2af1fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "388f7b96-a0d3-4ad7-930a-244d0ca4e5e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b838eee2-e4dd-45ca-b540-85d37ed4a900"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b0ac0b9-feaf-41b4-abbe-89a498f33839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eebc6ec9-46e1-4e58-89ea-1425db9a8d11"
            }
          }
        ]
      },
      {
        "id": "eb0b67e9-1534-4bc1-b97e-cb034e805b9d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ba6f5db5-4c80-4c84-8eb0-4cf590190704",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88c24db7-e312-4891-a6f0-b0225d1e072f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6e7f2f00-bdd3-40fb-9e68-4a1d2c63d133",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3ede24-9c66-46ad-9292-485f557a85eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3cd68f-ffb6-440a-b342-118366e52992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9fe835-f0ab-4fb2-a919-9b956f8745c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d191740f-3f45-404d-99a2-6f73ad68e54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d38e9b-d3bf-49d8-a294-2f5eb4cd4d0e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc637691-34e1-4b89-95e9-37767781a8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6827f543-1cdc-43ca-9956-3afadaf8b7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f34587-313c-4a6d-9c7a-a5af568dfaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "626039e5-8b9e-44b2-b075-54bb43380fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6685b6-bc42-462c-8152-7efb6562d295",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca67013-dbff-494f-8cd9-b7f4f941186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be417ba-6845-4fd1-b3ff-fe74a69185e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb203f6-da14-4a72-8e51-82ec3971a40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c780768-2181-4957-be49-b10bc412e257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1492da-adaf-44d0-b8b3-6a80ca2a9805",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fadabf-c479-42a4-8b08-3a229d363b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1df961b-eeb1-49eb-bf74-44316731910f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44155a5-72d0-4289-b063-c52e65a24c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54a128c4-3cb3-49f8-8656-f0d3c4b41195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b613b1-acb8-4c45-ba7a-4f4cf5ebfd3c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960922b8-10c7-4cf5-8195-0019d4851781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026fa610-9ed4-4477-ac77-56f60592f970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad9cd92-558f-4bdb-8025-88ecba266702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53ca241b-3ab5-4bf1-ba41-c1b9319d92cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71bdcce-1dd5-4f12-9a6c-5979d3d12f09",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ac75ce-189e-45e1-9f5a-42548ffdf46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12beb68e-089c-4014-8491-6ed0e3381bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d93caf-750b-4171-b430-7a93ee6f0c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a287dca-849f-4e81-bae8-9e4eb81dac3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944ec29c-b79f-42a2-84c1-a554ddfa5e7e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8958b28a-f843-4a51-8481-5e21596bc9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763fef15-27d9-49ac-9198-1dea8d61eeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcdeb41-9899-4dc5-9447-0835c9228c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d21db696-4631-4224-8dde-8b1940b8fdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4aa218-8a27-4f61-b101-c74102e116bf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494c675d-9280-43fc-be32-62f39ab100a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097ea465-27d1-4ca7-94dc-369a33a2b769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bd9124-1786-44d7-b988-d04cf6e8fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12bf0abe-aee1-4abf-8446-a19aec6d697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2631379-ff2f-4d17-9b5b-2b27276604af",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ea40f1-0fb6-497d-8407-9cb8198b06c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453b94b4-268a-4834-a32a-8b94e6743d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e55418-f94c-4d08-b355-95e1b6cea6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cd1ab07-c935-43fa-bd46-39c755b04d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b9a887-295e-469f-8fd4-8ba7d60544fd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd028806-12ad-4e89-b46e-06c97cb1d71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976b04e1-7548-4c29-9773-4df42160a56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85a0229-21fc-44a8-a5ad-524caac66e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d81cb2c9-f239-4d51-a894-4b2d46426623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197f8a0a-e21b-46a8-8fd1-3322a6110a79",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded0f152-314b-4610-8070-491a15b4849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ff716f-39e5-48ec-849b-6bc01fdf59e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12f2f9e-96b4-48b8-b4af-8cc15b1ecd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c343f0-9d95-41b0-ae74-09fb4cc45b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031511ba-2816-40db-bd3d-58425830af02",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b42894-57e3-4445-a08c-5d072a270b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d737c97-6bd8-434f-8ca3-49ee8a1dc97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7876e66f-3917-481a-b261-d0edc63af944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aabf9be-5947-428b-b23c-e3e8ea4bb781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6b131f-13d6-4f48-a1e7-7d552a08ac41",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e626571-a337-4ccc-a361-21c9d7512a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9720b3a-85de-4bca-8c0e-ef1de188273f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6dbe7c-cc62-4f55-8d0f-d9f4605cc815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dacbb9b-9659-4927-99e8-16220d16a1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5378e63e-c5d4-4e19-8771-6ac355d04c6a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf4468d-e92b-48c1-baf7-e9a40ed1cf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5276e4-a00f-4786-a844-766921199f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98f6e6c-e8b1-4eaa-8b6f-d33ca7e20d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06fba2bc-96e4-4114-9d4c-8d2ae36ffec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3339dbf3-ada5-4c08-82e6-9128df16d539",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b74e62-7390-4312-8873-2ce2535ab6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb33eeb-8941-49cc-afaa-e840fef1b81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d3294f-c046-4a9f-95f5-4ff2eb972a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d91627d-a932-4d4f-a1de-d6c304e8e81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab10dc0-97a0-4bc3-9e7c-3c31bf4ce2ef",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef62823b-cc00-4c4c-938b-0c9c2d710a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf5a6cc-59fa-4358-a13a-f9685f1dbce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d23f68c-bc95-42e1-a7bf-9dcb385de2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8a5211b-40cd-45f9-b515-40fc938fc389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa685a2-0201-4ad8-9797-2687bc7b3080",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fb4fcb-75d0-4e41-ae19-c99710e7006e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c342dbda-8410-43f9-b589-94a9b2787aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197022a5-04a0-4d4d-8c90-3f7195d8cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b36d752-49b0-4c9c-a891-33cbab636f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef80c10-6cb0-41e1-b499-1d01f8b38b78",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80395fb0-a167-46de-b755-f44951344afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ceeddf4-8c38-417a-8569-252315104607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1ac791-dd21-4ef9-8407-7c83c13da6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0108bf-f16d-42b9-be44-479a2a0ff8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9f7127-075f-409d-b153-52bd77bf7533",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd7cf1-214a-4dfa-a0e4-5f2c5e326c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabfbe6c-e386-49ce-9a28-a76a0c44ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95006ef6-fd22-4189-912f-74e4c62933d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d309f06-f089-4c62-b6cd-838725bfd19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e65ad44-77c9-4381-82f1-9af36dafb8a5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5924778d-2df0-4507-88d7-4d09c45e80cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c6e4cd-1d8d-496a-bfbb-16f555d5af30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58397e4f-2456-4057-9f98-731f05234f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5cda40-1846-4c91-bed9-2afbf64e366c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743cf58b-8a0c-4146-aea4-5d2d7d6fe999",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42c768-9c7a-4ea8-8677-0dab7938c529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82bb6ef-f36f-4c2a-b683-beb3c4512ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f1773b-a600-4388-a786-b9bc05409fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f770a4b-cc97-450c-b3ec-10b53ff50d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322eddc3-0144-4fae-8279-c0779a89ac78",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf81bc-6e17-4e36-ab1f-505d019fbf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440b6702-c8f4-4442-b300-d86d0f6a93d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfda2d27-f9ce-4722-88a0-2b8ceabc1705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73a0522e-e4b3-4698-b1f6-46f26a0f0cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aada8537-9d5c-49df-b0b0-7015c0188a1d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c64a5e3-9f96-4536-96a7-f0e0ed8a0b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54892bc5-b243-447d-93c3-a7bbc26a83fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783be2fb-f25c-4dc0-980e-95f1dcc70717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "866355b6-bbd0-4a86-b29c-622d90959c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8270d477-d817-4827-a47f-3617e587b3ac",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82703da4-ca2d-448f-baf0-de57de6f0f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3bf431-e6ab-42cd-bff2-4070aa76bbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224ade72-ae46-45b1-aeb7-2a21143c8674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c793f329-16fb-498f-85d1-29ef2c6e2bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c566ce9-0b29-4104-b4c1-a8409d644a43",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3457ce2-00f0-4c24-a4fd-821cd2780313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efb2d71-0786-4428-8c27-a4b0851bad6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c969a1f4-5a45-4a0d-9904-ae0a97c88ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e888ebc0-735d-4c02-a146-beb9e1c60ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af82ac-3657-4647-a4de-89134e43779c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a5f17a-0835-444a-a55c-75aede3e4e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275ba7df-1b10-424a-9483-60c6d1593006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb63bc7-2fe3-4a3d-9251-0b46a59bb2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46e2de9-cffb-4570-ae9a-6eaf7e382f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6978deea-6352-4dbe-ae0f-3b0e75d37e4e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a213d1ee-291f-44a9-ba54-3793630d9d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ff22d8-3bb7-4d04-93ea-a7675884fad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb2d702-c5a4-4260-8d06-a5db372939d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8e4da2-4bf3-4aac-a441-34ba956c00c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42065a-6afd-48b0-bb30-c69c60bc77ee",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef0241a-8c33-4925-9165-2146b49718b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ed44ea-ef6f-4093-8c76-749b3f6232d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25297d03-2a6c-451d-91a9-2ce445853a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82bd566d-55c8-414e-bd12-2ded36d5ce9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ae00cf-1a17-4f66-ad5b-67941c0e744f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70322491-6958-4105-9d38-b23f5df77268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736c7933-c2f7-4025-b04e-97560f33092e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efc33a1-5a34-4e62-bab5-125143d4af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9369fb7b-d32c-442a-bbe3-ec5362f82092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00396b27-16c9-44af-bcfe-22de9762d84b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da52f529-ccea-4c0f-8b2d-74626b157518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17784a47-9256-4992-bc08-8883e2de13c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb5af7a-42b5-45b2-a8b2-e54769b76d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b514241-3ef0-4602-a23c-6cd30be44ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438f8aee-f9ac-489d-90c9-3f8487656a18",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a78546-81a2-4c16-851c-226ae6163755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3085157-f73d-4be4-aced-e98dcf8dbb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef479f-ad10-43f2-9780-c351507886c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d2aafe-a1f7-44ab-9565-b8ea9b80087b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbd0a42-88d4-4bf7-a9b9-4993425c2c31",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b75279b-96d2-4f23-a757-a6d50f4db064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae9e5f4-c64e-471f-8951-d54f99e8fe25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38b0d50-28bd-4b44-beca-c2ecc014362d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2535e195-54b2-49d3-8f71-78217e321f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8473d268-c224-4c9a-88d3-206457dbea1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0eec7a-3590-4ab3-945d-222b72ce0c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63818236-a421-42fe-83b5-e698a128961e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380b8db6-ae62-422e-be37-a0bc359cbed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "063d1386-93b0-4862-bc4b-b6ebe9bd9612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86728a88-947c-4f3b-b727-7949bb37aa42",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611a5e25-bf99-457a-8dc9-4ba6dc21cdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f6e7b6-7743-449e-afb6-ab6229ebbb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a817ff0-1e64-4095-88ba-ccfe9207d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e819b0-805b-4f69-9e87-8a04c5c9e5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e80314-5713-4d0e-84b7-4cb1a01422cb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeda6908-cbe6-4d28-9255-accef4e1447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d191984f-c32e-4d59-9bed-53253a3b0c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e616dc-d9dd-4814-affd-f8fae8927a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "94a1257f-55da-466c-90de-a96605ee2da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113dd4b-6a87-45c5-9db7-bb9061b3e699",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64061b89-da78-4b02-b875-627d5c7e62a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2997a31c-c6be-499a-aa9d-0cfd6dca7afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577e3e3e-203c-4753-9938-3f8c02df80d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3c8db2-3b8b-4578-8b72-da555fa59c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7873a97c-37c1-4669-bbed-ae554c0aa63f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b48131-dae9-45e0-b544-22f48d55162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aff2af6-2250-470c-923f-0db88c69434e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bb4c12-1d43-41a0-9334-93d587bc4e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e5d154-a1b0-43f9-8bfc-223b04fa75eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e7bd8e-899b-467e-87c8-ec801e864b66",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502fc1b3-8ad9-43c3-9e95-4d84cd486fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b67f559-f7c6-40bc-8121-6b8446d29be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2899d368-0215-41d2-b595-c009bdf5f9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b54e1684-d1db-4d64-baaa-66a07f2141ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e29b944-4334-4b74-84f5-d42d17fc846c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf724479-baaa-4b6c-80e9-f8dbee497b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7997af-7779-444f-8205-f959f7a8a529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc12c321-9c1c-405a-ab2b-e1907b71dec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f223c6bb-93ff-4fae-9d7f-f00ca46f693b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6151cf5-4e7c-4a2c-b0b8-2475bdb8cd73",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0747157-370e-425b-9f64-5f22ca586d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52668b1e-424a-4bf2-83e8-064963f87331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7b3a34-ec2e-411b-998e-7d66212897b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2390e99e-8c0d-4f8f-839a-96c9cf507565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d23e2e-fd85-4404-8a37-eb334ab461ad",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6b9d0-5a5c-4295-80db-7ea4e89b00f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3640b06-bb50-421d-a5e3-e31fb2082a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0af6454-ddf1-4f7c-abc4-692b6b7ac425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f3e7d6-6924-4420-a365-c06e05ebdbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463af845-c0ac-4734-9b7d-03f591ebf2dd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8097c9c0-753a-460f-a2f4-14b34b3a63a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cc288b-84b9-4f6c-93b4-7e9cf24f2256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690dc9f8-8070-4ec5-8cf8-c3daf40e782b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b10a4de5-1ce8-480d-bb61-ff217f380881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049f5c32-dfba-46b8-accf-8ae1a7adae45",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc6f49-450f-41b8-9076-6fb393e7bdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde54f95-8121-4bea-a6df-091f13beff83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f0796c-832c-4022-a4ac-30a5abf0f992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "59f2c610-308e-4d19-b2ee-95f42a997c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e949f2aa-3998-4839-aead-944fc221a6ee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eff26c5-b996-478c-8fa0-52491e1c8038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ab1b45-a86f-4433-a5a2-2afe4cf7c088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b1e1c6-ef46-4232-896b-522e8789a77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "07a21060-dce9-43bc-ac83-c5f86b1b34d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5cb03d-a293-4932-aa78-317544eb24d8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905d33bd-308a-4d40-9923-8cbb6b94cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb56903b-a0ce-415a-9bc5-879851514817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ea339c-2d6f-4868-89ef-a6e10884eb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8828d2f9-3ce7-44f4-b51d-57afac9a9f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f97956-c902-4dc7-8e91-fbb8bbf7faeb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca682a5-7280-47a3-875c-c54e2b77b132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8911b41-a0c0-4ba4-8a3a-d1792da2e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdd64b5-0cb0-454e-a2b7-8828f8f9a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf227bb-4e38-4a92-ae78-4e00bff4cffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fb58cc-ac70-4ceb-a973-0dd64424d78c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab20934d-17ab-4313-a4cc-fcde24878902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b918f157-9207-47c9-b72c-230f5c00ea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845785c6-82f1-4c2f-831d-e592ae0e7e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9a32f1-0ed4-4cd1-ba52-d2cb8ea8db1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d248d43-d21c-46b0-8448-f2634887d675",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793dbc49-80fd-4e69-af3e-8fc1bb865b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf79a199-8b2a-45de-9885-250b348f5688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f642d0d3-2e7a-4f1c-977c-2db34a70defd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbd7a8b-bdf4-4a1e-b689-33c47152ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb8f6b4-a3a7-4bb1-9a39-edf51bdaf7a3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae946d6-5e68-469c-aaf8-18cccecca34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ee7022-b173-4864-a968-4459ed710343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a861e636-c407-4bf2-bd6b-12ed2aa03a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4df2de48-30fd-4a8f-a72d-2191989a78f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65edbf2-238d-44e2-8df2-5cef486098c5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c64269c-e83a-45e4-8712-85a718373082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238c8164-5f55-4b29-a424-e845347477ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d61e460-044d-45a4-b934-334a71d3e080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c65f61-fd58-4611-ac87-c19a8f8105e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37da6493-5065-4898-ae54-06f5ac7396d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31155fe2-712f-46f9-ad16-170d0968ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f996231-4c88-407c-accd-429863108460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4828e6a-3018-405a-aa4a-d5df2a31d971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a24cf0-66fe-4587-9a87-8037f6c6135c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87780bab-f965-40ac-81e7-00c6620dc1b4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbece55-dcda-42b5-a1f7-f34c83f4ddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b45a254-e3b2-442b-892e-c5eb3af3bbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3515e397-0fbb-4292-bc68-150147a326b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "486c7ef4-68bb-4cb8-ad24-2634b912fde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598acd91-403d-4956-9d54-ce71bd58ec66",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f244bc1d-4f3c-4dd1-a748-e52f839507ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e477dd2e-c1b0-4a34-8f87-3d2c4d9ee2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c5bec0-0c4d-49a7-8c7b-ed146c55e3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cccfed6-e16f-4bf3-b443-2df06e835564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75d3e37-6756-4ecc-bf15-529fa7ad1914",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17084af4-a817-464a-b92f-d6db603cf5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fa889d-e2a0-4efb-b0e7-a0603b720518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5800ccb-60cf-4325-8b18-ec4e00b6e56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "823bb963-14a8-490f-b541-d9471d1f5ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74d8313-4bbe-4195-9025-cae19fb44b28",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112c9c41-f4af-484b-a91c-9a389ac1569e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4c57ab-c2e2-4e70-a73b-afb6b9cd0d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa946441-8cc3-4a09-bb65-f2315fdc7cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb03dc4-fe43-40a1-bff5-3bf00dd1cbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa1ccc4-ee48-44ef-b33e-128204032458",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28f5a62-beaf-45ae-8b58-a54699800a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1108330a-4457-4383-9d11-8e760e0b4f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1065357-03bb-4879-bb4b-1b574bf030d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce17afa6-6bbe-4bac-ac18-7eb0bd75161a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6323cfde-1c5d-4339-9982-a2d5a4acb57f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c583e8b1-8712-4d3d-911a-fc23e5202fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecf850b-43b2-4b1e-99ea-50de8ed572dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe641fc-d146-441d-ab1f-c80c8662a46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7c3ee8-cedd-4c22-b28b-73a7ba6b9729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6f37f8-d63e-4e1b-b8dd-3b7ced16d0fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8278927-c10e-40d4-a3ab-264d1b0a5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b25967-d249-4253-a333-30bf146d7b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54780dec-1136-4c5e-976f-3538702f2912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba79ba2-54c4-4dfd-8575-30d485403abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efc029d-6064-4385-9eff-d2420adfcef6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e2a5e8-3647-4698-9c5f-e1768d106076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e0a4ab-f9a3-4828-a5d8-436bb758d04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26366f2e-3b09-4ee1-82a9-a0fc681ae5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd60dc4-0139-46cd-b0cc-1fa5e7e2826d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b3c62-9cce-4ac4-beb5-9933c8759aaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1316ba6-313a-47ec-bf51-d661752e344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c655fbe-dbbf-4641-98a3-97754691e836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99ed683-42e4-4f84-9a0d-cad6daab593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8875c420-bbad-43c9-843f-259d2522d2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad5f81e-5c9e-48b2-acbe-827441861321",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7a8699-a12e-42f3-8696-5fd3cc54a135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8310ce8-0a74-4295-93e9-a260a2cfe13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef9449d-17fa-4c44-93a9-7eabe75eddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "776e6fc9-311d-4a58-abd3-8b7a46e94e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b33e68-be6d-4254-a589-21e72eb1bc9e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af11388-16d9-47ee-a84c-adb7408cf97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b0ff6e-c1e6-4a39-b81d-04ef21c289c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d475287-d5a4-4138-a57c-5e90eeaad4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07e54a9-27a4-4a85-93f0-9522cfcc900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baedfbc1-6dee-4637-8784-21b007edebc0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb58855-f522-45c6-86bf-8b5e9e53017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa3013a-f75f-4a53-9d4c-187f945cca4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0eacd6-abc6-4e51-90a7-1dc6a2a94377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9709e9-bd2a-4378-a93d-b7c3a6773543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa942cb-6452-492c-87e0-5033e6d670f3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d711ed35-4cc5-48af-9007-6802f8376a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcc0149-fc8a-4ad3-9d94-4015aeb737e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6acd1f0-3f00-4c3c-a79c-7f68d1027480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6de7ce-ba96-4d4f-a767-7395dbc231c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06db082-0d22-4746-a12a-a190fe2e55a6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ff491-6229-492a-b248-46cd6a6bfd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c04ed51-ca46-4b2f-b01e-453b2f408710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66459aaa-e865-4945-9ce1-67f0d00dcf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0d3b13-71ba-45eb-8cce-8d0a84ceb4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5134ebf-ca82-4f34-88fb-90da564a8edd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61ab30b-1930-4d1e-9b10-112663ea439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29eb5048-afb5-4d3b-acd5-9d796af40b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81aa2d16-9f37-4b06-bb6a-5bbcc59488c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe31875b-9cff-4e6a-a54e-c38ad25b1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7c631e-5413-4288-81d8-1a60e4a2474a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f64fe0-e746-4100-8fdb-b4242bbca1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0b6141-76d8-48ee-87e3-e2cfbd4957c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1d90fe-f732-48bc-8f14-9164f740b2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9e5588-cd1e-4a31-a32c-062dc7e496e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacbd4bd-34f8-409a-933a-f3620c731531",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee66d42-37e6-4117-896a-0a694e1c0360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310db4e5-b8bf-4a28-a6a6-ac1e67dde30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ee5c0c-52b9-48cb-86e1-cef8769328cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9504bda6-ef2e-4b99-b284-749e42a95539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae30a8e-c2de-433b-8508-c7e3bf75ed47",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb0414e-e2dd-4a02-922c-a61823f3dd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e22869-e630-4660-b3b2-b805e6feaf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad7908e-35c0-4012-a750-247db173bf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8ed08a-628e-4ab6-84f7-e2c1cdf745be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f941a70a-a690-4ae6-b8dc-d4dd403efe74",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fec235e-50d9-4b2b-a02e-cf227462d420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd828d4-ccf0-4656-8b22-65ec1a2c8f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b79d6-aa9c-4e0c-b101-f1fb9b729de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58979dde-a2fa-405d-a8ac-6e023a6038fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcaa57a-c5d9-4120-a742-a9e5450f1f7c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b3334-d4b6-4d56-bfdf-0eeaf1db9fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce8e6f1-2c33-4c4b-a874-8cf1eee1ff38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4914c95-fe9b-4dee-b9ff-720403c55772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "805e3a31-c4e2-4d20-8317-9264793cef17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bfa525-3f45-4229-8025-d772ae47970a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440c584a-7bd8-47ef-987c-ce6a77108e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc491543-95b1-4e41-8c77-a0b27950d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ac356c-bb22-4bb9-9012-4fa33ed44d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7ed7bb-137b-43f8-803e-4b403032e2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7609536f-6283-4bf7-9376-060971a9900b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13999f1c-ed3e-41ff-ad60-f6a13fce9f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b016744d-bbd2-4fda-8396-dbb3eb656095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278e3a40-1211-4640-9a49-c6451520ffd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbf8594-8aa1-4ba3-a27f-981262185e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc587f43-5c23-4f07-928d-d7167dbc33af",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3957f48-92b9-4b8f-9f5f-8695a1e8c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac4d7a3-fd59-4dce-bc42-96c2ad6f60b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a589e1ba-0087-4697-8802-e5e0bc9c03dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f82335b4-3a47-498b-bfd5-7b0e61433e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c460dc27-926c-4d7f-a020-0e8bee390911",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cb21db-85f9-466b-b13a-1610b3e0183a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9e36a0-4cff-4a20-9948-cffc870017de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46dbfac-24aa-4fcc-8e71-5ebc99616da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8199a1-ec0d-43e8-91d2-15b0158b8c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b82544-adac-45c5-8483-c4a81c47be4a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d651b4-17ee-4564-a588-7cc7b59458bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2840e060-678b-421f-bdb4-b4cc9afee057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f421970e-c411-499e-b785-340998c67904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be78e094-c300-4252-9c53-597c342c1d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed899f9e-f752-4427-b93c-fe2100c5fa2c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3154e9d-8750-417f-a49e-8c29c258ba6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c486de-80ec-42d5-b928-c9a972d3e901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df5e2cd-1b60-4792-9685-ee431e43f340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48fac0c1-995d-4380-8e9b-f9ec8dbd868a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308fcbb2-abce-4ed7-bc3b-45df3f3c40ff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4879776-9165-4a26-a591-36b60f5fd1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e186bcbf-3b23-48c9-8bbd-dbfafb8963a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e859892-e7ae-437e-81aa-a78661644c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8d368f-a9d0-4647-a1af-8992ea4548b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807d1026-40e9-4e2d-93e9-1267fea70cbf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db86cac-c4de-4ff5-a555-3130acc33fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d7f330-00cf-4646-a647-dbbb4d840bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aeaac6-1769-4439-81cb-fb3a960edceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52ab104-9c20-4162-b6c7-2064697b1ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042d82d0-b206-4a2e-96e3-78907bbde45a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230fcfd4-fb6d-48fe-bd06-2524373bbe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2c4721-3e6b-4bed-8f6c-cd9691eeb0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2111e195-cc71-401f-90a0-7174ffbfbe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b169a4d-948e-479b-86d6-a89b068212f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc21766d-cec8-480a-ba77-3c70e9fcfff2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785a7c3e-5ef9-4a70-9987-6e661e08b43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd92acc-2f34-466d-a9af-97f039656719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac4ba05-e903-4180-afad-433b2f81dea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a5c6d0-c342-48a3-9cb0-a02ec95d7d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478e21a8-f1f1-46c7-a20f-355f268443da",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7125aad9-d93b-4c7a-8724-5c9e42346c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b590b3c-76fa-4faf-9973-f7a99142f183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ca1af1-483d-4d70-9479-9b2cda1688d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "466f9cd9-95f3-4a73-b6d0-22ab14bef8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40c1498-ef3e-4357-a1ff-451f4bb82829",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559035bc-e457-422c-a8dc-9b2b252848a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abcbca7-8195-4d74-8468-ff1f6d3df174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81607cf-c4fb-4ac3-9ec6-4e1bcd96cc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec98c44-ff24-4944-89b5-444a97de8f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d93029-d41f-4050-a32c-fee150b57afd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76baa021-51cd-4365-b73e-27ee68f680f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cc8914-bc2a-4643-8797-a3a45354791a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79d6df-f03c-4e9c-86ff-4f2667eb7f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11f30370-5e0a-477f-aa01-9b62861ad7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bcb386-b75b-45de-b7ad-da8f0d288a4c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d843b0-5108-4b2f-a5dd-65f5664c645a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67aaabf-9905-44eb-8592-814ec4d88270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ca6f09-bd3d-43dc-925b-ad0138097cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c54fabb-8c35-46f8-a729-b3e9b8b7ef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e3509d-4f68-4238-894f-0367f8ce0895",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b6f8a9-e7f4-4b8c-824b-d7c34b66ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1181b056-aaf9-4e3f-bfbc-02ed0a75365c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274bbefa-7a00-4930-9d1e-21be23501155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad78c22-bd5a-4993-a3bc-e7260223059f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a5e705-c7bc-4e9b-b65f-d5bc59db1350",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54811ce-330e-4662-8dc8-cab99f1a23de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed418c35-2a3e-4d5e-afd3-ebf6e77d68c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd3f61e-6700-4822-a58d-bda9d8b2a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f7544b-bde7-4388-82f8-a2dac767118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a9fa1-3400-4ff9-8915-23330e41f008",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd15fb2-7c9f-42a4-b8b0-06fb14315d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70538281-9bb5-4f36-915e-b042df1e6a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c618fbb-91f2-4249-8356-3e6eff94a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62113da-e4f3-476e-a532-0b9528e424e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b56e1f-ba4a-4f27-9970-3579dc7e24e8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad90bf4-bd37-432b-afcf-149ec61db294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690e7d6c-9268-4615-b74c-dc5669fc5482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aa4344-d5d2-4b7d-9d14-1e120e05efb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eab83f0a-df61-4d10-ba4a-7cdcc977f083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364c1856-c28b-445d-b2e8-08aed37cf117",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efae674-11cd-4874-8354-103f45174445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d8fea1-b6d5-465f-968a-07a55359a8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce391bc-bdf0-4fc3-aecc-f4bb46f74fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba24d765-c67c-414b-9c60-3940c5070abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e0a5d9-4707-40a6-acc6-ae1bbc872032",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20fd003-4606-4ee9-9aca-97ac1f6828fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aec48e-4497-4e85-adb6-607e35e98b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb9c6e1-90bb-4ae4-b9b0-2f426656e55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec32a712-c714-4102-ae1d-a626a5f673e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ebbf56-1e76-4a6e-8793-cee50d5cf8e6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e52649-6910-4103-b4aa-69173e4c9057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31cc5232-77c1-4deb-9a5f-1cb7c6727828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9436be-30d8-4d94-9c27-94727f29f0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "54c44754-9bf2-4581-b711-9f62929db7af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1229f92-04cf-4701-9192-956684d650d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f80346e-9e56-4f37-9630-668300f9b8b6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24290509-182e-4a48-a5b8-388223a0acfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c146e010-ef93-41bd-8bdf-32a07594efc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1add751c-7b0b-4838-9269-2c95849e54a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea5e874d-ef24-416f-a765-cacd583152ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32031a18-3983-4a3f-b303-9e202ed2a35d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80474227-074c-4799-8da2-883e1dd8f165"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd6f65e-800e-42bc-a03e-922a3a8c5c43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaf00647-54eb-4476-8c09-e8ef61f9af6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "febc56d9-73d2-4311-96d9-1fd1e4605ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fd3e8e8-139b-44b9-ad4f-3a7b5597c0e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "487a1f60-46ad-472f-8a2b-dceb2c78350e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1c00dcc-0954-40f1-a9ee-49defaa3ed06"
                }
              }
            ]
          },
          {
            "id": "b1433ffb-73fc-4e45-9f43-418061e14363",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31c8e56d-6a39-40b5-aaee-ea81f7dbb936",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "68d814c4-ef43-4085-9e7c-9f155a107efb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54032c56-5a1e-4c33-8cff-c90a1e6bc9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ac0a6c9-d26a-422e-bb18-1a49b2c69086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e178f8b4-abf0-4d6f-837c-103c9a46f35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab35c04e-9eb5-4f19-893c-77d2e662761c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "621f55c7-5940-4b2c-93c1-e2863e68015b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a14411c-fce2-41bb-9cc4-7504c3bc7122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bc69d99-3b21-4c2c-9871-efd84336443c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c321286-1e17-4454-9f59-b690c947ea10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "baa92116-bdd0-4fa3-9f5a-2af594f4f9a4"
                    }
                  }
                ]
              },
              {
                "id": "a25ea208-00b2-401b-acdd-9ed2ba8c52d7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8997e951-01f2-4205-8a63-8e2170c7c580",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93099085-9e68-44f7-b2d1-e44935ad44c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39197c4-eff4-431d-92b5-7eca45ac64b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4973a360-6898-4dc9-b74c-839f6afbf23e"
                    }
                  }
                ]
              },
              {
                "id": "a5995300-cb9b-4812-a4c8-8ffbd8633ca4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fbcad61-54d2-4406-9339-ad8797969dbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba213f23-65b1-463b-a542-efb4b665a3ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70ba5ab0-71db-4b05-bca6-db1da1ac0e0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b1084a2-2589-4c57-be46-1760827eaba5"
                    }
                  }
                ]
              },
              {
                "id": "ac26f18b-519f-4c8b-a3e0-bd3c2cba5457",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7798a6d1-b8f5-4a00-9ee2-e1aebbe3c65a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75858446-a820-4776-87c2-c0633fcd96b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "927f9c9c-1d93-46b3-9c20-c74096184c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2fbaa5a5-f497-4aae-8f64-42f16c6153dd"
                    }
                  }
                ]
              },
              {
                "id": "b5fc933d-b6b5-4231-801d-be6891bda23f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a775bd1-7600-4e6f-8047-435f686a8b99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1170dcba-c1a9-4b2b-9fbe-62cbdae94588"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ae5bf08-adb4-472d-86a5-8ad83b4bc6df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "413004f7-ca29-4971-aba3-29ef6e541b21"
                    }
                  }
                ]
              },
              {
                "id": "beae3570-c54a-4f64-aa97-596a61d9cb59",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e1a1d67-fd11-4c21-854f-fc6bae5ac5e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec897deb-b0cc-4ea5-b010-e6940224d954"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5c7be53-534c-45fa-958f-2654d9f5c5df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1f2a834-ab95-49db-ada4-21d8450ac641"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c4b90fd-a141-496b-9018-a1206cb695a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f937fa1-e23c-4190-9bf8-500bd323270f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee2f826e-4587-4954-b998-526b0822938b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c24dd38-f294-458e-94a9-eadcb4c683e0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff655257-1d31-4ca6-b907-a9311b131db1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ac2c9186-3c06-435f-aa32-3612c7b4b1fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2e96c10-b6e9-4040-8e63-45231abf1022",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b07d068-9cce-47e2-ab78-02b0ea54ddaf"
            }
          }
        ]
      },
      {
        "id": "ae7eba08-0289-4734-9ec9-3f1f410c0f76",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2ca49dd2-6e9c-4c47-b418-df3080626535",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55d85ef7-f63f-4515-89c2-89467dd891a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e526dff4-216a-463d-936d-93ecc7ae8af6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7116f17e-4ebb-406d-94ad-13b498e404b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4439e5f8-fb0e-495d-a671-9b2cb82bd762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d2f553-7096-40a6-be96-b4c22f8298ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65834dc-4478-4f6b-9330-1b728f075b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7149018-539d-4264-a664-43f87d4ba88d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278d3eaf-fd40-4978-830f-ac0a6a74588f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b01354-a1c6-4368-867e-9d27ea26e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1187582d-9d4b-4d5b-b062-0057a08b26f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "566ae897-10d1-4ec4-8467-c80c391bb13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac3afb4-772b-4037-82dc-731a12a9ee63",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da89d2e4-aa76-4de0-8157-18de728c303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03281b4f-1c38-41c3-b3a0-3ec06759257e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e83cb8-bc7b-4fac-a928-b73b76bc2720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbb6d6b-0cd3-4bb7-8631-a4573922d455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeae8b9f-647b-41d2-b426-17ab7ac65ba3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d127faac-0361-4694-b887-41aba5d6bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce26ae0d-822e-4acc-9f2d-07769ba12401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd985230-0e03-4254-9e86-afc51917efb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efbc6a9-cc4f-466c-b54d-d525c75058b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175ffe6b-7d39-4dc9-81dc-6170c751e4f4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d12dd7-eb32-4b7b-bbb3-647cd52077bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e261ac8e-c461-4632-a4ca-b0c73db48507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8b8423-dcfe-4a6c-a3d4-1662c960729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "471e1f4b-2c03-4da1-af28-752230f23e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5433aa74-ba9d-4451-a181-250bc96d51ed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f994ea2-4b6a-4872-a264-00d2ed54df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154d9e9a-e3f9-4187-a8a9-c4e1db44ba52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93192560-6aa6-4f8c-be84-5fa45c478f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45ea1e1-d731-46e0-943b-e1cdab21e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74e7d23-ccbc-4a40-bdae-0be25c3a83a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb5132c-4b40-4ba3-9cdf-fdaf691d10f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8575e25-f1ad-4618-83f5-ec03889ac5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92753acd-7d8a-426b-a75b-0984d61cb38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c1ecea-1358-4690-96b1-aba3a0219c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e9da31-6836-4ae4-9b91-a34f156cb1ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb890dd9-d862-4206-b6d1-27a3ca1611b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046b732e-61d0-464a-b168-e991e860820f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0661ab8-902e-4330-962f-4ea93bb5c377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0870553f-fa3d-4613-a7b3-433ec6df5307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a29d1c4-3b25-4b31-a2ce-5797ced589d0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436062aa-7c08-4f1a-a4ae-84101f9b9d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473ef4e3-6bdd-4283-9ac7-85622bcbfa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec4f445-2a89-4b20-b911-631a7fd3e069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d6b605-5d0a-4f49-8d57-e0a735e966dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887786f2-e4fa-40a9-b95e-f72f068c1aa9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac28215-88e4-4531-8c14-e8bb492a42a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be30a6ff-6549-4e6f-88c2-c72b8606f5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eede7b0-1060-4d01-9ac4-9c741cfe8c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11db291c-ae11-41a3-adbb-129604ef0ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a15692f-1a24-4d04-8a60-fb8066ee16cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dded04-2992-41c8-a17d-cfdf7be178a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4383d9-c3ef-4df4-984e-f5b0ea152aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884a65d4-67c0-4a80-b7be-becf87d02d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f275c3cf-17ba-41d9-ba69-2b29f1b52c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb755879-7a77-4c97-a4fb-0ccd445a7260",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7824e8e7-fb72-4a3e-8c02-64457cb4c6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a56f27e-f316-4fea-82cf-f0f00186c571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4fe597-7883-4157-833a-adff7dbbcfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3c3bf2-23f2-4192-96ce-94af4df70faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc1c61d-a805-479f-91c3-1c7f89bf957e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22503ba1-2550-444f-a484-1200faa36b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f68753-5e7a-499c-8649-6d1349ab29b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34e4e1f-dd68-483e-816a-a00ed3dc293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0a7cbe-ca5d-4fb0-8e7d-53747a881004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7408ec31-1c9d-462f-a236-6b81c6c2d179",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc5c285-95cd-4ee9-ba2e-a150c49433ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd4a9ed-c71c-4b90-a0e5-882b773be385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e83e1a-bd08-48ee-9d6a-6fc7a7e7d7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f23b0a9-3f4e-47c7-bd6e-e69afc79c9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a07dd55-4916-4bd9-bef3-047d26eed658",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6505c927-1e25-49aa-9b3b-37c3860ee0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cedb6f-6824-47f3-aa4e-0f953fe403e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f315ec-0e88-496f-bd43-fca1f7b997c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d045fbfa-298e-4e7e-b0b1-ac0c5714a9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a305fa34-94f4-4967-b9a4-03b7e068640e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62534aa5-1e75-4776-851d-c099095b58df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16022f6-2406-4f98-8c64-a549c2bfddaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f275c31-1a3e-44a2-abcc-39cf344bc9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1edcb9a-8294-4d79-8885-a97c5e465af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448c7f00-8859-4f5f-9410-b483114154bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a7e610-3e46-4a23-8023-982fc43cf959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d791353-d9c9-42fa-9f60-2fe36d8d3b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740bbf16-be1b-4125-88c8-6a9b59c947ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f954dd4-1415-4b2d-b154-5b1151e264fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9710234b-08c3-40d5-8af2-c883d3436d3b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13658622-f402-4767-9a02-ebb5da5501d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeee867-fab8-457f-a676-099e0cfef1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6db59d-cd17-426a-a1f7-26a95cdb96b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9138027a-9941-4000-8870-b604ef130c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929c3f6d-4e4c-4a3e-b164-3d679c83579d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e5aaf1-c02d-4cc0-81fc-21f2a4cab8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc783553-195a-41f7-99ac-6a179d082e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8f231f-53cf-4577-be44-4ff13e6ed361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27030da4-7c85-4759-9a51-a9ffe6311026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea63acf-1b86-449b-99e8-aecec7ee91fd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7943261-687a-4193-a53d-d8dfaac8e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603edbac-1808-44bd-b6b4-3b5834bb6409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33aa54d-b012-40b9-ba7c-562af2fa7e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e8f69c-31e7-40ee-bc1c-868c9f08d39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e1c7e3-fce7-4dbb-ab24-6fc7d3d4e86e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f04c78c-ad63-4dd3-ad5e-b6d86536eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af48998d-25f8-49c1-9676-90dd7fee961d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26f7764-ba14-43e3-a3e6-b5e1210979c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb7c47a-ac5d-45b6-ab92-985814278dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def02760-998d-478d-a542-78e3b057d885",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d57dd8c-c843-43bc-bf33-94aad640df56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c80052a-8003-485d-a618-9c5dab6376e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b58349-5ae4-4c42-8d08-05443e44bf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f180d06-8334-44fd-b78d-fd63b55f5d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4d3391-86fd-4275-8e31-231a769f5d56",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8c685d-77a8-48dc-a3f5-7ed91f1a6508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e847682c-a99b-4773-8112-ce9a0b72b864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96a21df-b057-49c8-b12b-2d76eedacf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3645377-371a-4544-90b1-c97b64c16dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03994942-0c2c-4a86-a419-aec14c8f4c08",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71226213-3fd4-40d4-90cb-de7a3b296eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ba8207-b302-41b8-aaa6-f4dd3812640b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8544613-e451-4df6-90fe-397f4170d204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8486aacd-f650-44e9-815a-963ccceccde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca526a3-fb08-4d3e-97d8-873790504ad6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4af500-3ada-4d06-9c2b-476647fd0384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314d7e12-b8df-4ca8-b637-1768eec5d766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9b789a-2f48-428c-a9ce-3ee11c334099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e6b49a-b515-437a-9173-7692cb6fdbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4abf2e-7f17-4a1a-a14c-9bfbb4661a84",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f70d41-64f0-45bd-a0ce-b7c2968026ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d494db31-b29b-422a-95a0-d731d8422538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27be3057-82da-466e-92d1-59f040b416f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22bc1b56-dd3f-4094-8db7-3828fbfb883c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600f29af-e98a-4682-be42-9be94e0e35c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cdaee-ea0f-4921-9f20-f295c5823485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea258e2-74b0-46ef-8c5c-7bf6d3a6ff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51721926-72df-4ffa-9e43-0d0894dc3a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54bd55b2-d31a-4394-b6ae-ff9418c2687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27beb11-0c32-41d1-9214-639f34265992",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748bf315-b172-4314-bb5b-84583cbcbf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4bb7a4-cf2b-43bd-bc92-f6bdbf251737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf5dade-256f-4208-93d2-5519bc8e5f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fa7023-0f5b-4ad2-8f40-ff3a3ef0cb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08649d57-566e-4276-8f05-1a16d58d57eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f2da12-07f1-40a9-9058-611ca1540dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a250ed45-174e-4a0f-a617-45ce48c63991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008c33c9-b7f1-4d1e-9453-d9728ec375eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ed3b3b-38fb-4d8f-ae4e-20317a626f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136b569f-4104-4ec1-b8ff-d31888d25440",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3187f8c3-ff82-4482-a375-6195659f395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de409c71-c3e2-4644-bc68-24fdc6f62518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cf0734-9781-4234-b8bd-5a62cc665dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb209a01-f5ac-44a8-ad2b-6a523cd7dca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4e1b77-cd81-4d36-9592-93c88ba9b759",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a40f28-ddaf-4761-886c-d08cdd56ac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5f834e-bb8b-498c-8826-0465564d00a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeef0a3-0749-42bf-8a14-3c05e5c8a79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac632f1-84d2-4f78-af10-951ece98e4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aad498-eee9-4e69-a132-3344b95e81c1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b66901d-1dbd-4289-aded-c72502f3765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67b8544-2957-429e-8057-b9e2f89ea0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51b143c-3a1f-4fb7-b47e-47657fcec253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e16f2d-f7d1-4b46-8406-25af3397e415"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9a05ce5-9efd-429c-9ed1-5c9b70c23bd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6f9ade3-cdf2-4ba6-ad03-5a203dfb44ab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a41a8a-300c-4efa-b098-05940529de08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "720da039-0398-45a4-8c58-10f945015871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3798a08e-8782-483f-bc24-25cb7cb63cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1650d278-796b-4840-8256-3dc450fdf209"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5b98cf7-7007-4022-9879-a7c5645219f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a6efebe-2eca-4ef7-90b2-2286a6c4a893"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b4fb5c7-544d-4f02-b088-97d1032f1469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36dd03a1-44bb-4a50-b604-8416b7c08122"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09797120-6416-4103-8752-de0cedcada3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f783715-4c2d-4922-9201-706af9faded9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c676076-deab-4ee0-8b77-d58af22ed5a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44ae97b1-4c83-4174-8395-779daa1b95b3"
            }
          }
        ]
      },
      {
        "id": "51cd1e7d-06b3-4297-bcd2-ca611e250b56",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6eadc203-db39-4209-a318-d60457b0fdf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bb5d1ad-5670-49a4-a35e-7a90a88255a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "acad142a-b166-4537-b594-7a0a78f58c96",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eaa1b80-731d-4e9c-8655-702d0eaa5d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1170f0d7-800c-4084-b901-681dcc29a1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfab14f7-4928-4408-968a-c5ee977e2a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "670587bb-6f1f-490a-80cb-3f9e570ac70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37af198-a3ad-4f39-9780-ba3ae6c786e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c418bd06-e092-4c1d-b615-f09e4dcc2f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ba6f9a-c461-4d32-ba11-9ff9b98ca984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47631e0c-1898-41c4-be73-c6fe2bb747c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ca3de9-1b05-4bd9-8a75-3e292a4361f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780d5798-86dd-401c-b9d4-3230d3cdef39",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a09c945-8be3-49d3-a10e-044db291a8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45beb9f5-0efd-49d1-a4be-aa565ee91a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528d5f9c-f0ae-4a27-937f-a5ddfc0c58d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c14370-352b-40b4-b947-4bd91206ef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bd75c1-80b3-4957-85e7-283146e9146d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caeca28-c037-4b2c-8e4c-9c169899eac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39613a25-27da-43b9-9fde-91bec94d5108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb3ca16-7cd2-4d99-82fc-5c78fabd60aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d35fe0-a22f-4aa2-82c7-f1b5a4038351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc2968e-9ce7-4259-b095-33e220aecf48",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdf792d-2ab3-45b0-8f59-b32064e9b928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6bd532-033a-4ae3-a02e-87bf921a7570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff1b852-d2a6-46b1-940a-a6a38b147d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c68353-7052-4a73-ae83-e9d9f5bee945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efdc162-ff21-4cff-8174-0680917a2fbd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bc228c-58b0-420a-a53e-4dac4c3fde33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f407b6-94f1-4203-ba89-b106c1d8dee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec38d62-8d51-4f09-87db-c73f7ac125c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80323ac0-af2b-4bab-b79a-1810dfbd71cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75444290-1c42-4c56-b021-26cc3ea57543",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8c9649-ef78-45e4-becf-a3a212b9a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7083d3ed-8b44-4be7-990b-84a6d5caa6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e112257-9b25-4366-b8c6-7e3c231ea9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d470c40e-05f6-4855-a634-be43139c78a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9ac24-cddf-4612-9258-0f31238d6d6e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccdf37f-817e-4aa9-ad9f-34aba473756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067c6d7c-6d1e-4805-8f50-d88ab148d681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ed83bc-d835-4da9-b2af-04531899dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47adee1-0935-404a-8056-e4f32e27961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8452211-7199-4c12-9db4-87f960522305",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2624c3-6689-432e-9ec5-0e63dc8af997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfe9b10-2daa-4548-95a6-ca27d0c516bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b229af-8719-4e7f-b342-8fe5cd1e07dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "443f3ef7-86f7-4f65-af6c-ecfab63abc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd72d1e6-1fd5-4c88-a614-e4366ce93a6a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0cd93e-6b31-4805-846a-64461726eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835a1639-7a0a-4148-b8c4-75445f358ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c950d2b0-0ca0-4d9b-bcf0-333d9f936199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fbb800-1c8e-4ab9-ade1-8b2bdec7bd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cd4e69-60f7-445a-8add-cb908c670e73",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9b502b-cd9d-41f8-9f70-7e6b081a1004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e501f8f-5d4a-43e1-9007-4c6a7a49eb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adf16ad-15d5-448f-a6c1-0c4f1af99bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eae546d8-69c7-460d-a800-5e9b49cea7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6951ff7a-2580-4344-9920-31f529c87880",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec1b32-0ee8-49e7-9c63-06fc83910808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12f6f71-141a-4fbd-aeda-1717331d1e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fae38c-ed1e-4c4c-ac60-c89885cc9e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98333203-d091-4f97-a1f8-8f689b994c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff82082-22cc-468b-bf3e-8c7d32dc230b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a15defd-64ed-41cd-a0cb-afd2a98d9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8770b62b-90df-4247-9d83-d43b3a62de12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd1c6b3-0d46-440d-9417-18bba4e694d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce52897f-67df-4cac-88d9-0717b551a8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee797cf-e5b9-4e65-a9d0-b6cec9b9fea5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce6e2fa-8f02-416d-ae51-f92da7c6ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1856b38-a9c2-4952-887f-e6cdc7a1aa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fe4202-29a7-49a1-bbc0-418e1c1e67ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "18668af5-3dad-4cba-b8c8-51d499228f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d908e6-da66-4e2a-8080-1feccc20c47e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4125043-430f-4a2b-a90c-f34b346bb902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a941eeab-c7e6-41de-a145-0af84d960e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416702ed-8f74-47d2-9ecc-b080017179a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1050a9cb-b65f-474d-924f-90dc97658e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c028b9-0d59-4f07-bf13-ece39ff5567f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f776a4-2875-4983-a4cf-37fd349b837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8dcfbb-fda6-4981-a0bd-921dfcd5b3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3ee846-5486-4fa6-a149-55c13a695339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe73457c-3246-466d-8c4a-44a688f2757f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c978733-ebe1-4d86-8c3e-aca3d29b8d07",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0e1213-a1de-4f8b-8ee9-2031f69d7a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c64824-8fe6-49f5-bc1b-894a3c49a938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7485c36-6822-4a84-99df-5b19fdde140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a267acdc-ed70-439b-ade9-c9e58ec50b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed006ad-e60f-4ee1-98ba-137b86f48d29",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a078d49-8e17-434e-88ac-2781e042998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fe17ec-1c1f-41fb-b708-d890fe4d70c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c48fc-0b62-4e93-acb9-865afd04264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cd9cbe-2843-4de9-9ade-4e0d4e0962ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a9d5c8-9428-47a1-8a6f-029882a3725e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacabde6-b419-4696-9220-4fe19ad49fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c858d8a-bb09-44aa-904d-87f2ccb9f06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fa1c1f-55eb-44ff-b646-cb87856f0ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b646ec6c-9f69-4783-831b-6e459fdd3eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f731a7-ed1f-4ba1-a346-49d632a699a8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a58691b-9fd7-4d60-bb49-31a00425a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1104ae4-acf6-48dd-91d1-e355e2386860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e12bbc-0ded-4193-8672-56a3efd4ce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "194e1941-3d0c-4bd0-ba1b-35ece4e04441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf89950-1afd-48a5-acad-32ccb8a714a6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee2a3c6-0773-4bc9-b6bb-f913ffe8552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96fbec8-1aef-4946-ac1c-813798e0dc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a534d52e-b8cc-45aa-9d52-a2c5f2397a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e35a8f-becc-42a4-a62a-dfbd5482e139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c664075f-f299-41d9-8d70-126505aa6d29",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b420ca8-aaf9-4a9e-8c3a-2bcc1c29e439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18378ee7-b788-4a9e-bcb1-f0e1a464b924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ca8674-e920-4c85-bbc7-57fb8e0b6633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e8d9b3-f93d-4490-b5e1-7bb6d3587d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8dabdf-48cf-46e4-b894-aeb010335aa1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d52207-0941-4538-9048-c5875a06007b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddfa16f-28e6-42bf-9c87-b6fed159d7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478f63f3-d9e4-49e8-b6a3-0a523e9f1157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e26a1cb-8e42-43f5-b74c-7add1be91b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9feae-c570-4971-96bc-baaa851f30c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169c421f-5886-460d-80cf-eb8a8238cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91604091-75fe-4dbc-9daf-a3f58180b04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a317b62-062f-4db4-8b32-aac9ac629796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54069b0-a584-4fb5-b423-c813b472b035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf00cda-f488-45a7-9d15-7ffa66e3067a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a638fe59-cf94-4ff8-8f96-6b3b64d9878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231b7ced-5cbf-47c3-88e4-6aa8f56e5d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e4aca-acf9-4079-a9c4-402576e1f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca64685b-159a-491b-8f17-7cbb675ef8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1328e6a3-fea1-4786-8721-313178d4a2b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2537021a-1a9d-481c-b70e-4ebafe849f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ed8700-c161-45bc-aee6-91cdf659291f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15304426-2a31-4aee-b7cc-d906a2c4794c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c292dc-ba2f-4348-b8db-ae1b577a8ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e472022-1daa-41eb-86bf-629b8a00a006",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baa846a-db05-437d-957e-0acdcad51d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15438eec-b181-4e15-8ee5-d135353bc876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f7f52d-d549-4beb-8195-1dcae0037e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40764b98-9749-4902-923f-0fe1ad00b3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09a1604-2b06-468b-8b41-f57438ceac99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a1b334-3960-4fbf-9736-cf6aed34955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa78070-832b-4cb2-a477-6603b98b9f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f5f4ac-d458-4a3a-ad82-785aca619dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff1386e-5b00-4205-94cf-2689ba8f2ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058a51b5-5e8f-42ce-b028-a234b43755f8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4106dae5-c22b-4ea3-813a-14119fbcff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ee5b42-cf78-4f37-9974-f48aa5040dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5a4471-de68-45c4-821e-26f8be55aa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac46f42-e572-4d10-83b5-bc42caf581c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36970a7e-6888-40ce-8b61-5a996fcfb28c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dfeb49-7a25-4901-82bf-93642fccb446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f079a2-7f1c-4c04-968e-c78c92b68317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba7a056-105d-4f72-a128-9c85c564d041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2409e3f-66d7-4257-ad55-0c6c85288b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b856d54-0092-4c15-9d94-46a492eab047",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f47b6bf-d2b6-4bc9-821b-c3d053d70d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3271c5a4-5a72-4745-b859-0fb937514d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7230da7c-1e4f-4862-abee-e58b05f1b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a77cc058-c3e9-42a0-a027-cb46334023dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0dafb-1ebc-41ba-8cfa-cc1f35508b44",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670791b5-d537-47d6-81ae-f115ed59467e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404f9f54-71a3-42db-9621-f7ee3b7c85b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5542e5-9460-4f16-88c1-83da8a2eed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec129e00-fee3-4354-8d30-f06d299b2205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1609d7-1998-40a6-8ebd-883462a09311",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eb7174-f27a-4ab8-9020-269098e7e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6289e3ef-3350-4466-b990-0f099bea26b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c6559-8b69-4c2c-bac9-60af69d4994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b4350f-42cd-430a-b23e-ea516d72adb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec62b5db-2e95-4975-bc90-690860f067a1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbedb7c-eb8b-4553-bf39-67d8e8af6f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea04cc0-6407-42f9-b4ef-3c426c43020c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0b6d70-222b-4840-bb52-5af67cf5352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca403f1b-81d4-4e57-b5ec-d7e26c0ab017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412c2226-1834-49a5-9a66-337ad663283b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb20088-aa6f-49ae-8200-957d72e771ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9923a24c-4ac3-4879-8891-8d65347b9b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b665258-98f8-4712-b811-601251432e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77daa318-223e-485d-ae94-04a6455e72a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30093bcb-9346-4a0b-9682-84514928a931",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3c2920-2630-4c57-926e-f01766fe5503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9183acd6-1a4a-482d-ab3e-8e8d2aae5fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e3d0b7-a671-4f8a-9017-32f1bf90c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a33e76f-7451-4b7a-8175-39124e1d65ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4d8d0-1817-4535-a19b-da1c42951c1b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58533028-6be9-4930-91a2-1305f003e90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa5c4d7-4cf7-4d96-b0a6-ccd52b56c0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d15291b-4dc3-444f-b57e-07cbc14df3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58edc627-7b5e-45ab-ac53-95924ad4eea0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30db5959-4a44-4257-b066-cfb2bf1ec46e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1496444c-1b5f-4854-b8f6-bbc6151f5aa0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe3fac4-bc6c-429f-b4d0-8ff70d03e06c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d001df9d-bcc1-4ed3-936f-1c3ad8cf659c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f327d6-3ba3-4127-9421-1f0bdb798051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f427b6b0-e8e2-40a9-b398-1a1f66fdedf4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4abea484-b8c7-45de-a28c-b17ab42a1a71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee629ce8-b1a8-403d-bb9f-323670164c1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5f908fd-bf2e-42ef-863b-494b3c57c5dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4496f99-5a1a-4c0b-bf62-17a1aac9244d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c7028c-61cc-48bb-bd96-1174dd96661d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ed74ba1-271e-46a3-ba5f-d163884ca6a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425100e0-4022-4919-bf3f-b0014c9b5797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f5860d3-8e3c-4033-9dd8-63ac82152195"
            }
          }
        ]
      },
      {
        "id": "1ab4be5f-6e65-4874-84af-c3714492c460",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "95959816-0625-4873-ac86-63b5fea309a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4c6208d-72bf-43ba-ae62-ae8d906ff595",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b0639ca-d36f-47f3-9159-6cc35b9b325d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a74f48-960d-4083-8992-d0f95d4126ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42429ab5-488d-4c84-98de-b870a08249b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec769a7-5760-43ef-9652-300fe8b9dda1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887c1fc4-cc63-45b6-8ed4-c8d7d7f4267f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ce3706-03d5-41b8-8057-38e906c960b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb0ec1a-5c48-419a-ae16-131d2aa30b9d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35e506d-5a35-4911-b7f2-bfd2db976468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab04edf4-89e2-4cd8-a272-8fe9f8e18fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcffb92-9716-40e5-b20a-bd8ca22b6556",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d31b9-a4c1-4318-b0d4-23b6ccab3d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de5bc09-a32b-4c6f-a454-03f5d0ad8173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2118409-33a0-4400-8c04-0b30eba81a5f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d22becd-5d4b-43d1-9a31-5418fe6b7a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10449313-6f40-4818-ac84-37c9566b08f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c05395f-9609-4251-b7ff-e8b44ed9846c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59052ac9-37e6-4cfd-9f46-20d7acf483bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3e35f5-9bac-482b-9470-1a5b3d460a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02301564-2fe1-436d-8518-d6a812d0f7c2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86f3f61-a1fc-4820-a508-a31080d14b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30b70a7-2bc5-4d0b-923f-3d46e683df48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc073ad-5b7e-4a67-9b4c-7c937ba14592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025dbaba-2a55-4ae7-b46f-9938c63b5edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c35f9-a8ba-41f1-982b-eae4d790d34d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904ea6fb-f1f7-4168-b677-6e36236fe660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40462e60-7237-450a-85c2-bfe0fc586412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd971844-d8ab-41ac-845c-29ca641d91f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334c38bd-302c-494e-a232-2ee1addf03b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74482e13-64a7-4686-97a1-f63d06a03705",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d17e6c-a813-476e-91e1-57b642808c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8892c4ca-55fd-497a-b3bd-e5ab536fc2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9827e0bc-d464-4845-93b4-63d29cc4aa91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced24b1a-4eeb-4956-9dfa-50b3128ce76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90935dc7-96d9-4d5c-9282-a4afcfc9c9eb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a6205c-e49a-4bb4-9856-9bfbc6501d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347c4827-9fb3-46f2-a0f7-24602082e6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e9bc8d-8739-47f3-9fcc-fffb8f5dceb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90e47e9-1fac-445f-862a-30a347538b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2bbcc3-878e-42d2-9e2b-eedd9334b095",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ce267-7f75-4922-95b3-6f41ba7deb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bf71bf-c09e-42f9-aed9-3c8975932974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03697fb8-da1d-46b0-b58b-960b5f980247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c0e8d1-e1e3-4e85-a25a-0e23ff02a0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a0543e-868c-4c2c-9d37-2e2138711888",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b2791a-d3b9-4eee-ab7d-f629c51f6686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ff3cac-858e-4f80-9a4f-fbec7eb356c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83b874c-cd82-40b4-b068-7151ebd90a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc72a973-4da6-4352-9fe0-48951ba3d701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48ccbb5-f8bb-4fd4-8dbd-555191eb5b49",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca44a11b-9338-4425-b9c6-969ccf9f43ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c94f2c8-ab51-4f94-a777-12a66b692546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427f5c94-46ef-4a4b-b442-e6e250ef9bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31af7d44-b4ad-449c-886a-59cd7e7a924f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eac95f-04f6-4157-bf22-c8d4b910260b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684a87d4-ea32-47b4-93fb-bc573440fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e37c532-bf14-4dcb-b652-3d74bb1a82d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd4c406-12bc-4eb8-9cc0-75d15ebc1bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb0a552-697b-4ecf-a88f-46a37c491971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab20bf6-2a29-43b3-88fb-21df1a15744a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd4c8bb-2878-40fb-9383-def2d3331e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de46153a-c61a-46ac-b63a-98c27188ce7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026fb685-14a0-4c3d-ada8-83cb7290a559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae08dbf-acb4-47e6-bcea-b27b1154b518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fac5dd-4e24-419a-9bf3-6e5bf98fe0e9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbc31f8-e984-41a8-aad6-c66a28b78d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19f451d7-2b42-4894-9d16-815769c6b9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c55fbd6-7002-431f-ad23-798e2db783a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b1b790-076f-46f2-84a7-b1bdd2830789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d0f15f-a5fa-46e7-9086-a64914062895",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f1374-2723-4783-942f-add8491a3fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae05af2-7ad5-48bd-9157-0a94bc15d9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2768e6f6-59ac-4d17-8ef9-ad389d26075f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5312d0ff-9a1f-4815-815e-ec113f625730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af32a5a5-2515-4fdb-a5a3-c373a202ac61",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c30c165-310b-4c02-b2bd-8ee9eaa510ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04005157-639c-4389-989d-7690ae4227f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c028d21a-93f7-4761-a3e4-c0fdd50856c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a08712-7ae0-480e-83ef-85ae064ee2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f941b29f-15c9-4b83-8649-98f7b5a1efcb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8c9bd6-e4ab-413a-8f5e-426e34421c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b47036-b5ef-465c-be8d-f89582b2e989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77908419-80a3-489a-b5df-18aa740d0cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90317d9a-9980-4804-bbe0-33870d2b5550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c78d44-9710-4d9d-b49b-239675b2d933",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c13e02-9e37-4667-9781-804a31b8cc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb1e763-927e-475b-b6cb-bc57cd225997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e66985e-cfec-4eb7-9394-bfbfdd022827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f62152-0760-4141-a71b-8fd4d37d6925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e895ff-bf29-4cc2-b6e0-ad4f35aaf299",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43f539d-e011-4915-85fa-678faecf2567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ac083e-cbcf-428d-a271-2944ec9ffdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847032a2-5fab-4249-bcf2-719c09ff633e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71612ac2-601a-4ea4-9eae-09428c8de7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03286720-aa98-42f4-8912-befaba49c326",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d910afa-6fec-42b4-ab81-54bb585e4fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d40e1b-1de6-4e71-b460-f2b01369c652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c3624e-7b87-44c4-a03f-eb7ddc416e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e11bfc-9f68-4677-85bb-bbb350839643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d0cf4c-7735-4f0d-96e8-26938e55e8bc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6499f8f-b2f6-4488-8223-cbfb1ad3bcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d196ba-d330-4b53-965e-aaec9994befc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd4724-f045-45f5-9d71-b6cadc923480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70471479-9d15-4e91-9834-5d5bed94e218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89321f85-d0e5-4857-9665-038f099c26ed",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1cff45-bc12-4a4f-9080-9b19390eb323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d31a43a-0352-48a4-9404-086ec99ec684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeace9e4-3d80-48b3-b3db-d09218044008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b900cd64-2949-4285-b5a4-028f0d5751c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b454d-1e0d-4999-b5fe-8aea4740ceed",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cbc3b9-f56e-494b-b648-b9331ff76f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57fe060-c177-4042-bb47-5d42761c0d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df64fd95-84c5-46ba-b7d0-3ab215a80746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b61b76-eb04-4016-bb49-59d9ab722d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ee4524-af0d-4208-b99f-c4437f09d7d2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0b5b47-9cb2-4f3c-b4a2-9b4d9a34f747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d962864-2be7-48ae-a515-b556e70ae6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7729b45-a38f-4f1f-83dc-51a4a2b3cf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00415f3-418f-408e-9427-dd557d2ba781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2470db-9aca-4947-97be-ea7c66cfda2f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746f2856-44fb-4143-af6e-cbc0519ae62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99b7b89-3e95-48d9-87ef-ecb0a7d9304d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146924a3-3406-46e8-aafd-3fd1b25f2438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0a3356-bf2a-410c-809e-d5910c459426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b875c-917d-47f4-aa62-e4a0c45bbb8e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d4cf6e-48b7-4017-8970-a177c7cc0d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64ad6b3-04fa-445b-be06-c814be2c1fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0cf2bf-ce3a-4d1e-96f2-70bdb0326b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95305dc2-77b1-4058-a465-4a2041b6d033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baef22a-b854-4aac-b355-57899c2fee65",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0dece5-39d7-4b42-a7df-3169d01ce3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef41919a-00d3-4ef9-aaaf-b2740c4d33a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4367aeb4-a5ea-4582-8fe3-f7790923773f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e8454a-862a-4202-9e2c-ed42ae5c6613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0d5bad-b009-4dda-a4b3-7915a731d33e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd4f4a8-73a4-4f1e-8d8b-3bfb8b2ff964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944ed3f9-0377-4bd5-a086-17d8b68bf1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb91c4e1-27fa-4c8a-b259-ef972ae1d1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808c6f7c-a380-4099-ab92-8f55d0d3209b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85c1f48-856b-4622-9251-940975b16b24",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce82eb8-7225-43a7-bad9-b1725a495216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708c8efd-f438-44e4-841e-69ac0c2d5bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cce7271-30e4-4717-a70d-992d765378c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78a00f3-cf4d-4449-b5c0-be26974207f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b20fc0-5372-4f00-8b8a-22392b60be00",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22539cad-79d8-4032-8608-98f975d77312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50bbc76-27d8-44b9-a318-8e63bd1477c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2ba895-f82e-49f7-a8fc-992a443f8931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ac75ff-52f2-4b0a-84e3-fe1a80b67b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150e7613-f8c3-4278-86f0-d2824b65bd2e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd13533-4f2e-4d69-a9ed-953796337b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9356a2c3-beb6-4d38-abc9-14a80e4ac732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4028574d-c551-4dc5-a868-aea97230a855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afea187b-c504-4e99-a20a-10e31f2fddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac29bbf-8043-463f-af36-1c703c9356ca",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95d111a-c37c-4301-9898-6e0703f16dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57fc4839-57b1-438f-9ff0-3b858e602ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc61494-f1b6-4be2-89e4-de2b3f57a7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d648e5b4-cf16-4996-ad0b-0495339e3519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023d7730-c6d6-4134-adf8-e3c96e487977",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b2c55c-69da-49fe-b6e6-ed513c987401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac21f15f-4ea6-4509-942f-db513c5d5bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6592ad8f-6221-436c-8577-5478e631bbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a70ed23-b3dd-4538-85a1-49b74546b883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d705818e-1e31-4465-b8ad-77fe7580d87d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fd6490-2a26-41f1-b029-0d8b6dca6fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f724b77-c0c7-47ba-814c-84d845e45bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b093671-9c0c-4926-80ba-104d9801f19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a46219-4b59-4705-873e-85e4e794c9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9b8c89-f0b6-4a79-a215-c11013c2b73b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5c4557-2a95-475f-b053-6dbbb5882b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3d14b0-f16f-440b-afdb-06da92b7b6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f93744a-5075-433d-b75d-b6c18c80491a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b6f069-f531-4dd4-9666-dab54b73b2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe536ac-06ea-47fa-941f-c6b21f449434",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92058d0b-2ad2-450b-a799-024597277bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c29a31-7973-484b-9a2b-78be9cbec928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2898f-180a-47f3-a61c-32d43c04e5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc508d10-369a-4886-acaa-1b90b30fd47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d621e621-8c1a-41ef-b540-ea4ef0b8b0a4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc10bc2-e52e-4ce2-a061-a4d57c59d998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ced0b42-d33d-4c07-aa25-a64f8b3bb3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e688c72a-8e63-4b2e-bd0a-b1c792f71964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5311d0e2-c4dd-4d90-9543-c6a139d085e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4768dd84-6c82-4d66-8bf3-0de79c3af60e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e888b1-f761-46bb-bc82-26874a28b040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c24d4e-9360-4071-8a37-204a2654a980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2f279c-625e-4036-929a-0d4a3ab5bfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db556f3-cf60-4b60-a62e-bc467b57a61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690c070-239f-4ce0-9444-6c23b24efa95",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc466eb-5746-4854-a2f8-aec51ad59c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d81062a-3d76-40a7-9a95-21415f318f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18de7476-4b0c-4612-8699-7edd83be106e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb446ee-343b-4515-9bf2-f4e8784dba02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6170c76-b502-4ed1-8183-4cdffcb3bdba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb55b20-c9ee-42d0-888a-f1430f2b12e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b9f7ba-5385-4f0f-8cf6-91b13a4b7eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a900bd-c432-4af4-b9f4-12a8d03a18c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d8f258-5c1e-4c3c-bc6b-fa142d59bcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fba54d-8acf-406e-ae0c-8b2e8e31945f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d554cc41-2105-42d4-839b-7ce4956db53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c1da89-3262-477e-9a8a-7c94af1bd99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792b524d-bf8d-4d39-b94e-c17f68100694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b355c8e-c9d7-4676-8584-dad9ae236e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7627f5-b053-488a-8923-5035d1be3d14",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b05318-d3a0-49fd-a3d4-f30df5d0d425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9ca5cd-7cb7-4c31-ba0a-86b80f9ed1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9012199-c879-4b56-a4e0-78b9a4952612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc42e4a-05ac-4cbe-ac64-acfc2648cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531153c4-52ff-40de-9526-61d78b1179b8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b78174-52f2-4a89-94c1-980b7a70dbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4219ed-a28d-43a3-9090-b18c8ba6bf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8df3eba-f7ec-4873-9c27-067cdaf8107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee8c02b-bc91-44fe-b3a9-9886411803cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e7486c-cadb-4b9f-ac38-2c86c23cbe56",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c17176-1837-4ea2-9ecf-9e69284b95a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fff1c4-32ef-4c41-a577-02e3faa57f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3949d065-e80c-4331-908d-14cfca590b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73ecdc0-402d-4e82-a444-26b55fbca437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67591d77-527e-4c11-a5a5-5a27a97f6067",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ff1355-997b-48c0-8bff-8fc030f0f05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7bc3ca-fbe2-4f39-acf7-b7e2a257aef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13679f9a-23fe-42b9-854b-31957e0b37c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4412b1a2-e506-406c-8aae-9f1ee3dde744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae80e0ea-c795-49fb-b3a6-412f2b21a99e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f06bac5-5516-4044-a4ad-27a9bad5e1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc54cdd-90bf-4426-bd5c-c3e9df80acbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d689f9b7-9373-4da1-b759-9194b4be31f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c751cc8b-5c09-4bf8-aa33-5692377bb6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5106de5-6b2d-4fcb-82e7-1eda54e9f807",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a43249b-a736-4235-9920-3ce6a832f128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dac4b64-b2e1-454f-9932-837cf8461325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3715b8-6412-461e-8ddf-4d8941e43215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3162e6-3f02-47c9-b053-afd62e9a6d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e450fd25-9905-4495-ad96-b5280db42f03",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a266de3-1f93-4499-b5bc-a7e821ac9201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e894d63-f536-40c5-88da-089f09dfe994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a354197-e135-4efd-a8ee-7d0c10463ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b530240c-a4c5-40e1-b7af-077da783d5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f18285-8132-44e2-9dd4-c6c4fc1f1688",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1de56fb-25d1-4582-b968-3a261d85c3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5663bef-67e0-442b-88a5-d3a41fcadc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac1e9d9-2969-456f-a088-ec25cb3a12b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d86c0e-803c-4da7-ad0e-758e2f424c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e1a639-5868-414b-8c9f-afeb5c4ef80f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d353f57-91a4-4ab1-bbe6-eebadedfc2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d86d8e-aa6b-415f-acd7-2d4c2def8882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6cb855-69e0-4dff-8c06-eb98a7b82d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ead1f45-5c0b-4657-ba90-f92ef4150702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d548a33-c05a-4553-b66f-59ea8e785ccd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62034a7e-c986-400a-9123-cd2a4e4ff05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3ecee3-fbd8-472f-88ac-02fa11b557c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8b8c2f-168c-4453-8f2e-8789bb2631b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c927e29-4bff-4447-bb50-7976a16e00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69157a8-6a67-41f8-9d5c-6cc6964fe9bb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eae8a9f-e3d8-4c9d-a613-db8ce8dafe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb8edcb-791b-4c63-8dc9-186c476d0b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb4c400-71e3-4520-96be-38a1ef0f50fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12450d8-b44d-44e1-bdbf-8a3a783d0c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e4d29a-9acd-4936-90de-8e3a309c4603",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791a020a-2d9a-470e-b1c4-caf44524c1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13200318-2a44-40a2-a52e-7bcc7fa0f854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947616e5-43fc-4b8b-9cf8-ea9e0b673de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173881b7-01d0-4e6e-961d-1c394fa9a1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8009a21f-6886-4b24-a967-35678dcdbe99",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f24a783-0d94-4c8f-998c-eb50fc6183a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c190f1e-c0cc-4bcd-89fa-77a051498c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee6b43e-ca59-4513-a60b-2e24341759b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f908c6f-bdb6-4e50-8a1c-aac7dc8649d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03636b10-5f27-4f0d-a454-bf385f3fbb91",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75828999-3391-4656-8ace-29687dffe3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625f91bc-7f91-430f-881d-308a5649a3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f4d2dd-5f53-4714-96ef-c34677e18721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be33f40f-97df-457d-86b4-2dd733dc4ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610ee82c-5e00-442c-b653-69c4a5becef0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc29a4-1864-4db4-aae8-baecc68c1288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b07c302-1022-4e15-bd6d-2eb0dd2ec262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44f7829-1d3e-4af9-bc8c-26f1eed606b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073ca350-c852-4a85-8cf5-1ef2a3fcd548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a6d52e-0b17-4deb-b116-03942a076f00",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dadc031-7bef-4b1a-9477-32e66e3543a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f51cf5-2651-41a5-a6bd-f832d8800f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9a4bfd-9bf6-4b5a-bef7-f8de7bdc85b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71232d79-f646-4563-83b6-a7faaeeafd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b81630-8da4-4c22-86d0-25db8325d14a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aa23ee-89da-4170-a6b8-0d3b3d5f7ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c733e7a6-410e-44ae-af8d-87c2f3ec4a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41e4e7b-faee-4f33-9eaa-854d3fda5f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cef1a6-7012-4388-a8ca-4690c3a110d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd024e41-cfb0-44bc-8dc0-75e44bad83f1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c356524-b373-4690-9860-0cab15fed37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a8be24-32fb-4629-8024-691a86dad266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81cdeb-aa53-4150-bc70-30c2ea85472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78692c98-eb03-4dba-b972-df52197ebea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18edfa96-ef1a-4d53-b35d-e74992dd0f32",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174e59ca-0c72-48a1-93c2-43bdde07ff88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c7abfb-61ee-497d-95c7-28004e45075d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49e06fe-0d3f-46af-a342-c9fa4730534c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4da11c-dda3-445f-8f8b-37ea166c807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fc5d00-a4d7-46ed-848a-77ce2bb53e8d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbde40a-4675-4783-a1f2-3b8dd8d71207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317de6e8-c354-4cd2-8481-61908abb3b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46c6ecc-4c32-4c7c-b50a-a3684fa4bf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017ed2ef-aea9-456b-88eb-64266aa2133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4388b9a-33bf-46eb-a6ea-376ced65fcc5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e5da56-c26c-40e2-b0b6-88d213fb0613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7900a527-913a-46fd-962a-abe11baec7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d04dc80-fd49-49e0-a4e4-bd78ca5174eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87373aa2-43c0-4a81-86ec-7b4e368d3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5205104d-c09f-4a6a-8100-8a61f87e63e4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba60361c-9f9c-41b8-826a-f406c65a2888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade68199-2315-46fa-a590-a38adee55c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef56ab52-e5b2-4cfd-8b8a-71b53d104953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19fc910-b685-4246-9456-cd7d414c282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53d2c8e-4a1e-4f9a-be5d-af3550651eba",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4f461c-18ed-4834-a1d2-5b6508cf435f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf0f892-3628-4489-bf35-8a4656f7fd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fbbe43-af0b-4f82-962e-f447e8837fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59221278-9cc5-463c-8cac-86075c6c9861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c90aa72-4e18-48b3-a1bd-26c5e02f259c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f4cdf6-cabe-45b7-aeb4-6d6b9559f6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d447f8ad-b39d-49ad-b4c1-1ff0d19cf716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5907ba41-04b6-4968-a719-386e730825a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f8e59c-a9dd-4432-9d6c-41895564375f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2dd26c-324f-4d59-bc7d-7e511eb9503f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0f0a8d-9446-49cf-b53d-1590d00511fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a53aa3-2c19-4b5e-aff8-ae9e61b3b804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ea363a-6185-4c6f-89f5-01f05dfa3879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0040b-68a8-41c1-9dd8-6f4a05dc89e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a18a4-697c-42dd-a0d3-374ebb9ff081",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9daeb00-bd28-41f4-9ae4-dcfd1398955f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5e1386-c649-4e67-bdff-6cd7aa9aec0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d219b6-7c91-459e-81cb-61dcef641918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfa0a6f-1023-48fb-93d8-94cc4854cca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6987a6d-109f-4877-94bd-190f0ee9ceff",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c3b423-aefa-4e16-8ab8-9a5d0d7e740c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57954ee6-d9c9-4f0b-aced-73cfe5402f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d885b-7881-4528-8a21-900c18a0a281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2081ce-9f57-488a-bc42-45a0c0e7b442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6367e0a-1b46-4638-9ef4-02222feac30e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2a36ce-ed93-470c-a62b-fbccf95415e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4defad2-8619-4c64-ad46-e321fdd734a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c79a5a-45f8-4a61-b85d-a14294f0f626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4698bd85-902f-47f5-a2cc-ecdb03642a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351947a9-d5c2-4560-8409-e624b5b78bf8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b28f1c-49b8-41b5-8655-22a670d504ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc4b3fa-07c6-4a7e-b244-407eb10c4536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8862c956-7729-4523-80be-e6525235ddc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d6c1c0-78d7-4de9-b198-1253a0d25a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0024d7e-51d1-44d4-bcb9-4a816daa06f4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e683a2fe-6f06-483a-9b12-5cd6fed85810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d201084b-a214-4d18-bc91-6dbeb879ad29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f83d14-1938-4f6d-af6a-115438a2b0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70c2b11-6023-4446-89d0-c37121658aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa8702f-13ec-49c6-b51a-237ee5194944",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b4bb71-c215-4dfe-a594-b35a3b92f3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802104ce-8983-4c07-9762-41bad3db19fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4468ea66-44ad-4802-8cca-16d34db3a47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5796a2-c455-45f6-a9f4-caba468a7e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90f0113-033d-41b3-a3de-b035019757c9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7f4490-f33b-4292-ad5d-1f0fe9d6ae53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fddb1c3b-1dca-418c-b5f9-bb248d7e45f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb29dc7-edb1-4f5a-ba74-4cb7eb11e764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4098da-05c8-42d4-af35-ac3b122383b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7788f011-1cc0-4c2e-86ed-1c32a37ad369",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9563b8-e44f-4eae-8fc8-ee7fc5cd19f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011bf2ef-88ee-4f48-af80-51819f9b652b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6531672-00ed-4f73-a696-492a5930d7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe77c0a-c62b-4ff4-90ef-745b742fc710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e48afdb-b5c1-4558-92bc-bc5ad1779cd9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da53e6b-76a9-4151-90f1-3639f915b67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6079519f-22fb-4f3c-95b0-0c55c5685f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8d01a-daee-48cd-b6b6-21b174b326f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57356a2-92bc-4803-abf6-48f7174f7de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb42c80-2afd-4eaf-a621-78083a01f45b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef5611e-2bc2-43c0-a624-398bd2cb5a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64251f9f-60bc-4d9e-963f-63e69a293182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cddb54-0672-48f4-998d-728107a02a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51ec522-0607-4037-8f56-f07654a5165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2fff44-a70c-417b-a81d-0fba1edc3960",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f21650-3805-4510-89ed-2b2b24dfd792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b92e398-79cf-455c-84af-013ad9547161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f724bfe3-80cf-4860-b31c-f0755c52b974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421d5f7d-7460-4674-b375-992c5d1fb33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c90328-6db0-4838-8064-c20e164a3337",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8288537d-45a5-4282-8e71-5a6cfeec85b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a93cfc35-4186-4c39-94cb-9123701fdcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f8f518-80ca-40de-b034-de77c04a3ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95929f8a-a96b-4a11-9824-139a65c54952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7035667f-1f15-4247-b975-c18c7eaa9fa8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b783f642-f7d7-482a-8216-20097e1f8315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e81dee-c8e3-46e7-aacc-4a6337f8ec86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734ad972-0039-43ad-b00f-ceb7ad549f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a96c79c-f7f6-4509-8cbc-db9f2afdd324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6621abde-cf42-47d5-9eb4-eee26a752e28",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63a64e8-c634-40f1-9c3a-e52ed526b131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8358fc-d52c-449f-8491-3dc81180e563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36544fbe-26bf-42ff-9f5f-2c83f127517e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724f7f15-6079-4819-9c16-97e084fe199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab29d92-fbe5-4ca1-94b6-94042fe4c424",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bf5642-02c4-4a68-bf62-031d93b4dee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd026cc-199c-495b-9cdc-30be7aae30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d235384c-991b-4ca1-8900-333fab6537fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0559a9f0-e4a0-4ffa-afd5-0cb523bf4952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15324253-7752-4cd7-93bd-c177736db23e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb6197-c920-49ab-9a76-0d74fefe7fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf47c5a-e48f-4701-89f3-3c4babce2967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1a5b6-e908-4424-b8c4-d288b2479b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b591f66-baaf-4369-8c22-631f87899270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b744b29-fc55-4d72-a8ac-c33cda2ae757",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c515c7-f2ad-475d-a293-a31201a80f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db039940-8169-4d90-8d33-16a3ce65f255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1139c401-ef6f-459c-a52a-35947739b9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c040d4-a781-48e4-9bcb-6eaf4fff6b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0717d396-1f37-4522-b265-9dff81f78048",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3085a7f-2c3a-4bca-a2c2-5b16254e07ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bedcca-88aa-446c-a942-382a2f0a774c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa25ac2-b543-4cd1-80ad-86f25a2c46cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3944d1-c998-4d06-9ca5-762c541c6ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6673713-4d27-42aa-b8e0-fd5919280712",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b02843c-741c-4d7b-9f3e-8929d13edbc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6fa1c7-818a-4a1f-ad44-024b6d35021c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d904c891-ca49-41ff-bd83-c6bafb1c5655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c949f212-7c1a-4d00-a11e-a01d9d998fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce3efce-5d5b-4e74-8b96-127426a818f9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28af41c3-7027-4983-b96f-0a86248ce4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4740c65a-ef9d-49f2-902d-545fefbf7c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc83c72f-5704-430a-af54-eab54e57218b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfafa779-fdd4-480d-85bb-248a2931c40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db4c7ad-23dc-4cf4-80b9-449c450c40c7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8b8e4c-75a4-48ca-a8f3-0583af7193d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfa4e61-4aea-4932-a019-34a297b9594d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e854dc0-1982-41a4-a78a-78fa8547480d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3544d167-c76a-4b46-99cf-d2580b727fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43910f28-8686-4b33-afea-c619f95e76ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8d9094-73ab-4482-b90f-ae05e5b942e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "badf33fe-e66f-4598-bd7c-43fdd0476df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d023359c-290d-4d29-ad6e-60759f22a028",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a28168-4412-4b99-b625-b69b436a3f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47328b21-5f9c-4960-ac70-89f34e90796e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43982f7-3f5e-444d-97cd-182a24ab86e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1978ea0-1b46-45a8-889f-29ecd275049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cb5389-04eb-4141-8b21-5e5c29ca739b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade1e541-ab63-44c6-a0d1-d954778313c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e227fca-0dc7-480d-8ff5-ad86ba4e92c8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf58224-d439-4de4-ab1c-2970ec442d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620f9697-fb9c-4716-ae30-f010e8f2bb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc1fca7-300d-477b-8d44-3c67cbd18afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd30b552-7bed-4bba-a0b9-d74495fbc318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb9aeaa-9f7b-471c-8faf-d297e6f90ba2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caab2795-0e01-49f5-a566-ee2e4567b8c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda4ce18-9bcc-48ac-817d-12c24501f42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f10197-200d-45fe-94ac-13a068ef2a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecadca49-a9c2-4ccc-8557-3034cd0b2d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59362258-1128-4c6f-bf99-0641589003a1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3353890-065e-4b68-af0c-96462e92ddaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14307f0-7661-4467-8e03-d0040034f133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c31fbc-6ead-41d3-8cf5-c2d130c82785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6509d3-7d94-4fd1-b370-146169ea8d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d6e708-a28d-4a35-960c-dd2894097813",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cafa2d-9190-4709-9c44-8367d4261905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f210b838-5556-492e-8f6e-ea326e2af4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb26a257-d127-42af-b503-877c10cbab38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b5f501-04f2-425b-821f-eb9616e40e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e01d74d-c572-47d2-8564-d8b0dedc526c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef03ef-0056-423d-824f-d0d91c75b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c41d48-42a0-4b8c-9f42-62499e6451e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c22a73-da50-4579-b599-1aa250df6e2f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deac9536-7a71-453e-a415-41f4f9d65496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d48774-0d58-438e-9f2e-363855097fd2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b179513a-fe67-4337-8afc-506f6e2288e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638c93d1-ea66-4573-a079-64ae89d60266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2091d77-caf5-4232-a789-00908ad4a64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a48276f-6236-4781-8675-234467e5f39c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e30d08c-8c9f-449a-8063-d995216a7c76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fad2fae9-f951-4ca8-bed3-ca21134cded5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcc74ee4-9520-4be1-9757-0317f9f9d8b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44c65945-2379-4fbc-addb-8df30b44254b"
                    }
                  }
                ]
              },
              {
                "id": "f6a45c5a-843a-4614-9ada-faa098338a05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8031bfed-c16f-4627-9c7c-dac41824caf8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658f8ab4-2513-42cb-87ff-c4d4fb106a76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "300b7eeb-0178-4628-be55-0053133e96f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f26869-f873-4f5d-92bd-705da20c4623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "780ea6e0-726f-4eed-8c34-4d9c5463bc2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f84c469-04ad-4233-9449-bb65cb7620d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d4f0629-c789-4025-aa12-e02767b7abb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb45dc2-299b-4776-ae6f-cc44dca49387",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91797221-f4ba-468e-92a4-8929968d9be5"
                    }
                  }
                ]
              },
              {
                "id": "914b6157-d66a-4e85-b93e-60a9e6c8932b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "99303442-64cd-49f4-b639-9f6f4bf0f1a7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc67a2-05b3-42bb-901a-2a937d867f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a1df17d2-52b7-46bb-be5e-d3c24f09cbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ba645-c622-4d81-b8cf-494c16e29b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a871346f-48a5-46f5-b679-b573e2ffcf6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c789668-aada-4f36-b7cd-4763789709fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d0cf123-6c04-462b-8678-ea08a1cb9c13",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbe2646d-604b-4d83-8475-162ac8518a00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9d7da8c9-7880-4e80-b318-56604acdb396"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "960a7e83-1078-478b-a089-0fba02a3c020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2184a40-e815-484e-b27f-34f6d63d56cf"
                    }
                  }
                ]
              },
              {
                "id": "4a17d616-f3e4-43b2-befb-7eb412b09998",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdfd3ca1-a624-4088-a19d-0ab567124588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "63d33b6d-6c9c-48b0-b48e-a651fb54e686"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ba0ef42-deda-47d2-86c9-80982744fc08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a2530c9-cd89-4ffa-b4e6-eae9e5dacb66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b37f97d-ce6d-4637-868b-43380ff11895",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a7c3f0d0-cf09-4775-a9ed-2fbb46b34a67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75dc1ef0-7703-47c3-9043-72cb86cc1af6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1068c344-52e4-429d-bde7-7743bd0767c1"
            }
          }
        ]
      },
      {
        "id": "49801e4f-b197-415b-b2f9-738e295838c7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ddc6a052-7148-4b2b-9a86-eee05862888f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6661da66-659a-4c72-9b61-40c4eaf15262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d85058c-a2eb-4e7a-9f9a-7eb88d9b316b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814edab4-3cf9-495a-bef6-2bcad87cbeb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7e903e75-1edd-41c5-8dd1-2efbe15415ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60c7ab6-36c0-4be7-bf80-b6023683f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7687474b-569b-499c-b7fa-ea303caac0da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0161981-2828-44c6-a4a1-4d113e4dee51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbf6eb61-8e6a-4ba8-8f01-059294811b11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c977cafc-02ad-49f8-98fd-edb95e3bb837",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3626bc82-afd2-4264-8680-cb9d18c924a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0fbaf9d-0a79-4b05-9137-48f71ef31489",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f231537-ec08-4c65-b127-e01557872c88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdbd9b08-19ad-4a29-b496-f97e3898949e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9785c68f-ae7d-4348-bab4-f4f39b791577"
            }
          }
        ]
      },
      {
        "id": "b004d0dc-19c5-45bd-bd41-a4c64045ca05",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "54183d0b-7b9c-413f-a774-64d3b795f9f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4e070a4-e277-4d9d-8f9d-540e33aafefe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ea45bbb-0cd0-40cd-b381-1f91645fd799",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c429ac-df5c-4df6-a789-81fe953f8c28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2680e8e7-98f9-46c5-b0a0-38ba5613c77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728ac50b-d063-4e9f-bbbc-0548461c9f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb6a8956-28a0-4110-b0f4-7e27e8bd4d36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "901d8ea5-f5ed-4aac-b95a-df5a4748d7b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e20631b9-c14c-4fa8-8339-e2256cc7e8d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbc0fded-3942-4f6a-aa88-2f932db0d84b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5acda1b2-aa59-4ee9-b717-4b3ef14e00fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30976727-4f67-4417-b961-3348826ed4ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a10ad18-ba3f-42ad-a3a2-b09a6e1c3962"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eecf8c57-0066-4696-9560-054875232657",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e49528d-25c4-4f94-a4bb-74b93a9b3cc1"
            }
          }
        ]
      },
      {
        "id": "4fd05fcc-37fa-414f-885c-7d489878cda2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d6f2a179-db58-4ec2-8af6-d4bbcade8562",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc10990e-87da-4218-a1d3-15d507c84cea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0e7a951-8a64-45c7-ac46-42c1baec5d4a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7a44f6-2300-4d0d-9b01-c15c8f058295",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cf0d4e1-a708-4bbf-b4c0-538070a5177e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9106005e-abce-4f67-8447-e5ff12b4284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f000472-d248-4144-980b-571d9a39a0ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e0c24a0-ba91-4838-867c-9bf9958ca939",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "325f3d1c-9fcc-461d-8c95-fcc404ba6860"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4198cc5c-2994-4ca4-86ac-951ce7ae13ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89414418-552b-4de2-a6cc-4b94b74546e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c31df56d-d38f-4017-a001-3fd9df7f6bc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a76c6912-d4af-41c6-9478-c182fb432b7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f283912-8207-42f9-90dd-2c46fab7bb2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b21a52f8-0c34-40df-b22a-b669acd1380f"
            }
          }
        ]
      },
      {
        "id": "c6d4f363-4683-4159-9e2e-1b1b241b9af4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9aef404-ef12-4ac0-8373-de69a71d7de3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a29ad3c-7b57-44bb-9e66-7465415fda4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "30edc729-7f7b-4a8a-b49f-361489d378ff",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b00b5504-9a70-4ded-bbd8-67ff6dd4aa23",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06f17704-b263-45f2-ba6e-826b9b180b67",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.84912280701755,
      "responseMin": 16,
      "responseMax": 4181,
      "responseSd": 356.40309581954637,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698107619484,
      "completed": 1698107660150
    },
    "executions": [
      {
        "id": "2332c928-9820-47a2-bb07-841c29c2ad2e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af8e7a85-de3d-4272-af65-db27ead18e78",
          "httpRequestId": "d93a0cde-9aed-44a3-a42a-0a63927e0986"
        },
        "item": {
          "id": "2332c928-9820-47a2-bb07-841c29c2ad2e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b3ba3499-80a8-41a3-933c-d35050c6d618",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "e0846fa4-58c1-40fc-8227-02a3f649dcf0",
        "cursor": {
          "ref": "4362f9d0-ad66-4ab0-ab93-af9463a11214",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8d694024-b16e-49ef-b30c-638f391bb30a"
        },
        "item": {
          "id": "e0846fa4-58c1-40fc-8227-02a3f649dcf0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "28f7f552-24b0-499e-bc6e-64298dfd6bb6",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "d383bb19-b74b-4770-9dba-961c9bce9dc4",
        "cursor": {
          "ref": "621acdc8-7a57-406f-9efa-5724dbd16038",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ada94b9a-c856-4907-9188-206ad4adef9b"
        },
        "item": {
          "id": "d383bb19-b74b-4770-9dba-961c9bce9dc4",
          "name": "did_json"
        },
        "response": {
          "id": "4d2d23b8-c36a-45c5-a385-4ea4ea6efc07",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c160fb-7115-4bfb-97f2-a768adbaada7",
        "cursor": {
          "ref": "fa3cfed1-2206-46f2-8ce6-b2f53e99bee0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d3a6d21-2e4f-4609-a82a-09e988f3eaf6"
        },
        "item": {
          "id": "30c160fb-7115-4bfb-97f2-a768adbaada7",
          "name": "did:invalid"
        },
        "response": {
          "id": "fab5800a-dfd6-48a5-9a11-a1ff3edfcd59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 815,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c160fb-7115-4bfb-97f2-a768adbaada7",
        "cursor": {
          "ref": "fa3cfed1-2206-46f2-8ce6-b2f53e99bee0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d3a6d21-2e4f-4609-a82a-09e988f3eaf6"
        },
        "item": {
          "id": "30c160fb-7115-4bfb-97f2-a768adbaada7",
          "name": "did:invalid"
        },
        "response": {
          "id": "fab5800a-dfd6-48a5-9a11-a1ff3edfcd59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 815,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac677a16-295f-42ef-af70-025a4b1166cf",
        "cursor": {
          "ref": "0905a5ed-9a0e-47ca-b0e3-e34b75bcd711",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7baee40b-97c3-4223-bfd9-8e5a23b45e68"
        },
        "item": {
          "id": "ac677a16-295f-42ef-af70-025a4b1166cf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d02d4f9b-5462-45c1-b05f-e9cb8e8556c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef578b72-2431-44fe-81ec-8a78be550703",
        "cursor": {
          "ref": "6a0da322-9061-462c-a234-331417ad5d88",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d11f4fb-004d-48bb-9399-0f0ae27e37b4"
        },
        "item": {
          "id": "ef578b72-2431-44fe-81ec-8a78be550703",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f1b34954-3167-4340-b5b1-9a74a455b1f3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f796afac-1d4a-4c90-9516-ce6d1e58f103",
        "cursor": {
          "ref": "3975712d-db32-44bb-9c49-562b6d3b3a34",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c6499d4-adcb-4f3e-8930-f0f27ccf7ac2"
        },
        "item": {
          "id": "f796afac-1d4a-4c90-9516-ce6d1e58f103",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5532e0ce-2f65-4535-87e3-b6196340169f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a468f7-da22-4ef1-a59c-50461da5f7d6",
        "cursor": {
          "ref": "e2e64df3-f328-47a9-bc98-529036409025",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "595a394c-e69a-4f86-9e77-08bfcfb6f28c"
        },
        "item": {
          "id": "55a468f7-da22-4ef1-a59c-50461da5f7d6",
          "name": "identifiers"
        },
        "response": {
          "id": "0a32a782-083d-4f1d-874c-e3974bc7b113",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7f2f00-bdd3-40fb-9e68-4a1d2c63d133",
        "cursor": {
          "ref": "8988b178-01c2-44bd-82e6-40f11cc19810",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4de005df-1f1a-44e0-aa74-348c37d73bc0"
        },
        "item": {
          "id": "6e7f2f00-bdd3-40fb-9e68-4a1d2c63d133",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "35e9abdf-6d51-4d19-8976-bb50899cfdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d38e9b-d3bf-49d8-a294-2f5eb4cd4d0e",
        "cursor": {
          "ref": "b165d2ae-c720-444f-b9ff-2612ac7731d6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "42933fad-f50c-4e7b-b9be-90555a7c595b"
        },
        "item": {
          "id": "e1d38e9b-d3bf-49d8-a294-2f5eb4cd4d0e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "58a4fe7a-3b96-49c2-a57d-1708c7245734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6685b6-bc42-462c-8152-7efb6562d295",
        "cursor": {
          "ref": "747b28e5-0849-44db-8dc9-253bc35a1fa0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "94c52c08-7782-48e9-8b21-ea8ed6bfb336"
        },
        "item": {
          "id": "2c6685b6-bc42-462c-8152-7efb6562d295",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9bc375a1-7c08-4487-84ce-96ad8e73e272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1492da-adaf-44d0-b8b3-6a80ca2a9805",
        "cursor": {
          "ref": "b96b2d2f-cce3-4410-a76a-d44a4eea1be4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fb69d732-53f9-46e5-a587-b9e90f0278fb"
        },
        "item": {
          "id": "9e1492da-adaf-44d0-b8b3-6a80ca2a9805",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "70e9abcd-2f30-43ad-bbe7-13a32552b3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b613b1-acb8-4c45-ba7a-4f4cf5ebfd3c",
        "cursor": {
          "ref": "a9d9d169-4680-46ab-8e75-c1ca83b118cf",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8c5d7662-8656-4e0c-8292-a63173bf5955"
        },
        "item": {
          "id": "d5b613b1-acb8-4c45-ba7a-4f4cf5ebfd3c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "17016f04-6b06-4a9e-8ac7-8da83938f0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71bdcce-1dd5-4f12-9a6c-5979d3d12f09",
        "cursor": {
          "ref": "1d12f172-af9b-4f44-aeb8-ee3479e554fa",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d9ff95f0-38e0-4e98-bdcd-36711a5c4422"
        },
        "item": {
          "id": "f71bdcce-1dd5-4f12-9a6c-5979d3d12f09",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "30c9e5cd-7c41-43ad-ad78-accec9279ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944ec29c-b79f-42a2-84c1-a554ddfa5e7e",
        "cursor": {
          "ref": "3953ce1c-86cb-474a-a3bd-3a2ae8d1ced4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3af1370a-c587-4531-a626-080ebe20b5b9"
        },
        "item": {
          "id": "944ec29c-b79f-42a2-84c1-a554ddfa5e7e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cfe660c8-85a3-4874-a65c-6341f30df465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4aa218-8a27-4f61-b101-c74102e116bf",
        "cursor": {
          "ref": "10be4ce7-d30f-456e-8ec8-7017a15091a5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b20fc799-817a-4a15-96a4-01a223694535"
        },
        "item": {
          "id": "8b4aa218-8a27-4f61-b101-c74102e116bf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "855b4ac7-a4d2-4976-a78d-b36ac0c6a969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2631379-ff2f-4d17-9b5b-2b27276604af",
        "cursor": {
          "ref": "78ccace4-50e8-4089-af8f-999e993f3a15",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "193aa291-7af5-49d5-ad3b-0254c591bac7"
        },
        "item": {
          "id": "b2631379-ff2f-4d17-9b5b-2b27276604af",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a83cbe54-fce9-4f3a-a5a5-96edb49526f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b9a887-295e-469f-8fd4-8ba7d60544fd",
        "cursor": {
          "ref": "54f2ca60-b7a7-4bdb-9bd2-544d278f4f3c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e4a4fe58-b6fd-43cd-a9ab-37eab120750d"
        },
        "item": {
          "id": "48b9a887-295e-469f-8fd4-8ba7d60544fd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5302f27c-7bf7-452a-b93a-905363a859f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197f8a0a-e21b-46a8-8fd1-3322a6110a79",
        "cursor": {
          "ref": "977d07f8-9d6d-43a1-96de-2d96d8873fcc",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "daf97a42-29a7-4e51-be93-5c9692c8f042"
        },
        "item": {
          "id": "197f8a0a-e21b-46a8-8fd1-3322a6110a79",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8828633e-79cb-421b-84ab-b444efb6c118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031511ba-2816-40db-bd3d-58425830af02",
        "cursor": {
          "ref": "f910dbae-1360-4027-8985-3cbd7b7e9b1c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7f4a9514-e027-491b-b8f3-3dcb6085b3c6"
        },
        "item": {
          "id": "031511ba-2816-40db-bd3d-58425830af02",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3ceadffb-61ff-40fb-abca-56406e0137d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6b131f-13d6-4f48-a1e7-7d552a08ac41",
        "cursor": {
          "ref": "f3f7caca-9906-4c5e-bf0d-0ed9558a3b30",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee4d45ee-ee3a-48c4-aa4d-596c2dc3e467"
        },
        "item": {
          "id": "4f6b131f-13d6-4f48-a1e7-7d552a08ac41",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "06a6e7bd-f721-4ede-827d-66d5777752a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5378e63e-c5d4-4e19-8771-6ac355d04c6a",
        "cursor": {
          "ref": "7992d62a-7a4e-4e14-b632-dc94f87630e3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ed142709-394b-4741-9799-05368f58cb88"
        },
        "item": {
          "id": "5378e63e-c5d4-4e19-8771-6ac355d04c6a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26264c0b-29f6-473f-a51d-67474b23631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3339dbf3-ada5-4c08-82e6-9128df16d539",
        "cursor": {
          "ref": "e140f6c2-28fa-4d36-bbc4-f3c1a6cdc3f1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e6fe3343-01c4-442f-841e-1e660e51f247"
        },
        "item": {
          "id": "3339dbf3-ada5-4c08-82e6-9128df16d539",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "da880967-1d5f-47d3-9ee9-40e135a2cd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab10dc0-97a0-4bc3-9e7c-3c31bf4ce2ef",
        "cursor": {
          "ref": "6a90c2b7-275c-45ed-b7ce-5d1dba7325a3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "38071c58-c0e0-47e8-9ac4-308e4e6cd499"
        },
        "item": {
          "id": "bab10dc0-97a0-4bc3-9e7c-3c31bf4ce2ef",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ae7419db-ebee-4116-bb72-6115927fe1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa685a2-0201-4ad8-9797-2687bc7b3080",
        "cursor": {
          "ref": "69dc7db6-55ac-4a3b-b20d-d9dd2df12c46",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c640dcf4-1fd4-4989-b9e3-e5fe37c9a6f7"
        },
        "item": {
          "id": "afa685a2-0201-4ad8-9797-2687bc7b3080",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e3a119fc-eae6-4dd9-9b12-6e850b3c87e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef80c10-6cb0-41e1-b499-1d01f8b38b78",
        "cursor": {
          "ref": "cfbb2bd9-b0c1-4a1c-9576-80494853da16",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6fd5e234-80b8-463a-be04-b4b9133c007d"
        },
        "item": {
          "id": "1ef80c10-6cb0-41e1-b499-1d01f8b38b78",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8acd0d88-c013-4b59-b620-e1721bb642d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9f7127-075f-409d-b153-52bd77bf7533",
        "cursor": {
          "ref": "6119571f-0ca6-4b60-b355-951a6aaa73ba",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53d4e675-c30e-41d8-96b2-17ef646bdf5e"
        },
        "item": {
          "id": "7c9f7127-075f-409d-b153-52bd77bf7533",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8f80e1f4-3613-4d33-9599-eda55d2ec5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e65ad44-77c9-4381-82f1-9af36dafb8a5",
        "cursor": {
          "ref": "705c717d-2d67-4571-9833-dd38d525cd9f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "18acaca6-4a0c-434e-bbf1-36025b54dcde"
        },
        "item": {
          "id": "3e65ad44-77c9-4381-82f1-9af36dafb8a5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b878b961-046f-4440-898a-248dd79c3f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743cf58b-8a0c-4146-aea4-5d2d7d6fe999",
        "cursor": {
          "ref": "61326687-82d0-49a9-8c4b-a8f3364d0dcf",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9d804f01-b943-42f7-a0b7-7b39c2184ce5"
        },
        "item": {
          "id": "743cf58b-8a0c-4146-aea4-5d2d7d6fe999",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "47d71bb9-2865-4421-ae95-327cfd268b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322eddc3-0144-4fae-8279-c0779a89ac78",
        "cursor": {
          "ref": "274fd450-35e5-4dae-80d7-0b97b7643602",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cd940591-2013-461c-a5dc-01eee2b724cc"
        },
        "item": {
          "id": "322eddc3-0144-4fae-8279-c0779a89ac78",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "37992bcc-9524-43b2-ab67-d1e73fe3c150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aada8537-9d5c-49df-b0b0-7015c0188a1d",
        "cursor": {
          "ref": "267a4bde-52c6-447e-9036-3acedd6d494c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "74cc8490-8a42-4e26-8730-fd6ffa707068"
        },
        "item": {
          "id": "aada8537-9d5c-49df-b0b0-7015c0188a1d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "142ee106-65df-4c03-a898-bd046e41006f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8270d477-d817-4827-a47f-3617e587b3ac",
        "cursor": {
          "ref": "206e0f53-3115-4c13-ab88-a341cef4cdf8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e83f103d-151f-4738-9605-b4cad25f1c8a"
        },
        "item": {
          "id": "8270d477-d817-4827-a47f-3617e587b3ac",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "978d1514-6c4c-41d3-a999-e7cc4e7cc6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c566ce9-0b29-4104-b4c1-a8409d644a43",
        "cursor": {
          "ref": "a6ea1e8b-fc17-4dfd-b48d-6c0bc060d6b5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "95cc620d-8088-4792-9a5e-e44758193cdc"
        },
        "item": {
          "id": "6c566ce9-0b29-4104-b4c1-a8409d644a43",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "becf1b16-ea8d-455f-8fc7-0d9b14ea0b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af82ac-3657-4647-a4de-89134e43779c",
        "cursor": {
          "ref": "faed32b7-5d5c-42c6-a428-0f185df67dd7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4c0e0689-e00c-4d32-9595-d514a298864f"
        },
        "item": {
          "id": "21af82ac-3657-4647-a4de-89134e43779c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "61b3b3f2-e212-41b3-871b-f3d5b12113b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6978deea-6352-4dbe-ae0f-3b0e75d37e4e",
        "cursor": {
          "ref": "73192b93-dfac-4c8c-a01b-36ea907111b2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "304f5c87-820a-40dc-a447-472b62a03b2b"
        },
        "item": {
          "id": "6978deea-6352-4dbe-ae0f-3b0e75d37e4e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "121a4055-ebaa-4c7c-b65f-f1f260b24822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42065a-6afd-48b0-bb30-c69c60bc77ee",
        "cursor": {
          "ref": "b155d902-6b24-4541-ab72-dd352a9ee91f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0f8483de-d486-4e65-87ce-3eac1e919f64"
        },
        "item": {
          "id": "3b42065a-6afd-48b0-bb30-c69c60bc77ee",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "52db3528-c7c3-432c-ab3b-393f3548b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ae00cf-1a17-4f66-ad5b-67941c0e744f",
        "cursor": {
          "ref": "df3714b7-543f-45d0-9429-841d00ac7cfc",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4dee17c4-01cd-4f02-8c76-0146e665fa0d"
        },
        "item": {
          "id": "f8ae00cf-1a17-4f66-ad5b-67941c0e744f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "105cd49c-cce2-40b7-9ff8-09b71a991349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00396b27-16c9-44af-bcfe-22de9762d84b",
        "cursor": {
          "ref": "42fc2314-bf6b-4ca1-b5e1-0d685f4f3f1d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "886e8171-d2d7-4960-93ca-8f3721afa03d"
        },
        "item": {
          "id": "00396b27-16c9-44af-bcfe-22de9762d84b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "adfee159-fbe6-4a43-ad87-c436b7cbe021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438f8aee-f9ac-489d-90c9-3f8487656a18",
        "cursor": {
          "ref": "1a924acd-37e3-458f-9d47-658335fdc0e0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c1da81b0-d051-45e4-ac69-799365722cf5"
        },
        "item": {
          "id": "438f8aee-f9ac-489d-90c9-3f8487656a18",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d8253f6-bec6-4d9e-b338-7da371069306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbd0a42-88d4-4bf7-a9b9-4993425c2c31",
        "cursor": {
          "ref": "d996ebbb-bcb8-4698-862d-1e627099919a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4188e894-650d-4d48-94e2-b91e632d0dad"
        },
        "item": {
          "id": "6cbd0a42-88d4-4bf7-a9b9-4993425c2c31",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "30368246-4e03-4cdb-aa6b-c5dc5c27c38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8473d268-c224-4c9a-88d3-206457dbea1e",
        "cursor": {
          "ref": "7772829d-f3e2-45d6-be8e-f9440bd3ce1a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0008e65d-5494-4351-bf13-bd1e735af41b"
        },
        "item": {
          "id": "8473d268-c224-4c9a-88d3-206457dbea1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "40b0e8d3-199c-4818-ba1f-fb3964806293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86728a88-947c-4f3b-b727-7949bb37aa42",
        "cursor": {
          "ref": "4bd1e365-0f4d-4cbe-8349-57c4c9edbdd5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ef20a1b3-4b5d-4a45-ab2e-2f061da539e8"
        },
        "item": {
          "id": "86728a88-947c-4f3b-b727-7949bb37aa42",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47e1e825-50fc-4329-a855-138040d5d454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e80314-5713-4d0e-84b7-4cb1a01422cb",
        "cursor": {
          "ref": "f175a077-2471-48bd-a189-745bbeab1638",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "73b3817e-6592-421c-8009-8ab6900c5347"
        },
        "item": {
          "id": "c8e80314-5713-4d0e-84b7-4cb1a01422cb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b3575808-0996-471f-9b5a-0acffee58e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113dd4b-6a87-45c5-9db7-bb9061b3e699",
        "cursor": {
          "ref": "220de895-c56b-432d-ab50-dd95df19800d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ca653449-c5fa-4b29-9bf5-55cba4c191c5"
        },
        "item": {
          "id": "8113dd4b-6a87-45c5-9db7-bb9061b3e699",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "09601130-7dcb-4c65-bc57-2358efcf59e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7873a97c-37c1-4669-bbed-ae554c0aa63f",
        "cursor": {
          "ref": "f978e0f9-fd5a-433b-a75d-21a08ffb997b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6b91f1d8-34eb-42a5-92af-073aa0eb2672"
        },
        "item": {
          "id": "7873a97c-37c1-4669-bbed-ae554c0aa63f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5b6a66ac-2470-4426-b91f-579b2ca51eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e7bd8e-899b-467e-87c8-ec801e864b66",
        "cursor": {
          "ref": "09a27a7a-c26b-4f8a-8cc1-aadb76f40e2a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ee1549b7-74f7-42df-ba91-ae218b0a0a0a"
        },
        "item": {
          "id": "e1e7bd8e-899b-467e-87c8-ec801e864b66",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f15e486b-d3df-411e-bd8b-26c2e6786b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e29b944-4334-4b74-84f5-d42d17fc846c",
        "cursor": {
          "ref": "26e844c7-e63f-4a01-b28c-1af95ac4b450",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5558d7c5-fa96-445b-8d79-9f35dd0bb368"
        },
        "item": {
          "id": "1e29b944-4334-4b74-84f5-d42d17fc846c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8e7c5d2b-238e-46a5-8730-77ebd26c6170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6151cf5-4e7c-4a2c-b0b8-2475bdb8cd73",
        "cursor": {
          "ref": "1c806d5a-186f-4159-aca7-52bdb5d98fbe",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1c722e3f-4d0b-47e5-bfdc-6fac15ec0d66"
        },
        "item": {
          "id": "f6151cf5-4e7c-4a2c-b0b8-2475bdb8cd73",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f8313212-a025-4fcf-8a8f-d9fd6ccab970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d23e2e-fd85-4404-8a37-eb334ab461ad",
        "cursor": {
          "ref": "40910c2d-8aa6-4834-a1ec-263c04e62986",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "567fa55a-2dfa-4713-9ef3-07d7ed1a62ec"
        },
        "item": {
          "id": "03d23e2e-fd85-4404-8a37-eb334ab461ad",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "469edd4b-2a19-4acf-a87a-da5f6c55294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463af845-c0ac-4734-9b7d-03f591ebf2dd",
        "cursor": {
          "ref": "0e77fb11-2052-4150-8a41-e3f691739a2f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e3dce903-ad75-4cbb-a3ab-9fc6fb9af403"
        },
        "item": {
          "id": "463af845-c0ac-4734-9b7d-03f591ebf2dd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c01a564f-f251-45d8-904a-5f8424554b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049f5c32-dfba-46b8-accf-8ae1a7adae45",
        "cursor": {
          "ref": "13033602-6ca2-4817-a257-c6f7a03b43de",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fff7580e-3d83-48d7-80df-5474ce22596e"
        },
        "item": {
          "id": "049f5c32-dfba-46b8-accf-8ae1a7adae45",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "40cc1a23-d408-4e20-8196-8be3af6e6054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e949f2aa-3998-4839-aead-944fc221a6ee",
        "cursor": {
          "ref": "ccca5b39-bc39-4a9f-87a6-6eb233734cb0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "886c4c02-df05-4d29-a9fb-5c34ceb116e3"
        },
        "item": {
          "id": "e949f2aa-3998-4839-aead-944fc221a6ee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "088c5b80-f3be-4231-bbbf-e61f4b3e98e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5cb03d-a293-4932-aa78-317544eb24d8",
        "cursor": {
          "ref": "657e0cb8-70b3-4801-a97b-f87602668263",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2771c322-e331-47d8-84c0-369753b55298"
        },
        "item": {
          "id": "4e5cb03d-a293-4932-aa78-317544eb24d8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "daa1eb90-9157-45c3-ac11-ae027a481ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f97956-c902-4dc7-8e91-fbb8bbf7faeb",
        "cursor": {
          "ref": "f1a2adc4-4fd5-4ac9-83d3-1ff9b8eec75f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "552ceaf5-bfd5-49cf-9b59-2060e521f031"
        },
        "item": {
          "id": "56f97956-c902-4dc7-8e91-fbb8bbf7faeb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c7dca398-85bb-43e1-8c72-2465e8730f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fb58cc-ac70-4ceb-a973-0dd64424d78c",
        "cursor": {
          "ref": "5b742829-6a4d-4f12-9dd5-bffd0d0edb26",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "201fa52f-5c5b-4d51-8792-4897dcadb646"
        },
        "item": {
          "id": "06fb58cc-ac70-4ceb-a973-0dd64424d78c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "80d28f2b-80c8-49c8-b847-a5f353c2f6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d248d43-d21c-46b0-8448-f2634887d675",
        "cursor": {
          "ref": "7a9c68e4-a1fa-4944-a35e-7fea9a204590",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5f85d6ce-b495-45c9-8bdc-6a25693e1671"
        },
        "item": {
          "id": "1d248d43-d21c-46b0-8448-f2634887d675",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7d4ab3d7-a0dc-4f49-a8d2-8208a19834e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb8f6b4-a3a7-4bb1-9a39-edf51bdaf7a3",
        "cursor": {
          "ref": "ca847648-4dae-4261-b340-f57d5e976d76",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "20bbc315-7593-4c1a-9c35-737dc447ea0c"
        },
        "item": {
          "id": "2fb8f6b4-a3a7-4bb1-9a39-edf51bdaf7a3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9c9fc739-1d8b-421d-93be-aa89ae16fb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65edbf2-238d-44e2-8df2-5cef486098c5",
        "cursor": {
          "ref": "d9cd1189-29b6-43a5-ba89-12947e45fc59",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5edb02ec-00e1-43f6-896b-7835f8e89ee8"
        },
        "item": {
          "id": "f65edbf2-238d-44e2-8df2-5cef486098c5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4a31522c-6b77-401d-af91-db149e842574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37da6493-5065-4898-ae54-06f5ac7396d4",
        "cursor": {
          "ref": "51246872-3a5f-41a6-82e4-982ad4cb3c02",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32a5eba1-5762-4ed6-b44e-34112c7e8ad5"
        },
        "item": {
          "id": "37da6493-5065-4898-ae54-06f5ac7396d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4a0c59f-5a88-43e2-a681-7c65164cd2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87780bab-f965-40ac-81e7-00c6620dc1b4",
        "cursor": {
          "ref": "4e3f805e-8cdb-41de-b963-b90bc3e4c941",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "59680e95-361c-4b50-a015-c8ce619e7bea"
        },
        "item": {
          "id": "87780bab-f965-40ac-81e7-00c6620dc1b4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7ce218d7-3ae4-4357-b231-20ab9a982284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598acd91-403d-4956-9d54-ce71bd58ec66",
        "cursor": {
          "ref": "fb9778a4-3fb0-43de-b6dd-71218ea1f44c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "159bc6d5-fd98-4399-8f03-06c77db529d6"
        },
        "item": {
          "id": "598acd91-403d-4956-9d54-ce71bd58ec66",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "067e8b7c-5408-4e57-9432-1ee6599a70b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75d3e37-6756-4ecc-bf15-529fa7ad1914",
        "cursor": {
          "ref": "b3de3356-c099-48b7-a9fc-d4ca3cef6c39",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6920bd14-efa3-4986-ab97-2ee7485ec977"
        },
        "item": {
          "id": "e75d3e37-6756-4ecc-bf15-529fa7ad1914",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f4299f6a-084d-45ae-95eb-a5ab89212548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74d8313-4bbe-4195-9025-cae19fb44b28",
        "cursor": {
          "ref": "a4360e56-464a-4d2e-8be4-526dfb4c5318",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d555924d-b5f3-4954-88e2-17eb646692dc"
        },
        "item": {
          "id": "a74d8313-4bbe-4195-9025-cae19fb44b28",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "166c5955-e8d7-445c-a6bb-d2f1adfef721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa1ccc4-ee48-44ef-b33e-128204032458",
        "cursor": {
          "ref": "e2b4c3a5-886e-46e1-af0a-022b56dd78cd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "21418bc8-ba29-44ca-adaa-5dad8b921365"
        },
        "item": {
          "id": "4fa1ccc4-ee48-44ef-b33e-128204032458",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b7a95865-2d1e-4d3a-8488-99882eff12aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6323cfde-1c5d-4339-9982-a2d5a4acb57f",
        "cursor": {
          "ref": "66c9af14-0afa-47b5-9cde-d5802ed0e7f1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2187af5a-985e-4189-bcc8-9f6f2771db32"
        },
        "item": {
          "id": "6323cfde-1c5d-4339-9982-a2d5a4acb57f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2c727908-b8b3-402a-b850-dcae7fa87da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6f37f8-d63e-4e1b-b8dd-3b7ced16d0fd",
        "cursor": {
          "ref": "490c4ab4-8f01-4f29-8f10-0ca9b929af68",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6e4a2c29-8c32-442a-b911-3bc06949c344"
        },
        "item": {
          "id": "de6f37f8-d63e-4e1b-b8dd-3b7ced16d0fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cbee6e98-e1de-443c-951e-e8e9ebe6fd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efc029d-6064-4385-9eff-d2420adfcef6",
        "cursor": {
          "ref": "bf0b4f99-6682-4d1c-88d9-8c4138508718",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3b3d3c2d-67c7-4658-86ae-0dcba39f79bf"
        },
        "item": {
          "id": "7efc029d-6064-4385-9eff-d2420adfcef6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c09594fd-521e-4f4e-8688-2343dc518ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b3c62-9cce-4ac4-beb5-9933c8759aaa",
        "cursor": {
          "ref": "74b92fb3-19f9-4d58-9010-203dba3b9103",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "62153e98-2581-487c-8e9a-48a7ad7987d5"
        },
        "item": {
          "id": "5d8b3c62-9cce-4ac4-beb5-9933c8759aaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "57c49ac1-cf6b-4608-a232-d6435bd2b392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad5f81e-5c9e-48b2-acbe-827441861321",
        "cursor": {
          "ref": "c397e1dc-cc29-41fd-b320-a40ff2da9fe1",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1bd06b73-feb6-4d79-8dd0-878cae2931e7"
        },
        "item": {
          "id": "aad5f81e-5c9e-48b2-acbe-827441861321",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e822c6dd-a4e6-44b7-b5d2-333ef2f0423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b33e68-be6d-4254-a589-21e72eb1bc9e",
        "cursor": {
          "ref": "b7b90d36-bac0-42d6-a711-7612f369fec2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "40386dd1-fd9c-484f-8fa8-8b297e6bab4e"
        },
        "item": {
          "id": "e7b33e68-be6d-4254-a589-21e72eb1bc9e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "912e11b2-78e1-4cc0-bf7b-ad87735bc1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baedfbc1-6dee-4637-8784-21b007edebc0",
        "cursor": {
          "ref": "5e4eeb35-7968-4633-bf5e-cff743a2f487",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "84b42791-c104-4ebe-9d0c-60c6d895a515"
        },
        "item": {
          "id": "baedfbc1-6dee-4637-8784-21b007edebc0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "53beff0e-1432-4713-b35d-2cbe06039aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa942cb-6452-492c-87e0-5033e6d670f3",
        "cursor": {
          "ref": "2d3aebdc-fc33-4262-9952-317c2bd0a1ea",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a059a1c0-98ec-4c8b-8e16-d0d1a589939e"
        },
        "item": {
          "id": "6fa942cb-6452-492c-87e0-5033e6d670f3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4cbaadf5-e169-4b98-b198-85a768676f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06db082-0d22-4746-a12a-a190fe2e55a6",
        "cursor": {
          "ref": "0ce124cc-1247-4f2b-ad61-562eb4193ca9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7836d45e-b44f-4059-ba1a-12fb4c321c95"
        },
        "item": {
          "id": "f06db082-0d22-4746-a12a-a190fe2e55a6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "010e859b-5449-4a3b-895f-5914afb2d0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5134ebf-ca82-4f34-88fb-90da564a8edd",
        "cursor": {
          "ref": "c38fc4f0-b4ef-4e5d-8147-f4ab29a9dbe3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b999cfca-6fb7-4953-b35e-28abd89520ad"
        },
        "item": {
          "id": "f5134ebf-ca82-4f34-88fb-90da564a8edd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a8f74f1-aa7a-4064-a9fb-0ab19348ed94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7c631e-5413-4288-81d8-1a60e4a2474a",
        "cursor": {
          "ref": "a7fcc989-3dbd-4963-a50a-54b0ddfd1f54",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea7756ee-4129-4849-97f9-7173672a15f5"
        },
        "item": {
          "id": "fa7c631e-5413-4288-81d8-1a60e4a2474a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "367e10be-4df4-4e0e-b091-d5eea0cfdba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacbd4bd-34f8-409a-933a-f3620c731531",
        "cursor": {
          "ref": "faa43f9b-8555-41fb-a7ce-666b4af4cf28",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ca3601aa-fbf9-40d3-a008-8da0ba361faa"
        },
        "item": {
          "id": "aacbd4bd-34f8-409a-933a-f3620c731531",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4481aa99-458f-4ec9-9701-db907c38e42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae30a8e-c2de-433b-8508-c7e3bf75ed47",
        "cursor": {
          "ref": "fb38724f-57af-4e53-8edc-09191e7639d7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3e25f897-39f7-4cfc-92bb-0d00c89a9ed5"
        },
        "item": {
          "id": "8ae30a8e-c2de-433b-8508-c7e3bf75ed47",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7a11b2ed-9a38-4678-a9e6-aa3f14d7a723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f941a70a-a690-4ae6-b8dc-d4dd403efe74",
        "cursor": {
          "ref": "6f41347a-f1b5-46e5-bf51-a0032d39ae42",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c81e89cb-36ff-42e8-84cd-3a9381f32bcb"
        },
        "item": {
          "id": "f941a70a-a690-4ae6-b8dc-d4dd403efe74",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b23dc886-ea06-4858-8dc3-b4a8aaf43583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcaa57a-c5d9-4120-a742-a9e5450f1f7c",
        "cursor": {
          "ref": "224d8ca7-c506-43cc-ba7a-fc48c405e4d1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aec230b8-3587-4bb6-9c14-98aaade05703"
        },
        "item": {
          "id": "adcaa57a-c5d9-4120-a742-a9e5450f1f7c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e4f75d85-938d-4fb9-937d-767438fae1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bfa525-3f45-4229-8025-d772ae47970a",
        "cursor": {
          "ref": "b80ff53f-6bb9-4575-bfd3-5c24247b1cb0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e7b81e41-428f-4e8e-91dc-5cb5b1f2fa78"
        },
        "item": {
          "id": "88bfa525-3f45-4229-8025-d772ae47970a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a94e4824-a4aa-491b-8726-9c903b6677d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7609536f-6283-4bf7-9376-060971a9900b",
        "cursor": {
          "ref": "d21717e8-6dcf-460f-ab66-93bc32cfc086",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c0a9db46-12d0-4be3-b3fd-3b6cae54af4d"
        },
        "item": {
          "id": "7609536f-6283-4bf7-9376-060971a9900b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "756632a6-11db-4d31-8d8a-7ed1b3b7cd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc587f43-5c23-4f07-928d-d7167dbc33af",
        "cursor": {
          "ref": "b2b5df63-da2f-4b1f-9e3f-84506b1da57c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "993cc299-6f6f-4569-a474-4f61a06b7e64"
        },
        "item": {
          "id": "bc587f43-5c23-4f07-928d-d7167dbc33af",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fdcc8cd1-1978-4118-a7cb-9065fb91df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c460dc27-926c-4d7f-a020-0e8bee390911",
        "cursor": {
          "ref": "c5ff32ca-975a-4907-a535-cbc8ef5349af",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a3944d9b-1d7b-4e96-b25b-c20b791407c2"
        },
        "item": {
          "id": "c460dc27-926c-4d7f-a020-0e8bee390911",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "78283ba5-7538-42b6-9b05-7cb3038b31d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b82544-adac-45c5-8483-c4a81c47be4a",
        "cursor": {
          "ref": "905fc139-6e8a-4056-84c1-7b350fef63f3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a8b3f747-3cc3-4b08-ae2e-21e0a7aa40cb"
        },
        "item": {
          "id": "b0b82544-adac-45c5-8483-c4a81c47be4a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "454f0290-4527-409e-8412-610d05e106ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed899f9e-f752-4427-b93c-fe2100c5fa2c",
        "cursor": {
          "ref": "f878be09-8986-4791-9f88-acffb7f3b55c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "585532cd-ce72-4c04-a3d8-7c0ec9e7ba3a"
        },
        "item": {
          "id": "ed899f9e-f752-4427-b93c-fe2100c5fa2c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "83a3582f-4c75-4445-bfad-38d8eb806631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308fcbb2-abce-4ed7-bc3b-45df3f3c40ff",
        "cursor": {
          "ref": "bf7a0b26-78aa-424b-bf00-8ec072bef63c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c61db2de-22b8-4efe-871f-dac3e20bc842"
        },
        "item": {
          "id": "308fcbb2-abce-4ed7-bc3b-45df3f3c40ff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ee468eaf-5a2d-47a8-a33f-bee31221e5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807d1026-40e9-4e2d-93e9-1267fea70cbf",
        "cursor": {
          "ref": "fcd83411-57ad-4c4a-95e3-c5a638b245ae",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5e3160ca-b4af-4d4c-8e54-1cf07773086e"
        },
        "item": {
          "id": "807d1026-40e9-4e2d-93e9-1267fea70cbf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4272140b-8799-41de-8da3-d78ddb1112ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d82d0-b206-4a2e-96e3-78907bbde45a",
        "cursor": {
          "ref": "c115b9c6-43f8-4762-b13d-51c3c4c6f057",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c7821110-73b0-4aec-92d8-be7011f82a08"
        },
        "item": {
          "id": "042d82d0-b206-4a2e-96e3-78907bbde45a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5a685757-3265-4ffe-acce-2a31e3368f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc21766d-cec8-480a-ba77-3c70e9fcfff2",
        "cursor": {
          "ref": "eca5d91c-53f4-4f1c-b08b-8fcbc0b4a61f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7e882d38-62a2-4628-baf2-a1b5a20e9f35"
        },
        "item": {
          "id": "bc21766d-cec8-480a-ba77-3c70e9fcfff2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c4df0f7a-2641-409c-b7d5-d0fe4a6146dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478e21a8-f1f1-46c7-a20f-355f268443da",
        "cursor": {
          "ref": "83c1bf8a-39f9-432b-8c98-55904afa6693",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fa3f649c-068b-46f3-925b-a170810936a9"
        },
        "item": {
          "id": "478e21a8-f1f1-46c7-a20f-355f268443da",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cfadefba-eaac-4d2e-8597-f0bcd3e9d376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40c1498-ef3e-4357-a1ff-451f4bb82829",
        "cursor": {
          "ref": "77b20ee7-bf70-468e-9588-6a0d9bcad263",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "314fe4ec-5c4a-4d22-bc40-8844a0088f61"
        },
        "item": {
          "id": "c40c1498-ef3e-4357-a1ff-451f4bb82829",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "060bc841-8343-4340-984f-bb69f7173e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d93029-d41f-4050-a32c-fee150b57afd",
        "cursor": {
          "ref": "c5f0730b-f60f-4ed3-a36c-621ffdc75307",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7209040d-80de-402f-985c-caaf52345bc6"
        },
        "item": {
          "id": "98d93029-d41f-4050-a32c-fee150b57afd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "721bfe8b-28e5-4b7b-8e63-3ea1dbe3659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bcb386-b75b-45de-b7ad-da8f0d288a4c",
        "cursor": {
          "ref": "47fcd7e6-4457-4621-a2ec-0646cabff941",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "53a72e2d-d2c3-41ab-9e18-c9163a8fd86b"
        },
        "item": {
          "id": "a8bcb386-b75b-45de-b7ad-da8f0d288a4c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "77a6788c-b38e-43e1-b3d5-3bb39c25f227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e3509d-4f68-4238-894f-0367f8ce0895",
        "cursor": {
          "ref": "6678b89b-5073-4706-9289-98d3af71edbd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "070fdb9e-6966-4071-b350-af349ede895a"
        },
        "item": {
          "id": "65e3509d-4f68-4238-894f-0367f8ce0895",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "abad8297-d56c-49f8-a28a-29a7863002d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a5e705-c7bc-4e9b-b65f-d5bc59db1350",
        "cursor": {
          "ref": "d18e3c3d-ce57-4f01-85cf-68603e2b6f86",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d21fa595-0773-4b11-a086-ee9a69652d43"
        },
        "item": {
          "id": "40a5e705-c7bc-4e9b-b65f-d5bc59db1350",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "87f29b2b-a91a-4348-8d9a-155b35989575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a9fa1-3400-4ff9-8915-23330e41f008",
        "cursor": {
          "ref": "6952c347-c016-437c-98e3-c5be146d0731",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "897d11f3-f15a-4287-b9a6-a4a82178c886"
        },
        "item": {
          "id": "355a9fa1-3400-4ff9-8915-23330e41f008",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f5cb9f36-77c2-452d-80ae-c0a80f9444d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b56e1f-ba4a-4f27-9970-3579dc7e24e8",
        "cursor": {
          "ref": "8cd523dd-d61c-4e73-bd9c-95cbd9c74a95",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "381e65ad-d9fe-470a-8e49-b495112f2de3"
        },
        "item": {
          "id": "20b56e1f-ba4a-4f27-9970-3579dc7e24e8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e46621ff-bb5c-4f71-aa25-ff09c1b43d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364c1856-c28b-445d-b2e8-08aed37cf117",
        "cursor": {
          "ref": "224b4dce-3913-48ca-9a3c-70e4c191c412",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "364aea10-2138-4d49-af03-337c6d18e277"
        },
        "item": {
          "id": "364c1856-c28b-445d-b2e8-08aed37cf117",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7a4f0a14-3720-426b-aefd-acc211a5f2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e0a5d9-4707-40a6-acc6-ae1bbc872032",
        "cursor": {
          "ref": "00595a79-735c-498f-8a45-6e219481f71a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "35eb6e7c-1c8d-4d57-90d3-ef0c38b5234c"
        },
        "item": {
          "id": "83e0a5d9-4707-40a6-acc6-ae1bbc872032",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d23a1481-1308-4173-9fd5-4601d219cfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ebbf56-1e76-4a6e-8793-cee50d5cf8e6",
        "cursor": {
          "ref": "0979472c-c267-465c-9d8c-f6711deed6f4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a2f11c2d-ef1c-46df-bd9f-8f06e0f2d85b"
        },
        "item": {
          "id": "43ebbf56-1e76-4a6e-8793-cee50d5cf8e6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a86e6e5-478a-4d16-a0ac-fec273f806b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f80346e-9e56-4f37-9630-668300f9b8b6",
        "cursor": {
          "ref": "604a8b3c-4ccf-4c78-bd10-30b2710973f9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a90585e-7049-4e72-8e6a-71300dc89f43"
        },
        "item": {
          "id": "6f80346e-9e56-4f37-9630-668300f9b8b6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3c58237a-5db3-4a3f-940a-f15a0a8c928d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d814c4-ef43-4085-9e7c-9f155a107efb",
        "cursor": {
          "ref": "d9ef9a3c-ba95-43df-bb53-ccad92932783",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8995dad-b96c-4645-aed1-5cd8ad2da39c"
        },
        "item": {
          "id": "68d814c4-ef43-4085-9e7c-9f155a107efb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b89f02bf-d155-49e2-8ee2-910d7747333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "621f55c7-5940-4b2c-93c1-e2863e68015b",
        "cursor": {
          "ref": "320d856c-9371-49d3-b1ca-9e46c339cbd7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "05451d8e-8ac9-4794-9347-e643a74b7ff9"
        },
        "item": {
          "id": "621f55c7-5940-4b2c-93c1-e2863e68015b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8466d259-08be-40e4-bdc7-e5df6dcfac27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a25ea208-00b2-401b-acdd-9ed2ba8c52d7",
        "cursor": {
          "ref": "0cc3124e-f506-4d8c-b1f7-fabf126f6589",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "763661c4-b774-4cf0-b627-856359a03039"
        },
        "item": {
          "id": "a25ea208-00b2-401b-acdd-9ed2ba8c52d7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "061e8124-fa9d-47f2-b916-0430ceec43b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a5995300-cb9b-4812-a4c8-8ffbd8633ca4",
        "cursor": {
          "ref": "65115331-6f12-44b3-be4b-42486245cd91",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4c69819c-cb0e-4bb7-bd03-45c85f460723"
        },
        "item": {
          "id": "a5995300-cb9b-4812-a4c8-8ffbd8633ca4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd92353b-5cbb-42e7-8708-06f8c00d2041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ac26f18b-519f-4c8b-a3e0-bd3c2cba5457",
        "cursor": {
          "ref": "0f7745d5-3fc9-40cc-b276-93c47e50db4d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1461582-3790-42ae-bce8-03c5354cab30"
        },
        "item": {
          "id": "ac26f18b-519f-4c8b-a3e0-bd3c2cba5457",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a4362b0f-e31a-477d-b195-69d32af1ff63",
          "status": "Created",
          "code": 201,
          "responseTime": 4181,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fc933d-b6b5-4231-801d-be6891bda23f",
        "cursor": {
          "ref": "ee446092-2944-4b20-a9a9-b2236b966101",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6765f1bf-3b7d-43f9-884f-03fdc87d36f9"
        },
        "item": {
          "id": "b5fc933d-b6b5-4231-801d-be6891bda23f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aa8240dd-4eac-453d-bb4d-9ece1e692bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "beae3570-c54a-4f64-aa97-596a61d9cb59",
        "cursor": {
          "ref": "2ab20609-cdff-447f-bf6c-cea0d63c7791",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4f1cc92f-ad50-43b9-ba23-726a370ab616"
        },
        "item": {
          "id": "beae3570-c54a-4f64-aa97-596a61d9cb59",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "df8ee2bc-d2f1-44c3-9f0c-d4879e2e8770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e526dff4-216a-463d-936d-93ecc7ae8af6",
        "cursor": {
          "ref": "509553e4-3d80-498a-949a-22f84a8a1baa",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c85d3dcd-1085-4bd2-ab59-e352034974a1"
        },
        "item": {
          "id": "e526dff4-216a-463d-936d-93ecc7ae8af6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "06808a30-20e6-45bd-9785-cfe6f053b820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7149018-539d-4264-a664-43f87d4ba88d",
        "cursor": {
          "ref": "4c0b06dd-85c2-46da-a860-fb63addfc9b3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2370e0fd-7ea2-45a8-9975-d83e8df6e2c0"
        },
        "item": {
          "id": "f7149018-539d-4264-a664-43f87d4ba88d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80af1e21-2524-43aa-accf-54722d2962df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac3afb4-772b-4037-82dc-731a12a9ee63",
        "cursor": {
          "ref": "d4b02068-f457-4030-ba91-9354d6a71fe9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c8b3ec87-52d8-4c7f-9133-81adb289da83"
        },
        "item": {
          "id": "eac3afb4-772b-4037-82dc-731a12a9ee63",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e13f0dc9-979a-44d0-be1d-5259d0e8912a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeae8b9f-647b-41d2-b426-17ab7ac65ba3",
        "cursor": {
          "ref": "1a50b676-9405-4752-b0f9-1aa2ed4553ce",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3bcb9433-6036-45da-a126-2afb314f143b"
        },
        "item": {
          "id": "eeae8b9f-647b-41d2-b426-17ab7ac65ba3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3b615a8-fdb0-4ec4-8533-65d6de6080c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175ffe6b-7d39-4dc9-81dc-6170c751e4f4",
        "cursor": {
          "ref": "412cec7e-17a3-45ff-ac3d-24aaeb2359c6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "85b030c7-8372-44cb-845e-6bfec1e1014a"
        },
        "item": {
          "id": "175ffe6b-7d39-4dc9-81dc-6170c751e4f4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "30c14c01-71f5-4111-8d17-b71e6066fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5433aa74-ba9d-4451-a181-250bc96d51ed",
        "cursor": {
          "ref": "c5b22105-1528-4e3f-9603-6e6a935131e4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "272cacf6-6173-4db0-ac1b-e94c6ad3dcc3"
        },
        "item": {
          "id": "5433aa74-ba9d-4451-a181-250bc96d51ed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c4e22582-1fbd-484b-b184-58a0b8a1a53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74e7d23-ccbc-4a40-bdae-0be25c3a83a3",
        "cursor": {
          "ref": "37bfbb16-609f-449b-973d-a52e2b4ad582",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "09b4dfcb-f737-4c2f-b59f-1d4245440e1a"
        },
        "item": {
          "id": "e74e7d23-ccbc-4a40-bdae-0be25c3a83a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b5e39647-dc0e-4f75-b521-d581821c577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e9da31-6836-4ae4-9b91-a34f156cb1ac",
        "cursor": {
          "ref": "44349118-54b9-449d-9275-6b9973c572e0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8741d792-6635-422c-927f-27929905d9af"
        },
        "item": {
          "id": "f4e9da31-6836-4ae4-9b91-a34f156cb1ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2e1fcd23-3478-41c8-a6d7-feccb0360b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a29d1c4-3b25-4b31-a2ce-5797ced589d0",
        "cursor": {
          "ref": "2ac570a3-ed13-4ac0-9bc3-dd1cd5c422e2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b0676736-1e5f-48b6-a57c-4d5f388a1604"
        },
        "item": {
          "id": "0a29d1c4-3b25-4b31-a2ce-5797ced589d0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8debfff6-13e8-4ec4-a5a0-dc652a20fef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887786f2-e4fa-40a9-b95e-f72f068c1aa9",
        "cursor": {
          "ref": "c053be72-3fd2-497e-a912-f0ccfefaf753",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "14905d47-aaaf-44ac-aef1-1993a957a13d"
        },
        "item": {
          "id": "887786f2-e4fa-40a9-b95e-f72f068c1aa9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3fcbeb5b-a1b8-4205-b20b-965724ee426c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15692f-1a24-4d04-8a60-fb8066ee16cc",
        "cursor": {
          "ref": "1daa758d-aa71-4b80-a048-d6572309a33b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c14997c6-4a9f-473e-b22b-446d35499e87"
        },
        "item": {
          "id": "7a15692f-1a24-4d04-8a60-fb8066ee16cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4e6d45a0-b2c0-4029-95e3-80f097996238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb755879-7a77-4c97-a4fb-0ccd445a7260",
        "cursor": {
          "ref": "37ac56f5-e116-46d7-bbac-cbb21fea4512",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c0920339-d0a5-48a6-b0b3-56e9d2d674e7"
        },
        "item": {
          "id": "bb755879-7a77-4c97-a4fb-0ccd445a7260",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cbc85c11-05e8-4477-8f28-eb38f9287449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc1c61d-a805-479f-91c3-1c7f89bf957e",
        "cursor": {
          "ref": "fce625ac-5f51-4d9f-801e-5263476ab110",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "59c2dcda-099d-4783-93ed-fc537a75bd9f"
        },
        "item": {
          "id": "6bc1c61d-a805-479f-91c3-1c7f89bf957e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0990eea6-e16e-4f2d-9504-df8aa7dada23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7408ec31-1c9d-462f-a236-6b81c6c2d179",
        "cursor": {
          "ref": "583d5dcd-9d87-41b1-95a4-3bc6e3044af8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ace71d46-81c5-4c53-81ca-e7b365db9a92"
        },
        "item": {
          "id": "7408ec31-1c9d-462f-a236-6b81c6c2d179",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c56842b-eb66-40d2-b68a-50fdb5bd48f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07dd55-4916-4bd9-bef3-047d26eed658",
        "cursor": {
          "ref": "809d061f-ecb4-4836-9479-7404878625d6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "84481bbd-6fcb-4975-ae11-27f8b920890b"
        },
        "item": {
          "id": "1a07dd55-4916-4bd9-bef3-047d26eed658",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "20a51fc5-eb13-4b17-995a-0f47e5dc4a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305fa34-94f4-4967-b9a4-03b7e068640e",
        "cursor": {
          "ref": "f982d07e-34c7-41a1-bd96-e61bcb91caba",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "182ac5af-3882-4bd0-844b-5f686a696bbd"
        },
        "item": {
          "id": "a305fa34-94f4-4967-b9a4-03b7e068640e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f71844c6-a2fe-42d6-ab1f-e0a53f19acad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448c7f00-8859-4f5f-9410-b483114154bd",
        "cursor": {
          "ref": "496a40ec-4fd9-4646-9b64-ce019980b1da",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1d80e7c9-ba5b-419d-8f8b-c16b93c38c8f"
        },
        "item": {
          "id": "448c7f00-8859-4f5f-9410-b483114154bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fd332617-339f-47c2-b0a7-2d0d095b3fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9710234b-08c3-40d5-8af2-c883d3436d3b",
        "cursor": {
          "ref": "4e6bc5a0-54bb-4a77-9ba5-3e1c33a6ffb1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c849a093-8f07-4bc7-b292-92327eb6824d"
        },
        "item": {
          "id": "9710234b-08c3-40d5-8af2-c883d3436d3b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fab3f1bb-e2bf-4c73-bf7a-4f2b3703eb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929c3f6d-4e4c-4a3e-b164-3d679c83579d",
        "cursor": {
          "ref": "b78b51ba-849f-49be-b083-31ef6c2ade96",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "978b4dab-d9e7-4660-9c82-6229aa193508"
        },
        "item": {
          "id": "929c3f6d-4e4c-4a3e-b164-3d679c83579d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "282c5f54-0561-4eee-88d7-a9862b38868e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea63acf-1b86-449b-99e8-aecec7ee91fd",
        "cursor": {
          "ref": "70bd0928-3e7a-4119-8cd8-e0877cedbfe7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e43ced4a-7b74-4364-a060-4b556e3b8757"
        },
        "item": {
          "id": "dea63acf-1b86-449b-99e8-aecec7ee91fd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "83e23bb3-8518-44e2-abfd-ec57b0cc8c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e1c7e3-fce7-4dbb-ab24-6fc7d3d4e86e",
        "cursor": {
          "ref": "d34698b6-61eb-43f1-b21e-fe7e371fc196",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b683676-cadf-40c2-8b44-7d515cc972fc"
        },
        "item": {
          "id": "83e1c7e3-fce7-4dbb-ab24-6fc7d3d4e86e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9003052b-4c10-4c16-bb5a-6b6af2c9d36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def02760-998d-478d-a542-78e3b057d885",
        "cursor": {
          "ref": "0de55d8b-daaa-4cbd-baf7-6ab36379551b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7f850b4f-6519-43f4-8b1b-4873e09751b1"
        },
        "item": {
          "id": "def02760-998d-478d-a542-78e3b057d885",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b0493bc-9183-41ab-8b73-90f8a03cf361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4d3391-86fd-4275-8e31-231a769f5d56",
        "cursor": {
          "ref": "32710996-f393-4689-9cb3-ebd2bd7fe46d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65de8c77-e6e6-44f0-9529-f45476021576"
        },
        "item": {
          "id": "6a4d3391-86fd-4275-8e31-231a769f5d56",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78cf7d6e-8374-4bed-b814-c6c1993f8bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03994942-0c2c-4a86-a419-aec14c8f4c08",
        "cursor": {
          "ref": "40837fc6-b135-44b1-9860-86564ae07545",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cbbd5668-f2d4-47d2-ac63-310281be26e5"
        },
        "item": {
          "id": "03994942-0c2c-4a86-a419-aec14c8f4c08",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fe972696-3737-4d05-9513-df53590b6a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca526a3-fb08-4d3e-97d8-873790504ad6",
        "cursor": {
          "ref": "0b034158-7195-4c38-aa79-90ec07b88599",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "983a4651-b12e-464d-b468-883515795790"
        },
        "item": {
          "id": "2ca526a3-fb08-4d3e-97d8-873790504ad6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19335b24-2792-4ff0-bab9-96d55529fe3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4abf2e-7f17-4a1a-a14c-9bfbb4661a84",
        "cursor": {
          "ref": "d7a1c58d-b228-4898-b343-f947350288ad",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "43555cf4-f6f3-4fa3-bd70-0188a5049f58"
        },
        "item": {
          "id": "4b4abf2e-7f17-4a1a-a14c-9bfbb4661a84",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab961300-1234-421e-a66f-d77e1435f9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600f29af-e98a-4682-be42-9be94e0e35c2",
        "cursor": {
          "ref": "315e6dac-bf9e-4fce-95c4-96958e1362be",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b2edca0b-1333-4ee2-b3e9-e51a61e3536d"
        },
        "item": {
          "id": "600f29af-e98a-4682-be42-9be94e0e35c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4a0af98a-3b59-4803-b194-980dd3aef610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27beb11-0c32-41d1-9214-639f34265992",
        "cursor": {
          "ref": "ef3d2b30-5246-48f7-86aa-886ad9626b2e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "df8b7e2e-59bf-4e23-8fc7-758cf9b39d78"
        },
        "item": {
          "id": "b27beb11-0c32-41d1-9214-639f34265992",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5851178f-69b6-45a9-bb85-aa7187a8e30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08649d57-566e-4276-8f05-1a16d58d57eb",
        "cursor": {
          "ref": "459326da-e482-4955-b6e6-f83ab7c5334a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0bf2d758-ed82-46fc-a29b-47fccd969e55"
        },
        "item": {
          "id": "08649d57-566e-4276-8f05-1a16d58d57eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "281e3bd5-4488-4f78-bb8e-22c8c5e7b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b569f-4104-4ec1-b8ff-d31888d25440",
        "cursor": {
          "ref": "609f6ca4-03ec-4b81-a5f9-ff30f27543b1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a93f218b-cb27-48ad-886b-7a4ba8d5be34"
        },
        "item": {
          "id": "136b569f-4104-4ec1-b8ff-d31888d25440",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "555d284d-0e33-4c6f-aff9-6360ec2cb175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4e1b77-cd81-4d36-9592-93c88ba9b759",
        "cursor": {
          "ref": "74c83935-d699-4996-bdd6-b06a85a01f4d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1fb91041-3751-4eed-b261-8d2c5b04d95c"
        },
        "item": {
          "id": "7f4e1b77-cd81-4d36-9592-93c88ba9b759",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3ac3438-0e41-4649-a408-5c8a7b5abc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aad498-eee9-4e69-a132-3344b95e81c1",
        "cursor": {
          "ref": "92073b56-01de-4fe0-bc0a-f52db6558de7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1375418a-036b-4215-b08c-5e6e672362b1"
        },
        "item": {
          "id": "85aad498-eee9-4e69-a132-3344b95e81c1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b5340f56-2640-4a94-ba3a-aa25fda1565b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f9ade3-cdf2-4ba6-ad03-5a203dfb44ab",
        "cursor": {
          "ref": "3b3e845b-f456-4c8b-9e30-e1d5d8da99ed",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "277872a7-ba39-4639-bd55-65e8575fdc93"
        },
        "item": {
          "id": "f6f9ade3-cdf2-4ba6-ad03-5a203dfb44ab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "874b4280-dd30-4bb1-9803-30a55d2a92c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acad142a-b166-4537-b594-7a0a78f58c96",
        "cursor": {
          "ref": "1b7fb2c9-77cf-4198-a1c7-e1bdc5e75dc9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8ccaf69b-1e06-47bf-abfd-854f36164212"
        },
        "item": {
          "id": "acad142a-b166-4537-b594-7a0a78f58c96",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "087931df-2285-42c0-b41f-13235fcd0ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37af198-a3ad-4f39-9780-ba3ae6c786e3",
        "cursor": {
          "ref": "b18b3a06-edc3-439a-9616-2e690cd91ed2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f6aa2c13-c451-475d-91d9-83c15a2e3151"
        },
        "item": {
          "id": "e37af198-a3ad-4f39-9780-ba3ae6c786e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "98a49712-017c-4467-a599-5f6528991ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780d5798-86dd-401c-b9d4-3230d3cdef39",
        "cursor": {
          "ref": "974a2107-c409-4694-8350-ca8e5716bc1b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9a4715e-6d38-4c00-9abe-653147bd305f"
        },
        "item": {
          "id": "780d5798-86dd-401c-b9d4-3230d3cdef39",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5bd09cf-9bd6-4fb7-a805-3e55d1f5b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bd75c1-80b3-4957-85e7-283146e9146d",
        "cursor": {
          "ref": "483a5895-7245-4740-b88f-baf01126cda5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0a83561-d9fd-4984-a1ea-7ffcd20c14c8"
        },
        "item": {
          "id": "67bd75c1-80b3-4957-85e7-283146e9146d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "38463327-44bb-46df-8c25-d5ec38664fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc2968e-9ce7-4259-b095-33e220aecf48",
        "cursor": {
          "ref": "a1c4450d-f0f2-4052-af45-8398662e479a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9c3f7ba1-bd0d-4c5b-bc6c-7b7b0bc85d1a"
        },
        "item": {
          "id": "1fc2968e-9ce7-4259-b095-33e220aecf48",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bd0090c9-c825-4087-b222-2946fa34af8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efdc162-ff21-4cff-8174-0680917a2fbd",
        "cursor": {
          "ref": "5b8c3804-c5ce-4736-8bf6-6fe5bb695b8f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1242e477-dc3f-4d1f-84cc-8bf0cbac883a"
        },
        "item": {
          "id": "0efdc162-ff21-4cff-8174-0680917a2fbd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab71c204-62bc-4219-b288-06dbd2e1bd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75444290-1c42-4c56-b021-26cc3ea57543",
        "cursor": {
          "ref": "bcb79e60-b2b4-48d0-b908-560aced3ec82",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b9f38bfd-e31f-499c-8000-5e063d996e6c"
        },
        "item": {
          "id": "75444290-1c42-4c56-b021-26cc3ea57543",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df9921a8-e34e-43db-93c8-f5cfa20a6dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9ac24-cddf-4612-9258-0f31238d6d6e",
        "cursor": {
          "ref": "02d9fab2-0dbd-4ea8-93f3-69e31aa61e73",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e2215f4f-cfb0-46f8-9d8a-2a12337a5b61"
        },
        "item": {
          "id": "6af9ac24-cddf-4612-9258-0f31238d6d6e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b9090b62-25f1-43a0-91af-3b20c26edb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8452211-7199-4c12-9db4-87f960522305",
        "cursor": {
          "ref": "a438d86b-bbf8-4d9d-9058-4f5c2ca19ce9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "52398996-791e-4614-8f36-77ed59cc0edb"
        },
        "item": {
          "id": "c8452211-7199-4c12-9db4-87f960522305",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b77d98e-5124-4d6a-940c-d9107f7d40e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd72d1e6-1fd5-4c88-a614-e4366ce93a6a",
        "cursor": {
          "ref": "b652e54a-865b-4257-a3e5-ba493c865874",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d024f22e-3559-45c2-aaba-cb9dce3ae763"
        },
        "item": {
          "id": "cd72d1e6-1fd5-4c88-a614-e4366ce93a6a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "40ac8674-72ac-429b-b88b-38fc6fe553d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cd4e69-60f7-445a-8add-cb908c670e73",
        "cursor": {
          "ref": "58a3e15e-90c0-472d-b987-631b6b5247e2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "50a948ab-a1f7-46e4-b0d4-cfe69da69d73"
        },
        "item": {
          "id": "90cd4e69-60f7-445a-8add-cb908c670e73",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e06736b-f780-44b9-9543-ec65a5d6c5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951ff7a-2580-4344-9920-31f529c87880",
        "cursor": {
          "ref": "5d484581-d329-41a7-84be-bf5f8d94a54e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1c248393-9102-4ce2-a9b9-06f170c8de60"
        },
        "item": {
          "id": "6951ff7a-2580-4344-9920-31f529c87880",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf9c5852-c032-4a64-af50-d66dc7bed3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff82082-22cc-468b-bf3e-8c7d32dc230b",
        "cursor": {
          "ref": "b2b6fff5-8c66-49c4-8bc6-172dd1547564",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "993d9c78-3763-42c6-b3eb-8365cb734119"
        },
        "item": {
          "id": "5ff82082-22cc-468b-bf3e-8c7d32dc230b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6fd683f-f75a-46a6-95ed-6a91809fa315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee797cf-e5b9-4e65-a9d0-b6cec9b9fea5",
        "cursor": {
          "ref": "8ffb0f8c-7f7a-4917-9ca3-b592a8d74432",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "280fe09c-f7b3-4bec-a4fc-3f7f39f6c920"
        },
        "item": {
          "id": "8ee797cf-e5b9-4e65-a9d0-b6cec9b9fea5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fa7b2842-cd05-4f2b-991d-8199fe45310c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d908e6-da66-4e2a-8080-1feccc20c47e",
        "cursor": {
          "ref": "add41af2-021c-4f21-8469-583f3fee2942",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ea3646d2-91d0-4621-addd-118e6ed04588"
        },
        "item": {
          "id": "78d908e6-da66-4e2a-8080-1feccc20c47e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f7b95b77-a449-45d8-b189-305fe6428f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c028b9-0d59-4f07-bf13-ece39ff5567f",
        "cursor": {
          "ref": "f16b4554-be5f-4037-884a-db1e16c958c9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "efc64e8a-0d95-4df9-8f4a-b062bb6ca762"
        },
        "item": {
          "id": "57c028b9-0d59-4f07-bf13-ece39ff5567f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42be8d34-b73f-4a80-8905-d4335260e6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c978733-ebe1-4d86-8c3e-aca3d29b8d07",
        "cursor": {
          "ref": "5bfba9ff-a51e-4499-abd0-121bf5d7cf18",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "86f9eb48-b455-493a-9fd4-d166704d3b56"
        },
        "item": {
          "id": "2c978733-ebe1-4d86-8c3e-aca3d29b8d07",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77d423f7-4ec2-415a-8071-39bf219e0d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed006ad-e60f-4ee1-98ba-137b86f48d29",
        "cursor": {
          "ref": "27cf2c57-385a-468b-bdfd-80dd4721a62f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "347d572a-513e-484a-814d-e97ee4acec77"
        },
        "item": {
          "id": "7ed006ad-e60f-4ee1-98ba-137b86f48d29",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6328662-628f-4616-809d-173a1dec67bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a9d5c8-9428-47a1-8a6f-029882a3725e",
        "cursor": {
          "ref": "b369a231-56c4-4ae7-9845-9b02c8e25d70",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8eaaefae-df63-45fd-90f6-1f44a0e24040"
        },
        "item": {
          "id": "88a9d5c8-9428-47a1-8a6f-029882a3725e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "28d8e7cd-f8fa-4d9e-9bf7-8624eb46a1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f731a7-ed1f-4ba1-a346-49d632a699a8",
        "cursor": {
          "ref": "eeea7241-d91a-48df-b6b2-1d19d01e5755",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bfba0257-aa75-4b6b-9901-8980029f7771"
        },
        "item": {
          "id": "50f731a7-ed1f-4ba1-a346-49d632a699a8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aac21830-274e-4cc1-9e74-b7f30dffaf12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf89950-1afd-48a5-acad-32ccb8a714a6",
        "cursor": {
          "ref": "77826fa8-518e-4c83-8580-7801a6a990d1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bfc3e741-2ebd-4fc5-a476-78402829d437"
        },
        "item": {
          "id": "4bf89950-1afd-48a5-acad-32ccb8a714a6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "08dfb426-1c12-4fbe-852e-cdaaaf63874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c664075f-f299-41d9-8d70-126505aa6d29",
        "cursor": {
          "ref": "c2a09153-f6da-4535-a72c-b362d85b4d2f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a557705f-4e3b-42cb-b6e8-25b4e63f5a58"
        },
        "item": {
          "id": "c664075f-f299-41d9-8d70-126505aa6d29",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7723b09a-3214-4dde-80db-b0929cb65458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8dabdf-48cf-46e4-b894-aeb010335aa1",
        "cursor": {
          "ref": "97f31878-afc7-48e0-8620-5309759c67d2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ac468577-8d05-4bfd-a906-f3a07ecd685e"
        },
        "item": {
          "id": "2b8dabdf-48cf-46e4-b894-aeb010335aa1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8719ec3-b9a5-4d85-9bab-e47b751669c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9feae-c570-4971-96bc-baaa851f30c6",
        "cursor": {
          "ref": "f90d9854-9051-477a-ae2f-cc19acabd348",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "123231e0-f1af-410b-b8fa-5bfb01211517"
        },
        "item": {
          "id": "11f9feae-c570-4971-96bc-baaa851f30c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8e1b9167-8859-4737-ab05-38d558fd4204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf00cda-f488-45a7-9d15-7ffa66e3067a",
        "cursor": {
          "ref": "6d6c115e-6738-4534-a176-3489509d91f3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "718599c4-50b9-4518-8c74-db6eb7272dd9"
        },
        "item": {
          "id": "2cf00cda-f488-45a7-9d15-7ffa66e3067a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3aaec011-231a-48b2-b4b4-befccc0212fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1328e6a3-fea1-4786-8721-313178d4a2b2",
        "cursor": {
          "ref": "49709a0a-636a-483c-9444-77897f393e67",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "52745809-efa0-439a-a28e-4deb9ddfbe23"
        },
        "item": {
          "id": "1328e6a3-fea1-4786-8721-313178d4a2b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82948915-6c55-41ca-ae86-af8efaed1b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e472022-1daa-41eb-86bf-629b8a00a006",
        "cursor": {
          "ref": "cfb0ada8-8c56-42f8-918d-bcae4fd3fd3c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "28f3a881-5dd8-41ce-8e92-cc547f0f5980"
        },
        "item": {
          "id": "6e472022-1daa-41eb-86bf-629b8a00a006",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c0d1c6f4-b765-4591-9c35-ff0b10a0f5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09a1604-2b06-468b-8b41-f57438ceac99",
        "cursor": {
          "ref": "ce105848-8bfe-4690-8bc2-0f02105b8944",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "85bc0194-a065-4cc5-96d0-84f4baba597c"
        },
        "item": {
          "id": "b09a1604-2b06-468b-8b41-f57438ceac99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b628f848-dbb2-4eee-a253-80dc5b75618b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058a51b5-5e8f-42ce-b028-a234b43755f8",
        "cursor": {
          "ref": "d53c9200-1d40-4757-aa5d-d7a6a829d0c6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f5117c3-2626-425a-8dec-7e237bea2d5e"
        },
        "item": {
          "id": "058a51b5-5e8f-42ce-b028-a234b43755f8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0e049aba-01ae-4f64-9a78-c4099254c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36970a7e-6888-40ce-8b61-5a996fcfb28c",
        "cursor": {
          "ref": "9ab7f1ea-ff59-4246-bc5f-1ac86dfdd42c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7372a0b2-fd91-44da-a9fa-e27e8d7f80f6"
        },
        "item": {
          "id": "36970a7e-6888-40ce-8b61-5a996fcfb28c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "910b2d24-fec8-4632-91e3-3c71407b82a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b856d54-0092-4c15-9d94-46a492eab047",
        "cursor": {
          "ref": "e4f3f8da-3395-4abe-a321-8d2d0d836432",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f68c704f-8e56-4217-a705-81e9d133af6b"
        },
        "item": {
          "id": "6b856d54-0092-4c15-9d94-46a492eab047",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "104465d2-9c46-4e1f-a043-b4cfe6456dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0dafb-1ebc-41ba-8cfa-cc1f35508b44",
        "cursor": {
          "ref": "243412d2-cc33-4ead-a0e0-d31a09af4c89",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27c077bf-7d3c-4544-aaf9-24867cfa4888"
        },
        "item": {
          "id": "9dc0dafb-1ebc-41ba-8cfa-cc1f35508b44",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b25c0bdd-281c-4123-832c-d2e9258abf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1609d7-1998-40a6-8ebd-883462a09311",
        "cursor": {
          "ref": "458c89be-357f-4ab5-bd9b-c49cba36b12e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7b50bdbd-b242-4e23-8341-0556608b2e63"
        },
        "item": {
          "id": "7f1609d7-1998-40a6-8ebd-883462a09311",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3099e1a0-b271-4fa3-88da-f573e9997472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec62b5db-2e95-4975-bc90-690860f067a1",
        "cursor": {
          "ref": "411dba12-ee11-4ee1-9ec3-38b62ab2e140",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "805cd256-b6cb-4fff-ab00-8d9a1141ddca"
        },
        "item": {
          "id": "ec62b5db-2e95-4975-bc90-690860f067a1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ac7ebe16-e20a-4669-840c-bdf7e081f740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412c2226-1834-49a5-9a66-337ad663283b",
        "cursor": {
          "ref": "ebe21020-627c-4da9-99ab-bcf83e8c22a1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "102546ee-b613-4c78-b6a9-8db009d6ab8b"
        },
        "item": {
          "id": "412c2226-1834-49a5-9a66-337ad663283b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d834ff54-66b9-4dfe-aa05-05d47ba83699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30093bcb-9346-4a0b-9682-84514928a931",
        "cursor": {
          "ref": "bc53f174-06d8-49c4-bac1-038453fe11cd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f3642545-cfa6-4800-b654-fdc1be98526b"
        },
        "item": {
          "id": "30093bcb-9346-4a0b-9682-84514928a931",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b69c63d-8341-49eb-8062-55b7d6638be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4d8d0-1817-4535-a19b-da1c42951c1b",
        "cursor": {
          "ref": "a0b1a9fe-2e18-4aec-9116-e583020713df",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c1bb8ed9-541f-412b-a54b-aa2bb9d03e99"
        },
        "item": {
          "id": "11c4d8d0-1817-4535-a19b-da1c42951c1b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "44e2392a-4295-47ba-9cfd-579a6d1bf080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1496444c-1b5f-4854-b8f6-bbc6151f5aa0",
        "cursor": {
          "ref": "1cd04a65-a134-4b7b-af8a-8e18e484a958",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "35bd9a15-e05b-4a25-a738-c8871d39fdbd"
        },
        "item": {
          "id": "1496444c-1b5f-4854-b8f6-bbc6151f5aa0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f65e0a08-b109-4aad-9b91-ed92da348039",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0639ca-d36f-47f3-9159-6cc35b9b325d",
        "cursor": {
          "ref": "f1c0b499-285d-4395-b021-ec8b687509e5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0703a445-1035-40bc-8be7-b146aef7d08a"
        },
        "item": {
          "id": "6b0639ca-d36f-47f3-9159-6cc35b9b325d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "43446c53-11dc-49a2-8ad4-acb65124aaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec769a7-5760-43ef-9652-300fe8b9dda1",
        "cursor": {
          "ref": "199582c2-2e85-4dfe-8e8e-15bfdf10ea30",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fab69244-d8dc-4ed4-9b56-6a6dc954c625"
        },
        "item": {
          "id": "7ec769a7-5760-43ef-9652-300fe8b9dda1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4f07d8f7-3c5e-42b3-a104-375392d1b0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb0ec1a-5c48-419a-ae16-131d2aa30b9d",
        "cursor": {
          "ref": "66e29d95-fcd1-4589-9a88-36f9b72dacc8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7581dcc8-62e2-4965-a2f4-c3eb9a3596cc"
        },
        "item": {
          "id": "abb0ec1a-5c48-419a-ae16-131d2aa30b9d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "568aca5b-63a2-4d32-b77d-444d9e564de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcffb92-9716-40e5-b20a-bd8ca22b6556",
        "cursor": {
          "ref": "226f9223-59e9-4b79-91c3-cd4581f8d562",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "828c0276-c858-4994-9627-379371aa064d"
        },
        "item": {
          "id": "edcffb92-9716-40e5-b20a-bd8ca22b6556",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1914e6fe-15e0-4f07-8ea9-d294044b0b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2118409-33a0-4400-8c04-0b30eba81a5f",
        "cursor": {
          "ref": "e5402a46-3b6a-4385-b8e9-409a93a78d23",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "80714640-ed6d-48cf-8053-66310471fa08"
        },
        "item": {
          "id": "c2118409-33a0-4400-8c04-0b30eba81a5f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5edb80b5-c677-4a0a-9f6d-8fbcfc089119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c05395f-9609-4251-b7ff-e8b44ed9846c",
        "cursor": {
          "ref": "3cc6a792-f233-4f01-890c-0595da9ed34e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9655ded7-fb6a-4110-88ee-892f10790b95"
        },
        "item": {
          "id": "7c05395f-9609-4251-b7ff-e8b44ed9846c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43e5a593-a3c3-4186-a0dd-25452359ce94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02301564-2fe1-436d-8518-d6a812d0f7c2",
        "cursor": {
          "ref": "ff1c5111-6b7b-4005-acc0-aa409c8bb750",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1dad817b-cc48-4e9d-8165-1b3ce7fe104c"
        },
        "item": {
          "id": "02301564-2fe1-436d-8518-d6a812d0f7c2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dfb64bb8-faa2-427f-9619-5ef22a155a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c35f9-a8ba-41f1-982b-eae4d790d34d",
        "cursor": {
          "ref": "a794f1ba-f35e-46b6-bf55-4a8aed388a52",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "279df092-d597-4a64-93af-a741ac21b505"
        },
        "item": {
          "id": "dd5c35f9-a8ba-41f1-982b-eae4d790d34d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "65154852-49eb-43ce-adc8-42a8b0522fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74482e13-64a7-4686-97a1-f63d06a03705",
        "cursor": {
          "ref": "4bd4e10d-ffeb-425c-b2c5-d154b75d5c7f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5716d0ec-9dd9-4a3e-a4b1-70962f9e9642"
        },
        "item": {
          "id": "74482e13-64a7-4686-97a1-f63d06a03705",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc4e799b-015a-4dd7-ace8-8dd85b4c8724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90935dc7-96d9-4d5c-9282-a4afcfc9c9eb",
        "cursor": {
          "ref": "92811c23-add5-4ee6-9da1-ad4cd52dbd66",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "68ce17ff-6fde-4380-9190-b1011e730025"
        },
        "item": {
          "id": "90935dc7-96d9-4d5c-9282-a4afcfc9c9eb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4ec1d7ac-9dfb-4eb3-a8ee-a53f7fe63c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2bbcc3-878e-42d2-9e2b-eedd9334b095",
        "cursor": {
          "ref": "b1e5e84a-c86c-4125-abac-67df567eb7cd",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "01f020de-a74a-40c1-859b-8b239b88d2d4"
        },
        "item": {
          "id": "3f2bbcc3-878e-42d2-9e2b-eedd9334b095",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5fbae5e4-2e8a-4bc4-8cb6-61f5548bbf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a0543e-868c-4c2c-9d37-2e2138711888",
        "cursor": {
          "ref": "8e44f8f1-4a29-4203-b072-1608749de87a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a7b37d6c-14b7-4423-9072-46416edfddee"
        },
        "item": {
          "id": "e4a0543e-868c-4c2c-9d37-2e2138711888",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "89311403-6216-47dd-bc13-0bfa079b25e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ccbb5-f8bb-4fd4-8dbd-555191eb5b49",
        "cursor": {
          "ref": "b4816348-f4bb-490f-b191-2d2085c080b2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40fb41f0-2715-4658-8234-eca595d7a520"
        },
        "item": {
          "id": "e48ccbb5-f8bb-4fd4-8dbd-555191eb5b49",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1eff7498-2476-4754-a487-6c4267f7f123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eac95f-04f6-4157-bf22-c8d4b910260b",
        "cursor": {
          "ref": "1fe1f62c-17b6-45f3-914e-f05dfff670ab",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5e6d2ee8-e29e-4bb0-92c2-2094e2a3db13"
        },
        "item": {
          "id": "07eac95f-04f6-4157-bf22-c8d4b910260b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b1ffe1c3-a2aa-4e09-b666-f8aa9d8a456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab20bf6-2a29-43b3-88fb-21df1a15744a",
        "cursor": {
          "ref": "cd0c377b-76f7-4220-a3a0-5f421927d3ba",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e6f9d27b-21be-4c07-aec9-c8a59b1da830"
        },
        "item": {
          "id": "aab20bf6-2a29-43b3-88fb-21df1a15744a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f445fd34-f58d-4311-96c3-64b9fe4c71a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fac5dd-4e24-419a-9bf3-6e5bf98fe0e9",
        "cursor": {
          "ref": "02da0d13-1523-47c2-8956-401457aaf9d9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "709f8e83-be83-4307-8353-a33feb1af39c"
        },
        "item": {
          "id": "50fac5dd-4e24-419a-9bf3-6e5bf98fe0e9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "52dd944d-bd38-4997-bff7-97e55dc0ffc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d0f15f-a5fa-46e7-9086-a64914062895",
        "cursor": {
          "ref": "5421d173-0aec-4558-a071-77d1e4b6b560",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "069fe6fa-6c3a-48ed-9cc1-ea3ac9767970"
        },
        "item": {
          "id": "59d0f15f-a5fa-46e7-9086-a64914062895",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "606ba230-6527-4e7d-bf5d-580147567162",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "af32a5a5-2515-4fdb-a5a3-c373a202ac61",
        "cursor": {
          "ref": "66cb49d2-d60c-42c3-a236-8e8bc25a59ca",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "713f6d0d-cc1e-474b-8b96-a550803a59be"
        },
        "item": {
          "id": "af32a5a5-2515-4fdb-a5a3-c373a202ac61",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9e5bcb2b-9e1e-4d14-acd3-4e04f0db333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f941b29f-15c9-4b83-8649-98f7b5a1efcb",
        "cursor": {
          "ref": "cf82fa64-4b47-450b-b6ea-3270d64c8b4c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "82651cef-d815-4d04-844e-33deb50d53dc"
        },
        "item": {
          "id": "f941b29f-15c9-4b83-8649-98f7b5a1efcb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "93442a9e-7f09-441e-b6e9-c8b901b04e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c78d44-9710-4d9d-b49b-239675b2d933",
        "cursor": {
          "ref": "5150bf88-b3b2-4c58-b54c-8818a2267651",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "33c4ad5f-bd59-4c5b-bb59-7362344b2928"
        },
        "item": {
          "id": "38c78d44-9710-4d9d-b49b-239675b2d933",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "44888cee-55d3-4bd8-9955-2512ba221474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e895ff-bf29-4cc2-b6e0-ad4f35aaf299",
        "cursor": {
          "ref": "a278ca20-3bce-457d-836f-8b360d889aaa",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5392e898-0995-4a63-a364-a2d4a149c1ba"
        },
        "item": {
          "id": "17e895ff-bf29-4cc2-b6e0-ad4f35aaf299",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "27963a34-7697-46a7-a215-951d218e4cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03286720-aa98-42f4-8912-befaba49c326",
        "cursor": {
          "ref": "487d504d-b023-4723-822f-5c1ab82b80c2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8809093c-a696-472a-8467-bfac9dd94688"
        },
        "item": {
          "id": "03286720-aa98-42f4-8912-befaba49c326",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "43f6838a-7b64-47e2-8f03-23fe56df192e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d0cf4c-7735-4f0d-96e8-26938e55e8bc",
        "cursor": {
          "ref": "9878ddf2-858c-4f9b-843c-4af5751cdb9a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b65738d5-c5aa-481e-871a-d89212e3952e"
        },
        "item": {
          "id": "d5d0cf4c-7735-4f0d-96e8-26938e55e8bc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10b010d3-b0fb-4537-8fec-a0cc450629d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89321f85-d0e5-4857-9665-038f099c26ed",
        "cursor": {
          "ref": "f4e24c25-6a1f-4b08-a3e6-98b5e98ba8a3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "40843401-f654-4245-8237-8c5bcafeff7c"
        },
        "item": {
          "id": "89321f85-d0e5-4857-9665-038f099c26ed",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "68f13b11-ac1f-4d66-9ff7-c509f03ceb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b454d-1e0d-4999-b5fe-8aea4740ceed",
        "cursor": {
          "ref": "c05d2c90-3031-4d7c-a1b3-de8e7ed853aa",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ff9a235-c5f2-4af3-bd47-f11e95037b4f"
        },
        "item": {
          "id": "285b454d-1e0d-4999-b5fe-8aea4740ceed",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4f0c33c9-372e-45a4-82fb-68b0a9a32e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ee4524-af0d-4208-b99f-c4437f09d7d2",
        "cursor": {
          "ref": "b6c5c46c-c1fa-494d-a113-cecbffb7173c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb24d8d1-f755-4f32-90ee-07852985646c"
        },
        "item": {
          "id": "95ee4524-af0d-4208-b99f-c4437f09d7d2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "93bfe2a1-568c-46b2-b2cf-84441b8d8c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2470db-9aca-4947-97be-ea7c66cfda2f",
        "cursor": {
          "ref": "2bba9384-63f6-4fd0-a01f-96c27fcf6e4c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5d9ce5c9-6995-4853-9f62-232609394715"
        },
        "item": {
          "id": "4e2470db-9aca-4947-97be-ea7c66cfda2f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e168b92d-f954-4850-98a4-b9046e459531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b875c-917d-47f4-aa62-e4a0c45bbb8e",
        "cursor": {
          "ref": "47483551-55b3-4912-8ff4-33ffc6c3c67b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7a1175f6-ae00-4254-af65-ba38e91fa7c3"
        },
        "item": {
          "id": "5d8b875c-917d-47f4-aa62-e4a0c45bbb8e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e065bf12-19de-4dd4-b237-e4ded33c8233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baef22a-b854-4aac-b355-57899c2fee65",
        "cursor": {
          "ref": "5a7d53d8-5155-4471-9df4-09a031998f38",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0f0d26ec-2cd4-4329-a212-46be0500b72f"
        },
        "item": {
          "id": "5baef22a-b854-4aac-b355-57899c2fee65",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "99097368-f6d1-488a-b55c-682c8086f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0d5bad-b009-4dda-a4b3-7915a731d33e",
        "cursor": {
          "ref": "0a80f4ff-d002-406a-aeb3-def989eb399a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "625637c4-964a-46ee-832f-8c9ea7846de1"
        },
        "item": {
          "id": "bb0d5bad-b009-4dda-a4b3-7915a731d33e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "554c7fa9-23d9-49e7-89ae-ed937e7fd220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c1f48-856b-4622-9251-940975b16b24",
        "cursor": {
          "ref": "ed0ce615-5710-4b6c-8f8d-8f2cf77fcfdc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "683d5c59-0753-4edd-a71b-86648de0007b"
        },
        "item": {
          "id": "b85c1f48-856b-4622-9251-940975b16b24",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f3419c02-80f7-4c69-a756-31030e319e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b20fc0-5372-4f00-8b8a-22392b60be00",
        "cursor": {
          "ref": "8875bca2-fdac-4582-be02-1042d774f2c5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "78c9b160-3cee-4731-9e3d-e60895013343"
        },
        "item": {
          "id": "08b20fc0-5372-4f00-8b8a-22392b60be00",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "461763bb-6adf-420b-bf1b-050b98340ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150e7613-f8c3-4278-86f0-d2824b65bd2e",
        "cursor": {
          "ref": "1f805361-d2e3-4316-9c4a-e9b347c3aca5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0815cbe2-8750-4ba6-92cd-ca80680bef25"
        },
        "item": {
          "id": "150e7613-f8c3-4278-86f0-d2824b65bd2e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ab349c85-114e-43bc-a420-fca6a1e8bce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac29bbf-8043-463f-af36-1c703c9356ca",
        "cursor": {
          "ref": "a7047041-b428-4179-b873-e02ac602af0e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca3af82f-6180-4387-9fe2-a169b96cef15"
        },
        "item": {
          "id": "aac29bbf-8043-463f-af36-1c703c9356ca",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5f222d08-c5af-4b34-a168-ec9a14161dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023d7730-c6d6-4134-adf8-e3c96e487977",
        "cursor": {
          "ref": "f72c24dc-e581-4951-a93d-39aa1e06ad59",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a6f3f501-e930-420b-a81d-f50d9c84357b"
        },
        "item": {
          "id": "023d7730-c6d6-4134-adf8-e3c96e487977",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5521f234-7b91-42fa-8a8d-59d37403fbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d705818e-1e31-4465-b8ad-77fe7580d87d",
        "cursor": {
          "ref": "e0a6c20b-800d-4c49-a20f-3d30adbced97",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1d878ad7-dfb0-48da-9438-b8a94a662824"
        },
        "item": {
          "id": "d705818e-1e31-4465-b8ad-77fe7580d87d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7809c076-2ca6-43db-befa-5cf79bd50cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9b8c89-f0b6-4a79-a215-c11013c2b73b",
        "cursor": {
          "ref": "b64c0847-066f-4697-b712-3951489e7353",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "70586254-87ea-4261-8390-8150c06baa72"
        },
        "item": {
          "id": "3e9b8c89-f0b6-4a79-a215-c11013c2b73b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c2c6f1e6-3a42-4d0b-8a8f-9b8f56e56b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe536ac-06ea-47fa-941f-c6b21f449434",
        "cursor": {
          "ref": "9f0345cc-9682-4bc8-acec-24af2c351a80",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "93f2b399-3f45-49d6-8735-7e789aba0c4a"
        },
        "item": {
          "id": "ffe536ac-06ea-47fa-941f-c6b21f449434",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "79651027-0d17-458b-95f3-b1a0c64cdce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d621e621-8c1a-41ef-b540-ea4ef0b8b0a4",
        "cursor": {
          "ref": "4937403a-edc5-49a9-8a96-50b3030f8e79",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bebf85e4-e995-4482-af97-5a354b492fbc"
        },
        "item": {
          "id": "d621e621-8c1a-41ef-b540-ea4ef0b8b0a4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c2af73f7-afb9-4c4d-b3b5-d1554bcd0f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4768dd84-6c82-4d66-8bf3-0de79c3af60e",
        "cursor": {
          "ref": "f81b5184-805d-40f9-a2a0-58ce4d6b0194",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c50a91ff-e34e-498d-9259-a14f77ddf7ac"
        },
        "item": {
          "id": "4768dd84-6c82-4d66-8bf3-0de79c3af60e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7700566e-ac79-43c4-9428-ca9d2fa36643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690c070-239f-4ce0-9444-6c23b24efa95",
        "cursor": {
          "ref": "919276c9-8fd3-404b-a0bc-62db38d60498",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a2197cfd-2f9f-43fb-a3d3-1f8b861e4009"
        },
        "item": {
          "id": "0690c070-239f-4ce0-9444-6c23b24efa95",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "32d1b8e2-a208-43ee-957f-50fb35a20d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6170c76-b502-4ed1-8183-4cdffcb3bdba",
        "cursor": {
          "ref": "1e6f4337-8d68-4f80-bcdb-df4bbd901f90",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6d8375bd-0da4-4524-b5d8-fb685d6a77ff"
        },
        "item": {
          "id": "d6170c76-b502-4ed1-8183-4cdffcb3bdba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a2536a34-d2f1-42c7-a2db-8bebf1783af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fba54d-8acf-406e-ae0c-8b2e8e31945f",
        "cursor": {
          "ref": "b93a1edf-1989-4911-82cd-f1d236c9ee3f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "585ef25f-d013-40df-91d0-43d22262d056"
        },
        "item": {
          "id": "28fba54d-8acf-406e-ae0c-8b2e8e31945f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e7545eab-cb4b-4629-9262-ad541d238ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7627f5-b053-488a-8923-5035d1be3d14",
        "cursor": {
          "ref": "54a99bdf-538c-4a7a-b1d0-049e2be9ab15",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a7a4fa85-35db-4fe6-9bf6-8957f3033985"
        },
        "item": {
          "id": "be7627f5-b053-488a-8923-5035d1be3d14",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "87265458-c7bc-4014-ba6d-c31a97efdb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531153c4-52ff-40de-9526-61d78b1179b8",
        "cursor": {
          "ref": "49ce1e61-ba43-4f6c-bcbd-bda44e5283d0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "133f649d-2d13-4e0d-96d1-28885ae72033"
        },
        "item": {
          "id": "531153c4-52ff-40de-9526-61d78b1179b8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8965ad69-d5e1-4674-86ef-fd89e69b57b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e7486c-cadb-4b9f-ac38-2c86c23cbe56",
        "cursor": {
          "ref": "219e2a71-dba1-4361-826a-9f88fed3bb82",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4d9d99bf-0391-474d-b96b-3ed69c227235"
        },
        "item": {
          "id": "57e7486c-cadb-4b9f-ac38-2c86c23cbe56",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5a23fa0e-c715-4e3a-8482-c366f04d04c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67591d77-527e-4c11-a5a5-5a27a97f6067",
        "cursor": {
          "ref": "939132be-cfed-45b2-aab7-a3a3f5466254",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "081c3ce4-c0b5-4019-a6ca-88597fac4191"
        },
        "item": {
          "id": "67591d77-527e-4c11-a5a5-5a27a97f6067",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "af386c9b-909e-4ca2-abb7-8431c2873f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae80e0ea-c795-49fb-b3a6-412f2b21a99e",
        "cursor": {
          "ref": "ab9cacec-b8f9-4831-bdf2-6c063d8df563",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f0b14969-4ac2-4cd8-8416-2c37bc189b23"
        },
        "item": {
          "id": "ae80e0ea-c795-49fb-b3a6-412f2b21a99e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "57bc88e3-577e-477c-b1f3-2ece20ab529d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5106de5-6b2d-4fcb-82e7-1eda54e9f807",
        "cursor": {
          "ref": "d5c92021-0e49-45e0-b9a7-06868472807d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91914736-8243-4f8a-b168-2481e4f4fe31"
        },
        "item": {
          "id": "e5106de5-6b2d-4fcb-82e7-1eda54e9f807",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "874d0424-3f31-4a04-93d6-dda5e332bbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e450fd25-9905-4495-ad96-b5280db42f03",
        "cursor": {
          "ref": "555d096d-07d2-44dc-a04d-980375e90d8a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "826f2dca-83a3-4b6f-8d7c-c0db42217666"
        },
        "item": {
          "id": "e450fd25-9905-4495-ad96-b5280db42f03",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "476aecb4-e234-436c-97ec-5566974e6c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f18285-8132-44e2-9dd4-c6c4fc1f1688",
        "cursor": {
          "ref": "6bee80c7-36e6-4063-94c9-644ec8e4fef5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "18c49b26-39dd-482f-94b0-016957db3787"
        },
        "item": {
          "id": "a5f18285-8132-44e2-9dd4-c6c4fc1f1688",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "95d80f96-0a3e-461f-8a20-d09c0a2ca4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e1a639-5868-414b-8c9f-afeb5c4ef80f",
        "cursor": {
          "ref": "dfdba6b9-db7a-4b5c-aae5-569e0720cf57",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c4a7f86e-f1e1-458d-bc7d-e342baff39bb"
        },
        "item": {
          "id": "80e1a639-5868-414b-8c9f-afeb5c4ef80f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "819e064e-482e-4733-8b6b-b0b4f91b0d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d548a33-c05a-4553-b66f-59ea8e785ccd",
        "cursor": {
          "ref": "9f28cd7b-a63a-4369-a0a7-490188f5765c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cd0e7c33-4f92-4717-b561-f0bc6e30a9c9"
        },
        "item": {
          "id": "2d548a33-c05a-4553-b66f-59ea8e785ccd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1752bf94-ac22-4456-9442-0f4326909a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69157a8-6a67-41f8-9d5c-6cc6964fe9bb",
        "cursor": {
          "ref": "4183047c-706f-463a-a2d4-e7fb7007dc0a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7bb8e023-42cb-47c0-aed1-3fd6bccf881d"
        },
        "item": {
          "id": "b69157a8-6a67-41f8-9d5c-6cc6964fe9bb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cb241be3-d391-4fae-9268-de1338acf911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e4d29a-9acd-4936-90de-8e3a309c4603",
        "cursor": {
          "ref": "caf33fc9-baeb-4799-9527-afe80f1d845b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "05ac84cb-7cfe-452e-ac6e-1766ad4fd0df"
        },
        "item": {
          "id": "79e4d29a-9acd-4936-90de-8e3a309c4603",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b9481c2b-357e-4012-afa5-2e868f852a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8009a21f-6886-4b24-a967-35678dcdbe99",
        "cursor": {
          "ref": "5bee3008-0905-4a58-b1b1-c49a78bba765",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "66fe7a89-529a-4ecf-9c5e-3b95e9f4367e"
        },
        "item": {
          "id": "8009a21f-6886-4b24-a967-35678dcdbe99",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "419cd59d-b9d0-4f5c-a7bf-0cdbf33a1a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03636b10-5f27-4f0d-a454-bf385f3fbb91",
        "cursor": {
          "ref": "46c94325-a134-4e47-81ff-874d3f8fcc60",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d321f80-b5d4-4f19-8d5c-5e08bdfe8671"
        },
        "item": {
          "id": "03636b10-5f27-4f0d-a454-bf385f3fbb91",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "91483532-97ad-4445-be99-efd285b02a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610ee82c-5e00-442c-b653-69c4a5becef0",
        "cursor": {
          "ref": "4bf5f5c9-bbf5-4588-ab5c-63f47d1fe92c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "de3e7517-06e3-4e39-9e11-551df037db09"
        },
        "item": {
          "id": "610ee82c-5e00-442c-b653-69c4a5becef0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7dda3f70-f2e2-4c3a-b543-e90471d08821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a6d52e-0b17-4deb-b116-03942a076f00",
        "cursor": {
          "ref": "075c33da-b851-43a8-99e5-d8d7be1bed59",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e45c54f1-4dc7-4468-ba9f-0de5518e973e"
        },
        "item": {
          "id": "40a6d52e-0b17-4deb-b116-03942a076f00",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "763ce8a0-1d7d-4473-83d9-637f6b07a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b81630-8da4-4c22-86d0-25db8325d14a",
        "cursor": {
          "ref": "2489c8f5-d752-458a-a284-97898afabab3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a0b8e1bb-b74e-45fa-ad75-eac4fdfa16e9"
        },
        "item": {
          "id": "11b81630-8da4-4c22-86d0-25db8325d14a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "21ab7e7e-d8f3-4e72-9c7a-d29403730bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd024e41-cfb0-44bc-8dc0-75e44bad83f1",
        "cursor": {
          "ref": "ec47e4bb-1a3a-4a6c-9dd6-35e7dde68333",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "78db5df7-499e-4dca-831a-f9728a6c7eae"
        },
        "item": {
          "id": "bd024e41-cfb0-44bc-8dc0-75e44bad83f1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84bd33d6-7ab6-43ff-89e3-f368b48268cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18edfa96-ef1a-4d53-b35d-e74992dd0f32",
        "cursor": {
          "ref": "5bd151d2-b9bf-4300-811a-71a1fd88d193",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b78e83c4-34d5-4000-a97e-434640b3dbf8"
        },
        "item": {
          "id": "18edfa96-ef1a-4d53-b35d-e74992dd0f32",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0a0344f5-dd5d-4066-a746-743e3f921c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc5d00-a4d7-46ed-848a-77ce2bb53e8d",
        "cursor": {
          "ref": "191049fc-790d-4fee-959e-e2409934abba",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0bea0075-9d41-41a5-aa6c-66cb4d0d0408"
        },
        "item": {
          "id": "b8fc5d00-a4d7-46ed-848a-77ce2bb53e8d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3bd87f32-f33e-4b55-861c-b75194f601d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4388b9a-33bf-46eb-a6ea-376ced65fcc5",
        "cursor": {
          "ref": "66480b45-7a2e-4414-ad38-f44492c72882",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "abbddbe7-6bb9-4cf6-bc14-23e4abf00f14"
        },
        "item": {
          "id": "d4388b9a-33bf-46eb-a6ea-376ced65fcc5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a63b7ccc-ecb4-48d2-9677-5e26c2e300a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5205104d-c09f-4a6a-8100-8a61f87e63e4",
        "cursor": {
          "ref": "ad08981b-c32e-4c3e-945f-05fb64fd4fb6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d2b71b29-fd24-4bec-853b-fa7b7e26afff"
        },
        "item": {
          "id": "5205104d-c09f-4a6a-8100-8a61f87e63e4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0a7164d3-2dae-4a30-90e5-86612df14cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53d2c8e-4a1e-4f9a-be5d-af3550651eba",
        "cursor": {
          "ref": "cf4ec2d8-699a-4ca5-8e6f-1fe371dc37ef",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fde0a8a0-7113-43a2-aba4-b8a96a39d40e"
        },
        "item": {
          "id": "a53d2c8e-4a1e-4f9a-be5d-af3550651eba",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5840184a-7f0e-447b-9e2d-8e06941c95cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c90aa72-4e18-48b3-a1bd-26c5e02f259c",
        "cursor": {
          "ref": "d05f1c8c-13e1-4638-8e57-0eb465c9668a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2a645aa-3c44-4281-b419-304f110b6c7e"
        },
        "item": {
          "id": "9c90aa72-4e18-48b3-a1bd-26c5e02f259c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6491fb6a-1776-4276-a7e7-d896177ff44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2dd26c-324f-4d59-bc7d-7e511eb9503f",
        "cursor": {
          "ref": "a3faf269-379f-4d3e-b2a1-a246b3af9c56",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6080775e-a6f3-45db-99c5-d9856e9435bc"
        },
        "item": {
          "id": "4a2dd26c-324f-4d59-bc7d-7e511eb9503f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d252413d-80e9-408b-b95c-f915684c5e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a18a4-697c-42dd-a0d3-374ebb9ff081",
        "cursor": {
          "ref": "6559fe91-5631-447e-b1eb-6229a27a182b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9dd2e4a0-f6e4-4540-a9da-7e828afb5fe5"
        },
        "item": {
          "id": "630a18a4-697c-42dd-a0d3-374ebb9ff081",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "01585a8c-fc43-43c4-a4c3-513bd3e5cb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6987a6d-109f-4877-94bd-190f0ee9ceff",
        "cursor": {
          "ref": "3a4eacba-2898-40aa-9a8c-7b5f0cb069a3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "89a5a8d5-b59a-43d4-a3de-06221a2a2911"
        },
        "item": {
          "id": "f6987a6d-109f-4877-94bd-190f0ee9ceff",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f626a6ae-eb34-4f55-9035-b2647bf932ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6367e0a-1b46-4638-9ef4-02222feac30e",
        "cursor": {
          "ref": "41ed19a4-af7c-424e-91c1-dc8ead6a41c1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b9238aa2-29f1-490c-ab58-61cbb77ae640"
        },
        "item": {
          "id": "c6367e0a-1b46-4638-9ef4-02222feac30e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "18862d94-1677-4901-b037-4e94060f4e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351947a9-d5c2-4560-8409-e624b5b78bf8",
        "cursor": {
          "ref": "bf56ffef-e410-408e-b2a1-3d3942c39aea",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "34a5f362-84ea-4cb8-a80a-2d853a2c15db"
        },
        "item": {
          "id": "351947a9-d5c2-4560-8409-e624b5b78bf8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3e7bfcdb-09cf-4d9b-904b-79434c03568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0024d7e-51d1-44d4-bcb9-4a816daa06f4",
        "cursor": {
          "ref": "098bd541-d93a-45ea-b28d-7c7c4d99d2a3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a5c62287-9904-4100-bea5-c6376e7c85c6"
        },
        "item": {
          "id": "f0024d7e-51d1-44d4-bcb9-4a816daa06f4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af27d7a0-afcd-4518-823a-47a7df3f529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa8702f-13ec-49c6-b51a-237ee5194944",
        "cursor": {
          "ref": "11e5e9cb-8f0e-419c-a28d-3cb1b2886707",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b830874b-21c9-4048-9c12-da3280b31d05"
        },
        "item": {
          "id": "0fa8702f-13ec-49c6-b51a-237ee5194944",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8e6a482b-be34-45f9-b40f-fe41cede0434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90f0113-033d-41b3-a3de-b035019757c9",
        "cursor": {
          "ref": "60179025-b7aa-463d-941c-c22874a44494",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0c81e0c4-0df1-4c0f-92be-5f7ccde9daa8"
        },
        "item": {
          "id": "b90f0113-033d-41b3-a3de-b035019757c9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ceb7e41b-6229-4479-b9b1-19be21b91d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7788f011-1cc0-4c2e-86ed-1c32a37ad369",
        "cursor": {
          "ref": "c5027b6d-4961-453a-a2b6-91a2429d3ba8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "056875b5-ce79-4d3c-a43d-71877a6c7f48"
        },
        "item": {
          "id": "7788f011-1cc0-4c2e-86ed-1c32a37ad369",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "030e256f-a78f-4584-8110-41922432b8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e48afdb-b5c1-4558-92bc-bc5ad1779cd9",
        "cursor": {
          "ref": "99c272c6-1abb-46f7-a428-84e58e4a9ac9",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c44e4842-43be-4d1d-ae13-ab6eae323987"
        },
        "item": {
          "id": "1e48afdb-b5c1-4558-92bc-bc5ad1779cd9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "09a4e07a-df6e-4cae-9fa2-b00a9f883112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb42c80-2afd-4eaf-a621-78083a01f45b",
        "cursor": {
          "ref": "54fb7b2d-4ce4-4d43-ab81-38e27cd091b6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "28e66113-7787-4e4c-b897-9f6b971db3c2"
        },
        "item": {
          "id": "feb42c80-2afd-4eaf-a621-78083a01f45b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "98be9073-f3bf-4fc7-8b14-a99b76925070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2fff44-a70c-417b-a81d-0fba1edc3960",
        "cursor": {
          "ref": "9acbe70f-b9b6-4dbf-9e0f-cface3ce040b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "79d59a46-474b-4f20-b648-cd39e0588135"
        },
        "item": {
          "id": "5a2fff44-a70c-417b-a81d-0fba1edc3960",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "633967c3-0b3e-44ad-8e10-849d8d59712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c90328-6db0-4838-8064-c20e164a3337",
        "cursor": {
          "ref": "5f4981c6-2d89-4aee-b257-b37d564116f0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "408f3948-6b88-480d-b7a3-2ae9b5b69312"
        },
        "item": {
          "id": "11c90328-6db0-4838-8064-c20e164a3337",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "77ec1954-6da7-4a5b-815e-2583b9a5ec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7035667f-1f15-4247-b975-c18c7eaa9fa8",
        "cursor": {
          "ref": "ae29233e-b3c6-412f-b03f-fe3dbf520726",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5affa95a-8a6b-4c21-886c-b62c8fbb3d2d"
        },
        "item": {
          "id": "7035667f-1f15-4247-b975-c18c7eaa9fa8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d6778948-720e-4320-9a5a-d5756c655602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6621abde-cf42-47d5-9eb4-eee26a752e28",
        "cursor": {
          "ref": "96cdddca-7550-4c10-91c1-ce8f3a1dec14",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "21876e0e-afe3-42fc-853d-3aa1fc068512"
        },
        "item": {
          "id": "6621abde-cf42-47d5-9eb4-eee26a752e28",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f5bd7a50-b457-4167-aba5-8f54458f5a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab29d92-fbe5-4ca1-94b6-94042fe4c424",
        "cursor": {
          "ref": "05086a25-210e-4039-90b6-5c49ded1811e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "28498e1e-3f81-47b1-8755-22c4eba82039"
        },
        "item": {
          "id": "4ab29d92-fbe5-4ca1-94b6-94042fe4c424",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fe87f63b-9fe9-4116-9752-dffc27769cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15324253-7752-4cd7-93bd-c177736db23e",
        "cursor": {
          "ref": "78eebcf2-58bd-4580-80b8-daba69a678d7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f122b45c-bcbf-457b-967a-9d862b4c8bd2"
        },
        "item": {
          "id": "15324253-7752-4cd7-93bd-c177736db23e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "30d2c70f-23ba-4f67-89bd-f579677beb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b744b29-fc55-4d72-a8ac-c33cda2ae757",
        "cursor": {
          "ref": "4f756edf-244c-493e-9898-ae8a1c34b292",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1c405f72-dd58-4e5e-9da5-82f7ee1a1b8d"
        },
        "item": {
          "id": "9b744b29-fc55-4d72-a8ac-c33cda2ae757",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1fc59b89-0a46-47d2-88a2-76dea3b52eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0717d396-1f37-4522-b265-9dff81f78048",
        "cursor": {
          "ref": "20eb6aa6-b907-41bf-a452-1f4f943c875e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a57cec31-6a56-4bbc-9c31-135b2a788f0a"
        },
        "item": {
          "id": "0717d396-1f37-4522-b265-9dff81f78048",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "da091f59-6ed1-4198-8021-04c4c0481e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6673713-4d27-42aa-b8e0-fd5919280712",
        "cursor": {
          "ref": "438a2169-0b78-4cac-ac2f-df80043e4a26",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "346fcdf4-a3d5-44b3-962a-0eb2f54febd7"
        },
        "item": {
          "id": "e6673713-4d27-42aa-b8e0-fd5919280712",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7b64e764-eef4-4ac2-98e7-d573e1cc5c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce3efce-5d5b-4e74-8b96-127426a818f9",
        "cursor": {
          "ref": "8f4bcaac-dfe4-4ec2-933a-14c9be91a96d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bc317c9f-6dd7-4b93-aa12-eb4b41eebd8e"
        },
        "item": {
          "id": "3ce3efce-5d5b-4e74-8b96-127426a818f9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a8f19258-a3c4-4781-bc16-da89dc149ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db4c7ad-23dc-4cf4-80b9-449c450c40c7",
        "cursor": {
          "ref": "2abd9127-3708-4ffa-8562-87a1b8323d4a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4b00f286-0b98-4bfa-93bb-f48844c5ce67"
        },
        "item": {
          "id": "3db4c7ad-23dc-4cf4-80b9-449c450c40c7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "804fc8ab-f160-47f4-a094-9947e7c1fcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43910f28-8686-4b33-afea-c619f95e76ed",
        "cursor": {
          "ref": "3e41b673-b0ea-44a6-a30c-a2a9f034f3fc",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8a3994a6-7c7c-4275-b67b-5bae45543d41"
        },
        "item": {
          "id": "43910f28-8686-4b33-afea-c619f95e76ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "561ac62e-b87c-4d68-8318-94a4797f3054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47328b21-5f9c-4960-ac70-89f34e90796e",
        "cursor": {
          "ref": "94b1bc03-02a0-43af-8fc7-3c031ef8a977",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "58c10ebe-c007-4ffd-8eea-b933ee905a0b"
        },
        "item": {
          "id": "47328b21-5f9c-4960-ac70-89f34e90796e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0d3a6d51-fc20-4fc6-a6c1-c4daed01f5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e227fca-0dc7-480d-8ff5-ad86ba4e92c8",
        "cursor": {
          "ref": "40f0fa5d-96b6-4cb0-9006-093683e9d938",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d69b3774-7785-4f73-a90a-22fc5d04cc57"
        },
        "item": {
          "id": "8e227fca-0dc7-480d-8ff5-ad86ba4e92c8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a6528512-05e4-4c75-96bc-bf54857eaabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb9aeaa-9f7b-471c-8faf-d297e6f90ba2",
        "cursor": {
          "ref": "92b63110-7a11-4457-890b-14bfa3dcfd47",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "78a64c00-ef27-4e01-b06b-efa67148b643"
        },
        "item": {
          "id": "2bb9aeaa-9f7b-471c-8faf-d297e6f90ba2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "18384fd5-3c37-49c2-a203-951a26727cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59362258-1128-4c6f-bf99-0641589003a1",
        "cursor": {
          "ref": "f0018635-5a56-403e-b7cf-a64454153356",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "556d0eeb-cfea-45ed-8065-6fbae86bf4b8"
        },
        "item": {
          "id": "59362258-1128-4c6f-bf99-0641589003a1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1ac2a8e5-3e52-42b1-875c-f8fd9dacb0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d6e708-a28d-4a35-960c-dd2894097813",
        "cursor": {
          "ref": "30e1da20-56ae-4bb0-8893-eb6558141aca",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b2af2162-7e8f-4927-a5dd-a32d2e881c8e"
        },
        "item": {
          "id": "23d6e708-a28d-4a35-960c-dd2894097813",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3f6b824f-1484-4d5e-97cf-23ceeac0e5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e01d74d-c572-47d2-8564-d8b0dedc526c",
        "cursor": {
          "ref": "20fdfd26-8c7f-49da-a9fc-5d0ee1393fba",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0eb0a629-5a67-458c-9be8-d0265abf4e31"
        },
        "item": {
          "id": "0e01d74d-c572-47d2-8564-d8b0dedc526c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "be362466-ca6f-4e5e-a380-f40683c83b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d48774-0d58-438e-9f2e-363855097fd2",
        "cursor": {
          "ref": "ab4dd71d-0de2-475c-8e3b-aa81c60db5cf",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7957b7e7-dc32-4ec8-82b1-1d4d7cc56add"
        },
        "item": {
          "id": "c1d48774-0d58-438e-9f2e-363855097fd2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "23f00e12-f3bf-4f66-88bb-0b42f7cccea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8031bfed-c16f-4627-9c7c-dac41824caf8",
        "cursor": {
          "ref": "4e7fa4f3-22d8-4072-92a4-6edff3cd1e15",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "690c333c-c830-40b8-8b26-01e2c65e0c5a"
        },
        "item": {
          "id": "8031bfed-c16f-4627-9c7c-dac41824caf8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ab2a6ec6-cf51-49be-9ae4-5115ba45a9b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99303442-64cd-49f4-b639-9f6f4bf0f1a7",
        "cursor": {
          "ref": "6b19e248-ebac-4be0-96d0-e49612298b86",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a2f28914-e605-42ea-9ba5-9f22e025ad65"
        },
        "item": {
          "id": "99303442-64cd-49f4-b639-9f6f4bf0f1a7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "510e712a-153d-4b19-8bee-34451ad0e8d2",
          "status": "OK",
          "code": 200,
          "responseTime": 1062,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0cf123-6c04-462b-8678-ea08a1cb9c13",
        "cursor": {
          "ref": "d824eabe-a0ef-4d0c-b011-64ace7e01138",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f9557b59-ef49-4c3a-8bac-18b0a99cb1d0"
        },
        "item": {
          "id": "6d0cf123-6c04-462b-8678-ea08a1cb9c13",
          "name": "credentials_verify"
        },
        "response": {
          "id": "827aab59-0f6b-42d4-a389-d82b95357c95",
          "status": "OK",
          "code": 200,
          "responseTime": 3090,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a17d616-f3e4-43b2-befb-7eb412b09998",
        "cursor": {
          "ref": "008d274e-749c-4858-93f2-8da0490779ac",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1373240a-528d-44b0-87c9-7781f8c0315c"
        },
        "item": {
          "id": "4a17d616-f3e4-43b2-befb-7eb412b09998",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f139ac71-0f5e-433c-ae9b-237aa54d9f10",
          "status": "OK",
          "code": 200,
          "responseTime": 2702,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d85058c-a2eb-4e7a-9f9a-7eb88d9b316b",
        "cursor": {
          "ref": "77c72d15-30f8-4e6d-a741-283315689000",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "863df479-114d-4903-9d7d-5040d8dd6caf"
        },
        "item": {
          "id": "9d85058c-a2eb-4e7a-9f9a-7eb88d9b316b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "581e19fc-54ef-4a7a-bded-d9ca21b8d2c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d85058c-a2eb-4e7a-9f9a-7eb88d9b316b",
        "cursor": {
          "ref": "77c72d15-30f8-4e6d-a741-283315689000",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "863df479-114d-4903-9d7d-5040d8dd6caf"
        },
        "item": {
          "id": "9d85058c-a2eb-4e7a-9f9a-7eb88d9b316b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "581e19fc-54ef-4a7a-bded-d9ca21b8d2c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea45bbb-0cd0-40cd-b381-1f91645fd799",
        "cursor": {
          "ref": "d14d45c5-b684-4d62-a5b8-d023b013d7dc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4b7c9e29-cacb-41b1-bfce-d3cad83b5c24"
        },
        "item": {
          "id": "3ea45bbb-0cd0-40cd-b381-1f91645fd799",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "846df41b-adec-4120-aef6-603dee0ad438",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e7a951-8a64-45c7-ac46-42c1baec5d4a",
        "cursor": {
          "ref": "0a79f2ba-76e3-41a7-9f19-8e467ddb2ab7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "de9dd5dc-01a6-454f-a38d-c1e0ea58d2fd"
        },
        "item": {
          "id": "d0e7a951-8a64-45c7-ac46-42c1baec5d4a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "18872b5f-8ca7-4a00-9e02-3869b6f9c71e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 100,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}