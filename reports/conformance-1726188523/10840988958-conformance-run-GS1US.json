{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "028e2eb5-dea9-4a7f-932b-976ff2cf407d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c3626908-7f7b-44a4-ad3a-a5af05ae4912",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "572399e9-2b5d-4d4d-a680-f688eed9de99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "af3e5c4a-5db1-4937-9922-a49aa6c6bebf"
                }
              }
            ]
          },
          {
            "id": "92e315d3-8b22-4d00-a21f-2d4d117e4c66",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf862a01-bd95-4fb2-a15e-82258de53acd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d314e04-1feb-44a7-a262-1743cb2a0108"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2ce9e5d9-bea6-495b-9169-ab5943a5a89e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57d42776-5fff-4ff6-80f8-4d21186aecc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "097b3379-2626-4fd5-a5ae-a5479cbf8384",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a60781b5-f35b-47da-9efe-9a61d3422175",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43a0c7b6-a63b-4ca5-8ee6-0abfbfe25a88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edf92e68-5cf7-4fb2-8c49-239ab83cb4c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f9ab331-8d9d-4106-9179-65aab46e5d93"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e57626a8-405d-40a8-a26e-3620abf31eb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a71b776-cb0e-422b-95c7-447c4152f389"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a67e6ba-325d-43fe-bdd5-bc9315b37fcc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "363d4650-266c-4efe-8be1-d936f14a8e18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7257e3ad-bc25-4e63-8a6c-27079ee0d922",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19760b36-b140-4e2e-97a2-4af07ed721c5"
            }
          }
        ]
      },
      {
        "id": "ad1d1a66-0d27-487f-a0fa-1f5afcc84bad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3615bcbc-6359-4db5-bf6a-74ce9781068f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecdcc12d-e46f-4163-9fe2-da20fba7e0de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "342cf52d-a14b-4da2-8e6f-e2342ec005a4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c93296-e931-4fba-a5c4-174a19608fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ceb2876-dcd3-4b16-9b80-8f35c65d740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52998c63-e359-4855-86b0-a25857388a78",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902f021d-b518-49a8-b988-5a0c71f52552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9cc3b43-61bf-4147-9003-22a557937b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b853c09e-7c09-4a32-a6ff-083e653b3bea",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed790b9-9490-42e9-9c8a-a1552314309b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f2bcca8-96dc-4915-8dbb-418a6d57fbde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b8b84b9-56a1-443a-82b3-e14eabbfcda1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c15f0eff-85e0-423a-b4e3-603ba7056a59",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440f2c04-d4cf-40b1-9085-1f7d37d0720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f88fd87-2f87-4148-867e-63ad2af0ccc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb5609c-8b74-4ea1-8511-961a448a8ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1232880f-caa5-4442-acbe-6b4cb81a1298"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68ce1ee6-ea9b-41b3-a85b-e5d945300614",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3bec310-ff6e-4e27-9d24-bbe02294362f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eb7d5b3-bdb0-41f7-8be0-0017f983cf6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cb8d65c4-69bb-47b8-8cd6-edd6e67ef3a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41677a1a-c3ed-47da-a9db-2aa90f979f74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2282c6e3-5463-461f-8ea1-b6868d8388ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8c2fc99-d623-4f77-a243-b30f4fa8e8ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96203eb2-f7c3-41b5-a640-cac31c11893e"
            }
          }
        ]
      },
      {
        "id": "237cc703-9736-4542-b60f-aad907274cbd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0e9ce5ef-7aad-4b5f-8cb5-b0edea07f8d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d039cb10-1e9b-4647-906f-a47bfbcda0c8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7dee27d3-82aa-4bbf-bd42-292472ed6415",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1efdaad-7c6c-4ce3-a151-6b78dcde8ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf4a0c4-bbf6-49aa-b338-074380e54279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949fd68b-93df-4422-af40-6c37b4396630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05b0b7c6-da12-41fa-a2c4-4873eeb497f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ba4f06-980e-44d4-928a-185d0929a7c1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e57faf-404a-4c6a-b265-0c9593012bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d289706a-5c86-4fe3-a44f-91e01bd047cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9768fce-df41-438c-a7ac-c7ca778c55cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae866a3-bac7-4370-a31c-160237f9edec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f82ce5-8506-4b69-9c2f-4c76dd208e95",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e0809a-5fd2-4202-aaf2-cb54333b5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82131ad-51b5-444e-b6ca-c5e6bf2e15a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ac3fe-66f9-4566-af11-0213bc98476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f4e585-1212-4b13-b429-e20e333218fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a79f844-5d7e-40e2-a839-87bcd92c0591",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeafc8f-453a-44f9-b714-9eed4389bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff5e693-1b25-404e-8e4d-35293dcfdd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab91128-84a1-4055-a756-961df51a6c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "875a20b6-34c1-4990-ba93-9b26325fd731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092a929e-5c59-400e-a7ff-dfb32032c243",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ba7ed0-9115-4417-9c01-a487139d1574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a60200-9401-46ce-b148-2df1d44380f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95111d18-b891-405e-a010-475acef0b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c818998-dd79-4beb-a83f-4f8931af7bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1f26d6-f6fd-465b-8f31-dff380bff988",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30e7b60-8bfb-4956-9eaa-0254577125f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664a660d-d0a9-4d68-80da-4842830699d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c866fe-4f6b-46ec-bd89-97cfbb06e77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d402ed90-702e-49e2-ac82-17059a355817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d369d5cc-b60e-4f66-8118-e418dcd8c8c7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8770570d-0934-4378-8c16-f291f20eb597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6f6ad6-40d6-4c13-ad6e-7f429e48f75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03273e08-dc89-4da1-b944-6f48e6e3bdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d05e1e73-1159-44d2-a146-fe7d3cd30d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b2e30d-c7d8-4b6d-81a4-87c52dfe19c3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7ad731-a3b9-4f8f-b68c-28ebdb06657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058eb928-13d9-4b6a-a20b-2fdae860c42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac50b626-40c9-430d-ade2-2c22dab4f17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "733d4208-753e-42dc-8942-9ab2eb633f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854aa0f8-9b9f-469c-8b23-005be1a1808e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8260b4e-401d-4df9-9c49-23842a0d34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b229684a-1b21-4409-bae7-933332e90851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9131cd27-f555-417e-aa92-7b2b2bf7272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b594909c-bb06-4796-9da6-b61c132087eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa3232e-9b12-4701-8a36-e8509f6026bf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e92e2e-7d8d-4e9b-8d53-8845c72ddf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c9cef8-b44a-4c1a-ad20-61f06fde96db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e78d9a3-d9c7-4d53-81a4-9b479be64186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e38a3b15-e7dc-4a70-bae1-761a4b1f864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d188e342-e772-4654-92f1-aff9589a8531",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4949bc-2770-4499-929f-dcbb3de3c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564898c0-4c31-418a-874e-3990f4a4c7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215acb64-c572-4d55-abbc-742d5e06e1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43dca476-61da-4d9a-a4ae-8726f7810ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fbaaf1-fd90-4e27-99e9-53b25729f979",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704944a0-b4b4-4ef0-8196-be43834ebd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989d0189-f36d-47f5-b903-6aebf8504492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48c56c3-0c28-41be-b52b-e5c23fc5d0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "604350a1-b42d-426f-a395-24b1ef261b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d061b62f-f504-4edb-9eb5-40c4d40fab00",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e34211-1f01-4ee3-9bae-844176718793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddf1358-5b85-41e2-9a21-a4b30e1ea8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f064b4a5-2689-45bb-9c70-8b9f1d4e5249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c161f13c-fbcb-4c53-93ba-e3f920b0ff6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475996d7-8342-4767-bc1a-d0ecfceb1bea",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a6895a-0f39-4944-9be5-7d5ec889575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f61742-68fe-4d4b-a4c3-30d5b5dfed7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dc8b9d-114d-4a58-9c90-357ed6967c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79fe1f9c-ca29-40ce-bade-eb4144c21b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788fc188-360b-436b-a039-c88a3eb787f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4268da-3c72-41a2-9c05-29e2495edf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a949ec-ea91-46df-bed2-9401d9957480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3dd944-df47-430e-baae-87be97e9c796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b2015b8-bd18-406c-82d3-bf35bf067e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0dc0d5-aa10-4111-b279-98987e35d933",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d41acd0-1983-4d4a-99d9-71a4797549d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661951f1-9fd9-4a41-bb84-80b9bbcb3ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5558aa6e-b5ff-4b8c-8657-919080904549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eea3c9d-c426-4baa-be36-359bb5cefe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d1e4b9-35a8-4d86-9fca-98060df5b49b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb62b92-9694-4aa9-b3cc-035398b89db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582ac9cc-0513-4a49-abda-9d45a0384282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec0de6c-8cde-456d-afc4-1166561bf8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c548a62-2a1c-47a9-a0b1-6db060719956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdaa271-ac05-4de6-996e-34d182dd342b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eedd1a-3f76-4028-afe4-913eeaf0557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad47ac4-8ea1-4939-a70b-da57560f98dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde5a244-cb84-47ae-8a3e-51c47dfa24fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae0da99-7bfb-40a4-b5a7-2a5b5dc041b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb68284-1452-4762-b5c6-f126e0196138",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c411de2-3ac4-493a-999a-270c6c531dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a51594b-3dc0-46e3-966e-f2f301031410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e375919-8577-4160-85fe-fd0648220537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87334689-998c-4ff0-903f-a99e2b9db00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf9e49d-ac02-4d2d-bb58-9a12b1854126",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9bf916-5ee9-40e1-b0fa-f60cf2917586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcbd83d-1095-43bf-9cda-bd6816d107fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca248dd9-9ce0-4329-9867-f9b060db5139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9610ff0b-f1fb-4935-9c8c-12c4e30fb30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49995b8-cc8c-4b76-b0e5-fc6f6d9752e6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d7fa7e-b2a7-4eb4-852d-b565ad82bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48db8b4-3143-48b4-95bc-1d82b27306df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b515dd-51dc-466e-81ca-380eb8ee7be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "318048f0-e4c7-465d-9c90-05cfc139da14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab66bf97-a59a-4145-a897-9ecd4dcc4126",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf17338b-3cf9-47a0-9225-ff6d822d4bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc340cf-2d87-429a-947e-f4837af0c68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474d73a0-00d0-486c-a002-0eb0fa7b0fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fc0ba9-74d9-4795-a85e-d9efe81d52b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd0d01e-a752-4aa6-83b8-91507b17ad64",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8583022-3b6c-4c36-888b-e92584634911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5803c221-7d22-4626-a4c6-5813c1781064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b83f9-e73b-4ce3-b419-60b6d15ad4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9502e9ad-4b11-4e01-980c-8d5384159611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a404ed08-202f-468d-8e16-d14c286127c9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db754c33-6df9-4444-a1f4-db705114242d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a7dd8d-e004-4102-b840-45707ed80ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7e7d93-1c95-4312-b983-03ecdb5d68d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a346d39-5e75-4c16-a45e-b8a2c83b80f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94e0bf1-6ef4-4f91-bef3-b9d1cfe90b89",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e84586-ae96-4930-b982-985147dd8699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0c0373-7af6-4b2f-b21d-f5b69eb9cc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437af250-2a9c-42d7-9180-9c36cbc6e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9f2ca2-fda0-4a3b-b3c2-d71a4e1f0297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9565f1-5d77-4cb5-b0d9-b0ea42b29a2d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94366ab-fa0b-45c7-995b-f6838279f6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d39b06d-666b-445a-a7e9-3b0c70c72ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ff5601-370a-464b-8dcf-95e424c7c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b77951-d4a5-4f84-a250-0ed86b723ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e343eec1-67f1-4e51-80ce-bc4c70f53dd9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91649ee7-56b4-4fd9-872b-0c560d9c336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b156f6-708a-47e3-ad7a-31b2662ebfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cae6b93-99b9-45e0-af68-d524c4f19bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "605cbff6-6dc8-4efa-b67a-96b7e39a3de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa50cec-0cef-4029-a613-c251d773379a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d51fe0-a1a3-466b-8fdc-9dda33dc2f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189f8ac4-12c4-420f-92a0-eb5a040f5305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb9d722-82f5-4b15-a93e-d10cfbd78bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2969a4f2-3144-43a7-bc8c-89aa13d80599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42c15d9-0679-4a0c-acad-9fb3a5c93466",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a576cb4d-e493-471a-a6f8-bb4a270795ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b537299-3cc1-4475-9429-0268f90da7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaf906f-1e43-44a3-b81f-0b70225ea144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0aa30de-64b8-4a7c-aba7-87342e555aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc095a56-e90b-4be5-b555-a3fcd929b537",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34acac8-3df8-4162-b689-9df72bea9479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414d6077-faf7-473b-be9c-bddb89a33dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75763356-c062-435b-8c0a-60fe3ee6889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2e2182-3397-4a63-bd08-02a80aafdf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4fd96d-5d21-4bab-8cbd-e843ff576334",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d733763-cc41-4f01-b686-c28cab76e10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012449dc-efa5-42aa-91ce-0a59834ee630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f48effe-5425-4700-8f5e-28071825be83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7124b379-9a42-42d9-9655-5a123e8b5010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773b8c96-b751-4e12-b267-233bb20535f5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675b08d2-748a-41da-abf2-626188c26d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbae684f-4b95-4072-b915-b33f0426df51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a288e5-f9a2-4ea5-9270-7ed42c47678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5760b3c-dffd-4ae2-accb-3f1b40a4a7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765287da-c70f-4550-9aa8-e032c73673c8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357f52aa-d9d1-41ca-b20f-1714a1859a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598f474a-f185-43b7-a820-6bdbfa7badb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a82e74-efbf-4d9c-88e3-b2f5b1c7edbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1458156-21ae-4c6c-a5ae-bd5bd67b0b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8cbf22-1ebb-4e6e-af7c-f9652d130d8c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f0130b-54da-4ab5-8f3c-e78970080832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afd2ee3-0314-4177-b6f6-c0eac285d672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ee890d-7dba-4143-9ce4-47f020838eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7cf40b-174e-4fbc-9fc9-251b9240b2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee332f63-b0c8-4133-ba97-f8cfe49bbd1f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c6ca3a-0ee7-4c57-aa40-8f7846fb8a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24519660-445f-46dc-b0ad-0d5c52e54a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bebdb1-8554-4115-ba15-82dfced7d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8d85da-ffc0-44de-b48a-9f8c07e22a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d25522-c713-4af6-a910-fa6bca818585",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee6311b-4ff0-4b0a-9a6f-1631a01e888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8be7159-4b0a-4c4e-af10-5ce1a167d9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b575d86-b82e-4a68-bffa-9dfe2e4f37c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d91db9c-5761-4403-929d-77a25049e941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8449ab57-c74b-4ff5-81f3-0b62b1fffaf8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e075827-b5b4-4f42-b308-a56f2ce72fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76279ba6-3aff-4468-bb97-586b2ab06422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1883f07-6360-4365-9ab2-7f7c7a1dba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "795389e8-bed3-484a-a70c-fef9a7924690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c11a9b8-4d0a-445f-a6a0-0d0095bec453",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c194af8-f8b5-4e06-998d-75fcaaa46a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb06b8c6-777e-4c16-b208-3cf670a37ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc60899-6fc8-4edf-a1a4-5e0cfc898de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a45f56-87f3-4624-bbdc-8dd5e7f0fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f98d9e-2e43-4d64-9cd8-32a6d9f16053",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9a4222-0eb4-440f-b0b9-5ea92629e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898c1495-26a5-4ba7-88d9-65bf9ee45689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189b492b-3fee-44e8-8cc9-cc94cdd7503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "715a28e2-9f81-4f82-b247-2b27e2b29919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa96774-7178-474d-b381-17e36406cf97",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08349034-445a-4c48-838a-9419edb00f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a90c78f-0ad7-4946-acd0-fe7bd936fc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74d29b3-0b0b-42c3-8421-182758ed1a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "52d399f6-7795-40f7-b820-b86ba1dd4a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d3ebe0-14a5-4f26-b75e-b9909999120c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a85b81-eaaf-4d03-8f1e-f255615a7651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea3c884-bb1a-4a4a-b7d6-29a25a4ce18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fe5e43-e81f-466c-9380-16bfbe2d7249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1a4e42-79f8-48dc-81b8-2333f934e3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b3df0-169e-4a8d-ad54-be8c5fa2d420",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc9918f-894c-480c-8886-850c598ebbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e971ac5-8c52-4bd9-91c1-2648e3c25dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ee9654-51d0-418c-837e-56e7ca52806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1ae782-275e-42d2-8aa9-37f5466a245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72af4364-deb9-46bf-9a82-5864778aa028",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98174428-1fc4-4505-8097-d4a608d0b0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f10bab-ac49-47d1-9971-513b92c2863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2466228c-53f1-4dcd-b32c-e550cc0bb972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "de2789a3-74ad-4338-8442-aedc91bfcaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaf81ae-0ff2-4f79-8164-12f64f557762",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b60e2b-f1b8-4450-bddf-777641e5abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958a7fef-f357-486b-a612-926bd21092bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f051797-84b8-4422-9c44-a9491b472956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9828cc18-6158-4eb2-98fe-a5b3845a6f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac25c61-5225-4779-8bc7-b14993033d5b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf16bf87-4669-4f43-a25c-338450a2da24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724fc6fc-afa0-46b5-bfab-06be5ef9d60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d026d9c-fc73-4e87-a6ca-1f4a6d2c7a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3eef68-84bd-4621-b1c6-2c478d9508b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deca3d6c-a615-4c1c-a6e7-e434e3d5fa15",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c6f8f4-6afb-43f3-b533-c8f2a371438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23860479-6550-4204-8f4f-c104a0d3361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867fee7-28fa-4f39-8486-48aa4a8e3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ca2e2e-a4fe-4cc0-8a06-a4001a39b4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34387798-255e-4b88-b6b0-979aebeff5a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7f4c4e-4ccd-414e-8565-758ebf3dde31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3f0dc9-58b1-4a63-b519-eaf2692a14eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574622ed-e67f-4d57-a11a-e9dd7ef0e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4075652-d685-4ed2-9f14-29e7a8841707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d703305a-9cf1-432b-b46d-9b3b2ffff445",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb6fd11-ad0b-4f41-a6dd-ce86d672fb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac50cb5a-ae66-470a-b8a5-e38801173bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65ada58-ace4-4678-89cb-eefb2b98e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d515dc9-07e3-48d3-916b-5ec68fd90e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb55b8c3-cc8f-4683-aeb2-031370602c97",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1167bf-53c8-49ae-a944-94cdde68a82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9d563b-330e-49d1-8a6d-7aea24b7a30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3a012f-d2ea-43b4-803c-bd5e57e37242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3730bd44-4dff-4a2a-aab8-60ed29f2bc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd3e92c-8a90-4977-ad9e-68761d04f8dc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc83e647-16ce-4dc0-9ad9-40a43ad44596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6b4695-99f9-4a2d-8b3d-edd06195dcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779b8277-3582-47dd-98f0-ad934857f7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66b06583-c614-4e3e-929d-883472ff5d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c0decb-fcf2-4572-9c56-846fe62c5659",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b7008d-1d94-4434-8a1e-f865421436d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f845c77-c71e-4b16-8580-d279546527cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1b17a9-3c93-49e2-8667-c83a4c44dfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "020693ac-a733-42a6-b12c-47a782817d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5764da1-1a72-4fb7-8ad7-f2eae95c6ac6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dcbb02-d967-4c24-af9e-cfcc84aa737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be91592-1de2-4e9e-a775-53291bdfa92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35818a64-e5ec-4673-8f99-0c5c455c8403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23733857-e8bd-44bf-87d7-8dbde919ac7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2328cc-3ece-495b-b849-2b5465b479e7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a1ffc1-6a02-4a9f-a433-2d4f2183b343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c187906-303e-40e6-9ec5-0289f89f823a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45eb10a4-8697-4035-be9d-b71b2d3de66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ececde2-96a7-4d3c-82e5-02d78d01b70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54bd76c-73a8-4c96-b57d-327ab848b9a3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df98089-e64b-4338-a62b-a709bb34382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875461bb-73b2-4145-b431-b842bc7c4f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71ea5fb-f7fd-4352-96b8-94670823a869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fcc575-12a2-4975-91b7-4d22ab7e5eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81678051-02fc-4bed-b7b3-59fb7a5a93f5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe48d4c6-36cd-43a4-a975-afa60ae23145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e58af8a-e02f-4108-81ba-67feb3f6fb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f8a1c5-316c-4ba1-bdc3-6b810ecfd9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de92569-563d-4574-b8b2-90c2658eee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3affa11c-e4a7-4351-b2b1-d96262fe2245",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae66d735-0c7f-45e4-8620-7c5e6af8b83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d954a391-f297-4518-95f4-bbaadc3f30cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd7342c-b785-4cff-8f36-5608f9f377ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2a1c98-ecc4-4930-a39d-a4072f652396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bb9b56-63fa-4d5d-b40a-4c234973f4d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c51366-134b-406a-95cc-c4383de87feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1595fa2-d3ca-4ad8-a1cc-cd9e164a0eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c555687-487a-4cb8-b25a-352af3340b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52bbffe5-f8ef-4518-a0e0-6d3b82cb759f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795019cf-6de2-4c68-b11e-2a085a62c3c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f9ebfa-b8d2-4ae0-8182-868ebde90db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd85fbd5-7f3b-458f-97b7-a01359070fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78ea03e-e11a-4c05-9513-df5c517dcfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b7adc7-7013-434c-9f33-daee5fd2a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afc69a7-7eca-4eb9-b669-7385e8d1f553",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ca2f81-2463-47c0-b843-32df52135952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bc3125-2105-422b-9c94-bf180fbc00da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d077b0f6-4888-4656-8031-a66a402673c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93b862dd-c239-4809-a672-f9b863bb7744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70334b4f-101d-4c44-b683-9b7d7a34a36a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fef443-9211-4bbe-a0e6-cea44d2b1e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b865b7-ad26-4543-9339-5e2b41c0d24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a84d843-5a32-430d-b55f-b2679270d185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc993c9-3d94-4e57-a1ae-f50ad17b15bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01b76eb-8e02-430c-ac2f-004c603dab20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cb5f75-7444-4055-b229-f3a5f04215be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e84050-97ef-424d-8f0f-01b5814350cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b9bf95-7fa9-41ac-b984-a29d3d94d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3226479-438b-43f2-b6f9-36af728a491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a232d9-8957-43d5-b83a-3a4756befd08",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e22a5-3e66-4a39-be58-6aeb829d3c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2103df-a4a4-42ed-935e-7b92f4107f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56eb8684-6127-4dc6-8c5f-34dd6e44cceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e61070-4b83-4621-abea-eb303c6a43f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d07e5b-ad97-4742-a9e0-06646d7f1851",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f4cfcd-930f-4300-b665-0b95bbec5e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0560762b-6c45-4973-8e38-8d03fa9e635e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efa8c58-45b5-4321-ba61-6de81753137e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e992c6-9d17-47ac-a80b-cbb5b3ce31df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16cb6c5-5fbd-48c4-b5b0-b858ca355e6a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e3f8b8-0644-44b1-a1f0-31b5b48503fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b57cb7f-d786-4325-a9ad-fcd91e21e98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b31079c-3e96-4f12-84dc-42cf024c9c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc030e7-ea37-4577-8d21-c91c15d9f5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dee1053-054c-405c-ba55-ff15cbedb6f3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c0a835-ff79-4697-a75d-2418a11976d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf087a1-7b37-4a5b-bc15-27536ce893bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4928fa46-27e0-44a9-b6d5-c631b6c4c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4cc758-7420-4599-a408-4fa4909e7705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e4eb15-3ad3-4fad-ae37-48109af4f5cd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb600cc5-4c88-4724-bca4-904a6cb93d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef80811-6257-4230-8507-d7dd57de47a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589f72a7-f2b3-4159-a939-ca422f8fab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a018bd65-d2ec-4bcd-b99f-9034c10026d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d5142c-6085-4eb7-be24-2e11ceeeec46",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da74dade-4088-4935-9e22-fada52fff98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bed5d0-ced5-4fd8-b143-aa8320263da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856f7926-1d0b-4ae7-9baf-febc4dc21c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94cb30c3-b6eb-4a5a-ad99-079d9364f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788d03e3-0254-4354-9557-b27e1036a7c6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc353fc-db0d-4359-8d56-057f7192f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808df41f-b899-4fad-b84f-a97ee26bee7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080e90c-bc7c-46ab-8f30-0c45d3441772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e69dfd-60be-422a-bbab-be1e0d5a589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9603457c-7beb-4320-93ed-0836a388a74e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f54be0-0f9c-4440-ae68-185df5344a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a20335-3904-4055-a65f-ab9d10f43539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6394e6ae-a559-4352-825b-7bfcff9e7467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2c1dbd-ab16-4395-96f7-8200810896e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6315840-2b6c-4b9d-bbf7-f7882ba29f75",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beb0290-6571-4a70-a350-3cb61b437e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c2f496-5b08-435c-a362-7b5b44ccbf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95926df9-9408-4ecf-928e-9f5626c364ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4002b56-b082-4162-9c40-2c2b5014e76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321514ce-3c01-4eb7-8704-d9639de387f5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd9b3e3-ed58-4890-a87a-afc58cf886fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede1995f-379a-4152-be42-a484a1523003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385b0663-643d-4d54-b1f4-999bebf8df00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c9756b-ba18-4236-a386-e9864a2a6f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c9fb28-c7a4-4b66-a96f-f5149d78d26a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52efa793-ed66-4c6a-ab67-11d1db62a3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00cf08f-fe35-4f16-a2cc-8c825660a676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c155704-971a-4b31-a0cc-87a11aad6f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4ab4c3-19b0-4d5f-a44c-ff81f80a815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb531c65-9e5d-4e3e-a22a-59754175d984",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd48b3b-e956-4310-bc84-65e13a86a64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fb7778-624e-4d2d-844d-622ef4535ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f590473-2084-4c4c-8d15-2ca57f27ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49137dc-b98b-45dc-ab92-54a7eb137b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d069ffb3-b417-4ac2-86be-f5d3edfc8b3c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08306a7a-f15d-403c-9177-e6f51f70c392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6593c7d7-cf66-4d7f-9489-889abe3e96d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef94b69-13a0-4757-93b2-1226b2641c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee1c470-48b6-4ff5-a7a8-8de71d4a4f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f32a178-b8a5-4757-a5e5-7d5fbea13af2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a046c625-f51f-45f1-a157-2403ffd5607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600d6b82-1721-4303-a707-dc16016364f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bc14bf-8d44-40b0-817e-c1fb9501af33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd93d7b-c249-4798-aab2-09fedff9f5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a192058-23cd-46a6-8893-c07c790711ae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf88c8ae-17ea-4868-848c-20e672a7c6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e585d095-3927-41b2-ad25-1742832d2fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a6a96-5dfe-4a0d-a2ae-ac87fd2031ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7386749f-fc25-418b-97a4-feb6ca6c9ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3072a310-a092-4f7f-842d-daaf02bdac57",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa04bce-e9d2-4893-8008-189e8e4872f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eb20a2-cfea-496b-8b4f-d92b191406bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d2d70c-8b57-4138-b55b-ca7f653d0525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00357c64-890e-44b7-9594-77cc9b8b62db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48724b1f-0c8c-4b8d-b008-90aa47681805",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed28da57-1e44-4daf-beb3-9e575e860eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc7a024-5823-47d7-adb5-a086254fca04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e386032-7544-4e32-8255-06449b1daa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec0d674-eafa-4aea-860f-99be7305dc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a03747-9fce-4648-b2b1-508b58be9beb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45032842-56fe-4796-9f4d-259d2061016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c58452d-57db-4d0d-bbf9-9cbb15288370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268fe2e4-98a0-4691-b6f0-05a75cca2d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36c44f15-66f6-4ec7-833e-1ecdce4678f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1b21f9-6c81-43dc-b542-a3123ca7ca04",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0185da2-cfeb-415c-a69d-73058ca2ac4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304715d0-10ef-454f-b0b4-4b96bbad48d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2356d2-5bfd-48ef-a77a-d0fde76f1a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b89dcc05-dcb6-41cf-9fdd-508822316bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d3d980-e72e-46d7-b47a-96962655b3f2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ff79d2-5972-4d1e-88e1-e5c9b33e922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acfb63b-5fb5-4ec9-826d-b5a8b6180268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61695f77-52e4-43a4-94b5-515dd51e294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f14cc980-c96a-47a9-b356-612e4fe031d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45b27ea-207c-4469-b506-9c19a9955937",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9727c2c8-52ea-42d6-b31b-c71493e80518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab53e840-56bc-4ccb-a249-4cafd19068b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8644619-d1a4-42ec-ae8f-68bdc4359b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f2c3b0-1aab-49be-b5e8-48cdb5bec86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6c9f51-91f6-4c17-9945-558dc09c40d2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46f4a25-7c16-43ae-aebb-78add785b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a243746a-f5c2-499d-9ffa-9fa3c9f00a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61454dd2-2196-486a-87a0-796151cd6f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6ea7a1-220f-4a5c-a2b9-0b2ac82ce57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270640cf-01e9-4648-814d-cc4a0956ea8d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2a8865-bc8e-40b3-8f9e-947986baddf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e374369e-7448-4a85-b3e3-b0e2c41ca951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf272c8b-8eef-462c-b321-3e6d05c76359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec95ec33-4e80-450b-9bb3-5de4ab1d5997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bc9887-31fc-437b-ac0d-f5fea81a9c2d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cb9724-fb6c-462f-8925-fa8c278aac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc008ac-64e8-489b-ba0c-42bf7aec703e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd16d23e-274f-442a-a710-bbe12834c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd27223d-c1cc-4f19-a880-2af9cc9107f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101e8bd8-6502-43dc-9cf8-15866fac284c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4fa61a-ec5e-4e4f-a3bf-eecea38f999b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50b1653-a8cf-4803-81ee-d61ffef77074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ca30bc-4065-4972-be7e-2ece10090746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3eee0f-f1a5-4d99-8045-3db619375462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077f92bf-20b3-40c1-a179-4c2b830118c7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02917ce3-82d5-4a8c-9e3b-82b2382963ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48203b5f-7e76-4183-b1e7-b091c610fee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2baa95f-0da9-448b-a9d8-cf1e17cebbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf84606-d738-4505-8429-da4296386bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac22de3-5f39-4a41-9f4e-1324e4cce5c0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93eaca2-3436-4137-9540-849122c3c38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd920d98-cfd6-4242-837f-270772618a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853eecb1-2150-47f7-8097-c4675107d049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c649154b-d6ab-4035-be65-d9658ae3be9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d455730e-c984-4a09-aab6-d9aa16b0b814",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628d1240-3057-4157-ab71-4e58f69e9f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca385b4d-c33e-442a-8adc-c960b3a9adaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adfe2f2-d7ec-46ad-8312-ab67ce0879ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11fb2327-37e2-4ec2-ab67-ba3e7a63b205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a30f2c5-ef9e-4681-9c3e-b9581a399bc6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d296e408-f3f9-4802-a756-bd44eef4bf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b81da4a-9a47-4713-81a6-4fa568e00cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d432e1-0c87-4023-b052-0dadf910c010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68a7b6cb-a820-46c3-9a4a-1edf79fa8651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c0d19-cefa-47db-94f4-01bdd6c1fe4b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90dedda-e637-4ede-a9df-c79c79f39659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d452362f-114a-4916-b382-1bf2479019da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84281457-f5b6-4bba-9efa-cee4daa8cf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a22235c9-d59e-457f-ac24-b2b3f556a51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d62434-0034-44c8-9582-f02a77f2f897",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888f231-f213-423b-9073-6c2ce4e63eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ef1034cc-044f-42de-a8c8-ad0a6221ff69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314c5213-d5ba-4e8b-b241-30a9c19041c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4939be5-56ec-471f-a7ea-65ec3821a625"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b46433f4-b75f-43b6-88f4-c260d6f663f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ba74d6a-8bec-498a-ac68-07e6a94ebe7e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d957c3e2-941b-4fd7-8f8f-10f1e088e600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7e2dbde-d23c-4d02-9566-5c054fc8a21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e2d6ec-9887-4f8a-9ed4-8da2201acc88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52c10b29-8982-4d15-892f-7f36b8a1abbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fe4cdd4-db84-48db-81cf-3cd1be10e33f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01f55009-dae3-4e46-805b-5aea2d9eff45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77ac3c82-c7f9-4662-b877-e6f9fbfca475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "924a29d5-fbbc-450a-8d66-68f764ef593e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c279f81-0439-4039-9403-88cef917d6f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69cb24f2-096d-4ab1-b347-871a636ec51c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aee3e3c4-2da1-48b0-bc06-1b028f4018b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0633522-a705-4f48-9488-6a0c27ade163"
                }
              }
            ]
          },
          {
            "id": "29e68b64-8613-46ea-ba5b-fa789d8d5fd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f4fd4c5-f918-496d-8faf-5c617e3ff966",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e48701d1-78c6-4e95-9614-0c888b30b3a1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c86167-3bc3-435b-b2dc-8154327bb6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b56dbbbc-d4d2-4c73-bb24-1daa2fa5b062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53c160c-d2b8-4b22-b128-d5929ddfae31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a86c79-80fe-4bf7-8d1e-addaa5cc83cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cee4f56c-b03e-4053-97df-0464cf04bb50",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c29d4e0-4e80-4c8d-9c6c-19456dd03dac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03c0bd3f-55e3-41cb-b81b-31f223c421d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fa1906f-49a5-4d72-b47a-b13e7086f2da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6b351f2-c10c-4dd1-a49a-baece2e88bfc"
                    }
                  }
                ]
              },
              {
                "id": "97427add-a43d-49ec-844c-bbaece32321c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6129b6-4681-48c7-8ab6-102fece2d9fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17ea076c-249c-45d6-9ca0-70fedbd6dffa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "621d5189-84fc-40e7-bdc3-9e8a475a7ec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f2308ff-2d4a-48fc-b7ea-d159d59bca66"
                    }
                  }
                ]
              },
              {
                "id": "0f767c7a-7de8-46a7-a706-ced65a98900a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a77d4b76-ee62-4476-9254-23d976a3e862",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad312239-0a4c-417f-9831-29e0e258fde6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dbd75ff-ad15-427b-846a-ff19691e439f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0ac872d-120d-4bd0-bb65-719aa2716804"
                    }
                  }
                ]
              },
              {
                "id": "fcbaf890-c68b-4f14-9b53-fe2bcb8d6d6b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56aafbb0-96e3-4460-8a62-0fd9bb7e497d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1e117fe-6c0d-4168-8c95-2b9fa762bfe0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ecdf063-2ace-4235-a18d-66eb51d446cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "987fbffc-eb4c-4cdf-a10e-454a47b6df1d"
                    }
                  }
                ]
              },
              {
                "id": "e3000ba6-8a6d-40fa-999d-118233777fef",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25773167-12e8-45de-a7e7-6b1b45f7c025",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e571f52e-df17-447f-a770-de47eb61c000"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7f1c944-4313-4b76-b856-f312f96abfbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f926335f-baf1-497c-87ac-584819dc958f"
                    }
                  }
                ]
              },
              {
                "id": "326bb567-9a52-4f6b-9bed-c2f25ffa06c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fe45779-b6bc-4819-acd8-869823b83834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e281099-3108-45cf-a307-029c85065498"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8d28cc7-480b-4d37-b622-08891cd32c4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f21fa5a0-c731-4a5b-ae42-f0e03f5d1e72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7022209e-0bd7-4c04-8986-6fd8d828361e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c01c9c4-90be-41ff-8043-e264e69da050"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5db39c6-56f8-4fee-a805-f4fce956d1a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "664a85f7-ffa1-4385-b618-defef237223e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bf0a82c-6ae9-4ec4-aa6e-4682c6873d53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e467ac03-4f5b-46de-b5e5-4a07dc63b41b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41bd57af-6cea-49fc-811e-d5a09fcc6e74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e94a19f-47e9-4cee-aec4-1dd2c12c5580"
            }
          }
        ]
      },
      {
        "id": "67957026-3b9a-48b9-b0ad-c931bc71e854",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea2511fb-2893-4a54-a777-af25e2f8201b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3af1b3fe-9252-473f-b1ed-c626829a5e1b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5a7bbd3-1540-463f-8f0b-fceaf8c9237e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d9c7fb-2aab-4132-a4de-a25e0c920f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb97483-5152-4d2a-acd2-ea0e6d1850ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df1fb67-0fa9-4d74-90c6-8e92d93fac3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1110d948-f179-4c79-9d83-ffb763b49aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5034646f-08ec-42de-b24d-434cf71233d3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d50ec0b-56b9-48a4-9c93-779430f52fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d180e0ee-39ba-489a-b510-a27ad7ee3d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15e93ed-7d3e-471b-94b0-129c94bb5a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c303ab-c227-4af9-bc35-c1d5bb1dd4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e108051-0746-46b2-8f96-9fa0074d0a77",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a9e568-3176-4a1b-a472-ab911aae1d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2ba0eb-793c-4e02-908d-38bcaba703f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94491c4b-99a4-4e5d-ba04-a57693120289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf0ee07-7ba8-4c18-8c41-9ba664180aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e8278-46dd-468a-a805-8bb2f556d1d5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871e91bf-388b-4d7a-a756-c9655789b8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecd982f-fe96-49b3-82e0-90c60cec47a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8215ab-08c0-4e91-8871-c29aa9b30879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc60a1a-d139-44ff-bc48-8ec33ed9fcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bfae77-8705-4c50-bf0f-3e0d594b0601",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca815977-7ec9-4f66-a58b-ee5f7236d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cfbb14-58bc-4ac2-bd8f-999873f963d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a060e939-6ee7-4dbb-9f04-09b1e535a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a17da3-a7b9-464b-8a2f-684be1bc3746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63a367b-f215-4fda-b192-99cdca67461b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf10a0d-a696-4130-8dfb-53c24f2fc41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2132fe-f57a-4cd6-9c52-4b883862c1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65046fb-618d-464f-b142-c76f98dff330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ea3d98-f58f-443f-aac8-5d387e1159e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af17ffc6-fbde-485e-9caf-985868996aa9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e161de0c-df2c-4464-8793-d6c142775fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788b4b36-fe09-41c4-9625-b11d64ddaf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae622e4-79db-4d91-943d-38c10453b1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3c9424-fc5e-4a10-8476-a364a015a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69628c85-fff8-4849-87a6-9ff5c7eb04b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9f0936-9b0a-4127-8623-799510c31206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed8292d-7019-4be3-aec7-8aa6760d3948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21232fc-afc6-4571-98c0-a27f0121539b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "129f0a3d-9785-4558-b79c-74b14c81285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133228f4-b7ec-4905-8ef3-0dd635d46415",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e965c70e-eb79-4c72-b831-e27fb69a524d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152ff889-f7c9-4e52-b392-6b34477b1088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fef0ae2-65fb-4a64-bafe-62f2641f1bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa35deeb-6098-49b8-af6f-2c9c6025efaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd21be1-839a-4412-8022-ea72c2a7a69f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a787db5d-3148-445b-b9bd-4a56d508c27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842d9831-839a-4199-8d63-dd5910f0982c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4139a0-7258-489d-bfb2-d5b8658bb295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f14f8f2-b210-4a0c-ae12-55ee7f0f2af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a14673-6965-4866-bd08-a80ea46d0d71",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6cfc6c-db02-41dc-b02a-610172538b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d559675-bef8-42e8-b80d-fcd50964652a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca7486a-58c5-46f3-8f4d-8d853aacc37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b23d2d28-c4c9-436a-9edb-ad5b7bb88cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afafae9-9777-4641-85d6-507817038d35",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9706e3-ad05-4418-8f0b-a0901f489d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec9afa7-e88f-4a0e-befe-5f6f196854ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2da539a-3438-416f-8e7c-7e7f1cfd7ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faea0707-adaf-4ab9-8ca8-743e15b48ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f410aff1-c3cb-40a0-826b-2bf4806bcb41",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c193d99c-21a1-4480-8555-a18d611dad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f3da6c-1d12-4710-967b-9cb5df3cfd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa50814e-013e-4992-a6de-9021d7fc2585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfab5cf1-b0e6-442a-8f93-96ea8e978be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3330c5-021a-49e9-a6b0-1c79e7c46cd3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe06364a-3a1e-4c44-9d78-2df26ba41523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9327904b-33b6-4ece-a9d6-95a6556ea186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eb86ad-efb3-4b6c-b1eb-ec792c58a906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "228be13f-dc48-465f-b179-02cb1f9fcb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81cf152-72f1-4e4d-8861-d62be7f5ac16",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac065a8-aeab-4c03-88e3-edda5aa4b634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a352b1eb-be3b-491a-90de-72627ebe0fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0aa734-b41a-4f75-8fd3-367c7226b36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35f9ae5-310c-4388-bf57-b3d08323da0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf887bd-006c-42d6-a025-da230ee226b5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315a0375-e667-495b-bdf8-941e918c2ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23ab33b-90f1-42e3-9b04-8833363f4b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db831b8f-cdb1-4b3c-ae90-087947cd8000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "712abd24-5e41-47bd-8a7b-4ece7fecfa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23ca5f2-21c5-44bb-8286-12e52ae318c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718d0317-6627-4739-a3a0-d1a358f4ef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62f31fa-2633-4a82-aa42-61d69b2851fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef5cd2a-36eb-4aa6-a6f5-28d8f9780a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e49749-a9a9-49be-b1e3-65c55836eb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0100001f-71ec-4276-b3c8-e8ea86833fdb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b77c009-144d-4026-87fc-d44fb3624d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ee31de-5bf7-465c-a84c-5ff1bca4f18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6a7243-ca72-45dc-ab2a-9b0a5e878191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc489000-204a-486a-8ed8-2ef8e13d1988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2571874b-a479-4fd6-aaa1-6df66f32527d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f779f3-3517-4b0d-9717-5e9e98727576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de8d684-8881-4a54-8396-d9cf3c9c1b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d22523-8493-4575-91a3-f62fe93efbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc1b034-2da9-4688-955c-9779c36b935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0add91cb-4fce-4a07-837b-aa024b65748f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f197dc91-0640-4066-b4a1-16863ab96821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc739bd9-b68d-4887-8157-4bdfade34d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90f395d-0e8b-4d3e-8738-3085bb648f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66401537-1922-4add-b0fd-c439d4e3af73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0091c526-96a0-4c54-8694-cb84fc3605db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77e6b84-b7f2-4bf8-8ea4-084fbfc04080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583fc0af-5daa-4275-96f5-b10dc53b3ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9981d9c-cd08-4617-8422-fa580acee1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca65572b-a5de-48a2-82d4-5848d3fd7c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e7cc64-0377-4ed8-af53-f885eb7260fc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e637d139-bf48-411b-89b2-828d65b46c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9643fa88-a01b-4fa8-b686-edeff09396d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a89e16-cae6-4f55-97ef-fba8ea3ecef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d966d313-a814-4f55-b1e8-7d41fee0e81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a88e48-c7c3-4dbf-becd-6499e79e8c83",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9873526-d4b4-46fc-af89-b2441db7a801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebfe278-34ae-4851-8c72-bf33ca91aba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04125d37-e563-4f83-bda1-f002ec9f55cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05f52d4-68d4-414d-8894-e290092b2540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf04250-7473-49fc-aa4b-92bf855794e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f853f-917e-4a7f-b191-e1be28c7293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad33d1f4-eea9-43d7-8171-65ea2a8dc36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0121cbed-762c-4402-a099-c860f4753f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a574ae3-3b35-4d8e-93ae-47e7ad7bf46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e925ea-896b-4caa-ad72-bac0c1359662",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8806d0-7ce5-4a4a-8910-18bca4392c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d7b9e6-9c31-45fe-b705-657289394d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafb5111-f25b-499d-a3b0-cd55d4c5e156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a528fa-c620-4f99-92f8-24f9976a3f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941677cd-e99f-4604-a2dd-126e18d51779",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8bb65f-e1de-4e53-be89-881809b71e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba54d43-9efb-4626-a95d-8b40cd897936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f77370e-2b39-4d92-98f2-bb7142db7191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372f3f47-aac1-4699-a4de-36ff9e657295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5419a02c-db3a-4c7a-bdd0-11d83ef083c8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb6f3e0-b3e2-4967-bfac-37f71c66b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547ac9f7-16bd-4d9d-95a2-e8f0a7c0650d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39d69b8-d596-4b3f-88d0-8efbc8526b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db118f20-3ecb-4234-bb21-af846bd28dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b3261c-3184-4018-a046-0206c8bd0446",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5346f46d-3ac9-43ca-b8c0-749c5c897718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2c3718-5d0b-4b3e-86b9-5529a72a73c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748afdec-0e56-47f1-b030-e09cd7527bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abbde36e-f283-4840-828d-ed0383f32837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c182d8-67b6-46e5-8e1c-b522d1427554",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c917858-3d39-4406-8add-15bd1f74d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d1a95f-2892-4d96-80f6-6d432d806b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fd46d7-406f-42fd-9a0a-7a7028f5a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2309432e-8db8-4bd8-95ae-e73fdbca80ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1707c-3b51-4895-9522-386f25a57483",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a11068e-61d0-42d1-ab6c-b35406733e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb384fb-c0f2-40b2-ad8f-a1c9245f4b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33af5f5-d7cc-44c6-a41d-209e413fae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f507ab0-1895-4b9d-8abc-d1dcb855ccb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99928e5-b63e-4120-b61c-145d2cbaef07",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62464a5a-1603-426b-a59a-69eb6491526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364e6dd9-e7d3-4f9f-97a4-bf9bffa624c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16f3b96-df83-426f-9052-bb6f8e07a658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8723ce-6746-4fb2-9ddc-af17ebaf5957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2248bd2c-d0fd-4439-b907-d4eacbef5ff3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b71e27-1c5e-443d-b458-ff95cca0c99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648cda4c-80ce-4647-8444-629ba2c8dfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5de4ab-3579-4fb9-8b79-61c64cfc2379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7110e1-17b4-4dd2-83e4-54d6eb08d8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46d1029-1920-4209-9b09-49aa1f3e053d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3affbda-d2d6-4392-a190-4c8709eadc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab2858f-de3f-4585-b69d-5566e4b99a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404dc0dd-87cc-4949-8b1f-e24efe9e33e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd74c640-72cb-4a43-a9a6-49a91f9cfdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8166e8-005b-43d2-b5c0-b58b90448417",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05927a10-9ff1-400a-9838-715b99c0b838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa14604-cb78-4c36-bd01-3c56c811bfcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69111c4f-2dbc-40d4-9f4f-4d02a9110cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15992582-e149-42fd-a701-0d9b3cde4ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e51bf85-4af5-44b9-b67e-26f27fe23364",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe509ec-345b-4876-8c97-b02d78a9c1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f9eb38-539e-4ecd-b800-fb42f3749097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb4c74-763f-4be9-87ad-660b33205788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464e86ee-de58-4069-8940-db93dc7c3144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc21877-a55b-450f-8f55-6c4207151b53",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20100a0-1d27-43d6-bd9c-b8a3fcc358fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e025db7-23e8-40f5-aadd-6d587c336d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b8301d-b4c0-4f88-b2a5-251bda8e58d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3045f5-0c98-4580-ba1e-64a39726084e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552eeac6-a3d0-47de-afec-810d746bdedb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574b14e7-c229-48d5-be84-e732a88605e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0665f876-dfa0-4014-9717-1e03078d374f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb35728-2e1e-44bb-afc5-bce424f709d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60abe44-a59d-45dc-bff0-9b48f862d6e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4c90ddc-6883-4980-a7e1-c343cb78d30c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a0f757e-a014-4826-bb7e-d3733e036884",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd61914-883c-49fb-8a5c-b2baadd9777f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6b741db1-de9b-4416-9115-ae9164fb29d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43cf5e-9d90-4e36-a9df-7c607bac5eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a39e575-5955-4d0c-af08-2c5df4f1c1d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b664291-0374-46f5-a4c0-1a6a0417d62b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "039ffe29-7e9b-4f06-a2ac-16bff513a4eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e9540dc-4e1c-4d3b-8e0c-50b1fc067e30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0026c1b5-0339-4140-8e64-bafbfcc5073e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6da686b2-23f5-47a2-a169-ae6117dffb75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33b2d879-7a73-44ac-a803-1681d30d82b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5f2ab44-d9f9-48bf-835b-36718d33c7bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2483028f-4e21-4b0a-a0e1-e0b3042d6259"
            }
          }
        ]
      },
      {
        "id": "3a5f50a2-5fc7-48b8-885d-3ed83149c322",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6fc62be1-7fb6-4e6b-8828-fe0669bf0aa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f84d137-14d1-4e8e-b4ac-8737661442bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5d09be7-56c5-434d-8b3b-145fb4fe0424",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47b01c-1e5b-4065-b2e0-b0c0b16f84ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81428037-65e4-4815-985e-f66bd4027ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b7e09b-b5bc-4416-8c7a-67481cab8a3e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee0549b-dfbf-4079-880e-c8b0f75e75c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac817b05-ac7d-4b57-bfd0-137fe1a7fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29140e0-96f4-441e-b4ed-a107ea47f4a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cccabd-ddaa-40f7-8289-070de338b8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e32e5f1-4add-426b-80b8-28d3ff01c490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4840615f-9267-42e2-83ee-9f196535ccfa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0f8032-255a-459e-a15b-91b7ebb3fb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bfd19d-4c1f-4960-96b2-00d14013e881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499d69e-6e0a-4fce-8760-a67efef16cba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df4658e-8ef0-4e73-bf97-00d59f2de65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e653f0-5263-4276-85f9-684ac40d4bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a582c42-0268-4862-b7aa-f6382080f99c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bfd260-2f3a-445b-b390-d2ceaf3d9513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2a33bb-b928-495b-8de5-d0a36d263ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1520a877-5e16-4aa7-8245-505fc00f5433",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444d8b48-bba4-4160-b7b1-8993e415b567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1edc174-24b8-45bf-97e4-78fd66ad9298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8f343d-47d0-4346-9c33-fcd9ca4c8506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e442a55-a9a8-4339-a62c-292d60013765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10f77a5-57fa-4dac-8a71-e3904a297bab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85bbbbb-ac42-4077-bcbe-2d276d5b16a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7efbe4-a33b-4e10-ac96-929c2ce08002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178dbfe8-1a00-41b4-ac08-1ed0fa94eee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ab6f29-af06-49f5-a281-02ab60898447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c01fda-65dc-47ec-b84a-0934cb8cfece",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a2c5cd-5fcc-4145-b9ea-3074754e5a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58fad093-215c-406a-9e5e-96865a3953c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b438ba42-d32c-41c6-abd2-9b84b053f4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a4a71d-fd85-4ec9-bd21-7d83107b03ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5181c9-73c7-488c-a901-ddc5df956c6d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec123e-55db-49f6-9552-2d0461cc851d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d240bd6c-229e-4163-a02c-7a6af170b8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b318d76e-70ef-461e-a194-2b31bd39012b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96e4d02-e518-48bc-bc35-e7df080d3b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e21e70f-6b62-42f7-b7d7-24503f8c6a3c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189a36bf-e7f2-47b0-b495-58c2efadcbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212da351-a2a6-4c2c-b629-21b7e3f9d58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5418ef-df65-4555-aab6-60be477c56d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bfb764-e379-4941-9914-680762c20ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9e263a-5447-44fe-8535-a820929ab6ee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d264b1-0dc9-4439-9b8d-6fa873192d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60be77db-232d-4231-aa47-6235fdbf4e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217390d1-c735-4830-85b1-953efbefbec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a05b302-2367-4b5b-a612-1e55d41537c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e9a37b-c6c4-43f6-a3d9-743b279aa86d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1419a878-a36d-4176-a964-7c52dd58890f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20b0ff0-3250-41e7-aa67-e46303ab5e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a18b31-ed50-49b2-abd0-aad0bc778f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ef5667-a084-4cfc-aa69-f07e084bb025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41eb182-18e5-4085-9092-decd3aada35e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e180c394-edf9-4862-a9ea-d9263ebd37fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373a64fa-4ae6-4b1b-8d45-235de1e8253c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54545a00-0f5a-436a-ae93-d9300c646685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b57bd3-30f7-4314-b818-781a20fa83c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335510b9-b27f-4d12-8cb1-6f16aac4a6c3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e97c2d-f33e-41f1-8771-81f7152cf22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0268a6-429a-46a2-bc60-75a8e1fc47ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac1fce-3eee-47a8-af9e-798fc9c30922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c126ba-fdf4-4e87-adb6-2c501a53f5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5d92cc-6f09-4156-89b0-c1b57f5d7869",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3780f3b6-f9ec-495f-8fed-8f5eca3c6c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87430f9-bad3-4cd5-9e4c-0f1c82049156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b771e4-e55d-4736-a7a1-1ce4c1f3fed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48a4e1b-3e3c-4983-87c1-a2f86c40945c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f80d2a-363a-4ab9-99e6-ef10190b941f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff26278-39de-4770-af48-d902f6633cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9ff377-d663-41b8-8d0c-48187db77c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a33d97-8545-4016-ace1-63a69329a7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d099e83-18fe-4a27-87a5-07661617d416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e516b88-213f-468e-bc02-bdff62b35ae8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecc10ba-3ee5-4b41-a03f-17abcf16dedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5362363-0e3a-4198-a7db-52a5c45084c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6331492e-bfba-4153-91d8-350375e915a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a2e8fc-63f3-4d19-81c1-0ee2bfb58b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac2e04a-9717-4840-a0a1-209d52d5b30c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bc7933-8e71-4921-8d62-fdb9879f39cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edca9674-18e9-4559-9d63-74c1cfb4ff27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c33125-9366-414c-9df4-8b46ae6b36ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288810dc-ba17-4dfd-a05a-b43fc7a2940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df1784-a7d6-4d75-b20a-b7769c1f5d3c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4a29e6-7033-49eb-b65c-0abf3f8d4caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b369e73-f4d5-402b-9699-3894b6cc954c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285edaa3-ac18-442b-aa13-251703369e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16429833-30c1-41d0-a2fa-2f5d78b89a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb07abf0-d83b-4144-8545-9b47c72a68da",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425e405a-d8a9-479d-851f-3d66f320164c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc1628d-bc1f-4337-ac5b-c059b469a003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5525fd0c-7758-4443-aa07-47874546a144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0ad609-937a-4695-b968-b86e1708e101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a18cc0a-4af3-4c9d-864e-3aedd6bcdd81",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d463b178-c0a3-4b07-909d-bb8ca0a0d23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728c14a0-8fae-4a70-97ff-798062b59f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d0ff8-530b-4f18-8550-817982cb2e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b97c934-5b68-4e26-bd67-b28ecfd0e5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8f7dc9-78db-442c-8108-f1c306f2303c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36280df0-cd0d-40aa-9da6-f4074aa5578d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855ec384-6f6d-4caf-88dd-eccb9758ef74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e68cf3f-436c-41be-8c78-aeba06f5e04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c520f9-d7d1-40c5-9de0-fed70119cf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2410da1d-5df3-48eb-96f5-ad0f392d83f9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1da3d3-9aad-4d23-b73f-7f9ec3d2bef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d95a24-c1e4-4a19-bd1e-6c42c505f05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba239cd9-7d3b-4485-9210-260ac2d1fb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1510ef4c-bda1-4222-bfd4-26d6efdc60bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958799c3-6826-4f66-9a7f-73de3ead259b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f6d5f3-2753-417e-8776-1e060c89a74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b907222c-bcc5-4358-964f-399b78b6c41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b98fe2-4b23-4c0f-a6da-9fb24db248c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bced4d46-1e96-491e-959d-430e445dd8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461df515-d252-49c7-9cbc-b9ec76f2eb83",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3e57c-bd05-4421-8425-ea4c7d839488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee10a1d5-40cc-4fa9-80a1-4b4c71e5b368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834eff65-ec52-4f0a-ad72-fc95df5213a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6def18ed-c52f-4d83-a14a-8294084d117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0d73dc-0e3f-4747-95b0-5e98280aff52",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34051886-7d29-4124-87de-1e32c15d8940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6926dcc-5e5e-4b71-8ea7-bf7bd20f5d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7362d0a3-82b9-4a6e-b2f4-252b44471480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195450f1-8751-4ee6-ad94-d92165e49593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d379be7c-7bb7-44d8-8b0b-eeac7f279311",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a865a1da-cb87-4be6-9f99-24be8097762f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a47aeb-2ba6-4471-a3c3-470489704e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d1767c-0813-4b4f-96d1-89cb6a9b0d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12302d6e-1e68-4c81-8946-b5817d4f85df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ebe18-ebcd-4d68-b975-f9401b5ca783",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013b9c94-e592-414b-bd3e-4c5410d93ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eecde848-f050-4844-bb78-36895224946b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2badcde-483e-4e46-abf0-91e00ab60a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebdb74b-6014-4384-a0ed-378a797e1b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9dd19b-a46e-4db1-8d34-604c9049ad59",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8acfc8-70d7-4830-81d5-37768a6e9acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76852919-1417-45cc-a734-ec241af2c5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d98f76a-ec33-4f16-9f80-c8c364ac9d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76ccfe1-3a8d-40cb-bcb7-ffc54feb7786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02392d0-daf2-4e4e-bf18-7b5dd06b1302",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59af5a0-2ada-4117-9b31-24a3f2cebcfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f3adc0-03de-4d86-b33f-95798e98f371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981989f5-2247-4c22-b423-0ac099d44cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c26608-0d72-4c24-8271-fb9e73810d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da0ad97-3012-4f47-bee7-27eccc2440d7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13cddac-764b-4fd0-b6c2-bfada71d7918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29a97c9-5c11-4f9b-b78e-924b475739a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3534ac7b-bab1-4896-84c1-3ea1cb62deb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae80b8f-9af1-4d49-b393-f5c87f6d008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207dc11b-8df9-4111-9597-64083f854cb5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260b731e-72cf-4c04-aa68-5070c6f5db5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45468140-d97e-4365-90a1-8aa44cddff7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39add405-e967-479e-af47-1d6147bcb573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abd8896-5aa9-4b49-a7e7-78bfc1b21094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f6da8b-7b34-43b6-8394-1d3a9b94fa88",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60f6e6c-c339-4b60-aa8a-aded2d38cdc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2c936f-7d39-4ccc-af9e-2952de0eba84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0b204d-d379-40e3-9d02-d0d6cd5e31c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc9743f-237b-4809-8e79-d62d4e91a146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a6895-3abc-48eb-8580-b9f0ecc709aa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951ed8c6-8377-4a3b-8d9b-b37dbf4a6785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd13639-eccb-4fbe-86ee-4e8872417d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21424c99-d76f-4218-b1ab-122ccc46f48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116ff5da-a912-4e66-8633-fe2d624ceed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cab10a-f7d7-41bd-ad45-612cfb8901ea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188084d0-4974-4db3-98c7-c66362663b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28167ebd-64af-4142-b580-ae96fb1b782d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e2b08e-5573-4639-a649-0e72daa05b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90d558c-dfa1-43da-9c28-785de934b687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c44edd-137e-4f0f-9678-f570813f9dc2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c299f69d-036e-4891-93b8-e96045803080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf1f8a0-613b-4d02-a251-c9503af629b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be61708e-4de3-4ad4-a795-af8604a82b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5376834d-e5a6-4bac-bef0-f2bc1b46494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445102dd-a704-4bf0-ae2f-bf8713ed2330",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefd65f9-410e-4f45-84db-692a71f00ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d57bcf3-c1c8-4580-acb5-0653d1715ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccb76e5-b5df-4d43-b1ef-812d6c37cfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2babd11d-41c9-4864-bb07-9cd68c54f930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca204a9e-cc70-422c-a54a-f96e11e312cc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7ef6d1-df62-4c2b-a010-199f229bbc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05205275-b00c-4db1-9e13-dba8a9bfaebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45a663c-d6a2-4884-a682-53badfc7b2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e2ad24-cf4d-4fde-8652-15e77a56c544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dcb712-2d33-477c-baf9-23ebe9109a2e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b1aa10-ea12-472a-9a67-a3c3f11d6790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b249318-d09d-4d2b-8e9c-bdc691a8f79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b63b343-cfe3-4660-8454-2a133ff63fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ee1aa5-b741-4b79-9bff-a108d8d0aa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9602317-5b5c-4d7f-b323-4d7cb34f33f4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4419bc-7ef5-450a-88c9-7d07b79cb483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e00f7da-2e51-4859-9909-44b23edfdef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9861accb-8666-40f5-8196-fe31e26bc942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef70ea-47c9-4659-97c5-5a2379593c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269e50fe-eced-4ec4-bd81-0a1025d4f41f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b50d5fa-6ed5-4aa6-8f34-dc3f16d6d27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10880c93-e30d-4062-ab52-cf879df83ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7111f66c-d7bd-439e-90f3-e922db3ff00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125657d5-2a01-451e-bf1b-616446022615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f5d8e9-800c-41e6-b56b-94d0f04c3e8d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b269c17-50c3-47cc-a6f6-c1e32682565e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa702230-7d98-4f38-86e0-b5f7d243c508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310dd569-3c35-4905-a338-d01d82a37af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0e1647-d56f-404b-afef-2766e62064d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac17993-5b79-45a1-845a-23d853768571",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c27001-cb05-477c-a33e-914eaacbd930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a632de09-a1bb-40cd-96b0-a48915e453bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623ba357-7804-4aba-bf64-db1ddb0062a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4da78d-b4b3-469a-942d-b6ecbe875f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e6347-e08c-4d77-b89b-f9a7d901c7ed",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55488cd-f1a6-499f-8bb8-abf1c7c5dd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4990724-cd77-4807-9067-98665290f6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad66509-b943-486a-b076-f9a748504feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f48884-ff32-4a02-87b7-73d5e31ae215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7769b5f-172b-4e0e-ad34-ca55612b758e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed84aed7-2403-42ca-a751-5abc5b36339f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe4e6b4-8a32-4b1b-aec8-f99dcb2f96e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafda9c5-b42d-4c27-8f54-ca94e0efe7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e6407b-d24a-496d-9ddb-15c4d7aef269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45db0ce2-4fdb-45db-a50f-2c047e6f149e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5229de7-2b07-4c69-87c3-89557cab10d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c382ae5-e5ed-4812-a34f-96e7776cb797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d21e56b-d667-49aa-83ba-d1f10c0e4260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f24afcb-b83f-4930-bb64-c97c7f8b0a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db417e9-56c2-485d-82f0-150d56fe3178",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252b563c-88cb-4392-a033-c50d83031bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0fede5-a144-4789-9149-0d3e1f7e9579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db41b153-6f1f-4106-9f3b-09ed9de88506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86de06b6-824e-4c1e-9780-63455c791f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a69784-f249-4280-a47b-ff7d5c5af096",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf1e807-c922-4042-83ea-86e7280632c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33ce52f-3d9b-4caa-946e-d210557f8144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af262c2d-8b39-4687-b2ce-7fe976a92212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aff90a0-a88d-45b7-ac9f-923c02b8585f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68b0786-3679-423e-84bd-2c67ee8d0308",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81cb253-d922-4753-9908-68ceaac6ddf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9f0545-3272-41a8-9253-b3aee7c19728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af8579c-f784-4bd8-a7ff-7035458367fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059c9ebb-b7fc-476d-b248-a22b6fe79d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957ce5ff-b3e9-4d81-adde-393140c4732c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5aade8-9e49-4657-bc0b-c482aa61278f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c77357d-0a16-4592-a828-cb8429c66a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae0ce9e-3e10-4ad3-a746-0e5c485578e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc82cd9-fbd6-4286-b217-52d92ca2aee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3b05f5-50cd-4804-947f-876de61e41ad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5e1cdb-7007-44b0-a431-1e508bc1ea1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1b1a3a-1b5d-407c-afea-4807df4d4d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0be9708-5285-45a1-b030-2785590e2a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5ea90f-b230-4ddd-850c-5eb64a48fda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69000e3c-6a7b-4657-ab39-69b2bcc690e6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faf3dee-19e5-4d90-af1a-d7fc086a2c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d63b16-1fee-4b29-b060-fcc498c4afb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67ca3fa-8f92-42e5-9901-42d22700fade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd19e2f-d4e9-4d73-9eee-38e7bcad24bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4324a5-28f8-4c56-9ab5-106596a7107c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e323fde-82f5-4341-88bf-30b874eaefde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1644125-47ac-4d36-a21a-b6030e263031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d160ffc-1f0f-4c3f-b366-2b1e8af2fe9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8492dd9-8cbd-46e3-b2c4-7bf375aece0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cb7fd5-3f5e-4e26-b3d6-68de61eaf191",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e8f37-f3ae-4f58-9cdd-74e55ed052e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5123ca1-65b1-4cda-956d-2788869718df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d57e2a0-ac2d-4b04-a84e-9181c6209ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19a0ca7-528c-4586-a074-50c181c76a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c4dedb-ab51-4da3-97bb-f226fa206e2b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d52a5a-68bb-4c91-9d66-7e8528824f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f6b7d3-e648-4821-8233-45e954c4ea0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d058b9ad-4604-452d-8ead-77d8939d4484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83047903-4fe2-4424-9a45-338db4a9381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d8a52c-55bf-4e20-8fed-a10229308bcd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73258467-34ff-4e72-b101-22c142e63f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc0e66-2a32-4302-985f-7ceb33d73014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef25670b-53b9-4f79-9bae-a7fe2279fe3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44b4484-e406-48f2-8a6f-546513c88a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb5837d-3519-4ac2-9b2a-45bec746f16b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc177a8c-917f-47af-b7ca-2bece8536afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab7a079-8976-4168-bb16-12042e35fe03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb11dd9-abf3-4e44-b1ce-1bbb7de15c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de3a9b0-3956-4496-88b7-7bbf33ffea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d32d24e-df46-482a-a931-b7ed63b5e01a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcf3e80-dae2-41d7-b03b-3e0e4641113e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eccb4c-591a-496c-8067-efbd8490bfce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be31aded-c892-4ce2-9774-76a0ede591df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2792b0-0546-473f-9557-088b0736c4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff789ef2-8797-4a11-bbc2-b9840ac1fd1c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c1a014-fdc9-4636-94a8-5d2135760082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e174be-40a9-4eb5-b598-eabdb487555c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f1f8e2-6eb7-4d40-b964-3812c6bc5e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc0a969-1a2f-4417-862f-d67f5665f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74462ddd-bd39-4091-81f7-8c8248d090b4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c2e6d3-2154-4be8-9510-5d372dcc3d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0107645e-ab50-438e-af2d-71f47171e314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e5e82c-4631-4925-b748-79b5dd0ccafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1bfc53-9736-4c5e-896c-2382d530f153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef5f2d5-8376-417e-b847-0353d0cfa506",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a85f0-6c98-425f-83c1-d9339a6b5297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d95696-2ab9-4f2a-ba62-6e8a58d9bcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5780e5d0-d14a-40d5-b1b0-205a7b4831e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4845e1-519d-4882-8380-df756f5bc060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929283e3-eb25-471e-afbf-c172a1dc2784",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244f6d00-5a77-4b00-b744-07f72f3dc38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3339dd92-0875-478f-a293-6b79b6daad3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a97913-1748-405f-a1e1-82a7e497fdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc00d3a-d78f-4944-9286-1c23cf097ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecad52c-b101-4153-af32-1a6549c155fb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdb2695-5951-454c-9c5c-4e019b26f794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ba60be-8390-4a14-a976-74bb0032341e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0544272f-9876-4ade-aad2-c1e9b8d09eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83406433-f50e-4792-b526-4fc7ec962922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c2bada-1112-492f-b3f0-8b436657bcf1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e893f91-f9c9-4991-a791-a1ca357d8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a028777a-7643-4223-95c8-51f447a3baf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0545cb85-d2a6-433c-9096-186d9ad6d5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be51880-9181-482b-be9a-ae7327aab32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2d9f52-718b-4124-9462-0071c445d743",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8704b7f-e7a9-4ccb-8e02-9ed88ad9a132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790050f6-837a-4723-8a6e-a82d0d08a793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9a38e2-bc4d-44b1-b8e6-1efb9362cb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe531e3b-4bd7-4dac-81dc-a2823bd71555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfad9699-c58e-4c54-b01e-b3675823a82d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19e4853-e3fc-43eb-ab87-62ff4961e83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c42ae81-8f39-460c-bd01-f3fc75d4a4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83c329-2512-47d3-8ca5-79e735ad7547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909fb25f-2d88-4794-a17b-0d80aa8cfe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464baa9f-97a2-46e7-8f6d-e09c7b3d2186",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfbb949-6aa3-4406-951f-23961fc8f488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd6bf27-c321-4ab9-aa43-cd34a1364955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18baccd5-b301-4a91-a9d0-b43677fc6217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62a0547-bb16-4e14-b14a-614378bd43e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80984fa5-06fa-472a-86e9-a7f35a50d430",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e492de3-9a17-4eba-9538-11e75162ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3415101-9f91-40b5-87e9-47e72fcc8b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf236614-d1b0-4d1d-8b3b-e0ad7da2155f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863943f3-48ca-402c-bf14-9b8331a91448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fca39f-408c-4500-a097-11e9861b18e6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e24b155-9a87-4f79-8581-8713c5413ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa1c73f-65da-4cc5-863b-33627f39b6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0cec1a-191b-4f54-869e-d1799d3763bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb291cae-0cd7-40ac-bd57-67d75d4cf8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a972f487-6ce2-420f-894f-6e93448eab09",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc6b036-b11e-4abf-81b9-a31bf0bd4b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2829dc0-4e77-41d9-bac2-19de5119cd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ca4807-9939-46dd-ae13-4617716d0446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2713be9-21bb-4dc9-94f2-42fdba0b8e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc36a3d-bae7-45f3-a971-b9c946cf06e2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2e8b18-8003-41a7-b519-30a87ef33c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648660d3-2cbd-483d-94d8-b9b690c74228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc21db95-dd10-4694-8aad-f630117f4532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2155ed4-1578-4d8e-8342-6f24df0f81d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f916047-7c7e-45a5-a95a-9205ea6fac18",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4308a6-49bc-4603-a504-6ed330eb9adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5c3daa-740e-49e6-81bc-2294e6929655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2011ce90-8aaf-41c9-8b2b-1312532182c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8c8d1a-8ebb-484f-bfdb-1a089d6f1d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1c7dcd-7ac0-4866-b635-60270725db83",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3986db16-6e7c-449c-86ba-dd46fc5e6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d4af85-6f10-4ac5-9d68-663b45eba6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3065d51-bef8-42e7-992a-74951341805b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da41ebcd-a922-4387-8272-6b6a112edb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893eb99f-320a-4b10-8e9d-cc3bd6f77bb9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdbf749-05f4-4021-807f-7cb247b91764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44aa8254-41ae-4022-a369-5e2341a3d32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa0b971-dcd5-4b1b-b02b-c56546fda10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f33d877-bb49-481b-a4fa-3e7a26d432da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308d258f-b43e-4c39-8e0c-85cdde03c0e6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55132f2d-6d86-43ba-90ff-19fb59e7d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fb0c01-bdca-47e1-a791-cffcb6f0e718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c6715e-78b4-407e-ae9a-bea22e40468d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a1acd2-b0d4-4e86-898e-01665e950791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6544b46-319b-4001-b535-3fd18ce16b95",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5501488c-723a-464d-b47a-5716bf4c22b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a037648-7157-42c5-9de3-dc259a37dd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0433fcff-4802-4533-977a-0512ee5789cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a3f236-067b-44e5-8adb-61086d182c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f915367-8f0c-4f25-906d-1289be5a0ef6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7330caa0-15bf-4aa0-a51b-71e1f261d5c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1af875-4c0c-48f2-a1fd-0110da57f7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d8b26e-d8ae-4930-91f8-7e55b7d87c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fadf9f8-07a4-4ca4-85f0-7b2a8e8075bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07079dfc-70ef-4bda-8b27-5080098e4bc3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd4b88-debd-4093-b084-34b9f5f4faf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0f088b-cf7f-4749-a000-817e798100f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafe496e-ede3-4fa9-a6aa-4e44ed990317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64cad1c-a003-42b2-9fd8-a13289eda11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d499ed95-f803-4f9b-a011-fde45951d727",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307ff925-aab0-4cd0-b4fe-6af86155ed86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e0e84b-b15e-446f-a111-2c79ee6576fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac97c7f-eabd-4eb6-9564-543f7ed2bc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a728ef48-224f-4cc9-92f6-1efcf4425f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a14572-69d0-465e-ac9e-2fad094aaa06",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a907154-61d9-4dd2-b5dd-edc4871d03b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88201bf-690d-4d54-a435-06639d97fd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c4c5d4-1c22-4a82-89e9-c18b05836828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946541f2-27e6-48b2-a4ae-793a379c8644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df22894-8bb9-4265-a4ea-6dec050b5a22",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8a4941-4bef-4089-85f0-b0d47fe015ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7af5c7-8008-41cc-81d2-50c0b73c8516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95615ddb-70a3-4ecf-8630-414367b26e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283f8662-e7b2-4539-a155-7cece78131e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f1ac28-310a-42eb-bfbc-51e18071478e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc03e111-304c-46c9-bd78-fb01dad575dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a6f25a-82f6-4f83-b089-c9751f848009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8bd4af-e237-40fd-9070-cc5a8878bd63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2b3770-7884-4a9f-a983-bcb90d6f8956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33b4086-0748-409f-96d4-b6d21cb02bdb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2d014f-44f9-45bf-abd7-d2e25b110c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd1f069-5eb0-40ab-9383-5d3d0533caf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dc7ee3-d089-4d01-9c65-4b60888e270b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d931e2f3-10c0-459b-84d0-7e45ab771620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c5698a-987e-4bed-828d-914a9867d388",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c477b529-20fd-4378-8286-7627944963ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbaf9f13-e681-43b9-98cd-43ad1f3815a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8197a63-0d5f-4ece-bb91-d15bdc7d459d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cddbc6-5639-4d28-a6f5-4e60269c4ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c5480e-5e40-4604-ae52-ddd7509ce4d0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c7b548-5126-4b28-9c13-c49b5ad2a03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e15cd3e-c6f8-4984-bbfa-235156904ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2156b9-c264-4327-9a7b-7aecf801c726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42a0dc7-c619-43b9-9430-379a75ffac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb2f77a-58f8-479f-9888-279896a8449d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7123d0d-6ea1-4323-88aa-321175a11133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f99a12b-1ea4-4fe0-b6cc-60d694477a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7cb23f-9a80-4f08-8232-2355ec439881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb2fcd4-958d-4dcd-af59-abe005598375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f10039-11fd-4acc-b92b-8ba6cf0f6a49",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e593a60f-f44b-449b-a14d-67a20939185c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e157fb3-5373-49f9-93d3-fe89e8fd76b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7501794d-d673-41da-86ea-803bfc28d111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5f89e5-f111-48f6-a69d-d5c1fb4f7972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f8be40-9544-45b4-9060-8806e484e758",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784f1cce-7e85-4cb1-83a6-6437584a0cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c671faf-09e2-4472-ad10-159b89440d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af7170b-1248-4726-98b6-cbce38174f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06039936-0a34-4410-8cd3-edca9903baa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71a4212-7ac2-451b-980f-f38d6a8996b2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e979e501-6c5d-425e-ad24-a533e6fe4be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872239fb-183b-4e52-975c-9c6b3923bdd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7563ca-8569-4d65-9c6e-ef4b170143b4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ce69d6-fec3-46d5-a4f2-bb5797e7af7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8dcb82-9317-4729-afbe-a5454d052499",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f206aa-98de-4331-871e-3b72855f9096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1be34f-0385-43bc-8611-e64f31078ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a5a976-a17e-407a-9657-2bc6cacae227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b6f10d-fa9e-4694-9fd9-caa40223735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e596c93-919e-4447-b815-d7a90dbbefc5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e78c6b-e639-4729-a67f-3c0617b59784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ba1e6c-d4b7-429e-accb-afca66a96865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f51668-8f0d-4628-9a4d-05f91b5a2712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c6f1ad-ce81-4114-83da-46ab99e2179e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acbbe06-dd32-49e0-9868-fc6cde640aa8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b57c4d-dd3d-4159-b93f-7858dd5c4141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ed1743-f7df-4b71-9da2-5dcd678723a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ed2fe9-3a45-4f3b-ab73-d5c841f9502f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61632f3a-b88f-4b22-8d3a-e801a03159d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fa8012-4131-4ded-a141-6d94da424eb2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1401b829-a3d8-4d3a-9cd2-8ecf5a0f5fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a6f3e6-5921-4932-9524-b29df0b2f4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f632155d-32cf-42cf-80e7-c8bd8ecff73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f7bce7-304a-40a7-998d-ab08908a48a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c8c04d-b143-4acb-a3ef-f972bff01463",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e6620f-f7a5-49be-bd51-eca1536f624c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c8de5a9-fa16-4f92-b370-b44861d6a378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b52c6e-d5c8-4b9d-a4c4-ec6afabbe5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677ed7a5-7ae8-4fd5-be3f-be70d9aaf3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f4ed1a-dae6-40e5-a3d8-6e3a56eb782c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa6e8a9-64df-4250-bbe2-a462af74ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fde56d4-e676-440e-89f1-b3793b6bf1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f09c3d2-e519-4015-a662-384ecbf1d8bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47471410-f60a-4757-86f4-07b0ec860ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b634cec6-a705-4341-9ec5-82b9f0078e1d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb37041-e80a-451d-b4a5-4b6c1c2e0d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21999b98-310a-4018-8763-6d9a4cd884af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3145e3cc-0023-4fe2-9d43-20da6823798f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789b87f1-8f69-4d28-bf60-dda2da29e2d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82eac169-66b8-4242-a183-4c94e7a99364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e671e4e-76c5-45ea-9875-41e62721309d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c380d26e-7bda-417c-b240-fc3688499fe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7952d98c-0abf-4508-845e-8ffeea1764ad"
                    }
                  }
                ]
              },
              {
                "id": "5f167ab0-0e98-4e81-a3eb-6f5df569ba90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dac30fb9-020c-44af-bc0e-fd6aba4a3171",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95018f5-bba1-41a4-9aa7-33b0a33dcf68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2a13cabd-abca-4bea-9c44-69df4c30e6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3811b17b-9c61-47e1-b1a8-4f73da754a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26bea866-0a8b-4343-9c6b-f059fdb95393"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "395b25e5-a334-461f-996f-1707b923bca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "263520f9-e110-4895-8334-6c992890c7f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "385b73cd-dbad-4e45-84e7-4119248ce766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e748ddf-bccc-453b-bc24-dbf02350bfca"
                    }
                  }
                ]
              },
              {
                "id": "ae93f251-cb11-427b-9286-263a0c228893",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a56e2cbf-eee8-4a0c-88ff-8c1c908f5a3d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f267cb42-d3c3-4ff8-af6c-f82a2ae7a1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e935cb1a-fdff-4fba-bf09-64e1f8459e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7266a92-2927-485f-88d3-f616ea3c3bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a15501-10aa-41ec-af5e-c9b1ed7222d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "780b6d74-97fa-4c3c-be2b-ecb51649a2fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0ac702f-d3c9-4127-9142-d59767b2536e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1944565-d33f-49ea-8758-509e4152afa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "99aa1b0a-8de9-4fec-95fb-863ded1cb0e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dddfa6f0-5e4f-4c9c-a894-d1c81a96c70d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff07423e-5f22-4451-959a-3ac123ded4eb"
                    }
                  }
                ]
              },
              {
                "id": "38f5dfa6-1d39-48cc-b2ba-803556e80226",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d2c1ece-5fdd-4813-a1c8-1f1e1e699fdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d2508c9-3b44-4d04-b09e-81516f38a552"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6acec09-d4ea-4c75-9cfb-de8bfddefa71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6153935b-eb51-4394-8c56-4f917e5c66dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0e7471-c637-4c9f-8c38-effe3e8b1b88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "34089bbb-5b0b-4fa6-99ce-fc49005cbe61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27812f7f-1fe3-4e79-8837-75acd93872a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0bc2b2c-866c-42b5-a21c-801363588406"
            }
          }
        ]
      },
      {
        "id": "9b61c728-8874-4fde-b925-c686a23d3358",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9c50d3fc-486c-4552-b28c-dcb998bc105c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "419c1875-9ad5-416f-851c-0fcb72757840",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49c52fbd-26e0-479b-b7f8-b39a4fbb74e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e661463-c83e-43a3-9e46-458b08804326",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "af3b1434-2bde-452d-8d01-0046d5d54173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4e9410-f150-400b-b960-0a799655f269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "933ad20f-99a4-4ea6-bf55-f32936c8d7e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cd1306a-a3fa-4bbd-a71c-298aed3873e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edaafb2b-2e40-4708-9452-75c31c780c6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "283cdadc-10de-4a64-8e08-e7a93225ddfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8f28150-c863-47ac-a9a0-fc29eb66f211"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0defdca5-7409-4867-96c6-6fd15f92efd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "91a65b24-e139-4a33-b35a-b84bac1dc536"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ff75a79-d19e-4f4d-902f-af34f96fce04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b77ba1c-e374-4d72-be4c-2fa663b2d7cb"
            }
          }
        ]
      },
      {
        "id": "e78095a0-18a2-463a-b5a7-87b646abf7cf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "591f75cb-ec7e-4aac-97a4-e6145a9057c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfc1050e-f828-4976-8b0e-135d211aee95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "661cdb27-7a11-45d8-bbeb-746ca0bbaf5f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321f677c-477f-4f8d-a1f5-f54bb19b1105",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7059eff2-abe2-4f5f-a2d8-dc2ee334da1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1302c9c-2bd7-4506-b24c-98d305d211db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e5e349c-579e-4dd8-9833-4f9333e3506d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26190517-9bce-485e-a08e-e5a67c943833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0ed226c-98ae-4089-a7da-0bc5a5a5ea50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce10c037-5b7c-4f1c-b259-d2cb25931289",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c0351e-9978-4f8a-9fa9-6ef31f1f31c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a376c96-87c1-4466-9307-b421d2a4eb13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f68f37f-8b6a-420d-9a64-67a923e4e29a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "651a135c-67d7-41d4-a651-61b0c7d7b3e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba1ce254-33ba-45a1-a7ea-8e7fc26045e4"
            }
          }
        ]
      },
      {
        "id": "bcd1bd99-313b-4b84-b3e9-4d029c74ed52",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b0468bc8-8e95-4de9-8ca4-edb177cc6390",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8576c21-5465-4d4e-8cb3-d22648a033d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9b5c40e-f08e-4393-9e2a-4910c0243ef4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f8b5f-b6b6-425a-bab4-e8b2834969f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5803b313-aabb-4907-b67b-09357e2cff4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca1d8f7-f317-45e2-8804-0058fbcbf007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfef29eb-a84e-426e-9453-c00b921ef658"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b7a45b9-c4f1-4dc1-ac6a-d9b8c7096fb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0158b321-4fe0-4b0f-b8d0-47cb895f0a63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62c7d264-8d27-443d-99af-36b17616be09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c5d890-2ecc-4b52-a7b7-f8d11d6d7290"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "524f57b9-8082-4d42-87cf-920e36c7ec3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c405d0c0-e7be-46e1-a469-733d98be063d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12bdc743-9c1c-4641-a1ff-7e3c4edeb8ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36abff6c-8789-473e-8d2c-8403313de452"
            }
          }
        ]
      },
      {
        "id": "fe5c5971-7837-42ff-847f-954778a8a55a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0ea0ad7-7aa2-49f2-9166-240ed7e529d4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "265807ff-b2c1-4bb2-97b2-6b1dc50f656f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "73ac9722-12fd-45e0-9741-999725274762",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f34c182d-2c33-422e-978f-5d092aef639b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa5a9c64-c627-458a-af16-7f0ae9da92d5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 99.24603174603175,
      "responseMin": 3,
      "responseMax": 12270,
      "responseSd": 807.7882225461399,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726188185420,
      "completed": 1726188218499
    },
    "executions": [
      {
        "id": "c3626908-7f7b-44a4-ad3a-a5af05ae4912",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7e34c4f6-b35c-4889-917b-d61ee7fc871a",
          "httpRequestId": "0629ec5e-e9ed-4051-993a-a3d7d2f7e6f3"
        },
        "item": {
          "id": "c3626908-7f7b-44a4-ad3a-a5af05ae4912",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a5f2c05c-0bcf-44c9-b8db-ec35bb2c0eff",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "92e315d3-8b22-4d00-a21f-2d4d117e4c66",
        "cursor": {
          "ref": "1a0821ae-8b20-4310-8da8-3590abbd6029",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e944a5c6-052b-40f6-ae96-7edb3baf08f6"
        },
        "item": {
          "id": "92e315d3-8b22-4d00-a21f-2d4d117e4c66",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fcad1900-55d8-4601-8cb3-008fc8f211de",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "097b3379-2626-4fd5-a5ae-a5479cbf8384",
        "cursor": {
          "ref": "c6902bfc-b6d5-49d7-8f86-b8275dc5a969",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2df1e36a-0206-4386-a280-5ea0bf7d5acb"
        },
        "item": {
          "id": "097b3379-2626-4fd5-a5ae-a5479cbf8384",
          "name": "did_json"
        },
        "response": {
          "id": "14e051b1-93eb-4369-bbda-1c526d00c29d",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342cf52d-a14b-4da2-8e6f-e2342ec005a4",
        "cursor": {
          "ref": "870430f7-f789-4ad2-ac26-0b4110ea2777",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c6cad22-dce6-49c8-ad52-16e00935def8"
        },
        "item": {
          "id": "342cf52d-a14b-4da2-8e6f-e2342ec005a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "e3a77f46-9cc6-45df-9859-8bba0abef835",
          "status": "Not Found",
          "code": 404,
          "responseTime": 223,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342cf52d-a14b-4da2-8e6f-e2342ec005a4",
        "cursor": {
          "ref": "870430f7-f789-4ad2-ac26-0b4110ea2777",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c6cad22-dce6-49c8-ad52-16e00935def8"
        },
        "item": {
          "id": "342cf52d-a14b-4da2-8e6f-e2342ec005a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "e3a77f46-9cc6-45df-9859-8bba0abef835",
          "status": "Not Found",
          "code": 404,
          "responseTime": 223,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52998c63-e359-4855-86b0-a25857388a78",
        "cursor": {
          "ref": "c8e11718-d65b-487b-a879-5452a174cc4a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5715d083-f697-4be9-bb15-e46b52000209"
        },
        "item": {
          "id": "52998c63-e359-4855-86b0-a25857388a78",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6def9a52-db2e-42b2-9f1f-6bdf10677c9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b853c09e-7c09-4a32-a6ff-083e653b3bea",
        "cursor": {
          "ref": "085fb98f-9be0-4852-be23-101f869fd735",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "36e39a00-6cfc-4413-94ae-bb947cc9f614"
        },
        "item": {
          "id": "b853c09e-7c09-4a32-a6ff-083e653b3bea",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6571fd74-8ef7-40c4-94c6-f765875d02d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15f0eff-85e0-423a-b4e3-603ba7056a59",
        "cursor": {
          "ref": "8ac2f3d5-5d1a-4507-a7ea-7f204cc5ed93",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6d1f6dd4-f3c4-468b-8608-a29e25ea1cc5"
        },
        "item": {
          "id": "c15f0eff-85e0-423a-b4e3-603ba7056a59",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "036b9595-aef5-4e5c-a31b-b259f9436915",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bec310-ff6e-4e27-9d24-bbe02294362f",
        "cursor": {
          "ref": "ca34f197-a440-49fb-bd64-5c8e15a8d327",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "021bfb29-b864-42c3-b72b-dfcb95c35d82"
        },
        "item": {
          "id": "a3bec310-ff6e-4e27-9d24-bbe02294362f",
          "name": "identifiers"
        },
        "response": {
          "id": "a27137cb-8f08-4068-ae74-f7a40277c063",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dee27d3-82aa-4bbf-bd42-292472ed6415",
        "cursor": {
          "ref": "808d28b9-f1a0-47e4-87a8-a2de2e7f7d72",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cf130010-ed6b-4d8b-97d7-bf6d2fd793aa"
        },
        "item": {
          "id": "7dee27d3-82aa-4bbf-bd42-292472ed6415",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e22c669f-e1d0-4333-9ed2-9ed5670895f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ba4f06-980e-44d4-928a-185d0929a7c1",
        "cursor": {
          "ref": "4afa1048-40c7-4aa2-87c4-d19aa65a5ca7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c25cb98a-a83f-4e67-8054-b8867c54061c"
        },
        "item": {
          "id": "27ba4f06-980e-44d4-928a-185d0929a7c1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e2ede263-6aea-44ff-a921-fdf2bcc1f6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f82ce5-8506-4b69-9c2f-4c76dd208e95",
        "cursor": {
          "ref": "996855ed-ae64-4d0c-9f38-f93308246ba0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ea73dcc-be36-46a7-904b-515e25d2ce97"
        },
        "item": {
          "id": "28f82ce5-8506-4b69-9c2f-4c76dd208e95",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f3dcf23f-f53f-430d-bc65-2815074094f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a79f844-5d7e-40e2-a839-87bcd92c0591",
        "cursor": {
          "ref": "ebde19d7-7b33-434a-8660-cbb0f09902dd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3ef8f04e-191e-402f-8aed-509ccf950e69"
        },
        "item": {
          "id": "4a79f844-5d7e-40e2-a839-87bcd92c0591",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e4c245e4-989e-43dd-be7e-c233e2616ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092a929e-5c59-400e-a7ff-dfb32032c243",
        "cursor": {
          "ref": "0c47210a-3674-452b-b2f6-4eac8bf28663",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "10744438-6ef2-4f30-94c1-ffec2b567694"
        },
        "item": {
          "id": "092a929e-5c59-400e-a7ff-dfb32032c243",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bbd24fba-0918-4360-9922-5e165064e393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1f26d6-f6fd-465b-8f31-dff380bff988",
        "cursor": {
          "ref": "b6274c5f-4997-428c-8a88-1ab1f9e29b07",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d5018160-5f2a-4b12-914d-e865a9ee2a6e"
        },
        "item": {
          "id": "9e1f26d6-f6fd-465b-8f31-dff380bff988",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "08ee7615-ce62-422c-b758-576fa6862a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d369d5cc-b60e-4f66-8118-e418dcd8c8c7",
        "cursor": {
          "ref": "d0f28abf-a10d-4d7f-9023-11c2aab37818",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "befb1e69-9994-49ac-9ae1-d0e141747202"
        },
        "item": {
          "id": "d369d5cc-b60e-4f66-8118-e418dcd8c8c7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "424be1c8-2b0c-47f6-867e-ac618c2908a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2e30d-c7d8-4b6d-81a4-87c52dfe19c3",
        "cursor": {
          "ref": "c2982d3c-c166-426f-945c-04edb2872337",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "edf9c9c7-f2cf-44bf-beaf-500cfd6eb39f"
        },
        "item": {
          "id": "09b2e30d-c7d8-4b6d-81a4-87c52dfe19c3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5a175093-fe19-4b09-a3b7-1025428d5a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854aa0f8-9b9f-469c-8b23-005be1a1808e",
        "cursor": {
          "ref": "5a729a3d-ca36-44ad-b266-cb32a821a84e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19afbbeb-79b3-4dc8-abc7-68fd5881bfac"
        },
        "item": {
          "id": "854aa0f8-9b9f-469c-8b23-005be1a1808e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a9754a03-de8d-42b2-927a-7ca9ef354fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa3232e-9b12-4701-8a36-e8509f6026bf",
        "cursor": {
          "ref": "5b16ba27-53c1-440c-ae62-c0b5642516c0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "88a47c26-0697-421b-89bd-8cb63d29f2fe"
        },
        "item": {
          "id": "7fa3232e-9b12-4701-8a36-e8509f6026bf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4288710c-6a0b-4759-913e-5fc0aa9afe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d188e342-e772-4654-92f1-aff9589a8531",
        "cursor": {
          "ref": "f84d88b9-3d7c-443b-b71c-f47662220f08",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cc611212-909b-4544-9dee-be6bcc308b3c"
        },
        "item": {
          "id": "d188e342-e772-4654-92f1-aff9589a8531",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e200af7c-9451-4aff-98a8-0af11c5542f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fbaaf1-fd90-4e27-99e9-53b25729f979",
        "cursor": {
          "ref": "fd559f18-2b93-4089-b389-b0ab29300bff",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "94530548-4675-469f-9a62-b07f05f70a90"
        },
        "item": {
          "id": "f8fbaaf1-fd90-4e27-99e9-53b25729f979",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ee16ea4a-b733-40f7-820c-ba8ccf08d5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d061b62f-f504-4edb-9eb5-40c4d40fab00",
        "cursor": {
          "ref": "c68e0201-3431-4659-851c-db6dc9c53238",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a5b9c546-594f-4074-8ffd-00f065a76e5f"
        },
        "item": {
          "id": "d061b62f-f504-4edb-9eb5-40c4d40fab00",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bd43d459-1035-4c1f-b304-4f08d4e199e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475996d7-8342-4767-bc1a-d0ecfceb1bea",
        "cursor": {
          "ref": "1f8e2d3c-46f0-4c7a-9a01-780f5ab06dd3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ebea2337-b7e2-4c69-a840-0d0611a220a2"
        },
        "item": {
          "id": "475996d7-8342-4767-bc1a-d0ecfceb1bea",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e7f70c82-66f5-45c4-842b-324991fa45a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788fc188-360b-436b-a039-c88a3eb787f8",
        "cursor": {
          "ref": "b2135f49-fead-4c67-af4d-8ca2f43aa6e5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d9adbff8-6d03-4803-ae9c-48fd9ec3b3f7"
        },
        "item": {
          "id": "788fc188-360b-436b-a039-c88a3eb787f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "59d7e774-1f55-4e2e-a5a7-ba42dd8d33e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0dc0d5-aa10-4111-b279-98987e35d933",
        "cursor": {
          "ref": "5f97a96d-c264-4a2a-90b2-bdfa6803f01e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2d5df1b4-372c-4c3d-8a4f-c0c7395d0aee"
        },
        "item": {
          "id": "5f0dc0d5-aa10-4111-b279-98987e35d933",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b232b1da-a0ad-4c09-a025-f98227e9e077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d1e4b9-35a8-4d86-9fca-98060df5b49b",
        "cursor": {
          "ref": "7297a1a2-ee3b-4bfa-80d7-f30d776adbbf",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1080f00c-e5bf-4a19-ac34-8e45789c664b"
        },
        "item": {
          "id": "65d1e4b9-35a8-4d86-9fca-98060df5b49b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4d09e928-1ea5-478b-818d-1dc270eaeffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdaa271-ac05-4de6-996e-34d182dd342b",
        "cursor": {
          "ref": "cc1f1b19-924c-4684-880e-83c4407a7ef0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f831815e-5b91-4b5b-b5e1-bdf3a1e1723f"
        },
        "item": {
          "id": "2cdaa271-ac05-4de6-996e-34d182dd342b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "24c1aa9f-2a7c-424e-a580-9aea4503a0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb68284-1452-4762-b5c6-f126e0196138",
        "cursor": {
          "ref": "c8877ce4-7dbe-46c7-857a-af75f3252204",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "02e141d8-9ae5-4119-8fd4-a64f28eb37c3"
        },
        "item": {
          "id": "8cb68284-1452-4762-b5c6-f126e0196138",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "760910bd-b07d-4c8b-b545-1b9cfd847fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf9e49d-ac02-4d2d-bb58-9a12b1854126",
        "cursor": {
          "ref": "59042cdd-e271-40c5-8766-8493cc729769",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d1d04714-2033-4722-a220-c693b9e16e90"
        },
        "item": {
          "id": "3bf9e49d-ac02-4d2d-bb58-9a12b1854126",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "95c2b604-f7cf-49cc-8c39-ca909db5c2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49995b8-cc8c-4b76-b0e5-fc6f6d9752e6",
        "cursor": {
          "ref": "ec8fc971-eb74-45f5-8c07-4514b216177e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "00966c73-5fd9-4366-b37b-a625939f52d7"
        },
        "item": {
          "id": "d49995b8-cc8c-4b76-b0e5-fc6f6d9752e6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c779e7c6-54d7-4d50-b9e5-53b90a0db23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab66bf97-a59a-4145-a897-9ecd4dcc4126",
        "cursor": {
          "ref": "f5120d61-d6b2-4419-8dd6-a345cd7f8b26",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "df043f6c-53a2-4a2f-b186-3950615a83b4"
        },
        "item": {
          "id": "ab66bf97-a59a-4145-a897-9ecd4dcc4126",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f970744-a3c6-4448-9291-06ad62731ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd0d01e-a752-4aa6-83b8-91507b17ad64",
        "cursor": {
          "ref": "9a15417e-7eb7-400b-9025-ef18eff50931",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "31b75574-40eb-477b-a116-2fd9a78669f0"
        },
        "item": {
          "id": "dfd0d01e-a752-4aa6-83b8-91507b17ad64",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8f53ecd6-6194-421e-bf0c-7b29426e1d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a404ed08-202f-468d-8e16-d14c286127c9",
        "cursor": {
          "ref": "7875edc9-7fe8-495a-8c9c-b5552f5a3646",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d73a14b2-1cac-434a-8a7e-64e3f2938668"
        },
        "item": {
          "id": "a404ed08-202f-468d-8e16-d14c286127c9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2c23a7a9-dd40-44d9-bdee-027922b1adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94e0bf1-6ef4-4f91-bef3-b9d1cfe90b89",
        "cursor": {
          "ref": "d622876d-4656-48af-9f03-83e5676b24f4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "53f6d13f-0861-4c76-945f-129e814bc514"
        },
        "item": {
          "id": "b94e0bf1-6ef4-4f91-bef3-b9d1cfe90b89",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8a1a7542-2879-4e30-aff7-6cf6b8b95e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9565f1-5d77-4cb5-b0d9-b0ea42b29a2d",
        "cursor": {
          "ref": "37c37055-282a-40f4-806a-5de4f66df792",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "318f7935-c4d6-456a-a9a6-6fdf3418fbe7"
        },
        "item": {
          "id": "dd9565f1-5d77-4cb5-b0d9-b0ea42b29a2d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "db8552ec-b153-458c-85d4-11b3fb073953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e343eec1-67f1-4e51-80ce-bc4c70f53dd9",
        "cursor": {
          "ref": "225ac7d2-bb49-41b5-9574-55b0db299a9b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb0d29fc-a8ad-4367-b799-3ed8610573f1"
        },
        "item": {
          "id": "e343eec1-67f1-4e51-80ce-bc4c70f53dd9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cac73d2e-8123-45f5-bc51-2de12ecac5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa50cec-0cef-4029-a613-c251d773379a",
        "cursor": {
          "ref": "ab95ad57-79c7-467b-a9e9-78cd69be385a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7c497ddd-d97a-4c0a-9efa-b499cfadd744"
        },
        "item": {
          "id": "afa50cec-0cef-4029-a613-c251d773379a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5221f2df-a1d8-4770-8e1c-a79ebcd26bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42c15d9-0679-4a0c-acad-9fb3a5c93466",
        "cursor": {
          "ref": "99ad445b-86a5-4640-a99c-dbd3be5f7ee5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b1b41655-7005-47b0-b977-cd56e516e40e"
        },
        "item": {
          "id": "e42c15d9-0679-4a0c-acad-9fb3a5c93466",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "806cde46-b86e-43b5-b193-817d4359dfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc095a56-e90b-4be5-b555-a3fcd929b537",
        "cursor": {
          "ref": "289e240b-8f5a-4528-80d5-dcc027b6256c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae5a7eb4-6ac9-4ec2-81c7-2be957e0b617"
        },
        "item": {
          "id": "dc095a56-e90b-4be5-b555-a3fcd929b537",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "205f1ae5-cad6-4d9b-bec5-bfc3ab71a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4fd96d-5d21-4bab-8cbd-e843ff576334",
        "cursor": {
          "ref": "0dd89db4-600b-4483-9146-90557a89db21",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5fa4d89d-fa8a-4889-84b0-f92dd3e7c573"
        },
        "item": {
          "id": "fb4fd96d-5d21-4bab-8cbd-e843ff576334",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6cb1c829-e32b-44eb-9712-dd5c89d84fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773b8c96-b751-4e12-b267-233bb20535f5",
        "cursor": {
          "ref": "73256e60-c38a-4ecd-9ce6-c3a5ec8f4dc3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1afff4da-d1c6-44a9-ae50-7bda91d47186"
        },
        "item": {
          "id": "773b8c96-b751-4e12-b267-233bb20535f5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8c654a6b-2728-4564-a4f4-d2d246c1edfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765287da-c70f-4550-9aa8-e032c73673c8",
        "cursor": {
          "ref": "6964f228-fd85-43d4-b0b9-d5d9155ef4e4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "79575d07-f3c6-4ab3-bc55-1e86f3a4734d"
        },
        "item": {
          "id": "765287da-c70f-4550-9aa8-e032c73673c8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5883db2f-1389-4063-862a-d6b6c2342f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8cbf22-1ebb-4e6e-af7c-f9652d130d8c",
        "cursor": {
          "ref": "d6e0de60-3802-472d-940a-f96cdbd2efe5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e8dd0a27-2617-4531-99ec-e4e44e9283d6"
        },
        "item": {
          "id": "df8cbf22-1ebb-4e6e-af7c-f9652d130d8c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e6fcda42-08bc-43e3-bbd3-680a74566b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee332f63-b0c8-4133-ba97-f8cfe49bbd1f",
        "cursor": {
          "ref": "ab46b6e4-b2cc-4273-9705-8a5d2761efdd",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c0a5a9d5-60eb-4140-823e-c80e38103b0d"
        },
        "item": {
          "id": "ee332f63-b0c8-4133-ba97-f8cfe49bbd1f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "83a1e705-1be6-4c22-856b-f1addc1c13d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d25522-c713-4af6-a910-fa6bca818585",
        "cursor": {
          "ref": "5165672f-0619-4f23-a639-e3dee19ea3b4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f61c9468-3116-47bf-8bfc-d662639a236e"
        },
        "item": {
          "id": "f2d25522-c713-4af6-a910-fa6bca818585",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c665bc4c-922d-4ec4-a667-dbd2e3504e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8449ab57-c74b-4ff5-81f3-0b62b1fffaf8",
        "cursor": {
          "ref": "6e65bb2e-c4c2-4e1a-9e43-a30395f3b860",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "79b6f312-4a64-4951-b69e-e10619114348"
        },
        "item": {
          "id": "8449ab57-c74b-4ff5-81f3-0b62b1fffaf8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2273b369-0550-489a-9b3f-6aa56bdb0d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c11a9b8-4d0a-445f-a6a0-0d0095bec453",
        "cursor": {
          "ref": "163e8c5a-b157-41e9-8bc4-f2b391181801",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9817f655-ee15-4c4b-b164-b67272414177"
        },
        "item": {
          "id": "2c11a9b8-4d0a-445f-a6a0-0d0095bec453",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97a13e12-4e7b-4ee9-9454-8bed4e331f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f98d9e-2e43-4d64-9cd8-32a6d9f16053",
        "cursor": {
          "ref": "0bfc1895-7a92-4812-a6b8-e77c34ba5e98",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1534e853-e0d8-45f5-a806-42a2206da2d5"
        },
        "item": {
          "id": "a6f98d9e-2e43-4d64-9cd8-32a6d9f16053",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0ab826c0-09cd-47bc-b3f9-fe4fcfcbe4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa96774-7178-474d-b381-17e36406cf97",
        "cursor": {
          "ref": "d655698d-e2f4-4693-949d-25bdbb2d287d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8396c31e-8ad0-4705-8d98-cd52acf974c5"
        },
        "item": {
          "id": "3aa96774-7178-474d-b381-17e36406cf97",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0d447a77-af34-4d89-9b19-9c37d9392bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d3ebe0-14a5-4f26-b75e-b9909999120c",
        "cursor": {
          "ref": "aa79aba0-ae0f-40e2-891d-33a075d10194",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6b6437a2-3986-466c-b778-9ce2c10dfec2"
        },
        "item": {
          "id": "33d3ebe0-14a5-4f26-b75e-b9909999120c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aa2e74a9-18cc-44ff-80c6-c3e97bfbdb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b3df0-169e-4a8d-ad54-be8c5fa2d420",
        "cursor": {
          "ref": "6a71d624-f7f8-4dd8-8053-58659f00da51",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dd2ba355-1e70-43b4-bb5c-cde277f08212"
        },
        "item": {
          "id": "582b3df0-169e-4a8d-ad54-be8c5fa2d420",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "803be02c-2ad8-47ab-8208-678c0038ac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72af4364-deb9-46bf-9a82-5864778aa028",
        "cursor": {
          "ref": "56823b78-4763-44ad-82cc-a8ff651d930b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f91b1626-4c10-4958-af18-95b7bfacd7a7"
        },
        "item": {
          "id": "72af4364-deb9-46bf-9a82-5864778aa028",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e946fc27-d42e-4153-8bcc-f062bef7d183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaf81ae-0ff2-4f79-8164-12f64f557762",
        "cursor": {
          "ref": "efd6e524-8ba0-4c42-890d-1d530d271ba8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "12772d77-1573-409a-9c17-e69f50fc66f6"
        },
        "item": {
          "id": "5aaf81ae-0ff2-4f79-8164-12f64f557762",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0c3974e1-bdc0-434a-b7ec-bc39f8063dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac25c61-5225-4779-8bc7-b14993033d5b",
        "cursor": {
          "ref": "1374e5c7-41f5-49d0-aefd-a9009674e8a8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ddbc4b8b-26e1-4576-b578-f6cf439e2cf6"
        },
        "item": {
          "id": "dac25c61-5225-4779-8bc7-b14993033d5b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50051f34-79a0-4991-918c-5590741ebd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deca3d6c-a615-4c1c-a6e7-e434e3d5fa15",
        "cursor": {
          "ref": "8b689a69-7be1-480e-b3df-bea7c4508b0b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c80ecca7-34d9-47b1-bbe9-b9f5547a47e7"
        },
        "item": {
          "id": "deca3d6c-a615-4c1c-a6e7-e434e3d5fa15",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13220cbc-ba06-41b3-840c-db916ca3e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34387798-255e-4b88-b6b0-979aebeff5a2",
        "cursor": {
          "ref": "8ea819c6-a27f-4c53-901b-c58e4074815c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bf01e5b1-5260-4333-8970-631a3d374168"
        },
        "item": {
          "id": "34387798-255e-4b88-b6b0-979aebeff5a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bffd60ac-5b1c-45b5-be2e-58295f5e1683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d703305a-9cf1-432b-b46d-9b3b2ffff445",
        "cursor": {
          "ref": "0f6dae0c-f549-4820-ba71-ef35b1ca33c0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cb08dac7-a26e-4a95-84df-e1c2f3600be9"
        },
        "item": {
          "id": "d703305a-9cf1-432b-b46d-9b3b2ffff445",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bcd3744a-f25e-423b-8aef-074d5a6643ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb55b8c3-cc8f-4683-aeb2-031370602c97",
        "cursor": {
          "ref": "2fb2dde5-edc9-494d-a61b-ffc9071e055f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "457d2c3d-0c23-48ad-8394-b9d450da90e2"
        },
        "item": {
          "id": "eb55b8c3-cc8f-4683-aeb2-031370602c97",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1133a75a-f754-44a0-aa31-7bcad14ebcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd3e92c-8a90-4977-ad9e-68761d04f8dc",
        "cursor": {
          "ref": "2d474139-a697-4822-a92e-b119f80472aa",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "62b49abc-6f53-433b-a190-9800d7691a3a"
        },
        "item": {
          "id": "0fd3e92c-8a90-4977-ad9e-68761d04f8dc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "620859d1-377e-48cb-8ce2-ddc8598f7ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c0decb-fcf2-4572-9c56-846fe62c5659",
        "cursor": {
          "ref": "560c7d15-0031-4630-9b1a-140128dcf500",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5242e39c-271b-471c-9498-57356d01bbda"
        },
        "item": {
          "id": "66c0decb-fcf2-4572-9c56-846fe62c5659",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "43784745-ee35-493c-ba3f-7530b098daeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5764da1-1a72-4fb7-8ad7-f2eae95c6ac6",
        "cursor": {
          "ref": "a8d668ca-8e27-40c0-8b86-f5f7c89332af",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "09e4bcc6-189c-4d9b-9f87-f8d8540e97de"
        },
        "item": {
          "id": "b5764da1-1a72-4fb7-8ad7-f2eae95c6ac6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c21903dd-0723-45f8-b1e7-810c573f4eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2328cc-3ece-495b-b849-2b5465b479e7",
        "cursor": {
          "ref": "ad60ef6d-ba02-40d6-afc7-231ddeac6663",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "627195b3-239b-489d-b61a-7aa28b191395"
        },
        "item": {
          "id": "dc2328cc-3ece-495b-b849-2b5465b479e7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4b27a705-fae8-4e92-a9ee-6212d868dc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54bd76c-73a8-4c96-b57d-327ab848b9a3",
        "cursor": {
          "ref": "06916a9c-d334-4851-b87d-88b0259092ab",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5452686f-534c-4d03-9165-5ee395cee013"
        },
        "item": {
          "id": "a54bd76c-73a8-4c96-b57d-327ab848b9a3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e2c4adc8-5cc8-4651-93cd-28e1ddede711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81678051-02fc-4bed-b7b3-59fb7a5a93f5",
        "cursor": {
          "ref": "367cec5c-b8a4-47b0-80d3-0a48a29da209",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7f97b81e-173c-4b7e-9d5a-ab0537d8fc54"
        },
        "item": {
          "id": "81678051-02fc-4bed-b7b3-59fb7a5a93f5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "865bc0fd-6180-4fc3-bd96-0f7ebc6cf02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3affa11c-e4a7-4351-b2b1-d96262fe2245",
        "cursor": {
          "ref": "50fcbeb4-8719-457f-abea-58e5380e2358",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "13f1571f-287d-4797-8edf-30406a0d1783"
        },
        "item": {
          "id": "3affa11c-e4a7-4351-b2b1-d96262fe2245",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d67600c4-7bc4-42ef-a097-05c12d526f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bb9b56-63fa-4d5d-b40a-4c234973f4d8",
        "cursor": {
          "ref": "2c04c430-59d2-4aee-a0d9-152a1272ee20",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1760d7a6-99bc-4af8-8999-1645a227ae2c"
        },
        "item": {
          "id": "c5bb9b56-63fa-4d5d-b40a-4c234973f4d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "511e2128-69be-4151-b4d3-c1cb8b0a40a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795019cf-6de2-4c68-b11e-2a085a62c3c3",
        "cursor": {
          "ref": "651cfd8b-4133-4b5d-a98c-a8a3c9b2e831",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "355d264b-36f4-4d53-a0ff-c666c9c830b0"
        },
        "item": {
          "id": "795019cf-6de2-4c68-b11e-2a085a62c3c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ebfbbb2-517c-4b7e-a514-abe7a7a5748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afc69a7-7eca-4eb9-b669-7385e8d1f553",
        "cursor": {
          "ref": "3373eb0b-8274-413b-bb58-c81ae6347dba",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e8d7d8c7-ceda-4016-a971-a1db6929ea53"
        },
        "item": {
          "id": "4afc69a7-7eca-4eb9-b669-7385e8d1f553",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aa3788d2-e5ba-4a64-8fe9-c983b4e3b0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70334b4f-101d-4c44-b683-9b7d7a34a36a",
        "cursor": {
          "ref": "ab5d890e-5c64-4c84-bfa3-43f4d0d82586",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "afa3cd1f-ad3f-4599-baf4-1839535939d2"
        },
        "item": {
          "id": "70334b4f-101d-4c44-b683-9b7d7a34a36a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "879dd1f3-de58-40ea-9cea-ddaee3bbf636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01b76eb-8e02-430c-ac2f-004c603dab20",
        "cursor": {
          "ref": "7115d056-7eed-41c8-982d-55867e861fc5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5625fba5-e6b9-4e3a-a848-a3462e42d421"
        },
        "item": {
          "id": "b01b76eb-8e02-430c-ac2f-004c603dab20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4a07434d-2e43-4d6b-b675-562bd9a47074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a232d9-8957-43d5-b83a-3a4756befd08",
        "cursor": {
          "ref": "2da9823d-4684-422b-9e01-d52e62ba1963",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "60bbf7d2-bac7-444d-947f-2795bd996971"
        },
        "item": {
          "id": "88a232d9-8957-43d5-b83a-3a4756befd08",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0eac7940-368f-4274-b437-eca5faa72490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d07e5b-ad97-4742-a9e0-06646d7f1851",
        "cursor": {
          "ref": "ee54cdeb-708a-4d3b-9c9b-5cc4a7a4986a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "05cb11d5-2748-4a6d-b81e-cd7b4bbdf5ef"
        },
        "item": {
          "id": "61d07e5b-ad97-4742-a9e0-06646d7f1851",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0d5a8eea-e939-4a06-9688-08f2fb6051bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16cb6c5-5fbd-48c4-b5b0-b858ca355e6a",
        "cursor": {
          "ref": "21a4ab27-c895-426e-806b-cdb615e181a1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e82cb553-5c88-4dd6-a444-5f5cb6173750"
        },
        "item": {
          "id": "c16cb6c5-5fbd-48c4-b5b0-b858ca355e6a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a1adef79-b27f-4e55-8b0b-dec16f583af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dee1053-054c-405c-ba55-ff15cbedb6f3",
        "cursor": {
          "ref": "ca9d7b7c-f745-4feb-b00a-e9317bf051b8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7812901e-cdb6-408f-a64a-f095a8511592"
        },
        "item": {
          "id": "8dee1053-054c-405c-ba55-ff15cbedb6f3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c3b2d968-6c08-4247-84e5-d4ef855b97f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e4eb15-3ad3-4fad-ae37-48109af4f5cd",
        "cursor": {
          "ref": "c990d05c-b0d1-419d-aa83-2d4772350ac4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4da50cff-59a4-44e8-8558-82e2d01f9ba9"
        },
        "item": {
          "id": "d0e4eb15-3ad3-4fad-ae37-48109af4f5cd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b3b47531-a02d-49aa-b129-0c2192df2d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d5142c-6085-4eb7-be24-2e11ceeeec46",
        "cursor": {
          "ref": "b3987b09-1d89-4fe3-b25b-de55a2088b28",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3a52b4e2-7502-4a85-835d-02fe761e7471"
        },
        "item": {
          "id": "c0d5142c-6085-4eb7-be24-2e11ceeeec46",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aeff94d7-16b0-47f5-9e94-b42d395642ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788d03e3-0254-4354-9557-b27e1036a7c6",
        "cursor": {
          "ref": "5d735e79-9772-427d-8cb9-44def4a99dec",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8bb787f3-a50f-41ea-aabc-cd873455bed1"
        },
        "item": {
          "id": "788d03e3-0254-4354-9557-b27e1036a7c6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "60243921-b808-4125-b5a2-c5de66fa4760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9603457c-7beb-4320-93ed-0836a388a74e",
        "cursor": {
          "ref": "b18b9d85-5525-4bf7-9566-e32470f1752f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fc203077-836d-40c5-9a66-a48d15bed6d8"
        },
        "item": {
          "id": "9603457c-7beb-4320-93ed-0836a388a74e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "68aa7d5a-70de-43e5-a793-516873a7f5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6315840-2b6c-4b9d-bbf7-f7882ba29f75",
        "cursor": {
          "ref": "c6cea24d-1350-4a00-bc59-614c7bbd6b27",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b4f873b2-48d4-49b2-9b15-3a5c82a68828"
        },
        "item": {
          "id": "f6315840-2b6c-4b9d-bbf7-f7882ba29f75",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "46f21121-c812-4b3d-8504-5ea608f59868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321514ce-3c01-4eb7-8704-d9639de387f5",
        "cursor": {
          "ref": "f6fe6672-fddb-4bdf-be0a-a105a05b87b2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "22c07957-691e-4d92-bf4e-1f86208a555b"
        },
        "item": {
          "id": "321514ce-3c01-4eb7-8704-d9639de387f5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ea2616c8-dd00-4fd7-8813-69220bc5456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c9fb28-c7a4-4b66-a96f-f5149d78d26a",
        "cursor": {
          "ref": "2ddb745a-5c94-4833-aa87-45b0c02e4666",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c02b8305-71f0-4c45-a65c-5c9587256a7b"
        },
        "item": {
          "id": "63c9fb28-c7a4-4b66-a96f-f5149d78d26a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "af2a5cb2-c9ad-472c-bd65-6062021d5542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb531c65-9e5d-4e3e-a22a-59754175d984",
        "cursor": {
          "ref": "e90b8099-4730-4387-8816-db88385655e7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4978bec6-b440-4cd5-94fa-8dbd0e01c094"
        },
        "item": {
          "id": "cb531c65-9e5d-4e3e-a22a-59754175d984",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1391734d-6e69-4936-ac5a-9efbfdd6a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d069ffb3-b417-4ac2-86be-f5d3edfc8b3c",
        "cursor": {
          "ref": "1e0ebbf3-285c-4a67-a503-d56eca56ef04",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "de587a13-ab8a-4140-a0da-d7c1069278f0"
        },
        "item": {
          "id": "d069ffb3-b417-4ac2-86be-f5d3edfc8b3c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b2c62194-6932-46be-ad33-6ef5f18286e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f32a178-b8a5-4757-a5e5-7d5fbea13af2",
        "cursor": {
          "ref": "654b742e-e050-4b0f-8ba6-c62a5c8cf838",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e07b7826-8b5d-4e20-b48b-52ff961dd0a7"
        },
        "item": {
          "id": "4f32a178-b8a5-4757-a5e5-7d5fbea13af2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6ad9836b-579a-4297-a0a1-e9f92fc7c962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a192058-23cd-46a6-8893-c07c790711ae",
        "cursor": {
          "ref": "03c6aa5e-f32d-4895-b442-5674d6ee7da1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5929a1eb-6fb6-4363-b388-cdf7014e1fea"
        },
        "item": {
          "id": "7a192058-23cd-46a6-8893-c07c790711ae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dd8d446b-bc31-492c-bf57-c0bee68a996b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3072a310-a092-4f7f-842d-daaf02bdac57",
        "cursor": {
          "ref": "5cfa8708-6634-45ac-b8cc-d23d09b415c0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8383a26a-b00b-4122-aee9-b9e0bce8cb08"
        },
        "item": {
          "id": "3072a310-a092-4f7f-842d-daaf02bdac57",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9dfc6726-c6f5-4a6d-8e2b-1edee3ad5596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48724b1f-0c8c-4b8d-b008-90aa47681805",
        "cursor": {
          "ref": "744a1462-de44-4c4c-9a4c-46b1a4f937b3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "04c29de7-b074-474d-a024-7cadb57c23c4"
        },
        "item": {
          "id": "48724b1f-0c8c-4b8d-b008-90aa47681805",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "42138880-3beb-477e-ab3d-56825fc92498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a03747-9fce-4648-b2b1-508b58be9beb",
        "cursor": {
          "ref": "0d53d072-3ee8-4de8-bb7e-234c53ddc917",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fd9941ce-ff00-40d7-ad98-f87fa3a3ab15"
        },
        "item": {
          "id": "41a03747-9fce-4648-b2b1-508b58be9beb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ceb16446-6d76-4024-bf53-0be19824e24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1b21f9-6c81-43dc-b542-a3123ca7ca04",
        "cursor": {
          "ref": "5690174d-e8bd-4a0f-8d2e-953ba62766ec",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "081504a1-f90d-4599-a3f4-1d91f5af56a4"
        },
        "item": {
          "id": "de1b21f9-6c81-43dc-b542-a3123ca7ca04",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6aedf2df-ebfa-48ac-b230-6546cc5963fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d3d980-e72e-46d7-b47a-96962655b3f2",
        "cursor": {
          "ref": "915760f8-0880-4037-978c-1fd426e270be",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a90eb724-1c32-48a5-80a1-4594895f6f5e"
        },
        "item": {
          "id": "f8d3d980-e72e-46d7-b47a-96962655b3f2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0a5f6a9b-f7bf-42a5-81d8-712577711623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45b27ea-207c-4469-b506-9c19a9955937",
        "cursor": {
          "ref": "0a9b6b23-6d10-4bd0-90f4-b5094e5ce384",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "09be2200-398b-437c-8a46-fb1537866e42"
        },
        "item": {
          "id": "d45b27ea-207c-4469-b506-9c19a9955937",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60d7f576-398e-41b3-91b2-3f16fd33291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6c9f51-91f6-4c17-9945-558dc09c40d2",
        "cursor": {
          "ref": "ce5eb968-666b-460a-bb48-1dec2911d3a5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2e71a063-ff0a-4a44-8a09-a5bec2acb1c8"
        },
        "item": {
          "id": "0b6c9f51-91f6-4c17-9945-558dc09c40d2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "919a6861-ba6b-42e5-8a4e-50dc8024f98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270640cf-01e9-4648-814d-cc4a0956ea8d",
        "cursor": {
          "ref": "ba7094f1-50e2-4200-a7cb-1f0513d41bee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "61eacff3-f609-4fc2-9876-203b4265343e"
        },
        "item": {
          "id": "270640cf-01e9-4648-814d-cc4a0956ea8d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "47596790-8e9b-4b1e-b5e8-838a00ca9d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc9887-31fc-437b-ac0d-f5fea81a9c2d",
        "cursor": {
          "ref": "8c8d38c6-fdb0-446f-be95-7a9e0190f0e0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8e41f6f9-9dc5-4272-b546-b36b9b5ec2b7"
        },
        "item": {
          "id": "02bc9887-31fc-437b-ac0d-f5fea81a9c2d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "450c1d10-0b16-4d5d-b8b3-d0d6180da3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101e8bd8-6502-43dc-9cf8-15866fac284c",
        "cursor": {
          "ref": "ba6a6e54-d16a-4dfe-98c7-c27ca5353bef",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "69701fdd-407d-4608-af69-963515589f27"
        },
        "item": {
          "id": "101e8bd8-6502-43dc-9cf8-15866fac284c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "465f2d76-e82e-4fd6-8735-763dc5a3adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077f92bf-20b3-40c1-a179-4c2b830118c7",
        "cursor": {
          "ref": "c4c64a4f-d1fe-4928-b9f3-7e8e71d7688d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8151b0b3-f95a-4790-bb3b-a4f4fa56cd1f"
        },
        "item": {
          "id": "077f92bf-20b3-40c1-a179-4c2b830118c7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "78e86533-01ff-45e5-91ea-ff06cb6e44f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac22de3-5f39-4a41-9f4e-1324e4cce5c0",
        "cursor": {
          "ref": "eb96a630-acae-493b-923b-18de1bae1eb7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4bdb6bc5-adaa-4051-8448-53e85cc04191"
        },
        "item": {
          "id": "eac22de3-5f39-4a41-9f4e-1324e4cce5c0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f34ce3de-d324-455d-b9b7-e8c5f41dc397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d455730e-c984-4a09-aab6-d9aa16b0b814",
        "cursor": {
          "ref": "3b417000-2a3b-4972-930c-e91ec34223b1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a8f4f72b-fc91-495d-811f-233271f8208f"
        },
        "item": {
          "id": "d455730e-c984-4a09-aab6-d9aa16b0b814",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1c00fefe-d81f-4c98-81f6-57993c48bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a30f2c5-ef9e-4681-9c3e-b9581a399bc6",
        "cursor": {
          "ref": "6122d708-7560-4262-8dae-9bab8c6e6d9d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b8038b76-4dc6-4d20-bab7-690a6461543b"
        },
        "item": {
          "id": "2a30f2c5-ef9e-4681-9c3e-b9581a399bc6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "50fd9d87-1b78-4ad2-9ec5-62de4065144f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c0d19-cefa-47db-94f4-01bdd6c1fe4b",
        "cursor": {
          "ref": "6cff6c03-4898-4d85-a214-5f2f8d0af230",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7c73313b-27a5-45dd-bb0e-4e7bc6fadb9c"
        },
        "item": {
          "id": "f61c0d19-cefa-47db-94f4-01bdd6c1fe4b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "41fbe5ef-3f3a-4333-a50f-0668c892974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d62434-0034-44c8-9582-f02a77f2f897",
        "cursor": {
          "ref": "ce5ad054-1a6d-416d-9fde-8c1af2faf14f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a4d37153-1ba3-4307-bd65-d076bcf039c8"
        },
        "item": {
          "id": "13d62434-0034-44c8-9582-f02a77f2f897",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "614d915a-c0da-4eeb-b0a1-006bb0c7f71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba74d6a-8bec-498a-ac68-07e6a94ebe7e",
        "cursor": {
          "ref": "e875d1fd-1f76-4321-a6d8-635103258f8f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5ea1ce98-b8da-4d13-aaa4-3299047239aa"
        },
        "item": {
          "id": "7ba74d6a-8bec-498a-ac68-07e6a94ebe7e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d90c43a9-1258-4483-9775-739de0ec8be5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48701d1-78c6-4e95-9614-0c888b30b3a1",
        "cursor": {
          "ref": "e85b4ea1-c9d9-4ae5-a3a4-0da392c077d7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0825ff94-a1f2-4a4d-99ab-355cedf4e7e1"
        },
        "item": {
          "id": "e48701d1-78c6-4e95-9614-0c888b30b3a1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "47470f35-7d11-403a-9d62-574aa41df9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cee4f56c-b03e-4053-97df-0464cf04bb50",
        "cursor": {
          "ref": "f5d9f170-cad2-4bdf-945e-a97825d6aaf5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cd769b7c-061c-4951-8396-b0e0127d8864"
        },
        "item": {
          "id": "cee4f56c-b03e-4053-97df-0464cf04bb50",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f21e1f0e-0af3-4011-a716-ab62e23ecd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "97427add-a43d-49ec-844c-bbaece32321c",
        "cursor": {
          "ref": "46e84d0c-ce51-434b-93a6-4ab514fd0274",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "26769c6d-21d6-45ee-a2e9-be0cb64f31e0"
        },
        "item": {
          "id": "97427add-a43d-49ec-844c-bbaece32321c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5483a55e-39f4-45b3-8c69-ac83fd1bca8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0f767c7a-7de8-46a7-a706-ced65a98900a",
        "cursor": {
          "ref": "56076e9a-7548-47b2-b9f2-5ade6f1fdb83",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6155983a-c2ae-4a22-9a64-9c450d9f5118"
        },
        "item": {
          "id": "0f767c7a-7de8-46a7-a706-ced65a98900a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "af8e79a0-eace-4341-aa68-440377ea56d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fcbaf890-c68b-4f14-9b53-fe2bcb8d6d6b",
        "cursor": {
          "ref": "b91de281-5618-4f56-a817-9207241bb5cb",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a1222fbc-c688-4648-a702-97c071ef6102"
        },
        "item": {
          "id": "fcbaf890-c68b-4f14-9b53-fe2bcb8d6d6b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b5f4dc36-5b75-40f1-a3ac-6dfd95394963",
          "status": "Created",
          "code": 201,
          "responseTime": 12270,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3000ba6-8a6d-40fa-999d-118233777fef",
        "cursor": {
          "ref": "7aff53cf-4833-4aab-940f-89c9f7e5081e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "32f7e96c-fbd7-48d9-a621-a0dc8df6c2cc"
        },
        "item": {
          "id": "e3000ba6-8a6d-40fa-999d-118233777fef",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5a721aca-ceb3-4fa2-853a-0e7406e326fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "326bb567-9a52-4f6b-9bed-c2f25ffa06c0",
        "cursor": {
          "ref": "ac4a4f10-e65f-48b4-b83a-ed7a7aed7001",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a8edbaa8-2f55-45eb-a88b-f52937c07fb4"
        },
        "item": {
          "id": "326bb567-9a52-4f6b-9bed-c2f25ffa06c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6572710c-5c33-4951-8b7b-31f8bbb94f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d5a7bbd3-1540-463f-8f0b-fceaf8c9237e",
        "cursor": {
          "ref": "c34db448-f157-4409-937e-e760a8019e5b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "60a2585d-ce75-459e-8efe-9b0bf3cb36eb"
        },
        "item": {
          "id": "d5a7bbd3-1540-463f-8f0b-fceaf8c9237e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2762c1f6-d38b-4957-a2e1-e46424453956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5034646f-08ec-42de-b24d-434cf71233d3",
        "cursor": {
          "ref": "ca8c1a61-3b4b-4239-8c5a-8470cdd0983c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "98984268-5a9a-406b-8eb2-ace557109efe"
        },
        "item": {
          "id": "5034646f-08ec-42de-b24d-434cf71233d3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ab586bf8-e212-43e0-a872-a12f06f3a147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e108051-0746-46b2-8f96-9fa0074d0a77",
        "cursor": {
          "ref": "cdc799ea-be8f-44b6-a364-e466f123446c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0bb771c9-9d3b-478e-a78d-6f65114ba63d"
        },
        "item": {
          "id": "9e108051-0746-46b2-8f96-9fa0074d0a77",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a30c7b9f-54ab-41c4-ae88-0107f7de4242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e8278-46dd-468a-a805-8bb2f556d1d5",
        "cursor": {
          "ref": "65fc7e7d-9b74-4e55-9171-640cdacea2e7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "01096bb1-8650-4f66-8d6f-7b12f26c1c0d"
        },
        "item": {
          "id": "649e8278-46dd-468a-a805-8bb2f556d1d5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f666ec26-fe4e-445b-973e-c21056fce274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bfae77-8705-4c50-bf0f-3e0d594b0601",
        "cursor": {
          "ref": "e826f90b-86d7-4368-b814-5083a272dfce",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dd6f9da3-b345-4a0c-891c-605a385ce819"
        },
        "item": {
          "id": "72bfae77-8705-4c50-bf0f-3e0d594b0601",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6f41320c-514c-4b7a-bcb8-50415da2e51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63a367b-f215-4fda-b192-99cdca67461b",
        "cursor": {
          "ref": "880d252d-4d8d-44bd-9e5f-1e189e59d796",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4c1bd5a9-60b2-4abd-ba81-da0a466512ac"
        },
        "item": {
          "id": "b63a367b-f215-4fda-b192-99cdca67461b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b8a9918-80a8-4991-8c17-6be0538b50e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af17ffc6-fbde-485e-9caf-985868996aa9",
        "cursor": {
          "ref": "f3ef852d-bc82-4840-bb0a-a4416fc22f80",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a9fd7aa7-28fc-48b1-a6e4-871d8d36330f"
        },
        "item": {
          "id": "af17ffc6-fbde-485e-9caf-985868996aa9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3f627360-fa8d-43fe-a715-aee27fddfde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69628c85-fff8-4849-87a6-9ff5c7eb04b4",
        "cursor": {
          "ref": "412d459b-fc6a-4bba-b061-5fd7c26a8116",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "262cf49f-cc60-4d7a-8e0b-be560d82e63c"
        },
        "item": {
          "id": "69628c85-fff8-4849-87a6-9ff5c7eb04b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a896b35-e96c-4060-a8b5-3781859613dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133228f4-b7ec-4905-8ef3-0dd635d46415",
        "cursor": {
          "ref": "0fbeb21b-0811-4f73-a53f-8b828819e468",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "84a9f0b8-dbf9-485f-a899-682a35a412ef"
        },
        "item": {
          "id": "133228f4-b7ec-4905-8ef3-0dd635d46415",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca157953-5f99-4619-86b1-7403ed43ce93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd21be1-839a-4412-8022-ea72c2a7a69f",
        "cursor": {
          "ref": "71ca490c-09a8-4415-8107-d2d8d9042e34",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "15940ef1-8e95-4b36-ac12-9dd3703ca300"
        },
        "item": {
          "id": "ccd21be1-839a-4412-8022-ea72c2a7a69f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b1c322bf-3d9e-42a1-980b-59fbaa83a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a14673-6965-4866-bd08-a80ea46d0d71",
        "cursor": {
          "ref": "fbd6fc3e-fa18-4c96-8c87-8b7df3671c17",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "057c5aca-ce14-4192-b7b3-5034cdf32496"
        },
        "item": {
          "id": "51a14673-6965-4866-bd08-a80ea46d0d71",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57b58db1-25e8-4408-a398-6b8af18d72dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afafae9-9777-4641-85d6-507817038d35",
        "cursor": {
          "ref": "2ec93ea9-581a-461e-a026-9127db976adf",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b5beca62-b2bf-4bd5-aba0-3855a804ccfc"
        },
        "item": {
          "id": "3afafae9-9777-4641-85d6-507817038d35",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83d5d78f-798c-4447-8597-d2c8f10dc3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f410aff1-c3cb-40a0-826b-2bf4806bcb41",
        "cursor": {
          "ref": "a7a1ae0b-153c-42a7-85ed-5ceba3948c5b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dd8946e2-7166-4f3e-8a4a-6871f32b2b80"
        },
        "item": {
          "id": "f410aff1-c3cb-40a0-826b-2bf4806bcb41",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bdc52faa-a543-406e-a7ab-d65cb2f03173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3330c5-021a-49e9-a6b0-1c79e7c46cd3",
        "cursor": {
          "ref": "aebc00b5-57bb-4ea1-91c9-a0ec5365c77f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c0dbd52-0057-4454-8ca3-6fbcd4a507b3"
        },
        "item": {
          "id": "6e3330c5-021a-49e9-a6b0-1c79e7c46cd3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dbb01a3-c273-421d-8379-edf2969ae486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81cf152-72f1-4e4d-8861-d62be7f5ac16",
        "cursor": {
          "ref": "0920f0f7-b7d4-4334-b51f-44002e373326",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "52a5fb9d-4efc-4919-9b28-14189d0dad77"
        },
        "item": {
          "id": "c81cf152-72f1-4e4d-8861-d62be7f5ac16",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b03e913-5565-4f2c-93c7-29eb154a5cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf887bd-006c-42d6-a025-da230ee226b5",
        "cursor": {
          "ref": "655f00e2-91e8-49f7-a1df-bbf81843e303",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c3cebdd9-b10f-46a3-9a49-04c7957ea055"
        },
        "item": {
          "id": "1bf887bd-006c-42d6-a025-da230ee226b5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "47a0ad00-b62f-4423-a437-3237a8403761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23ca5f2-21c5-44bb-8286-12e52ae318c7",
        "cursor": {
          "ref": "de3d0d5e-e2f3-4b9b-bb94-366323ef9618",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aeaef32d-6b85-4808-9c32-6d3ddec207a4"
        },
        "item": {
          "id": "e23ca5f2-21c5-44bb-8286-12e52ae318c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59c2d9b5-821c-42fd-aff7-3df9eb0476d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0100001f-71ec-4276-b3c8-e8ea86833fdb",
        "cursor": {
          "ref": "dfca9e81-c54b-41b5-991b-111f4b0bbae9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "91eaff15-8985-4ef0-a75b-e6e58f791f3f"
        },
        "item": {
          "id": "0100001f-71ec-4276-b3c8-e8ea86833fdb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dbe05f31-9ce9-422f-92cc-ead270acb406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2571874b-a479-4fd6-aaa1-6df66f32527d",
        "cursor": {
          "ref": "484e4671-da36-47b9-815b-5304919be2f5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "92270e91-1da9-4596-809f-f0adc4a47f79"
        },
        "item": {
          "id": "2571874b-a479-4fd6-aaa1-6df66f32527d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd2606f6-f997-4187-9362-f0d5bc8ba238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0add91cb-4fce-4a07-837b-aa024b65748f",
        "cursor": {
          "ref": "e6502e4b-43b5-491c-af92-a7b4d86c7a0d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d492e55-fadb-42a2-8530-317a281beeef"
        },
        "item": {
          "id": "0add91cb-4fce-4a07-837b-aa024b65748f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d8522e6c-3208-456e-9ff8-140ade128aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0091c526-96a0-4c54-8694-cb84fc3605db",
        "cursor": {
          "ref": "f47412e4-cabc-48e6-a468-4f75b3abfe36",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f21a0c0c-2242-44ce-85e5-58b23a52f714"
        },
        "item": {
          "id": "0091c526-96a0-4c54-8694-cb84fc3605db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9f49b670-2523-46dc-92e4-023d114942c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e7cc64-0377-4ed8-af53-f885eb7260fc",
        "cursor": {
          "ref": "b00cda5a-d06f-4e1c-b1c3-b7addcfd1e58",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1cf1653f-34cf-4788-84fd-6127069f8aaa"
        },
        "item": {
          "id": "b7e7cc64-0377-4ed8-af53-f885eb7260fc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1717293a-e56a-4599-87bc-fe62bc964fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a88e48-c7c3-4dbf-becd-6499e79e8c83",
        "cursor": {
          "ref": "45891717-1ccc-4a8c-a868-c603251f5f63",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f9bd02d1-87be-49f5-a6d4-40742af80814"
        },
        "item": {
          "id": "47a88e48-c7c3-4dbf-becd-6499e79e8c83",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a9af3276-ffff-4044-8131-53a5921e923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf04250-7473-49fc-aa4b-92bf855794e6",
        "cursor": {
          "ref": "a7df5dbf-0ce4-4ac3-90c0-2377d71f5f6f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2266a31e-2088-4610-96a9-7b2430976cdf"
        },
        "item": {
          "id": "adf04250-7473-49fc-aa4b-92bf855794e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ba173e00-a5af-43ae-82f1-b8a44eb14954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e925ea-896b-4caa-ad72-bac0c1359662",
        "cursor": {
          "ref": "a0841ccb-1e15-4a99-b5c2-15896ad3d6f6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8582e2f2-c1b5-4c54-b6a6-f87d63d5106d"
        },
        "item": {
          "id": "16e925ea-896b-4caa-ad72-bac0c1359662",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9fd1e9b1-6acd-4895-bf18-61ada5a80f62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "941677cd-e99f-4604-a2dd-126e18d51779",
        "cursor": {
          "ref": "50973bc6-d879-4e02-b242-0cc0164f5df4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c4cefa2d-32e7-4161-aa68-74ee3ce01817"
        },
        "item": {
          "id": "941677cd-e99f-4604-a2dd-126e18d51779",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c8fb655a-a24b-486b-93d3-1d9bab8cf688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5419a02c-db3a-4c7a-bdd0-11d83ef083c8",
        "cursor": {
          "ref": "dda0b2f4-4e4e-416b-baac-7d10006f6637",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fa9af654-1685-4b6c-90be-62d687c5253a"
        },
        "item": {
          "id": "5419a02c-db3a-4c7a-bdd0-11d83ef083c8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6be42121-8076-4284-b9f1-87fefa3c3f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b3261c-3184-4018-a046-0206c8bd0446",
        "cursor": {
          "ref": "b155c8d5-d700-4a0d-b14b-88a06b25b3eb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7991ade3-6fed-418c-ae41-72f4f905fd6b"
        },
        "item": {
          "id": "48b3261c-3184-4018-a046-0206c8bd0446",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5126304d-3796-4ea9-974c-a289eb47e50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c182d8-67b6-46e5-8e1c-b522d1427554",
        "cursor": {
          "ref": "bb4262e2-0814-4983-8ce8-161042442ae2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3469326e-7ed6-468c-9e12-2af5c1a1a6d0"
        },
        "item": {
          "id": "d0c182d8-67b6-46e5-8e1c-b522d1427554",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "30f2bd44-a2d2-4363-a17d-88c80c583ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1707c-3b51-4895-9522-386f25a57483",
        "cursor": {
          "ref": "48536f4b-f10c-48a1-b417-e62ffb03e2e2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3e963920-9a12-45d5-8668-cc86bb864ebc"
        },
        "item": {
          "id": "9fc1707c-3b51-4895-9522-386f25a57483",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "78742362-a560-4e1a-826d-040373203bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99928e5-b63e-4120-b61c-145d2cbaef07",
        "cursor": {
          "ref": "0ad1d8db-add1-41af-9033-98daabce96cf",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "99f26ad5-5c98-4b9e-9e11-56735d284ab0"
        },
        "item": {
          "id": "d99928e5-b63e-4120-b61c-145d2cbaef07",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c8221f2a-b309-4d22-a1f8-079e4d24b7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2248bd2c-d0fd-4439-b907-d4eacbef5ff3",
        "cursor": {
          "ref": "73e7cde3-9b8a-4286-a2a2-4c43e006f866",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ed7a283a-ee35-4d63-b16b-9addb563d3eb"
        },
        "item": {
          "id": "2248bd2c-d0fd-4439-b907-d4eacbef5ff3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cbfc1bbb-eab5-43e5-b5e0-ee72945ca383",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e46d1029-1920-4209-9b09-49aa1f3e053d",
        "cursor": {
          "ref": "dcb1ec65-a73b-479a-a55e-7a308c423fd1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1473f245-1c7f-45dd-b0ba-df1ceab49dbd"
        },
        "item": {
          "id": "e46d1029-1920-4209-9b09-49aa1f3e053d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "931b8a88-2fa6-4ff6-84ef-d414c3860816",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "dc8166e8-005b-43d2-b5c0-b58b90448417",
        "cursor": {
          "ref": "86936dca-e82b-42c3-b9d7-ae7d28ea9d45",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e3b770f1-41cd-4dcc-9ce4-b8835a1a3b50"
        },
        "item": {
          "id": "dc8166e8-005b-43d2-b5c0-b58b90448417",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6c7cf574-7c1e-4522-881f-b6fe00af3dc9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0e51bf85-4af5-44b9-b67e-26f27fe23364",
        "cursor": {
          "ref": "a7b423e3-e2c2-4f68-b281-d8fb3e29037e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a2bb7409-42e8-41b4-b41c-0761aa75bbac"
        },
        "item": {
          "id": "0e51bf85-4af5-44b9-b67e-26f27fe23364",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "93506315-7782-4f16-ae90-15f4893ed7ae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 84,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4cc21877-a55b-450f-8f55-6c4207151b53",
        "cursor": {
          "ref": "d339e3d8-ad89-433b-8cca-45dee618dd70",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "60cbb214-73f6-4419-bda8-1d51815fd035"
        },
        "item": {
          "id": "4cc21877-a55b-450f-8f55-6c4207151b53",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e72152dc-c64c-4221-a04d-4d78292d2839",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "552eeac6-a3d0-47de-afec-810d746bdedb",
        "cursor": {
          "ref": "2a5c3699-ab1c-49e6-81a5-9009e13c9155",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c7fdd40-8278-4581-b973-bd0c45348ffc"
        },
        "item": {
          "id": "552eeac6-a3d0-47de-afec-810d746bdedb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "250d9781-d1a9-4ffc-917c-7c224b50eaf4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "3a0f757e-a014-4826-bb7e-d3733e036884",
        "cursor": {
          "ref": "eb45f9d9-1e64-4652-bb33-7d30f4cca257",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "50ec5e38-b443-4302-9749-d30e408588ad"
        },
        "item": {
          "id": "3a0f757e-a014-4826-bb7e-d3733e036884",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac7d31ae-e1a3-4f67-9f97-4febe8a29c33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d09be7-56c5-434d-8b3b-145fb4fe0424",
        "cursor": {
          "ref": "c7fecc06-7cbf-4b24-a112-748cb67cb60e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f7751f56-8ee5-4467-b351-e75a7b0e2eb9"
        },
        "item": {
          "id": "e5d09be7-56c5-434d-8b3b-145fb4fe0424",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8caed636-48b7-4978-97f9-699dd7eb4250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b7e09b-b5bc-4416-8c7a-67481cab8a3e",
        "cursor": {
          "ref": "24a8ec29-0000-42ec-8344-f332266a80ae",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9cbc8aa9-b39b-4a76-a518-8a173d188f46"
        },
        "item": {
          "id": "97b7e09b-b5bc-4416-8c7a-67481cab8a3e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fe832b64-9967-4b23-9308-a6b379aa4f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29140e0-96f4-441e-b4ed-a107ea47f4a1",
        "cursor": {
          "ref": "d213497a-0432-42fb-bbc0-02c428793bc6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95c06e59-d539-4f76-95bd-f88e857938e0"
        },
        "item": {
          "id": "c29140e0-96f4-441e-b4ed-a107ea47f4a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cbb4003f-6683-42e7-ae0f-a9d146f5b03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4840615f-9267-42e2-83ee-9f196535ccfa",
        "cursor": {
          "ref": "572cf24b-3439-42ee-92ce-6a940310b8f4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "be31d654-a61e-4d4a-9cfb-924888a14f9f"
        },
        "item": {
          "id": "4840615f-9267-42e2-83ee-9f196535ccfa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "43b6285e-2c5e-4cdb-8128-5d2208cdf597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499d69e-6e0a-4fce-8760-a67efef16cba",
        "cursor": {
          "ref": "1f06e038-8a83-4e40-922c-6409f28717cd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9dd46463-9cfc-4417-a9f2-4957b6a38804"
        },
        "item": {
          "id": "5499d69e-6e0a-4fce-8760-a67efef16cba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "520fed64-bf30-4285-a29b-50c271afe8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a582c42-0268-4862-b7aa-f6382080f99c",
        "cursor": {
          "ref": "29bcec2b-5b59-45f2-adba-a1d99cc5f4f2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fcaa5b74-1207-4fdf-93c6-aaa170569b61"
        },
        "item": {
          "id": "1a582c42-0268-4862-b7aa-f6382080f99c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ed60b655-8797-4741-bf3c-017c997eda08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1520a877-5e16-4aa7-8245-505fc00f5433",
        "cursor": {
          "ref": "76bb5de2-5ee9-4bef-b79f-7ea128270593",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "19e270c7-5ec5-4de3-9bb0-e6f92819a6ee"
        },
        "item": {
          "id": "1520a877-5e16-4aa7-8245-505fc00f5433",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "141f9d8b-e7a9-4aae-b249-19cab9affb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10f77a5-57fa-4dac-8a71-e3904a297bab",
        "cursor": {
          "ref": "faf59613-d9e5-4a64-a30d-168ad1c9dd62",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c60f9298-d309-4fc3-96c0-5c19fd904bcf"
        },
        "item": {
          "id": "b10f77a5-57fa-4dac-8a71-e3904a297bab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "350b6195-2412-45a8-9e8d-d23acff275d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c01fda-65dc-47ec-b84a-0934cb8cfece",
        "cursor": {
          "ref": "bff80ad2-316e-42e7-8ac1-e0e6ac8f9136",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "414c96ad-aa94-48ae-9215-17300859c1f2"
        },
        "item": {
          "id": "93c01fda-65dc-47ec-b84a-0934cb8cfece",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e6ede396-1b81-42fb-9ad3-e3895bdfb5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5181c9-73c7-488c-a901-ddc5df956c6d",
        "cursor": {
          "ref": "5ee7ba34-9a77-43bf-a9c5-c376b23a73fc",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e6ff8bfb-68af-47bf-bd03-98d5685c6d4e"
        },
        "item": {
          "id": "ac5181c9-73c7-488c-a901-ddc5df956c6d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a328c239-2acf-42db-b475-f616ca61c042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e21e70f-6b62-42f7-b7d7-24503f8c6a3c",
        "cursor": {
          "ref": "e73e1bc5-54f3-412d-b7c4-4d6b03db6fda",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f48ae394-f94f-4d16-83d3-53eeee27039d"
        },
        "item": {
          "id": "7e21e70f-6b62-42f7-b7d7-24503f8c6a3c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "40db07d7-8e23-4252-b17d-03b234c277a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e263a-5447-44fe-8535-a820929ab6ee",
        "cursor": {
          "ref": "26f443f5-9736-4a61-a159-5d41692ebc0d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ace4147-814e-4c27-954f-3b2258ab7da6"
        },
        "item": {
          "id": "dc9e263a-5447-44fe-8535-a820929ab6ee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ce4ddb6f-efc8-4dfd-8866-96846058a6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e9a37b-c6c4-43f6-a3d9-743b279aa86d",
        "cursor": {
          "ref": "f2e0cabb-e707-4afb-86cb-5023d4cba6c9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "50b5646a-21a2-430a-8740-7d4b59bb46f9"
        },
        "item": {
          "id": "47e9a37b-c6c4-43f6-a3d9-743b279aa86d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "685a3230-370d-47e8-9585-e94125fa22be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41eb182-18e5-4085-9092-decd3aada35e",
        "cursor": {
          "ref": "992f58a3-ff55-4fe5-81a2-a9af476b6adc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "63d0c24a-fb51-46c4-9241-31a206d28896"
        },
        "item": {
          "id": "b41eb182-18e5-4085-9092-decd3aada35e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5e6f2fde-4fc6-4b27-9fa6-5c1c676cfeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335510b9-b27f-4d12-8cb1-6f16aac4a6c3",
        "cursor": {
          "ref": "e583ec0f-9dff-465c-b5fa-dcb39c3ed12b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bf89b1ef-2f7a-4e47-a5a2-c5e67e5460d6"
        },
        "item": {
          "id": "335510b9-b27f-4d12-8cb1-6f16aac4a6c3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a0e756ee-5638-4e72-a001-d3a8e26b946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5d92cc-6f09-4156-89b0-c1b57f5d7869",
        "cursor": {
          "ref": "fa18f1b4-3fdb-4d9c-945d-30dbf240abf7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b1ba9e40-135a-4198-bbc1-2c2a78091f33"
        },
        "item": {
          "id": "bf5d92cc-6f09-4156-89b0-c1b57f5d7869",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fc0a4e5e-42c5-4a4c-980f-ca0a8b9834ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f80d2a-363a-4ab9-99e6-ef10190b941f",
        "cursor": {
          "ref": "bb7e188f-2c51-421f-bb43-e25a826db283",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "36358172-1fb3-46b0-b66f-e44aec9a27a6"
        },
        "item": {
          "id": "f8f80d2a-363a-4ab9-99e6-ef10190b941f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca0bcdeb-8c84-4f9c-a04a-b8238604e6df",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "1e516b88-213f-468e-bc02-bdff62b35ae8",
        "cursor": {
          "ref": "2a741b51-3faa-42e5-a62e-e07983080d20",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c5d5d8a1-5731-43bb-93a3-f646215e8524"
        },
        "item": {
          "id": "1e516b88-213f-468e-bc02-bdff62b35ae8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "12c1070b-16d7-4857-83b3-3691d7c405ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac2e04a-9717-4840-a0a1-209d52d5b30c",
        "cursor": {
          "ref": "caec3aac-fa70-4af4-b30a-334ca08cb166",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ce54803c-b33b-45c5-9690-1bdf5c1f27fd"
        },
        "item": {
          "id": "2ac2e04a-9717-4840-a0a1-209d52d5b30c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4120873-3afb-4e81-a08d-8b479776c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df1784-a7d6-4d75-b20a-b7769c1f5d3c",
        "cursor": {
          "ref": "95378451-4b7e-41c4-97cc-97b1add01907",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b71fa8aa-c628-4eed-a0c4-405ccebaa1c5"
        },
        "item": {
          "id": "28df1784-a7d6-4d75-b20a-b7769c1f5d3c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7dbee7f8-2a32-446a-b090-6784f3ceda58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb07abf0-d83b-4144-8545-9b47c72a68da",
        "cursor": {
          "ref": "9ba582db-41b8-4c84-b5d9-ec67f058589e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6d810f49-dc56-433b-a4e5-02ddda5b7a98"
        },
        "item": {
          "id": "cb07abf0-d83b-4144-8545-9b47c72a68da",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "22cd80d8-0b71-4c82-a240-e484675e0e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a18cc0a-4af3-4c9d-864e-3aedd6bcdd81",
        "cursor": {
          "ref": "fee971b6-3464-4add-9685-59534b2a4a29",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "031df25c-a157-49fb-a7e2-101654a8ec40"
        },
        "item": {
          "id": "1a18cc0a-4af3-4c9d-864e-3aedd6bcdd81",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "72d9ff76-a00f-4a48-a44f-433bee009cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8f7dc9-78db-442c-8108-f1c306f2303c",
        "cursor": {
          "ref": "e5c49730-ccb7-4e5d-9474-d9b64641b627",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "add227f4-f3b8-418e-89b3-cfabc3e39ec4"
        },
        "item": {
          "id": "dc8f7dc9-78db-442c-8108-f1c306f2303c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d802c78-afc6-4671-b46b-0ed1048d8af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2410da1d-5df3-48eb-96f5-ad0f392d83f9",
        "cursor": {
          "ref": "a45dadeb-ba80-4297-a74a-0624b0ea4465",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "48e7c3fa-2120-4eff-ba81-e3b1b609e94e"
        },
        "item": {
          "id": "2410da1d-5df3-48eb-96f5-ad0f392d83f9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "132dec7c-2cd5-4487-ba0f-b540085ecda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958799c3-6826-4f66-9a7f-73de3ead259b",
        "cursor": {
          "ref": "86f83de0-d1ab-4082-922f-971e46bf81ed",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c7673f9b-3759-4ea0-8795-abd07f97e305"
        },
        "item": {
          "id": "958799c3-6826-4f66-9a7f-73de3ead259b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f82f8d67-72d8-4325-afda-a237b03dd7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461df515-d252-49c7-9cbc-b9ec76f2eb83",
        "cursor": {
          "ref": "f400c69d-4926-43e3-9deb-e21aa3290626",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e89fb901-8321-4a87-b882-200daff7f16b"
        },
        "item": {
          "id": "461df515-d252-49c7-9cbc-b9ec76f2eb83",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d8c3bdf2-e4fc-4204-aac7-bae56629ad62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0d73dc-0e3f-4747-95b0-5e98280aff52",
        "cursor": {
          "ref": "a873f12d-38da-467f-9dc0-0e322f30d66f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e470ca6b-38e9-464d-87b3-19040d18802c"
        },
        "item": {
          "id": "4d0d73dc-0e3f-4747-95b0-5e98280aff52",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d3692b7d-adc7-4da0-a5a5-c54109ebbb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d379be7c-7bb7-44d8-8b0b-eeac7f279311",
        "cursor": {
          "ref": "0dacba0c-c76c-4f7e-850c-49b9895a249e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9263de73-2424-417b-86d2-8fe2eb4a25a3"
        },
        "item": {
          "id": "d379be7c-7bb7-44d8-8b0b-eeac7f279311",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d80ff77c-7461-4646-856f-418d2f6e2044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ebe18-ebcd-4d68-b975-f9401b5ca783",
        "cursor": {
          "ref": "12aefd9e-88d6-4109-ac37-9aca61daa7da",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "073eb22c-0648-4f84-8260-ff2fbe70c54e"
        },
        "item": {
          "id": "b87ebe18-ebcd-4d68-b975-f9401b5ca783",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "84c950ef-c8f1-4693-83c0-3633c7dc98b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9dd19b-a46e-4db1-8d34-604c9049ad59",
        "cursor": {
          "ref": "83b9b14b-7746-4e86-8325-3e0700958915",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "db33d425-c56f-45ba-ac14-d7d1b616461f"
        },
        "item": {
          "id": "7d9dd19b-a46e-4db1-8d34-604c9049ad59",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac24a41b-6b08-4272-b671-8e59f8adacfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02392d0-daf2-4e4e-bf18-7b5dd06b1302",
        "cursor": {
          "ref": "de1e9489-eed5-4c9c-a0ee-10b237491767",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "67087e3f-27f0-47ad-8fa8-b491b6487cae"
        },
        "item": {
          "id": "d02392d0-daf2-4e4e-bf18-7b5dd06b1302",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "884b88f9-95ae-41ca-a844-f6ab89f065ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da0ad97-3012-4f47-bee7-27eccc2440d7",
        "cursor": {
          "ref": "126d6887-e4c2-4184-809a-5edf4619f13e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "630970bf-a43a-44e1-a298-3a6389499fe8"
        },
        "item": {
          "id": "2da0ad97-3012-4f47-bee7-27eccc2440d7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba55596e-1b28-4bd9-af62-f25d415c141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207dc11b-8df9-4111-9597-64083f854cb5",
        "cursor": {
          "ref": "872e8198-3d10-408b-90f9-ba72b8ebb1fd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b99a5fb-3a75-4b21-85d8-4dbfbf962e0a"
        },
        "item": {
          "id": "207dc11b-8df9-4111-9597-64083f854cb5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fe8627fb-3af7-4594-9940-e0d169d26ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f6da8b-7b34-43b6-8394-1d3a9b94fa88",
        "cursor": {
          "ref": "eed07bd6-11d9-4008-9f5d-d32c0674c4cb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "399e1f8e-9498-4eb7-8947-a378834a28b9"
        },
        "item": {
          "id": "a1f6da8b-7b34-43b6-8394-1d3a9b94fa88",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ea4bb35a-0e6d-44ef-acb7-8297a3ddeb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a6895-3abc-48eb-8580-b9f0ecc709aa",
        "cursor": {
          "ref": "56880b55-c2c6-4263-aa1b-36249b5bacff",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e3abf106-9147-493b-9c6b-5a924e81a576"
        },
        "item": {
          "id": "f28a6895-3abc-48eb-8580-b9f0ecc709aa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "51154b2c-253c-46e0-9ec9-0abea7918da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cab10a-f7d7-41bd-ad45-612cfb8901ea",
        "cursor": {
          "ref": "3b2c2e69-6689-4b0d-af9f-5908e30be162",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4a8ab181-9ceb-4c7f-b370-84c21d6573fc"
        },
        "item": {
          "id": "98cab10a-f7d7-41bd-ad45-612cfb8901ea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4ab08902-0790-46a7-90e5-24c66f2276d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c44edd-137e-4f0f-9678-f570813f9dc2",
        "cursor": {
          "ref": "276da039-14a0-4ddc-bf1a-9f142c834732",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "36674679-eec6-4a7e-bdd6-a1e88dd765b6"
        },
        "item": {
          "id": "c6c44edd-137e-4f0f-9678-f570813f9dc2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "88702976-cbeb-4381-aa48-5dcd51a1ea22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445102dd-a704-4bf0-ae2f-bf8713ed2330",
        "cursor": {
          "ref": "5a669185-4cfb-405b-8cb8-e49fcc45e83c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d29edd8-8778-41d3-a16d-ebfa4c58d53d"
        },
        "item": {
          "id": "445102dd-a704-4bf0-ae2f-bf8713ed2330",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0f4796d8-2550-4e83-b976-2090e885cac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca204a9e-cc70-422c-a54a-f96e11e312cc",
        "cursor": {
          "ref": "8c9d18ad-395b-406a-bb57-18971e70fa06",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c5246d9e-87f0-4682-8f38-c5a32d19ffcf"
        },
        "item": {
          "id": "ca204a9e-cc70-422c-a54a-f96e11e312cc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4211782d-4f23-47b6-97b3-dcf5f8a331bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dcb712-2d33-477c-baf9-23ebe9109a2e",
        "cursor": {
          "ref": "339a5b52-705a-45c1-a799-41b577d26898",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "085c2dc6-4536-4851-b0f3-77dbe156c3a5"
        },
        "item": {
          "id": "e8dcb712-2d33-477c-baf9-23ebe9109a2e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8b988cdf-69fa-4a19-b27d-e53672b746cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9602317-5b5c-4d7f-b323-4d7cb34f33f4",
        "cursor": {
          "ref": "33810048-9623-4efa-894f-a59169ab3498",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "913818de-5be9-456f-985d-f2976c920c25"
        },
        "item": {
          "id": "d9602317-5b5c-4d7f-b323-4d7cb34f33f4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "baf784a8-5598-487e-811f-ca5f409bdcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269e50fe-eced-4ec4-bd81-0a1025d4f41f",
        "cursor": {
          "ref": "2123fd43-90c2-4358-8370-5e4127d26a61",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e624e046-9b2e-4d60-a34f-6d2da258452a"
        },
        "item": {
          "id": "269e50fe-eced-4ec4-bd81-0a1025d4f41f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "473fa118-59e9-4312-b684-f021d324ad6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f5d8e9-800c-41e6-b56b-94d0f04c3e8d",
        "cursor": {
          "ref": "7a06e919-9c05-49cf-a26d-86fe673458b1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5b9fa30b-5826-4dfa-9ee9-4c345eb60af2"
        },
        "item": {
          "id": "82f5d8e9-800c-41e6-b56b-94d0f04c3e8d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3162ab03-d712-4973-82a6-60c375674c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac17993-5b79-45a1-845a-23d853768571",
        "cursor": {
          "ref": "bfa06256-d7ad-4694-a74d-c46b650c7409",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7a0dcdd4-5e56-43cf-b6c3-90b0c118c8af"
        },
        "item": {
          "id": "2ac17993-5b79-45a1-845a-23d853768571",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a733e82e-5c47-470a-a30c-a6c969e0369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e6347-e08c-4d77-b89b-f9a7d901c7ed",
        "cursor": {
          "ref": "bc8dc77b-5ab6-4e1f-9275-76a1f2ff78fa",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f1d847e9-9784-4c76-93e1-38fc3b2b23b1"
        },
        "item": {
          "id": "888e6347-e08c-4d77-b89b-f9a7d901c7ed",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6a892873-66df-4011-98a3-629213679192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7769b5f-172b-4e0e-ad34-ca55612b758e",
        "cursor": {
          "ref": "a2964155-0aaf-40ee-8b1a-b12a188aa8dd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d6dede9c-1523-432d-aad7-31c04d33638f"
        },
        "item": {
          "id": "f7769b5f-172b-4e0e-ad34-ca55612b758e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "930296cb-7bb5-462a-8084-0d9acf8d63b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45db0ce2-4fdb-45db-a50f-2c047e6f149e",
        "cursor": {
          "ref": "6bd89a47-45f6-41cf-b3f9-ea0fa4b8338f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "75425538-5983-4e6e-9f92-4283470ec330"
        },
        "item": {
          "id": "45db0ce2-4fdb-45db-a50f-2c047e6f149e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bcd42367-78f0-4363-bc46-2467eb15e437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db417e9-56c2-485d-82f0-150d56fe3178",
        "cursor": {
          "ref": "5d5070f4-cc22-4920-8586-80df3075c879",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0154e34d-b4f4-4392-a290-8c94abed33c6"
        },
        "item": {
          "id": "6db417e9-56c2-485d-82f0-150d56fe3178",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f60b1606-283b-41b0-ac2d-d6a0f16e1874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a69784-f249-4280-a47b-ff7d5c5af096",
        "cursor": {
          "ref": "d57f2665-cb71-48c5-aa06-156d09af2783",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "11abc23d-373b-4d2e-855c-2eecb7b2e0cb"
        },
        "item": {
          "id": "a0a69784-f249-4280-a47b-ff7d5c5af096",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "494e3f4a-1fef-4ff1-87f5-065cdb2dc058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b0786-3679-423e-84bd-2c67ee8d0308",
        "cursor": {
          "ref": "0d894ce8-a011-45b1-9c49-04816395612c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "42f6eda6-b9a3-4812-98dd-f52be04ea5b8"
        },
        "item": {
          "id": "b68b0786-3679-423e-84bd-2c67ee8d0308",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "61db997c-b9ee-4e81-beea-3f3bd04d58b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957ce5ff-b3e9-4d81-adde-393140c4732c",
        "cursor": {
          "ref": "4e8e37ab-869e-4fbd-ac5a-c39689f6b8d4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7fa4a1eb-cce8-4c8c-9397-edeb717bc3ea"
        },
        "item": {
          "id": "957ce5ff-b3e9-4d81-adde-393140c4732c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "14e3c408-a856-4fd8-b62e-89a79603bbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3b05f5-50cd-4804-947f-876de61e41ad",
        "cursor": {
          "ref": "8d2cc546-0b96-4e1c-b4f7-f532cd55abc8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "21431f2d-3b52-415a-b552-60cf89c2b0fa"
        },
        "item": {
          "id": "ff3b05f5-50cd-4804-947f-876de61e41ad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0a730ee6-c30d-4b90-af93-ee5c518e17db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69000e3c-6a7b-4657-ab39-69b2bcc690e6",
        "cursor": {
          "ref": "54213027-d022-46a8-ab7c-156061c65f08",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ce09f6e9-459e-4aa9-8d26-ddb1a7cca6d2"
        },
        "item": {
          "id": "69000e3c-6a7b-4657-ab39-69b2bcc690e6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0820bd92-0608-483b-8ae3-fb22f65b32e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4324a5-28f8-4c56-9ab5-106596a7107c",
        "cursor": {
          "ref": "78b29473-2a01-4cb1-aa90-f171b795f1bc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "143a3159-8ec4-4e5a-8579-4fdefbb3a35b"
        },
        "item": {
          "id": "8b4324a5-28f8-4c56-9ab5-106596a7107c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4e2ebef4-4b6f-45ea-b86c-004d2c3d551f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cb7fd5-3f5e-4e26-b3d6-68de61eaf191",
        "cursor": {
          "ref": "feed7e50-b826-46f0-86fa-cc6882d4252e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cd56d1f0-a388-414e-81df-8f97b58070d2"
        },
        "item": {
          "id": "d0cb7fd5-3f5e-4e26-b3d6-68de61eaf191",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dbdaa343-c03c-49ed-a669-f72199368415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c4dedb-ab51-4da3-97bb-f226fa206e2b",
        "cursor": {
          "ref": "cbf79272-1c60-4172-b0d4-f62d6f2c1b48",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b7023393-002a-4540-8c80-6cbc6e3f69c4"
        },
        "item": {
          "id": "07c4dedb-ab51-4da3-97bb-f226fa206e2b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1cd257f7-1c51-4bd5-9e08-e562b68c4e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d8a52c-55bf-4e20-8fed-a10229308bcd",
        "cursor": {
          "ref": "9c17dbbb-f101-46b1-a3b6-f455d8fb74ca",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "14c054e3-12ec-4d92-a2f2-3c93908005ad"
        },
        "item": {
          "id": "57d8a52c-55bf-4e20-8fed-a10229308bcd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ba0e729b-3071-479e-b133-3167f1df4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb5837d-3519-4ac2-9b2a-45bec746f16b",
        "cursor": {
          "ref": "eb6d47e8-ddf9-49a2-8862-363a75ec8c34",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4d572b8b-cc32-49b4-b0e7-644a590e0e88"
        },
        "item": {
          "id": "ddb5837d-3519-4ac2-9b2a-45bec746f16b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a8ed0674-3b85-41af-b08a-ec703ad28d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d32d24e-df46-482a-a931-b7ed63b5e01a",
        "cursor": {
          "ref": "b3efe420-6eb2-4237-b69a-8387636b2f88",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "081ab3f0-8778-4be1-945a-d12e5563dfc9"
        },
        "item": {
          "id": "1d32d24e-df46-482a-a931-b7ed63b5e01a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a5995301-4f4f-40ee-be48-f24d9dff2568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff789ef2-8797-4a11-bbc2-b9840ac1fd1c",
        "cursor": {
          "ref": "e40d9c38-225b-4745-aad5-69c01e68b487",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "18d3a175-af84-49db-9a46-0ecba95966e5"
        },
        "item": {
          "id": "ff789ef2-8797-4a11-bbc2-b9840ac1fd1c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b834d3d0-ff20-4e79-97c1-2bfdae84600f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74462ddd-bd39-4091-81f7-8c8248d090b4",
        "cursor": {
          "ref": "78581a3b-69bb-4f29-8038-befa9d8ef75a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9d872b8a-60ec-4b4b-9901-17d7da530278"
        },
        "item": {
          "id": "74462ddd-bd39-4091-81f7-8c8248d090b4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "30d1256a-d4ac-4328-b8f1-bb866649c606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef5f2d5-8376-417e-b847-0353d0cfa506",
        "cursor": {
          "ref": "b5e9ddac-8f8a-4887-8dac-9bf69cadd7be",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2e5affb9-c50b-4d07-aaaa-10b143f42a60"
        },
        "item": {
          "id": "cef5f2d5-8376-417e-b847-0353d0cfa506",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4b06b785-e430-48c0-850b-44001d161e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929283e3-eb25-471e-afbf-c172a1dc2784",
        "cursor": {
          "ref": "325b23fe-13d2-42ae-8451-0572cf369a8d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "80974679-72ee-4ebf-b281-97690cb9bf2c"
        },
        "item": {
          "id": "929283e3-eb25-471e-afbf-c172a1dc2784",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "61a16453-6406-43c8-8c5c-b2dd8ea6b00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecad52c-b101-4153-af32-1a6549c155fb",
        "cursor": {
          "ref": "029b9723-9279-41bc-9ce1-2c0fa5d054c3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "00ec733b-5da2-46b7-af68-f4c02ae5a47d"
        },
        "item": {
          "id": "9ecad52c-b101-4153-af32-1a6549c155fb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "765c4406-05ac-411e-9642-f3e7410e4a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c2bada-1112-492f-b3f0-8b436657bcf1",
        "cursor": {
          "ref": "e78bf43b-84a5-4910-8d9b-d4df69be0e4f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "454cb0ec-ad5b-4b3a-94d0-8536a5bee69b"
        },
        "item": {
          "id": "51c2bada-1112-492f-b3f0-8b436657bcf1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ac0b9e73-23db-4204-a7a6-099e3aef1548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2d9f52-718b-4124-9462-0071c445d743",
        "cursor": {
          "ref": "93d1fcf5-41c0-4556-9740-357982f868f8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9fab8a1b-0edb-43a2-bebe-9919eb8c5311"
        },
        "item": {
          "id": "1b2d9f52-718b-4124-9462-0071c445d743",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "042cee42-a3e0-427a-a8e3-403e21bda06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfad9699-c58e-4c54-b01e-b3675823a82d",
        "cursor": {
          "ref": "276a027a-34bf-4cc9-b3f7-9d9753770381",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aaee0dbc-7530-4348-ae77-715264e2130d"
        },
        "item": {
          "id": "dfad9699-c58e-4c54-b01e-b3675823a82d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "602a8e85-1067-477a-bc67-14043e42ddac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464baa9f-97a2-46e7-8f6d-e09c7b3d2186",
        "cursor": {
          "ref": "d6489e31-0d62-4a91-a05c-d0717709bda7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "15d76b39-b32e-438b-945a-41835c2ece2f"
        },
        "item": {
          "id": "464baa9f-97a2-46e7-8f6d-e09c7b3d2186",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "10e083c8-c2d5-4308-b014-60e2d4408462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80984fa5-06fa-472a-86e9-a7f35a50d430",
        "cursor": {
          "ref": "0c8601dd-4a4d-49bf-8712-f112fa60e52f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c199437b-afb6-420b-b796-a91806b0456d"
        },
        "item": {
          "id": "80984fa5-06fa-472a-86e9-a7f35a50d430",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0f0a9e84-dba7-430e-b8c2-3945fa99f73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fca39f-408c-4500-a097-11e9861b18e6",
        "cursor": {
          "ref": "80e13c03-b93c-410e-8c1a-85674eb01c0d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "101a9543-82f6-47ca-8c3b-3e725a4b098f"
        },
        "item": {
          "id": "e9fca39f-408c-4500-a097-11e9861b18e6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "abc25204-2882-4190-9827-9701c332e318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a972f487-6ce2-420f-894f-6e93448eab09",
        "cursor": {
          "ref": "a5592c65-19dc-4594-b550-5a5cf0920535",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9d82ba3d-77e8-4e2c-a287-882c15642a89"
        },
        "item": {
          "id": "a972f487-6ce2-420f-894f-6e93448eab09",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "49bc5c97-94b7-4109-bde6-970ab5c05d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc36a3d-bae7-45f3-a971-b9c946cf06e2",
        "cursor": {
          "ref": "9271bdbd-ba47-4214-b49b-88b53cb80871",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8c2a2976-857a-41fb-9318-5803a722786b"
        },
        "item": {
          "id": "ecc36a3d-bae7-45f3-a971-b9c946cf06e2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ffa1d72f-d8e1-4d87-ba50-77915f0c0ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f916047-7c7e-45a5-a95a-9205ea6fac18",
        "cursor": {
          "ref": "7f586f26-b8c7-4eb0-bc8a-9f3ee9fca131",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aefb9c1b-96de-4032-b681-973ed51ddf9d"
        },
        "item": {
          "id": "8f916047-7c7e-45a5-a95a-9205ea6fac18",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "654393bd-0b06-4090-8b92-fbb5350a99ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1c7dcd-7ac0-4866-b635-60270725db83",
        "cursor": {
          "ref": "cc8d5570-6453-4c3d-9d57-c8a9f1c91360",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ce4818f2-59de-47a1-8482-da61c7286d67"
        },
        "item": {
          "id": "3f1c7dcd-7ac0-4866-b635-60270725db83",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d0e4116d-9c77-4817-8016-42c2df284ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893eb99f-320a-4b10-8e9d-cc3bd6f77bb9",
        "cursor": {
          "ref": "aa0ac778-3b1e-4383-b66e-f8833b78f564",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "58bf91a7-3dce-48c5-aa10-b68b7e953c86"
        },
        "item": {
          "id": "893eb99f-320a-4b10-8e9d-cc3bd6f77bb9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8657182f-1c21-4787-b829-8e1f309b2637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308d258f-b43e-4c39-8e0c-85cdde03c0e6",
        "cursor": {
          "ref": "186443c8-83af-4780-bf42-ad4a6d04a270",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a9c6da07-fba4-4303-ae62-e2591cb22273"
        },
        "item": {
          "id": "308d258f-b43e-4c39-8e0c-85cdde03c0e6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ab131563-6a51-4830-ab7e-2eff9cfdec64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6544b46-319b-4001-b535-3fd18ce16b95",
        "cursor": {
          "ref": "3166a5e1-4179-4258-ba38-8049834df41a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4abc6d35-ec9d-41c4-aa0a-fc28b1e38940"
        },
        "item": {
          "id": "c6544b46-319b-4001-b535-3fd18ce16b95",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7787795-9e0e-455b-86cc-514fe0215aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f915367-8f0c-4f25-906d-1289be5a0ef6",
        "cursor": {
          "ref": "bad4de41-86e1-4240-8d96-7071ffb7a86d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "93a78965-5d44-401d-8d8c-f2493b2d0b6e"
        },
        "item": {
          "id": "6f915367-8f0c-4f25-906d-1289be5a0ef6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7eddfc89-69da-482a-9e08-3b40681280d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07079dfc-70ef-4bda-8b27-5080098e4bc3",
        "cursor": {
          "ref": "b8517ea8-41ec-4ce4-9387-567231be2cac",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "055266d7-4337-4932-a105-f4e5e26e0e6a"
        },
        "item": {
          "id": "07079dfc-70ef-4bda-8b27-5080098e4bc3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "95810d8e-e764-4d39-a803-ced47fbe680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d499ed95-f803-4f9b-a011-fde45951d727",
        "cursor": {
          "ref": "ba0586bb-3e24-4667-b79b-1f1c36502a1a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1895ad92-355a-46e9-bce4-c83449c95cc6"
        },
        "item": {
          "id": "d499ed95-f803-4f9b-a011-fde45951d727",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2e7932bc-22b0-4a41-9344-ca5fa62f68f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a14572-69d0-465e-ac9e-2fad094aaa06",
        "cursor": {
          "ref": "4c817c2f-32f6-4f38-891a-746152f063d5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "18163307-a6e4-4983-8c73-81b5dd9b3a6d"
        },
        "item": {
          "id": "78a14572-69d0-465e-ac9e-2fad094aaa06",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "64dbc64d-4d16-40ca-906f-8a3d00a5e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df22894-8bb9-4265-a4ea-6dec050b5a22",
        "cursor": {
          "ref": "d53e4ab9-2e0e-4385-8043-fffa0e43dd08",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6b29aa4a-b807-442b-a8a0-fcdbc4a07958"
        },
        "item": {
          "id": "6df22894-8bb9-4265-a4ea-6dec050b5a22",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "63958483-33d4-46af-948e-a578d0860170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f1ac28-310a-42eb-bfbc-51e18071478e",
        "cursor": {
          "ref": "4670cc19-5353-4281-a25d-5657284fa9f8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4858e944-caf5-4885-9463-3d9533d2c578"
        },
        "item": {
          "id": "e6f1ac28-310a-42eb-bfbc-51e18071478e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7cbd84af-353a-420e-8f58-1c333a6aa43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33b4086-0748-409f-96d4-b6d21cb02bdb",
        "cursor": {
          "ref": "89b586a1-70b2-4ff7-b503-73ae4e1e37e3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f11c6c97-9289-4afa-8946-80b6a456bfa1"
        },
        "item": {
          "id": "f33b4086-0748-409f-96d4-b6d21cb02bdb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "37c93619-9ccd-4ba6-908e-e7012bb52618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c5698a-987e-4bed-828d-914a9867d388",
        "cursor": {
          "ref": "cccae690-041f-47e8-b175-cdf2ca038de6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4979a22d-ad93-4b08-bc7f-2aca827a0dcf"
        },
        "item": {
          "id": "d7c5698a-987e-4bed-828d-914a9867d388",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca4050d7-69cc-4056-b4d9-f3e86ac6bbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c5480e-5e40-4604-ae52-ddd7509ce4d0",
        "cursor": {
          "ref": "4c57517b-feb1-4c9d-bdb4-58432284317b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c75b552f-661f-407f-bdf0-123adfec8b66"
        },
        "item": {
          "id": "b4c5480e-5e40-4604-ae52-ddd7509ce4d0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e4c02f27-2178-4ea4-990e-890eb47937b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb2f77a-58f8-479f-9888-279896a8449d",
        "cursor": {
          "ref": "b4db343a-af05-4f7f-9c96-0bc77d80f0ea",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "586d3278-c21c-40c0-a6fa-b46a77eff3a1"
        },
        "item": {
          "id": "aeb2f77a-58f8-479f-9888-279896a8449d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "da270480-bc53-43c0-aa36-6ba91bc519da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f10039-11fd-4acc-b92b-8ba6cf0f6a49",
        "cursor": {
          "ref": "62bf0b23-511f-408e-a47b-f2e2fa901cad",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5f64698c-e32a-47f6-b7ae-2ce206feb9d5"
        },
        "item": {
          "id": "05f10039-11fd-4acc-b92b-8ba6cf0f6a49",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b8621ed-5fe2-4844-84b3-bee15a9b77e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f8be40-9544-45b4-9060-8806e484e758",
        "cursor": {
          "ref": "b9814345-bc42-4b60-831a-8d8c36e76749",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b8671d6a-cf4c-4368-af04-59925c575072"
        },
        "item": {
          "id": "75f8be40-9544-45b4-9060-8806e484e758",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5a276365-812b-4485-a07f-19ca2c7e3835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71a4212-7ac2-451b-980f-f38d6a8996b2",
        "cursor": {
          "ref": "198ef427-b001-4b4e-bf92-be002c7d0689",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "06925137-0855-4e9c-a51f-565c773c0d11"
        },
        "item": {
          "id": "f71a4212-7ac2-451b-980f-f38d6a8996b2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "450a3d77-6890-49b4-89ae-1f33739104fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8dcb82-9317-4729-afbe-a5454d052499",
        "cursor": {
          "ref": "f0f114e0-eb1b-4249-aea3-6d2f63f42f7f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "289ad909-3e3f-4dbc-a5bb-c61cfb53e0ab"
        },
        "item": {
          "id": "3b8dcb82-9317-4729-afbe-a5454d052499",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d4e2d4af-6b50-442d-a213-c148f50b4d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e596c93-919e-4447-b815-d7a90dbbefc5",
        "cursor": {
          "ref": "466ede2c-ecc5-46ac-b8ca-493147a6d310",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "44c075d2-654b-47de-92aa-8f8633b53a1c"
        },
        "item": {
          "id": "3e596c93-919e-4447-b815-d7a90dbbefc5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "47441c36-c6e5-455b-9ace-d8a708743424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acbbe06-dd32-49e0-9868-fc6cde640aa8",
        "cursor": {
          "ref": "d4eb1291-ca7b-4ae0-b8cf-af93e8acadc1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "baea18e9-fa72-4edc-86fe-53d8cc13d1da"
        },
        "item": {
          "id": "0acbbe06-dd32-49e0-9868-fc6cde640aa8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "befa5050-42e9-4778-853f-c4086becbf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fa8012-4131-4ded-a141-6d94da424eb2",
        "cursor": {
          "ref": "bb02c868-fd88-4a8f-b953-7d407c25e22a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bf2d7e48-6991-46ec-8dbf-52167e8d9f39"
        },
        "item": {
          "id": "78fa8012-4131-4ded-a141-6d94da424eb2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "97552407-5de5-4062-9266-12661ef3eaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c8c04d-b143-4acb-a3ef-f972bff01463",
        "cursor": {
          "ref": "02b93fbc-acb4-4bd8-a0f2-376c72a5b62e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4f5a00e9-f781-4a86-9c86-75af062481c7"
        },
        "item": {
          "id": "16c8c04d-b143-4acb-a3ef-f972bff01463",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6d729122-6871-455c-9644-f25239ef50a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f4ed1a-dae6-40e5-a3d8-6e3a56eb782c",
        "cursor": {
          "ref": "cd4af5d2-9f1e-4012-92c3-10568a067a63",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1f439daf-43b5-456a-89ba-a33d8e7003bb"
        },
        "item": {
          "id": "99f4ed1a-dae6-40e5-a3d8-6e3a56eb782c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dd6a5cc2-8acc-49d3-834a-6da4c3bb6d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b634cec6-a705-4341-9ec5-82b9f0078e1d",
        "cursor": {
          "ref": "b3ed60f4-9549-4fb4-bfa5-3a85a4d0fc63",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5d5b9bee-57cc-4cbe-8c70-81bc815810c6"
        },
        "item": {
          "id": "b634cec6-a705-4341-9ec5-82b9f0078e1d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "582a231d-5be3-4761-a2d5-ef76146ff7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac30fb9-020c-44af-bc0e-fd6aba4a3171",
        "cursor": {
          "ref": "9338a8f5-017a-49e1-b6fd-d7117d9b2b2f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4e726031-d6e5-4952-85d8-2a813f341220"
        },
        "item": {
          "id": "dac30fb9-020c-44af-bc0e-fd6aba4a3171",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ebcf93e4-fce7-4f07-a7a1-68d1a5205d14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56e2cbf-eee8-4a0c-88ff-8c1c908f5a3d",
        "cursor": {
          "ref": "f37ac6ad-f95c-45dc-94a4-b6b9c5c9a8d1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "14e8de78-a4e5-4488-818f-52fe54c61bb0"
        },
        "item": {
          "id": "a56e2cbf-eee8-4a0c-88ff-8c1c908f5a3d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "159ad9b5-b3c3-4567-8ec4-f2cd016da6ec",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ac702f-d3c9-4127-9142-d59767b2536e",
        "cursor": {
          "ref": "ad1983a9-f4ee-4094-b93f-51568752b796",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "209950f8-6bfe-4f75-9985-45b274411507"
        },
        "item": {
          "id": "e0ac702f-d3c9-4127-9142-d59767b2536e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c06a4993-1981-4008-8782-66ea7ef712ce",
          "status": "OK",
          "code": 200,
          "responseTime": 2620,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5dfa6-1d39-48cc-b2ba-803556e80226",
        "cursor": {
          "ref": "1d94b434-528c-468e-84b0-ec92ef31924d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9021ccae-ebaa-4339-9f0d-fbfea3e0a7e9"
        },
        "item": {
          "id": "38f5dfa6-1d39-48cc-b2ba-803556e80226",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a305b01-8248-4326-8097-e09d36c15e9d",
          "status": "OK",
          "code": 200,
          "responseTime": 2672,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c52fbd-26e0-479b-b7f8-b39a4fbb74e7",
        "cursor": {
          "ref": "26376f85-6c5e-4cd3-9d2a-861dbb3749af",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d38052ab-39f6-4cc2-8ef5-f46629bf8f11"
        },
        "item": {
          "id": "49c52fbd-26e0-479b-b7f8-b39a4fbb74e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "371150da-9fc9-4c0f-b192-adf49447c4a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c52fbd-26e0-479b-b7f8-b39a4fbb74e7",
        "cursor": {
          "ref": "26376f85-6c5e-4cd3-9d2a-861dbb3749af",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d38052ab-39f6-4cc2-8ef5-f46629bf8f11"
        },
        "item": {
          "id": "49c52fbd-26e0-479b-b7f8-b39a4fbb74e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "371150da-9fc9-4c0f-b192-adf49447c4a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661cdb27-7a11-45d8-bbeb-746ca0bbaf5f",
        "cursor": {
          "ref": "622addf3-6337-4ad7-9a03-0fe45c07983f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc4b9d1f-98c4-4c81-b307-54411d73e588"
        },
        "item": {
          "id": "661cdb27-7a11-45d8-bbeb-746ca0bbaf5f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "503e3425-339f-4841-9fc2-04ee87f9f83f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b5c40e-f08e-4393-9e2a-4910c0243ef4",
        "cursor": {
          "ref": "c3fc40a4-9ffe-4eed-a88f-b238f11939ed",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "13f5d466-3db8-4b6e-88e6-f4274362405a"
        },
        "item": {
          "id": "d9b5c40e-f08e-4393-9e2a-4910c0243ef4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e0d2f58-358c-4574-ac3e-ab2d1bb0e6dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}