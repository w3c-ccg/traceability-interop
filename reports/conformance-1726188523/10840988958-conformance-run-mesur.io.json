{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "81fbffba-cd66-44ca-92b9-9f7b0e1308c6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f2e7cd38-1d44-46db-bbfc-6ca89abfd0d1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecfa1a16-cf34-4780-aed4-5b543534547a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e940fb2-1f64-4e81-aa93-dc0685eb386a"
                }
              }
            ]
          },
          {
            "id": "fb77fc1b-9826-4437-b1e5-b15c27c7ff2a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d426232a-4552-4a87-97ce-e4568917f633",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eed41b76-4a4a-47eb-a3e4-ac78015b1eff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "054802fa-8266-4bc3-8a65-4121c2e8131f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a15d9b6-7bfb-4095-8124-a4bf081882bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5215ba1a-5c78-4891-b1c7-888e52043f7e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0f4b0ec-7b2b-4051-965e-7805afc3f5ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8bee6d5-d9fc-4115-80fa-ddf28f198e31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9ad8065-6f33-4777-bdad-52eab784f91b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2df246f4-c692-4ad4-bbd6-331008ebc7f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3f03e70-7dc1-4bdf-b93a-c643a7c08621",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8985071-82e7-4e4f-bfeb-551567d0992b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83020526-dcd3-41a2-9b23-4aa5dba2cdd0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "08681d30-9ab1-454c-b202-49196806815f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fadc3d12-336d-4365-8659-97be4f73d956",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b745c04-7cac-493e-96cc-7c3632f28fe0"
            }
          }
        ]
      },
      {
        "id": "8266a46c-2cfa-4021-91a6-87ea616ee40c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "601e6b1d-430d-4f28-b76e-c10a1a2381ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4a03132-9a45-49aa-836f-26d59a79eda9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38c97efb-65a6-4e77-96d8-9e3855637d10",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5a3fbe-c1a2-4ecc-81ad-440e349ece65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "628587c9-48aa-4f62-b535-90094fe074c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba629d-0434-4bb2-9427-de4d82dcca32",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149070ef-6547-49bf-bb73-e51e7c963360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dad8c00-a27e-48b0-bbef-cd97ed84315e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e8ca6b-d0cd-4acf-8dd7-b7c75014887a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3e4adc-2e05-4ea8-99a6-88d2fcde7fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec72cc90-244d-4461-a948-1c0ec465b99d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d6cc352-da18-452c-8f0f-7eb515c02b4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d03a5ddf-bb03-4e5d-b02d-46f48b967478",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5dc390-f304-443f-a574-61b1e695d377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcaf3e0b-e0f3-4169-9888-fcffc51089d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bcc782-b7c7-4f72-81bf-f107b6c27338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0c6bf5-2ff8-4a39-b1a1-f4c1b3b42a78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7d85dab4-7479-499c-abe1-725ba000631e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2529596e-6d47-4083-b72a-fdccc6ef7383",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aef713c0-c918-4015-8f9c-40478cb2e6f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dfa32f37-bcf6-4f69-926d-e3141a1a0341"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "692acbc9-7cb9-449c-9adc-66add4fba8ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3a1156cf-f52a-4415-99db-257a58b7ad85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1b47be9-4580-4808-b4e8-e5efe2140152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76f5dd70-5157-412d-ae7b-4eb20edaa20b"
            }
          }
        ]
      },
      {
        "id": "4afc624d-0e44-43ae-8d17-8cb191c4af8f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "05b16301-c29c-4a1b-86b8-1dacef23b456",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4310494-4b19-4883-9219-ca432d6cd13c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "aebc823a-d053-46da-b91a-1aea6265135c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d29b5-6bb6-49a6-92a3-1226a259ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628bafa1-24cc-493e-873d-3184b9af224a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012ce440-8317-4673-9b6a-b3eb70a4e86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30f5b4d4-4558-4932-a583-ab794d735bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c77aaf-a2bb-4c20-b6a5-343ff6cfd836",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bd20c3-d0e0-47e9-852a-ca08f86ea98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6e6a90-2a11-4cf4-b587-8106b541184e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc3df88-38b9-4128-942f-4f0534dbe867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0873a4b8-c0ef-4de8-91e3-4118bb824275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88cc7fd-3a12-4a21-81e0-44624f1e370e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f382f5-b34f-4b27-8aca-4613b32f18c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e66c5d4-0034-488d-9c99-90f918f1b406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10011e0f-e0f3-4307-950d-4aab5f95298a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12236359-be26-4571-84fc-13a25baf4700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046166df-af00-4534-a6e2-615a695d87b1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483cf2cb-c009-4214-a961-977d0a17684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd655090-0c6f-433c-8d0d-f68408e82aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c11e38-81ff-4ae2-84c4-b94b8ba79399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb1250e5-9638-4fc7-b4fe-db29c37ffd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd097781-860d-4c73-916b-9caafcf7e7b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635d4929-8687-492c-8a52-379d0b1eb59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609901a0-6797-4344-847e-8b461d9263df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f00fad-d3a2-4196-8d52-f11f78c460d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3bb96c-4c56-4e3a-89fa-af85782cd582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735439b6-9b82-4747-ad5c-88f70cd5b88d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63165f10-a39f-4451-94a5-49b841c553e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2270e11e-a61e-48d5-a473-df23f400fb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cdb932-c196-49dd-b1ac-a225ed520aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72f6311d-7e52-45b8-84a4-973ababad9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e6ae52-b3bc-44e1-abce-c218bfe57861",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a0745a-666f-4188-94e8-de4521896313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3753098-b723-4a82-a790-832a49ff13bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ed27f2-0176-4b2a-b3df-d1ee45970980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa89717-c967-4ca5-85a3-e64622ddf8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4fd0ef-b1a7-4a8a-988c-049bf966a708",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead11584-e860-4cd9-8006-b9b0539c42c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc3e67b-fb29-44f6-b93e-c20457a61f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9046fa02-f524-41a7-b32f-8d0151d8d067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff5ec08e-9c34-49d3-a7a6-8075517cbb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4214728-1a59-46f9-929f-97c6bbdcf796",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76958778-1b11-41ac-b3f1-8ee392550a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21410792-464d-42f5-80de-55ec0ddad628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6706c23b-8de0-4de0-92f7-2899c45f0257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e03b38c-d35d-4cdb-8ac0-409bdda0c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8beecdb-941d-426c-820c-52bdf941d0f0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f9b10c-ed10-444c-a58e-b16917c48757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cf0dfb-3fe8-4b06-9c13-3efeedd88100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb23b5e-209b-4df5-bb3c-02b8b6bc9804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be847f71-840f-4ed7-8f59-6e369e96b46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535c0b19-f16a-4e9f-b313-4438c7a5f1b7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1066d2aa-c11b-4f3d-b227-49a69118bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0b3dda-9703-4d80-9072-d6b8ea134b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354d00d1-68ed-42d0-9b0a-83573b203456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40688244-8ca7-471a-89bf-62f7f8eb14b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c9fb54-63b7-4738-bd45-f03ebe0b5304",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6064ba7-d2cb-46b0-ad3a-4ecbac63ab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3ace61-bc56-4690-9665-a896ab6b860b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bd612b-53fe-4183-ad64-53ac363c1894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d111ba-6e62-4350-9c2a-3e7b81d8cfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15978d2-d40c-4b4c-b4b5-be79274f4523",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33edc5e2-a313-4dd2-8e21-2a61ecc13d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f32295-ff83-4eed-8771-47f0cea140f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1176ebe1-4917-4b7a-80ae-0165a899818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cf49925-e36a-4211-ac8d-691aba5f70b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2295e5-c94b-483b-858a-3bbc2718ae6b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9071a132-9021-47e2-87a9-5d9558489f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe44b773-c150-4210-8a6f-1adc9c2872eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b790a6-3c53-4c04-b4f9-a07d874377b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e35cd9e1-b2a3-40f9-882c-83955e3267a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035c229f-30ff-4bb2-b8e6-ceadd169d324",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037018aa-efde-4151-8837-69c18c432ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df68e29-022d-4a35-8b11-d7b7952797af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bb1c01-d106-4f31-bded-77f4175456ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7da9d9b9-2201-4c34-bd55-c21fbd9b1e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e4ee83-339c-4d1c-9136-c4c3063bb38d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0024004-3d1b-475b-9fb8-6f91b451c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33f80db-d83f-406e-8b4a-bd7ecfd1c2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354c6042-b5d8-41e7-82bd-98b3da0d1606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b3223b-828a-47c8-bd5e-7ac6ae534f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b056aa7-951d-4e3b-8bf9-2573a8c84ad3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091388ea-55e3-4cf4-88af-ce39ea6d0014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89429883-7726-4a56-8877-6c0373eeffb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae6f53-231c-4344-a049-3907970ed0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ead5134-03e0-4056-a968-4a9267d0f763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f94015d-f695-4606-ae35-07df49531b26",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e36da0b-2a97-424e-a309-4dca59309d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbac2cc4-3c71-4cfd-a65d-001f2036d754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f81efec-3aa6-4db2-94bb-157d3e4031dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a57c532-a639-4c0d-af64-8ebf4fadc755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292cd62d-ab75-4c35-800b-f601af1dc7cb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414d725-5db1-434b-8b17-be08eab89acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d802dcdf-d1ce-4cd0-bc16-7262a2c95303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c4f626-5326-460e-a33b-a0e165675ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39fedb8b-28e4-4874-9bc0-6ea0785372d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606b84e8-5c63-461b-bdad-7fa6aafd66ab",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38df947-1a1d-4cc2-8bd2-b2664e9a9e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eea2a8-ccb2-4c92-b76d-504403db80ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36c61fb-5f00-4a24-8cf3-255f60e478f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c088bc11-8deb-4240-b317-bd8ca4bfbab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b986f4-4732-4be9-8cc7-63f1c6cb98f5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24873c3-8fcd-425e-9d6c-fad85f6386fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c994fa7-bedb-44d7-9e19-c856fc2b2b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1218cd-6856-4296-beea-6d240758a118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fb74a9-8db6-4bfa-aed7-7f414c2f8b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc16053-aff3-41f3-ac9d-28749f73059a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb7bebc-7e87-40da-9cd2-ce359dfb8722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14227987-41ed-47b7-928e-85ab05a1dda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c81a7e2-f3b3-499c-95cf-8ac26ab87685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8101d2c9-04c3-4122-b839-74e95de79c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f0a6b7-6d4d-4185-91c0-9dc05b8b85a0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099ea2d3-8359-4a56-ad80-6a43617de00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de21ce2-5801-450c-b1d5-273e5ed23cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d931c3ae-61c6-4931-a903-510e054ff64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b38449-ce56-4960-9a53-0196e013880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdd24c1-3959-4a20-9ba2-2d7142f9b034",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76005a0d-559e-4854-ada5-b1b09c4f85b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c06dfd-a52f-4ee0-8bcc-d3375aee7be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f5dd00-bee6-4f9a-a71b-963e118c1432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "708ab1b1-b0c6-4fab-9b75-25c3c947f0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151b630e-fefe-4253-9767-78ffef7e41ce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2b62e2-cc16-4fdb-9fb1-08f0036e1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448c8bb5-2270-455f-b411-889a4962ebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb4db90-9af7-4604-bdbd-f040ad89e882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdc310c-07cb-4561-b324-07c08c18e03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3323f374-2393-4c47-ac31-ffdfbb9f14d7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a995b9ef-d152-489e-9e20-be0517a526c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be579036-6163-4886-80e8-e86cab1f446b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588b1546-f0a0-433f-aa23-8f2d08182375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78735ec-729b-4430-a3b4-449081e95443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef7086-ee24-4bc5-abef-050796052414",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cbd3ea-4439-4f59-9d63-33477cb0fce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a762a51f-b660-4c53-8569-69176feb36e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82deee9-ed0b-4fde-9776-320c97f9c15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25260f3e-3dbb-496c-93cd-9792619cc2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87ac822-160b-4cbb-8507-f63bacf35f43",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b0a036-c9ac-4fef-8ab4-caac3007c3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337b5d1f-6822-4d5e-a23a-96404cc4d487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c47e39-cfb8-4472-bd10-6781eb376e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "affb13a5-de2e-4f2c-82ee-203767db9006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e82930d-6858-4b66-8ac7-f582cdc58297",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359004f-1d52-4b18-9c8d-9df258c2c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54972854-6a5a-42f6-9a4e-0dfb69c9825b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523a3b1d-a83b-450f-b09d-80c2b2de5852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f42930c-978c-4da6-ab6a-5a068022e606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dd1212-c888-4e71-a357-6ec960ef5550",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe2723-6cac-4ab9-a224-d664faae82df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218c71fc-c774-422d-b1a8-4b97c30c87c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17b8b22-73d7-424b-b7aa-f3f8cc6f314b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba23a70-56a8-4b44-923d-4c958b8e86d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915f8bc6-618b-4275-a8d5-06075f584fcb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6d639e-9efc-4673-b159-fec8710d4305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac384f1-d1e7-457c-9a16-1736489b30a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27396a18-530b-4390-9610-6225f23ac1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e28f8e4-ee87-491c-8174-c9fa7d33097d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3891fd19-1579-4f0e-8357-ebb925629d56",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd4905e-0ac8-4afa-bbd4-f1de11e0a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefb1a36-b75a-4802-9f15-04850e66820a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d297fab-27b9-4e83-9da5-15a579bfe554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "767088d7-98e7-4db8-bc08-513f84299332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523fb2c3-6a39-4db5-b3b1-ebf3fc4f4c2a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd5dadf-dbf3-48fa-89ad-c86f6531c49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18585a6-905f-4b28-b4ce-c803a2231c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcf103-5602-4dfd-a50d-301ba55367a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f56a138e-a58a-46e4-87f0-69fbcf687e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f0017b-b844-4168-9907-6188aa116f28",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9cf242-e734-42fb-ae5f-8442f81927d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28534de4-dc64-4b39-8452-544f8d8a5880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8742e6a-59fe-4b2b-a8e4-01dbefa57e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c306ae46-7e18-430c-8183-d812518727f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116409ff-2665-449b-baa3-a43ed657aceb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1902ba90-173e-4725-a818-ac7cbdebb35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c77130-6b1b-49d0-8941-e2aa92ab3b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db2ce8b-fc55-4450-9a14-def477672c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b0793e3f-0404-4f07-a421-a50541146726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd594ae8-a26f-408e-8e4a-7082fcd5eacb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2427e4-aee0-42cc-b9cb-1e8b560b646f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "026c7adb-c969-4ce2-ac8f-430cc7e0e105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ce141-5485-4645-aa19-6203e50fe448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6bd6e9-6d65-4213-8b76-43531e032bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a158c0-188d-4254-92bf-646a7f40752e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb6fe63-3131-4c9e-9595-2f4ceb741fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8faf0f46-78f6-4a35-8f8f-f7e66c37e194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e723a52a-0b89-488e-9c8d-ee029e4c8567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e80986-6c67-4bd5-afaf-c9c05c23ad87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77499ea8-548e-487d-9ee3-b137befc2515",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0ff443-8fe9-4c31-b5b6-6dd2f03d3bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8280312f-6381-4c29-8a03-05e5d8fb9b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60395a7c-4a89-4e4c-95c0-2fe76a15914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91879ecb-4fee-4d49-ad7a-c6c75a6bcee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476538e6-5f05-42ea-adaf-b50c4abc1ae4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b73811d-dc2f-4536-8ceb-6f861802289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d0f80e-bf53-475d-a754-cf9fe1e62ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196dd45b-bb61-412e-8e4e-47a1ad0d9fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "354ca23c-bbaa-4a93-aa81-9d01a098a2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d300fc75-b96b-4d44-a311-16b6fd200cb8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2261098-5a0a-4f17-8933-2faef38e7c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145ce51a-e50f-4820-a98d-ecb876158975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecf6dfa-5e4f-4a6f-aa3a-60a0b2b8f77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e54a931-7611-49a2-a3bf-b23469290b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1071fb-3dfb-40b2-8dda-c5da986c8bf0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16d6b6f-a07a-4317-8645-db4eb1a0d226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2915343b-13a9-413a-8587-3ed73098b1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac6ede5-2e76-4100-ad70-65c508a8f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4734b6b-8670-4f28-95a0-5dd26ad6ca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec8028-7fc9-4469-b725-207987e3071e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1826e8-3a8b-41c3-81ae-d83aab648c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c906f2e4-4f64-462c-af1d-aceb3401f507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828dc02-3be3-4d49-a03b-23c84bdd8b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "80f673b9-6747-4fa6-8121-dcddd018cab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37c82f4-4c09-432f-863f-d08cd64db847",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0777345b-0684-4758-9868-1d7408ba5cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e533d92e-1d3b-40f6-b119-47531c5bfeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462d90f6-8f6c-4997-a5d3-734cfe364927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3fe0c5-07e8-4c45-889a-400341a289b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16906bf5-8daf-4796-8ab7-58124c4fdabd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb6ce79-4804-4835-956b-564e6a9b84f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455b1efe-4f3f-401c-b4b9-9c1d9d54bc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ae980-8bae-46bb-ae48-2a12c5490144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "690f94d1-8a58-4d24-84f2-aa399b859938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e19dac3-035a-4303-a88b-4fc619c9c179",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa65c37b-6b83-476a-b9a6-c6424973522e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd6e684-eda9-46d2-8873-0f425f82984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfcd7a8-70cf-4bb5-9ebe-0c29ec1c5072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a74dcc4-7e83-4728-a434-19c227ca4ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f10cb19-9e1a-4c48-809b-7c244812424f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c24d81-282a-4e81-bca5-3e681251fc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111ce1db-1915-499e-a40e-a7545ec4dc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae828d3-f6f6-452f-942e-2ec310c7264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "597a0950-e29f-4e6f-919c-321dbbc316e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc0b752-7d44-4c25-9a2d-24b82234d830",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b86c1-97e8-46a9-a52b-d1fe3ac0240f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e500ae-c2b7-4e91-8715-46c6a47d7f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8229a29d-3f46-4125-8c66-4e5ee85bfd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe6d88d-9378-492f-805d-654b33295e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24c40c2-ba1d-4135-aa54-4f76be839341",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3870844e-7539-46d8-b07f-a4cb7e524b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309432bc-d76c-429f-bfe8-52bf48808a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5280f48a-ec0e-4b70-8654-28d628a779bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f43ba022-72ad-42a6-aed9-eea219cd0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93510213-ea60-49bd-9047-6456ecfe555e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd452e1-df1e-4e2b-b208-bf6abf995686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50cc484-51fe-4933-970e-fa719baa09e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2ff2f-8f93-41b7-98d9-04b8834f2b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56dcd06-dc55-43ae-85fc-0a147f8581e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0b5f11-dd8f-41b5-8d1c-bf2c8c0d0c29",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c747d5b-1665-467a-ae15-3a988f1c3579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd957f62-b536-46dc-aa98-0ce9d7043c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3107b96-a926-4192-8cb3-a1a513677d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "320fdab2-a4ff-4654-b2df-82eb5bad5389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6671457c-4410-41e8-b1ea-9872b1dad6b4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2897d9-0845-4172-980b-240fa5976dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8521ff-74f3-4133-90ca-11975269fdba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc8013d-0c41-4d18-9023-6ad82b0bc050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a586227-b40d-4827-85c2-69bd321b8482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250b33e9-d81b-4a94-a189-eed6dc9a74bc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ac521-0f0a-4c60-9c11-afd0db877de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae92dde-0610-412a-bc55-1c5587c6362e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d24573-b556-469a-8cff-02a422eeaa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db14ce12-bcc8-4eb1-b2e8-2abfde9bac2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12248e1-3ae5-4958-ae4b-f131b62b9be6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d6412-278b-47f8-9bea-0a545f6285ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d58f60-8035-4704-87ee-66f2dcb7b151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eefa19-f6ea-46de-8de5-dbb6ce16616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c0c435-1e44-4f4c-ac44-e79530012993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceddbb9-2bcd-4156-8f41-c3eb40ecb87c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feaf3c5-8fc7-4e74-9b85-98cfbc9c021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34c1e95-b962-421d-9d4d-b59fcc888629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce9dc3-447e-4238-9e8f-215e574a0e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abbacdf-9b52-43b9-8af8-bc12b2494afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3431a8d-38da-4497-b264-9b8de68dafcf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c0956f-4599-4c13-98fc-72219c90e5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4f2e0c-eea5-4d49-90aa-0950df4df2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978fe908-d6d3-4635-ad41-c33d1567314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "917ba7c2-3ad5-41b6-b240-c59c594ebae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44462cc1-3750-4d2b-8811-5c842f22c91c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575ed974-fd86-47d1-a9b2-364d5f9874aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf3c44d-1cf2-412b-875d-114c15eb254c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f428321d-8d2d-4ff3-b9b1-eb6c0061726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b65a697b-2643-4722-a61f-d7f4106fa358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e430f3-d33d-4aa0-ba65-3afad60327df",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2869fd24-5fdb-4ecb-9ec6-01b58ac54bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cd40e9-95dc-4576-bdb1-6fcb31833da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6d7a9e-1eee-42be-838f-12bc07948bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff2d2e4-b67d-4e71-b520-bb8218de5870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c8493e-50b0-479e-82f2-2e058845d167",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc677791-e886-4e27-98ad-3a4476148f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576fd970-7c4c-4170-8ab3-4dd381730558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb4198-e4c2-40ef-9733-34e57f71c039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6991a9d3-26a6-4eba-bd75-66047e5f542b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877bbfce-9b25-4e50-ac28-e53a5e671664",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36f7866-083f-4617-ac84-13ffb82576f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e016fd68-063a-422f-8d85-9d0a2702a108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cce788-aa36-4d6e-8043-37508b3e9a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "084ce81c-aab5-469f-b7f5-483e2d0032f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47108a1d-b1d3-46a1-87c2-9298f1e75cbe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd0b8cb-89d0-4901-bd52-9c5b66d194c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752971be-ffef-46a9-9d56-b022628c458c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd90a87c-7468-49d6-8623-c8e7b7f86dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3e91b3-c2f6-45b7-bfcb-1bb92910570c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b407625b-45ce-4926-966f-a74c21b927da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a172fc-5c8a-4488-905b-30ebd47853b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa32376f-0dce-41c2-bcc5-4093f4b637cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdc1d38-4f50-4f05-9880-f1b6e9e49186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "359dc951-d460-437e-ab7c-5ea3cff5abba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d3fbad-b910-47a6-886f-1f15001d6a11",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283898a8-76fc-4b01-901c-3a07420e445b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c385f56-46d1-4ddc-930a-66375c4b4f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d677596-3e10-47b9-bc92-b235295bf39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "848b6348-01f4-4791-b62b-460645fc267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bb74e9-7115-48b7-9653-d1ca5c2c9493",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d679fa1-d617-4e31-a988-1044cf38476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6921bf9-f201-47b7-a4c7-1eea52cc0aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5489b0d-2edc-4763-b61e-842cd6881501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6520c8df-185b-4465-af25-13093f19524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f573cdc-48e6-42c6-8f40-ab82d253ee09",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a20ed1b-9edb-422f-8c2e-4a6c02dfe85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba64e59-8422-446b-bc9d-0c5cce7e0fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86bfa4f-99a6-4c50-9ad5-4fdf061500d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3fe396-f2b9-4eba-8f24-8aebdf7fe646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c397d50a-d354-4090-ad83-dad4a7c9f555",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47790a93-e441-42f1-8686-ec95b67ac53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61723006-0d0e-440a-80a2-d49b711412a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d683a4-60b7-4648-9716-58176e233f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef5e00c-fe75-4d7d-a5e5-940b2500f430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e10636b-564f-4bf2-9be8-49f29ed1249e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94336a52-6e62-4382-b526-3736735e3d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e42429c-bdc5-4060-b4d3-a44542ec68f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd98075-93e9-4b4f-a6c8-191f33d8312c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df4c65d-9cc9-4b8c-a5f6-26209cd7bde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a04700-b380-4bfa-8b1b-8138d5b5df49",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cde6c9-1cca-48ea-8deb-80f60e893c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d406dfa-6f99-467a-875e-73c3963ced94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b7bbea-8fe2-4e7c-908a-c0dcf53cfeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e27679-4ea7-4f6b-ae8d-33e3895681b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e43e1f-7709-4dce-a40e-ea8a9761e730",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d0e8c-65c4-4fd6-8c5b-79fc8fee6ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4927de9d-b010-4847-8743-063e5dc39467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb355ae-2946-43ed-a45b-14dc16a6e597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed538b9d-4845-4a4f-ba1c-a64a8acfa6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef13baa-f6a9-4610-a616-9b774fefd191",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ad3e13-f3a5-4c2e-beb2-341cc7ce3d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb74e92f-fd93-40c8-8031-994e7a36cdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707f913-19be-4a06-a322-6b129f0e4c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47eb0b1-3da2-485f-8e67-620a9b8da406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e6e7aa-d966-4c03-86ae-276685712e39",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab275f5-5142-4c27-bd64-393cd3f06504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9854c10b-1bc2-44cd-a2f6-b83668e1b0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a263ef2c-95f2-48ee-8bcd-4804395644b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "471c3555-b75c-49d2-9429-966b36381ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295c9b20-39dc-4744-8498-edb7dcd97925",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14f2b33-c355-4477-83cf-94098cba3323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30737a2-4e83-40fb-b8a3-4e10aa5d0bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65e4c98-e2e0-42ca-b758-534cabf1b615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa0d6f8-da02-4a16-91d8-b2cc0aa93293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3612e6-3453-4856-b72e-d34f7a4df1c0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7e0fab-c8d4-4581-9095-c656437a66f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bee0de6-7c3d-4e38-b601-6ad8f17281fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3880f43d-adb3-48a8-a97e-7be4c2bf4a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "260eb76e-9549-4148-88ca-5effdc9824c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b24bb54-5a17-41dd-96cb-8b5f410f3b98",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d158157-c74b-4c55-b734-047ff960a8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d31b5ff-5be5-4657-ad79-85785e57e54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7013cea9-6479-4d8e-8861-54e506d5eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bcf2f5b-a684-4d97-92d3-eec1f1deb8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ddebb4-c568-4912-b16a-20723fbe2c19",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a0439a-14a7-4a1f-a03a-fa39aefecb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d41777a-f142-4b60-b295-9cb0c2cc25fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d94a21-bf98-4aff-a691-212917fd5917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "744607f6-b481-4337-be74-58264d7e9768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47860bf-90ae-40a9-b467-85e974d43760",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf76f2ca-a860-4f9a-9072-7e016804048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bcff3d-42d2-47d1-bf80-d537cc9f2147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca28dcab-bae4-4000-90f1-e512736d88f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c94169-ca6a-4fb9-95b1-9e4e6000e493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8565c3d-9eb1-4b28-bf78-7f4d55272178",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983702b1-da27-4a6f-b14b-b4bfee497105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3056e40c-cdc9-42ba-bf28-b7f78b32866e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1929944-c07b-40f6-b802-bda77388cc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5aaa0b-fb53-4806-aa91-1778dc859fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358095f6-48ef-44a1-882d-c6ba0f69550e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c823f501-8c1d-47c7-bb98-15963702c645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6a2f46-2714-4dd1-ae67-95db9d30270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa69653-5ba0-4016-bc49-edc06e6ddba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ffd4cc-867b-4ceb-86d6-cc378bd25f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feab7537-5099-4a03-8bd1-1fab02ee45bf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43e71ab-590c-4eeb-abc9-586c75131b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429accff-9f25-4439-92c9-29c06cb712c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3873095-db32-4b3a-abaa-16e262a044fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c0d9e4-5470-427a-8444-9c789cb89ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78138fa4-fd9d-40f6-aec5-2a2d35ea2673",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c625d14-6976-4787-91ae-067543e7d238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df26b5ce-95c3-45c8-b89e-6cf5be78ac01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3457e09b-6350-4b34-8c1d-e81bb8e5d55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c679cf1-d7b9-48c9-b579-8b852c2ec51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1edade-f3c2-4159-8fc1-ed72cd00bd22",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dfd777-6d54-44b4-9c05-a13ca79cbe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194d1401-bed9-450e-afdd-8b4892884231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5758fe90-5b27-4afb-a8db-6c03e2a20fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31edeac9-37bb-4745-857a-6b265193f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c76813-a953-4172-898d-620532ae3cb4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a7ad92-78a6-4a51-b45b-d904ef9d7a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2360bfc-0a23-4b9a-93e3-ca7f7d1b2697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787b522-b0c0-4373-a9be-22591c3b5483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc4e79c-3ecb-415c-97f7-37c6f3371c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c3f59a-3410-494e-8106-ba6de1388ee2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c21bc-5b03-454f-b075-f025e1038d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeadcd99-0d96-467a-a029-ca5dea478c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71bc886-fe7c-4ad0-a94c-7ecbf0b30cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "125590aa-e351-4433-8f10-a84c94218779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bed64a-3ab6-4ce7-91e2-0e03955b7007",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f72793-0609-4bf7-ae79-cf18613c3dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75303c86-1203-4fae-8ca5-d96f769429ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93811a96-df81-489f-943d-4818d8c7df2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6edf9b-74c1-4441-90f9-11ae23bbea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b703ea-25f9-4ed8-843f-44c8ee3b6468",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6838fe1d-51d3-401c-a921-99e6f05121c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617be278-dca1-4d3d-ba8c-9923786b14a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efa97ea-979e-4067-a993-de6da6dcfd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ece6bd3-a297-4a76-a704-407b1eb9d7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8212fc9e-c091-40f7-8134-3d318bdd1867",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc63ebd-e60e-4d06-8162-1deb87f5d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20539ea2-c59b-4908-a49b-fe65ebf33f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561fb9b-c906-49ed-a5cd-1bd0948b9a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c3966f-4b45-4a9c-828a-65536c089d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba535586-2925-4c57-a4c3-b0cfad652f50",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd7e3cf-ecc7-4544-9551-beed31742af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c757bf5b-8225-4534-9e2e-55667c387f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28215892-f7bf-440d-8f7e-d9b4896f7fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ca671d-e94c-490b-b368-9247796f0b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b1d1c1-8bea-4005-a085-5c05b429c02f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a2e6f4-5c20-4205-a6ed-c09e91becb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629dfa44-c4fb-4471-a3f0-228fb97407ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6297c96-e666-450c-b2ea-d23a156db029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9832c57e-12a3-4e97-b83c-1a7689c7bd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd673dd-8b40-43fd-ad31-2718c9630782",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba62cd4-f2d1-49f2-89b0-7c478bab14a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4624e9a7-1b3c-46b9-983a-c78c046476e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b1ab0-0d80-4c9a-b86a-eeb5b727ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78a6cffe-be5f-43fb-a623-975e2a535c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05282c1-754e-4b80-84d1-5b4dc3f56ad3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438252fa-b183-4529-ba36-0e18fb32f75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d296ca-3613-47a3-bb8c-3d24dc383254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22481c08-70a1-407e-a13c-7a284f2f7bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d745b32-f2bf-40de-9124-9dff76971b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0920709-4273-4814-bbea-70c4828ccbdb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3572346f-d345-42c1-a45e-1792eae550ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30278193-f5a9-43a7-aba5-bb33e9555daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8813a6e4-d2e4-4b07-9c82-48ae15d990bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f9a4d9-bcec-4930-b301-35de88ecd4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268c5648-dfcb-45ec-bac8-9eb53b167ea1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adf3b48-0d6d-49c3-ba11-c515a04ad103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2154ad40-a6e2-4747-931c-0f7b2b79b3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51914dae-c8db-449f-88f7-2cb3d1f0ba37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c409f4c-d9bf-414b-8359-0796e6431a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4331fb5-1679-4db7-82c5-76c070862bbe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a309a494-8682-45e1-8c54-d9a2ea1c4219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a476504-4bbf-426a-b6bf-1f185e1a961c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57edad-7eea-4c38-95be-8c616a1beb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b50e70-8f5c-47fb-bc49-d3e76f842e0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c14c938-c034-491d-9f16-88b2dc28f20d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b6ec1a1-57d3-4beb-a960-4b71b8180fda",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb68514-423d-4b32-81e8-c5c5f0a8e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b85e646d-67d6-4d74-b587-d84ec78d9c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29318f41-fe88-4c3f-a443-348e9d9be1e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5580365-4e50-4104-923e-f3d17076f71b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0974d983-a864-4022-bb6a-55870b864c22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b9f884-6a73-41e7-8695-e6bdc1ffba63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2ebd28d-b39a-49e5-a284-f592335a2079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e244ffad-1e2f-49d7-aa54-32f63069a8dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "921b80e0-da82-4585-861f-d139087fde33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6da3989d-7f15-43d1-9d66-36c599be860b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "424a28ad-b564-49f3-9737-8012b8869e99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae25c5e0-60f4-4851-9cab-21666415ae33"
                }
              }
            ]
          },
          {
            "id": "b268d26d-1b76-43ed-888e-315b4c4f8a14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3fafe9db-3271-4a0e-999d-7768631372c7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e6916b8b-867d-4bc7-9219-9b82b97d2b23",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b57cb2-2cea-4556-b6c0-af4282443953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5211411b-b7d8-4e9c-904f-6cf8de838a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c8b9cc-1bf5-4c35-ae36-f71970cd8767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a8f6cc-dbbd-4b59-93c0-d3217b406ea8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aeb549d3-00e9-480e-a2ea-dc02b8c2d15b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dc29e71-dc79-451a-bb23-ae3477116cd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89db3c9c-8dad-4c25-9965-7b9b2132b9cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "817bc7c7-d26d-4168-8a69-57622483d486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71d1107c-b26d-4bc2-aed4-4bb46addd671"
                    }
                  }
                ]
              },
              {
                "id": "74b2fd50-13d7-4dbf-bec1-d31487241f6c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93830d14-382e-4ff7-8fbf-ef4cc592dd42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecf6d11d-cb88-4ff4-8e36-40b740826ad8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b6256c5-a795-4e8b-9dec-f93a847731e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "861da738-4c09-4d7c-b326-c6cff9da361e"
                    }
                  }
                ]
              },
              {
                "id": "7db5cdf2-7d32-4aaa-b7bd-112ebccee841",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26cd9943-afdb-44a7-9eb4-2e7dca285e88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26cabb51-5c3f-434d-9c85-da4948c551e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3456c55c-c96b-4eee-a807-f6a8050e1498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65c4e7f1-cbeb-4958-bd25-1d0491724cf4"
                    }
                  }
                ]
              },
              {
                "id": "544b4152-74ca-4f77-b2bf-2ad625f64057",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b92ee7-a399-4bb5-80d3-3f377e1b9f1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33c13c2c-be5f-43ee-8687-af416a0e9b2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03265195-f7ec-4f1b-98ae-2b10481c1b46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "605df595-3872-4c66-99b7-b37b1df1c257"
                    }
                  }
                ]
              },
              {
                "id": "aea66289-a6f9-4b6f-a307-59692d919d52",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f2e8833-4c53-43ef-bd6b-b4920f19cd39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cd2b4c2-607d-4b9d-b1c9-f617b3b00749"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f23548a6-3de0-43d8-a800-f800364d9c21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d21a4349-b7c0-4b9d-b439-4a75fba81cff"
                    }
                  }
                ]
              },
              {
                "id": "f6da3636-33b9-430e-b58c-1d87b385d201",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d46559ab-7093-4c60-886c-9472514d69b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c3342c0-e8d5-4a07-9367-599b472f0218"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f5119c7-2d2d-4809-8573-253306d130e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d082a214-48de-4be9-8adf-9e47c9e49a0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "791674a2-b807-4ba6-8517-bfc9bac1619c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08573ac0-8ee0-4b86-8131-4eb5ceb55a7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3661c11a-1632-4df7-b402-16e64e2c0d48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "850ddccc-29d0-470b-89cb-74cc8bb281b7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "265580fa-8e7c-4e41-aefa-a019785965d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cf64db22-76dd-42df-b69a-7d5bc7c43607"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b26210c8-5663-4445-b535-b1a08a2ebc69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8ebf74f-54bb-4c93-81c4-b7264ac42de1"
            }
          }
        ]
      },
      {
        "id": "15bf44de-3f5a-4bfe-a62b-a50096b8912f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "483f952f-9830-4823-b26f-93c5b8123a85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "441da99a-7092-4fcd-87ca-68b6b00b146c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38a80e56-d01f-4f6f-ad0d-f3309fe34271",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cb7b6b-5418-4649-a87a-9da31d4358a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf45db8e-5f7d-4d24-a85c-5277b01e8c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bd0dd4-39b5-46c3-87ca-58e5e26f679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53ce954-a905-45a4-be93-93b4be5a91c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52bfe23-5aeb-4ad5-a1a5-5ba8539ce3a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181544aa-4397-4f5f-bcb5-2ddfead24c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9103f4d3-c9b7-4c94-859b-ba883260760a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5532e369-1a3e-4762-9303-23623e10fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "753df00a-61ee-42da-9d6f-1f81b48faf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa947fc3-c454-4e0c-bf74-eb8cad695462",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec47239-6b8d-4688-9ef8-a1260ec0324f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a746029f-088e-48e6-9088-d4e4bfc3e5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12240806-ae55-4f96-ab04-a73959b30334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18070e28-6c84-46fc-93c1-64f7170e250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4f4906-044c-4491-81c0-d4fc23fc248f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44a03d5-bb05-4bcf-be8c-71bbcd996e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0d7678-684b-4e43-b51a-1e5cf01ec279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec5959a-72e9-48f6-88ff-daf2e56cabb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2481c9-4036-49eb-b363-2afd62f55eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c89c52-a2bc-4a46-8341-048121e6087b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587bded5-75a5-47f2-8f71-b6e976d2347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32ad308-c6b6-4134-9f57-a43bab3e933b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1590e6f1-18b0-41ef-ac6c-1947080f0c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b346b24-d68a-45c4-aa51-1ecd96a83e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f6f1aa-53de-4951-b219-5f2ee5a45431",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9b698f-e5f5-4a5f-8e06-77db73ba8460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673d2cd0-87dc-4922-8107-606b7adf719b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8fcca3-084e-43d5-8107-ecfa5de1674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f09f6c-bfd4-4325-838b-acb14d701e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af749db-da8e-49af-ad00-644d034b12c7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca7eea7-7233-40ec-95fa-6c47e7b8710f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebfb5a1-6ec9-4ec4-b454-d8f797821a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de5e3f1-fb0b-4af3-8f52-13b847dcb8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e137b2fd-cd76-4c06-9bc2-02bdc49d13fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c944fa9-b386-4d20-a592-b7c0dee4fbe1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d2da54-da01-4613-8dd3-e4d1a7c9e89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826ae630-9a93-44c5-8d74-14b605ffe1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a137630-ce55-4f05-beaf-4b772ca0ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49259cbf-a2fa-4518-8b4d-e51a48414240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5163e5fc-070d-43ba-933b-d685450d58ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d6f861-572e-4013-954b-8c982acef6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d51673d-44bf-439b-aa4e-6b1856735f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3a2efc-f380-4d7d-b63d-98cc85387d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e8b6f0-a285-4b4d-8455-56cc2a1949be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d03ede-4c26-4266-b117-23d403a46000",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3c7f63-c4eb-48af-9223-5ccfdf0c1595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635b5c7e-ce46-4d9c-85c7-db0eccf3a80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5988349-e398-42b1-961f-1a2b698c8298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea1abbe-672c-45eb-816f-1f800aca5d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2f4af1-733e-4998-a854-fff68cc6e4cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b834682-2c03-43ec-a181-667676528217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4704604d-f773-464a-8f11-7a34b75a9495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7236a7f8-9115-4e53-b3b0-266be8b6a78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4425bcc3-a22e-4e6b-a6a3-b1b11e9e3897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff667ed-0bc9-45c3-b489-b57b899b3b81",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13a46d8-3ce7-47a5-b319-9d32244ce09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec68439-e3de-440b-b55a-254deaf34239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389971f3-f6a3-473c-9239-38e608d7ad69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0af7a2-a538-467b-adff-c01885c439c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3862aa6-f9f6-4e7a-9ea3-42ae0637f868",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fbf23b-b83e-465f-b8b4-e8852269b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6a00af-6ccb-49a7-b2e2-21d5fdacb2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f65055-0674-4530-8cc5-222400af6183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd883a6-d44a-4ad4-8c3b-dc5637df33ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92e8bee-1d97-46c3-a489-c0ea18c39da7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c991c266-a4e4-499e-aa93-2099adcd003c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292efd95-a5f2-440e-821b-95b2babe73bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a2e3d-ba37-4a10-9b80-3982f500176e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa1862d-4753-4c06-a36f-69a1bd85a348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b671828-b61a-4bf7-a5dd-6d668faf0943",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3609f89-3e52-4461-b6b2-0f5ee06678e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748fd69c-c4d4-49af-8875-3701615479c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5829fa-2b18-4a1c-bd8d-149a78ae9497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1f0e90-b608-4c5a-b5b3-1bffe891cdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883e4e32-5255-4b2d-a2e3-8901fb5051d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b027740-4df0-4a9c-8c01-eef5ebd7a46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8c1d57-f4be-4b88-a577-95567adef88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870333de-7955-415a-a9ca-aaf4a68bee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0098ea2d-7447-43eb-99fb-7515c26e8780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e724631d-be97-4ecd-b8f3-d4831992007e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b300154-a0a0-4c7f-a890-af31925defb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5220d192-5649-418f-9e50-c82b503e7aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc3edb3-62a2-4b53-abf2-dd81af9d43fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c21742-040a-4d94-b2da-76f6128f3e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d0de50-6513-4681-a8df-665514a1ae98",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbee7e9-24cc-4c5a-ab77-280ebf4bb0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f441935-2753-4009-b721-3ee4c8e6ab1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e38abe-e4ac-4425-a767-f40378ef28dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c886e381-c605-4dbd-a10d-b2154bc447ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39230ac0-9599-4907-a44d-d45c6220b5a5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff35986e-a1f5-4e32-a344-a5402a726636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8527dd-04e5-478c-b5f3-9aa27182dc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475c94ae-af1d-44b9-96fb-84662e0adef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "423f46a8-6ac9-45a2-b5b7-8a0dad7990f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cef9dc-afd1-4504-95d0-c446ff5b8f22",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27c345d-3486-445a-9aa9-cc4507bcc8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eea89fa-5c66-4c1c-85a3-61e0a9c047c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a0d2eb-371c-41ca-bb91-decccecce689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ef33b6-e3f1-4b7c-9976-fb728f4d1069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18de209c-67eb-4110-a97f-7979e2d7bf87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad60332-fa71-4c15-926c-274f8b986728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca78a6a8-c907-4ad4-bca1-174a6708f251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c65d990-35bd-4867-b0c7-9679c39cd10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcdc601-2df8-42ab-a37b-3d85532a5dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513cedc9-c95b-4524-b69d-56048403c295",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cff283-affb-4744-a1ef-5b50dad91321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aacf7e-4bad-4f5d-8942-2013279a771d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e757e9-5fb4-489a-9ac6-e62c862637af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f7d59d-44bf-4ef2-9627-02d77d67f4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f7db7b-66cd-4950-aab3-463449562275",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc340ec1-3482-40fa-b34f-969c80096d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ca3c4-b526-41f6-8057-557edc8b1f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c721295a-1d84-4b09-96d7-0d8ebca93a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05b0ac0-7fe0-4b6a-b1bf-af8a77db537e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e2ad76-66ed-488b-b89e-881e18e50a6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9186c2a7-1f8e-41d9-bfb6-579505e406a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd5a570-1faa-4a75-b5d7-2d2f3f931f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367e4f76-5904-4892-a2aa-e01c8946c59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea733f2-e4f0-45ba-a169-f877b39d5141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8354d731-a0b3-4145-894d-9e1d12321d7a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9224f6b2-ba2a-4be1-952f-fc39b69fe74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4a8210-8485-4e74-baa1-6d84bb3cfe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858f2f00-c608-4ff5-a6a3-1a01600dbc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41af72db-37b3-450f-81e0-50ae0300dd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1beba3c-28f7-4623-ab9b-8e9d514f7963",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3c2ca7-d9ce-4ea1-ac75-b8339dfcd4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72c75d6-36cb-4a0a-b6bf-ea1fe842b050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac430bd-bfed-4e21-ba7a-8232b6e80c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67608849-6c21-4c9c-b175-08a458a4ce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925c9494-0002-4337-9c84-baeac9059ed2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c6395-ca0c-404c-8049-e61a4faf55fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d55dc7-4dbb-4184-bd6d-8a689fc032eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efedb72b-16db-4c05-a4c8-64d279068e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea4d8ad-5d8d-4941-9779-e2a88de56242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b6df66-a557-40e6-afbb-b81f853bd8f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbffde4a-6188-4c4b-9903-0ccbdd4b4267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081a2df4-11aa-4cd4-a05f-8fe433369e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448deae9-d1d9-4f7e-b78c-c251fb785575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a235b88d-8828-4e55-ab3d-15ecceaef4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e3ed8-7b99-4e1e-bab6-2ca0f6625a92",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2162e7-288d-45f7-8328-54211d4418cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cada207-dc24-4ab6-9219-963c575fdcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab862e9b-0ede-4fe6-b9ec-c441a565d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdc0280-285c-4335-9fa8-4ba7a0344b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e25791-f751-4138-a07c-e14255645848",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a014e-3610-452e-a119-480cb1fd1743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c96b78b-5ea1-4546-8002-caba0514a37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48739dd-b8d6-434f-8eeb-fdccdeac28b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5052033d-d012-47e5-a950-597012f7d66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a71c9-8f8b-4087-830c-bb33c3e1c32f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb0816f-c886-4987-9b04-4a4314213e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289b9229-6c24-42af-b97d-7c8f48ab4a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91c98a6-078e-4c1e-9c65-c74603330d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "188c2334-e242-4b66-abc4-c7bfcb3841fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e31389-da12-4ef4-8b6c-33b4344c4951",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead010cc-19cf-4df2-a1f9-ade5c7754cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9bb886-1a11-4e24-b0a7-635471ee426e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319987df-726e-4163-a93c-e8c7ae3374eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a0c568-a1b4-4397-a5e7-a88dc70d3223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f922b3a6-0871-4049-9d31-5128063135d5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef59995-a073-44e6-b7f7-8e128aa9c1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec8f592-6a9c-4fa6-b7f6-285b335187b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8511890-6283-419d-907e-4cd321cbc2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f28cfe-6215-4a63-8f3f-8d2ed4a351ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18edb6a7-2776-49b9-8c4c-663d4bfc1174",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2334aee9-7a43-49a2-ad61-6fb5608e001e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33c9504-3f92-4822-9482-d801142192ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd31679b-340c-45fe-9395-0b115c20c663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37be463-158b-4f4d-a29a-5e48fe81de16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9678ec-5077-40ce-9c87-fec4f65e9f45",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e8f79-bee0-446a-9830-99ab2130e73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a29d52e-52ce-4283-a127-04c5bd301aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ca37e1-33d9-487e-b532-56357908d767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52cbcce-232b-4c2e-9280-c5d645006b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e85529-959e-48d4-bcc2-992dddda32d6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4187a7a1-ff7e-448d-afcc-20ab3e70c619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53d60fb-78df-4118-9ad9-8a45dbc5ac32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06efc2bb-d77f-43df-8b87-339aca7ebb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66489909-28a4-4475-b15a-c2914cad2d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78b6578-c427-4b10-9af8-55e628a3b9ac",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51595768-ffe8-454d-801a-ce79abf1f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62517dbb-7cf2-4c17-8691-51105af2ed0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff59bb9d-b070-48ce-8b4b-40012d17513d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82551770-e51c-4459-8caa-80052c2dce7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99f9ae54-a4f9-43e5-b621-18ddc5b0cd3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e588c1c-eff0-4279-9057-fad962042736",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3b2a9c-f737-4085-be6d-1f2cbc9e5989",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c185230e-7066-4acb-8964-8d16d4069df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253a1fd1-7932-4ed6-ae70-0ee36bafab2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "310d65e1-e924-4234-9f85-b7be58ac1fc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "322a944a-7929-4fc1-ad32-9fc887518204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a2f2dab-ec13-4033-a51f-5d99bb09ae35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c6412a0-b4a3-46b8-be46-9ac3b1d32e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73de5e78-eada-4a31-9330-fd0602370ac5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6550d0b-2ccc-4960-8f2f-9e58586c63db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3e87e42-4bf0-424c-8aad-d121c5f77b9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ab1c3c3-4f26-438f-8396-7d4550c5d70c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02f73909-d5b4-4f9a-a0f8-20a0f1f4d13d"
            }
          }
        ]
      },
      {
        "id": "e377d4d0-dc84-4bac-9636-a23b4644163c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ca55bf10-bb01-4f45-8a07-40e5cbe56c57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaafbb95-f57d-4d3d-834c-bfd23d387dcd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb66cdc0-82af-4318-8048-b70482aa1ffd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514b6a46-8d82-45ae-9ef2-bb04631a8934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577dc15d-34ea-40c8-8a54-a1a235a8ddc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6987783b-c854-4788-8ce6-34ce07fb99f3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada73d34-8cf9-41b3-b5fa-efbdfcdf11ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffc821e-6d4a-419a-b580-1dbc1685eeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52545cb4-2510-48b4-84e3-a49315f37ae4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3ef980-5ec3-4be8-828f-e67943d1ff67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc262f6-e33a-4eb5-90ca-c7189e9bdca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c04905e-e2f2-4755-aac3-72bdbde37e3b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eed4e7-6a9b-4a57-8247-47b88f20b9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbeee6a-3504-4b87-b0f1-8bbe6c62db58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37226447-67d2-4ba5-adc8-f954e054a45f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59bf440-d887-48b8-b800-1f456fc69486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403bc175-98e0-4eac-a346-c924d745d701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85de665-aade-418e-8647-3dd71911dc04",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262566ee-e7d8-4056-b850-59b8cd816440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcf57f6-2fbb-4729-8065-dfb7658d0735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c01e95-2075-401c-975c-59a46c19b418",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b8955-3d9b-436b-944c-06315cd63b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06823b03-7250-4324-8a14-61ecadf3e380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dbd384-a811-410c-876c-8a15276c2b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cf14ce-6434-4ad5-a726-6dc6aabe95c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0387c4d-3ce3-4d5a-9a6a-16122f4a98b5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50957e1f-d84f-4d96-aef0-652227c93e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456281c9-6b4a-49b5-874d-60ece20f570f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cf5a40-17c1-4348-a807-25e8543cc9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b9b3cd-6f6c-407e-8287-cf31ea73e0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ddd10e-88d3-46df-92b3-1333b0d1eb40",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2710afc7-99a9-431e-91d3-2c1f2400b849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d39738-c073-4eaa-b847-317572b26a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bae6c9-dbcd-45bc-a901-08571ae248b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0571409b-570a-4121-b50e-d2d25eb27b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69ded3d-64b4-4692-90fb-3cd95ab8ba94",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b269eb5-b18f-4a04-8447-3788b61497c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352e4dac-6cc3-4204-85f7-3ed3669ffe16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff825b7f-4f6c-4ce6-acd0-44b6b48fd534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a5e0e3-6955-4bee-a4e7-eb1a05c784c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbccf61-b06b-4132-8efd-ec6680b3a41a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e2197d-2c98-4bc6-87a4-5b7f9f608c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d2d1c4-75be-4d7c-87e6-9e15c545dbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080fc7a5-e1a9-4d56-9eec-fee0174d39e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0c1ce4-99c8-4124-b599-974b6ec78849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fc80e1-b3ec-47a5-8c17-a6e2388f2b7f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd47cbc-efcd-4048-89f3-f3d96a6d4b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbe207e-5652-412d-bfd4-3212c66848cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbf9391-533d-4155-8933-7b2b594b126b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6826cdcd-f21d-47da-b3f2-7b77cb0682d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a3cd3-171a-41d0-8043-c17bc02f2162",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3351bdd9-6c2e-4e19-a3b5-d785cf112896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdaf4f25-b2af-45e0-8f45-bf37fe780d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1231aaff-2f9d-41a2-8264-e22119c5ae70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6e0165-7623-4118-9f9e-789cd0411202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65a6404-577f-4c9c-97b7-a1993fea0cf7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5944ee44-0363-4d15-9646-8e060270eae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9f8b3e-b2ae-481c-ad23-0995b2e7e500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b50529c-bfbb-4103-a090-803168c3bad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63ff0b8-b94d-4e49-965c-3017f1f4e1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc7d65-6b39-47ce-9805-2012e60c5f92",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39090e5d-956d-4b16-a568-a96fbdc6b8b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ccdc79-66e5-4e92-8153-8797f45c407e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5026c70-a946-4eb1-aa31-3ddbbe4b0eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d15ed7-734c-4e3d-81bb-17c362090c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb038aef-cb9e-49e8-9774-6ffd9c4044c1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7205e5-662b-4c9e-8ee5-6aa676edd381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721141cc-2dd6-49df-8b19-231d77a7e42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e977b4ad-c7da-4c8e-b28d-9f173879296b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f62865-d32d-4145-9125-917ae4923c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65561fdf-aded-44cf-aba8-87c840a300e0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84127238-684b-40b1-9058-485247a146fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd2f981-480b-4cca-8f2a-37c079999c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04c59d5-2f79-4928-b506-565d9df2338d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67efb05-4041-468f-a09f-5c18421bd217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e40ec59-15b9-4c00-8ccb-0300ebf62f67",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298fe786-105d-4593-9ab5-b832eb292386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42887644-8a3e-49de-80b4-7dd127d3f5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f891e7e-e47b-44c0-affa-9ca429ab5387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a8957f-2311-41c5-826d-ee92abaaf81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b522ab8-17b1-4eee-90ff-2bf8a58b2772",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f98714-82f4-4f8d-aa65-af9ddfadc546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726a66ca-8c65-4366-bc3a-2c2da88c79bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e82e4a-c589-482d-808b-fe3f2ee5ffb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81773e12-23a3-4e1d-9e86-fd9da636008c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60346638-9431-415c-abee-7788d2b0db74",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1eea74-b174-4507-be97-98cf13b6877a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70a43a0-4cc1-4895-91e8-c79d26eab9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79dbe47-dccf-432f-acc3-72b7f7350751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2af238f-4544-4ce0-ab8a-71d83f9541f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe014ad-233b-4b69-8b8f-84520459c63e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578a9979-a38a-4e7f-93cc-c8afa0e373be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7127e6f3-1370-409b-a765-0665d15716c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaecc52-9c7e-48d9-9a80-cb4df837e080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec479a4-450b-48a9-9221-b8b39d40f9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b0a403-3efe-4d0f-a14d-236c1883c4b8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed612d2-447a-42a5-b5e4-da2f13590638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e977ac-2b89-4e4c-8ad2-2c5b9dc922b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cfeb6c-531b-409d-8787-88708d111bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115a9850-d6c5-4ac0-8174-c408dd424058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db28db8-5a71-49a6-ad83-e5504383c2df",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0695ad5a-a69a-43a9-9eb2-94716436904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bad22b-bb02-4a4d-aff1-1d0c6245bc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bda73e-adbd-479b-bc43-d43379eda3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839c3a7b-9cdb-4925-8ce9-aef3696050b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28daa626-f43c-4d8f-a1b5-8d436bea8cc9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8110835f-9c98-4abe-a7af-b1a6bce8bedd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fe901f-e2c0-49a8-b96d-2eb32dd3188d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616c7dd3-e9ad-4c9c-bae3-28cc34f49d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9bb911-9806-45b5-acc3-cd357e8e5fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76db7c3-757c-4a29-a625-18791edf9ae6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05b905d-4b95-4a85-9d03-4838353257e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60c140f-439e-4a6d-93bf-1834190b71bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079c27f1-ab2d-40fe-aa5e-d1336ddeb32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86752d7-ea44-45df-848e-66b7e60fba55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a500b0e6-d21e-4f2e-af72-afd4954c2b6f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494933d7-8277-410d-837c-318f07e0b24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c0ec5d-48f8-4fcf-8344-a9cb3074ed8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb39c40-7e58-479e-b8ba-c4402b5c553f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d911ec36-751b-4979-9029-64c43b9d883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c16fd-3b17-4ed5-af50-0d4b9f0b8a66",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f22c799-ced9-4b15-9015-d5cb0e77cfc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "554f1cf1-b4ac-42fa-a060-abb271968b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845d992-f5e1-40df-8ba5-fba0ed8cee4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b463782-4df1-4c6b-ad28-5851a4f2c4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4683f9b3-bf16-48f6-97ca-1b7f61f1bd25",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137dcd12-5785-43a4-82e4-d72e97adfd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b421ac1-e358-4016-91af-2c7b906e026c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c9d9b0-cd28-4f3b-8d8d-8bf24d784184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77aef052-7cbb-4f80-b8c0-25099df713c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2820e8-2ed5-4122-a955-8214badbaef1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa00760b-0062-4a33-883a-7dfab68c304a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06e1eb7-d67b-412e-948b-e27fcded5d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab7579e-5447-425a-aa5f-7bddf592fe89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f4493f-24ae-4cf0-8266-26fa43617ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3604b7-06fd-423c-bb5d-1440e43a43a3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e04c43c-931f-446e-9a80-b0c4669e9c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3932962-d414-4f94-ae96-86f0319547c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ce3ac4-fa3d-4786-af84-c0f74c3fd1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee5bff6-ea50-4f6f-b48f-bf255c19013f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d13c0cb-4c3f-4912-8ed3-265a1375d95b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b93e08-a8e1-4dfd-8889-63395c640d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c818fac3-012a-4c20-b8d6-34cf7d6dd9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ca644f-f064-4903-bceb-3118576e7f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1799110e-7de1-4c34-8dd6-b297d3067c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dc9928-79bf-4356-83e0-bd08e3a61239",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6409f996-ccd6-476b-9a7c-934f62a6f5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3563d85-41f4-40ac-a40b-5fb221b11693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af14c1f-1207-4775-a1b5-ea2f6564bcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b98ff46-c8b6-4280-adf7-4cf89549d831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c288ef7-9fb0-464a-b986-c8101e6cb358",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136f8cef-9bb2-4c86-a3c1-f358db8ff02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3cbbd1-2a2a-4c6f-824e-097543130051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3600260b-c5bb-4505-93ad-bf1725aba3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60214c1-99f4-492c-872c-8fdaa198a41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53ce0eb-45da-4e4b-9d3b-86f211cb76a6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f369107-1512-4b4c-91f1-8493f21b228c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d57edee6-be7a-4f5a-8d53-26827307afa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f7497f-17bd-4a55-83b8-d81f63b0a130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec02bf7b-23d6-482b-92cf-271834dc2f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1332a9-f980-4cb3-9f2a-aa09c5d05d11",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125c9d0a-2fc8-48ce-8e22-9f411b653740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6814ead3-558f-4cd8-bad1-6e001b225a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92002ea-7172-4c6a-9ee1-e8f7e28fbd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b9d458-155b-4c97-830f-9a89839b3227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f068ee-1063-4520-aaa3-aa316dd6cc55",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301960ee-4213-44a8-a0c6-073c2f73619b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d5c5d6-0148-4353-8252-fab2cc4332ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af490640-29dd-4c23-ba2f-d5c29a37a194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65471444-b555-4901-9a7d-94f04cf6cd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57015216-68ae-43bd-b3b0-b23ab2a8a994",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632f0f92-9c0f-453a-a1af-7da60a28121f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0827214-f7c8-4599-b9c0-5298edf5ece8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89889846-2997-4d40-8833-685c6ae2830c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e515c535-d8a1-42bc-a79a-8e94ff2f507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58ca77d-26bf-4743-8c46-e07de4c87bb7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a10399-db58-4b15-bd54-64fd70b3b465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53b2153-1619-4bab-99f8-c0a688770b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb1f9bf-4c97-4c81-ad57-41cfd96a2b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665325ab-3c5d-4792-9114-497531b60e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9ae8e1-3e2f-45a3-a1ef-6d3019f4c825",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b92cf42-4ba4-4602-bcf9-ecc330099416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f487351-299d-4934-b95f-91b53f177707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f94917-5882-45cf-9410-2dc5480d8286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8b86a0-d4d2-41b8-be84-0746b64f075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0694a4-0c0a-4401-b40e-d24a28608b07",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952f85f6-cd2f-4310-8f50-b0f5a0773c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29dfc10-ba3d-4dcf-8a55-6272294d8b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9914406b-167b-47cc-b9a0-10ac17158a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a4766e-dd9f-4455-aba5-62f2d273c5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd4df13-84f1-46ef-bd89-5f1ad7890e25",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0654c5f5-2dbf-4ed9-9348-5b2e4bfbab2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a12356-d60f-4425-8da8-24a0bf6d557e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f862ef3-18d6-4b74-855c-d5f3ae96d39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f76cfa5-06fd-41f3-accc-193792a5df50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da2edff-5033-4754-b1c0-e5c690d09c0d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7147f3a-57fa-4a96-a80d-8c690f7d887c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236cbd3e-d9f5-4dc5-aa86-3132902079d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2fdb87-f311-474b-bda3-5f65d0d950f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f4b6fe-f2c1-4a34-a088-fec9664f8dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df6f2e0-bf40-4952-8f97-420172a8850f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562dc622-5c7b-4791-8f82-1a74bbd21114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8132c4f8-0093-445b-a2d8-16e8d0328986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9540f521-e756-406f-80ca-4855f007d5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fde5bd-f1e7-41c6-8b81-eeb739817c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c80bfb-a3c6-45e4-bf2b-0ebfda83f5f2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e98206b-d4b9-4b85-8e8f-31bfd6067f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a763c90-2638-4bc7-8b38-7e2ca5e242a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba1286-6091-477a-8ce5-e27a3e523114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823bb99b-593a-4607-a56c-6647e187b19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c360a5b-12c5-4792-9ae6-ff586d85dfde",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ccb603-ddbb-411e-b706-36e02b723346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912ab83e-0f3c-4ba0-8166-6ccff9a9f3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e495363-2c50-4fd9-aae2-56cc8a1a897e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641e6dc0-2b1a-4773-b1e6-9b288cc00a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e90d730-3965-4aa5-8a4b-008e4057712e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4a558f-cf03-4d31-9520-40da2635ab33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4406a6-98d7-40b8-986e-9f57d6b90180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9cbd88-26a6-475f-a05c-867d27f9083a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d50530-6414-4321-88ef-2cb608450c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2faae4-df9c-4f8f-b8e0-7d3d810eb08c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491533fd-8878-42dd-9290-2c72640261c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba1633f-3f25-4b47-9dfe-99851ac20b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b2dd9f-d175-49ba-9c22-2e7f9f0689e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e23bc26-d5e4-4a18-8fea-ae53b8895622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b645c5-290c-48d4-aefd-30edfcb7442a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cf6f31-1074-4be2-b476-a86ad20b4e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffcfeab-896a-46b9-827a-74be51d4a213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0726fd73-a0ac-4a49-9e50-6ba2fe2bf296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeadec95-4e76-4158-9df9-0b67819001f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9973e16-ce10-4eb0-b37b-2a27fadf14e9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102b5f4f-2e32-4040-8dc2-75b5ce06d5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd830f8-dfa0-4fc8-a72c-1854c2629ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3102d6a8-0d7f-4783-8420-192ae27bf799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ca1239-0972-49a8-b85f-2b1408ae0af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2cb4df-a24c-49a3-88bc-1756ec104283",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4034491f-715a-435b-8341-8af83c172737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e2f869-5d24-4b08-a574-516688517268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6a193d-b9eb-4c2b-a058-20ea3de28f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7b9da5-2c70-4c7f-a043-dca9fcce4d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df519fb7-fbb5-4a74-902e-3da7f590bf00",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71dd0fb-fc6d-4e62-9be5-8d39bf8a0f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792f9feb-204f-41e8-bd59-ad8d9c64f82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d18d0e6-026e-4911-869c-1cc98aa9ff03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4249233e-fb57-4563-a318-a16eb0b8e6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15a15b0-ca5d-4a42-8f4b-559be302992d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911dc8ce-f646-4941-a737-34541793614a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08908557-73d8-4e89-960e-2a9b0d23b830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bc67d9-2961-4f2e-b5c5-6372ad516df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524ecd09-09b6-4813-8f83-31fc0c2431ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d27cde7-dfa3-4638-a9f3-135cfc37fb59",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853ff1b9-3c68-4730-8f40-2b6a22e905f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09884a6-dff0-431d-ab39-12b3633eb157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163cddc6-3b84-4a8a-89b5-0d2208a111c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee59253-c76c-45eb-94b1-3b8d6d5859c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282c53b3-12fa-4d3e-851d-c7d168063934",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3bf07c-fca5-47df-b6e3-8a8cc73f657c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d6e95f-59d7-462a-a2b1-980096fd7a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a429a0e4-a249-4624-868a-9a5eb9a7d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0869ac2-aced-4f1f-bfcc-a0d82619bbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7cc28e-9adc-4ef0-883c-a024f73a346b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d156406-ce1a-4482-9a25-35c4885909e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635f71b6-836f-4569-b7b8-a7d7ddae54f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c99b6d-a297-45b0-8239-13e538dbeff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990bc4a9-c5e2-4f83-9daf-5d48e85d2a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b699fe52-c773-4166-ad84-8f681afb35a0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e040430-be28-419b-9d20-0c764ad35070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de26fe8-7b37-4751-b7a5-0f0e4f9bbb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431e6c6f-7854-4b1f-aad1-c1198c8e3c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2efd5b-2071-4036-8c50-3f1cc5158b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e149f9-29e6-4175-b7d6-924d9a9c90dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160882a6-424e-45d0-b435-61a2d710ffaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c71403-91c7-4ba5-b616-f8f270176307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2f2e51-da33-4f96-b0a2-51e3d129b132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f3361a-1ce4-4898-b469-0f76f8726e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65d0ea0-5398-4322-84f7-45bafdb7655e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa3d716-c524-4912-8dc7-9358db9a15a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a123d8-3a49-4d1e-9131-5668c8d08eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb210629-9b0b-426d-a927-1e440ae36ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc278b02-ac03-4aa3-989d-f266588762b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be30ffe-a20e-4523-aa3f-3a63ec68e540",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d95699-05f6-4cde-b4dd-544e6b108c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dff416-9ab6-4b47-bfa6-78c4118a9ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0278ce3d-5480-48c9-8320-34af32de5a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0c0f31-647c-46de-b8d1-7946061dbde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1250e2-65de-49b7-bc0f-1657ef1878b0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71737221-39b0-4d98-ad5b-5548d8ba8660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba2d24e-350e-4aeb-a581-ef13afa5901a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6dee72-297c-4c24-8b6b-4f31411b36ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876eb8e0-0ecd-4365-8933-19bb1159444a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81233879-bccd-4708-9872-60dcf2668d8d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beb0405-d6fd-49a2-87a3-412b1b43f02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a9090f-df63-49d6-a0c3-c3b06ae93fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b28727-25ae-4b68-b981-7b6e3621ce25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0679d679-415c-46d2-8c78-3f579eb8f0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3998c4b4-4073-4a92-abfa-dac25b8cb679",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143b65e3-f03e-4f7b-8daa-01f1d3a453f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f1788c-2619-4d94-a6ea-85cd165075dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e764dd5a-272b-4a69-83b2-1fac9647e3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558f2b09-efc8-44a3-9296-755fb96aef73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74ba1cb-78cc-45fb-b9fa-9d1bf8fee439",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11439e9-2458-4e08-9029-c04020eb0ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3c0fe1-c761-4ae6-bd07-30a850728976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79a6505-b3c1-4e6b-b5f0-c3e54df530a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43c1965-72dd-4c42-879a-941e7bf1b9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdc2083-297b-41a4-9052-6a6e970bdf26",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcaeac6-9720-4048-bf8b-6456237bad22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da230fb-4412-47e4-a8ee-47cdfbe9c0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8c6665-187d-4121-971c-b6479c4e2ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f94c021-e2de-49a6-8bcf-90b96973672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46fe168-450e-4756-a329-441a8d76ec5c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b1e679-8cfc-4949-9a04-9df9b1fe3e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493c7762-b2fb-4a01-8b1c-e7d6df765c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2a1295-cdb6-488b-9b0f-6d8953301d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b65ab62-6637-4fba-beb3-7a45f4c81039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5119c5-7c1b-4365-a648-5e59a55628f8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3821443f-72c3-4e57-aa3a-68e30027e1a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14800fa3-7d0b-4104-b2e0-d0190224dc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735e86d5-44a4-442e-b4f0-8725ccc5dba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9346af-dff8-446b-8df8-dae6403e668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b59a0e-c57b-4dca-b74a-c12540af020a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87412fa8-01c9-4ab8-90e8-02fef75b6d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5950c8-dd76-4bda-b5de-06541d98d4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9790e5b8-e27c-42bc-b9c8-c0ca018496f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6f69fe-cbe4-4c06-afc5-c5674b439436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15788c48-90f6-47a7-9d64-2fee86f4249b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46b8ec2-b138-4489-af1a-6ce9badd06ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306053a6-603c-47dd-b263-232fe3f15417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00508073-9150-4878-9e24-37baa8ac0ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a776e08-fcf8-4819-b721-8ad3a8bf6c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba14c5d-cc83-4896-b35b-92acc976be31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0786596-dd21-42c4-bf65-fcbb7de7585f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66b70ca-78d8-4150-aec7-a49d8ed4057e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f594e7ad-625c-4702-a7bd-59bb146fa64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5154a8-6c55-4f39-9d27-bb1c2822ffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ff80ad-66f2-41a4-b618-0fb6c0f5b8d9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb2c24f-1e11-4b53-8434-a0d0b50fa433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17228933-a94c-4fdd-a0f7-55b736f86b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ca4ace-0562-4a22-b70a-6aa35371d326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b9e33c-00c6-47d6-8b45-22687ce65fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c607fd7-3a36-4327-b801-91ca4e06037b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd28626e-f639-4865-8598-26b5af019c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599d3609-832a-424d-9233-37e21c1206d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a0f100-62c3-43da-94b2-6e2a959e5c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65870d3-e5e0-4ba5-842f-495225ac858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5829d13-bf65-4e91-bb0b-4637e537799f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fb5d53-6726-41c5-b784-ec847b960024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4cda95-2739-4b21-889a-7169ed8358d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1402ef70-b743-4470-9956-ccd80bcadeb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30d1dc5-a9d3-4bb8-9d62-be2fa62f4368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33ca070-c610-4193-a5b0-50217cc612c1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6267b8-2ba1-40c4-a890-38a8bd1fc43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24aef79a-7e02-41cb-ad5d-ff8b1ad461d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e3771-e0d3-4f97-ac70-75bdf0af42fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd86c74-88c2-46c4-9d3e-18d53d0d8fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df2788-8f28-44cc-a5ea-807182d5e5b4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6116d5-072f-490a-bb20-62fc0628218f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36abd010-e996-4a0f-821c-5e3fd34ea302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f58a7a5-98f6-4b89-b1f3-49893e5d3522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558d4dc5-4ba9-4ea6-9386-95cfacd46e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31eac53-8fac-42ba-9f67-1997abd63588",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35ff31b-3eb9-4d88-8df2-7749098a63fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b959b37b-76d4-453e-bcf4-63d33828292e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d6186c-2e93-480d-8445-fea60441ec42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59313c8d-b1aa-4244-87cb-a8163bde4109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3ffdc7-dcad-48e2-851b-32cf01cd0320",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4e9bf8-71b2-4994-885e-f5dbd07ba7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae15642c-0ea9-4557-b72e-54e1d20e0219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4696b55c-0eda-46d5-ac51-6c56f665092d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27eaf5b5-310a-47d3-babc-f65bdac6c6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32880d82-43ef-4e2c-86b8-32e32c94a7c7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb23365-9ad7-497a-b1da-6216d1e79e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6396f70d-1a97-444f-a159-5829c135db6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e105fbd3-a6d6-437e-8144-b96ec7c0bcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65a35c7-0a2b-4561-aa3a-c71b07342268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a21380-d06a-4060-8428-dcf1926cef5a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437dade9-aa9f-4609-a640-f4e57d694dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32b2165-bf74-46a0-a3b9-0dc524dd8f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7238a76d-336b-472e-bcff-dd44d46f6bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c91137e-49c2-4577-ba93-428fa068d576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec51afe3-3ed0-4c5f-bd18-955ec4f096dd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87f3efb-60cc-447b-8dcd-665bba096f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f7909e-6dee-4075-af76-486a07f1cde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73275966-4189-42b8-93c6-db766a7aa545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365fd7f8-574c-4f19-b5f3-9a056d230787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f00ad2-5bd0-4334-8813-b0dfe4a48527",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4554487c-b700-4732-8738-e185c1d9cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086b6765-8a6c-48a9-a162-5fe6120b0870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb96390-af9b-4809-a2ec-3416a2aae80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5f7f18-a532-4a32-80d8-fa65c083ab64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849a6521-f358-46dc-b943-93cb1e88b106",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b545dfe9-4230-433d-a878-1c66575627bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d163ae-acac-4552-b03e-fea2195102cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe32114-1dec-478d-8a70-7f6b16f7c17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3e84a3-6fbe-4f30-afd0-b546ec8ea04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422f3c5-48a7-4831-b919-71cd92a50f4a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c30d5e-5100-46b1-9c5b-0af6f77156da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5da726-0fc0-4b45-aa41-6f76fddc886d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf4d4aa-c07e-4e38-85ba-4a5ce2fe2c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45fc040-06e0-4029-b540-11beff9e1b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1132486-a243-4edd-b9ae-4b72ef5a2113",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded08b90-f9a4-42e2-ab0a-bbc1af9e41f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f268348-81bc-4aa6-a0d0-29e5279e4009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243a0f09-9171-40e2-93bf-bb5a49d3e6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439f2230-a02b-4e6a-a229-282d04863618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d749eca-c16c-4cc6-b110-e00be4c1ef78",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a01c226-9464-4801-8eff-cf2446b63225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca20f4a-5bd5-40c3-80ee-b5142268cb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5777a3-9b85-493d-aa13-7b6d7892e226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6323716-02e9-425d-a5e3-9727eb5054df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeeb27d3-9a1e-44b9-9631-8e9c816930f1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c279a34a-c500-4b40-945f-50f1c57b758f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1237222-70dc-4880-9a12-6c38c59155e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecebf5f-d469-4e2b-8755-93bad401b3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb8bac9-7b1a-44e7-85cb-decdfa3a1118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a951240-b2de-4d36-85cd-dd0fa694c80d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0c5791-4661-45ed-a7dd-7c83c5240276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c06b6b4-2568-4804-8569-08b81ee376f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9ac658-508f-4ca9-8f95-6113170e4cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b7cfb2-3ea1-42ba-929b-ceb5f788df76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549bd243-fc8a-4e31-92bc-60b83737beae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb530c-0c5d-4d3b-9b29-f57354fb8a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e653a9-5d32-4d83-9fb1-8a6156a36fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53c5720-25cf-40f0-89bf-827af35b85cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213b1f5c-7ce1-49c6-9c81-c2c8bf0b5b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a12371-4065-47d2-a521-568435068eff",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0505163-62d1-4208-87fb-21c16ffa0134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae43d68f-6b52-4f6c-be4a-79ebc60904f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556b135c-af4e-435d-9c66-6605b50d8511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a6edf7-e67d-4693-ac30-a9a8b07752bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b50c9-cc64-4862-951a-107416547af4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15eb05e3-75ab-4686-aedc-c6f567f774dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51d13a2-726c-4cd4-a880-20986cff3b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1441f4df-12e2-4fcd-877c-7e17e8929fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7323ba2b-9189-4f2b-8ccb-f6275e765259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1bf792-258c-4dfd-96b3-3c4150053625",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d12a73-667f-451e-8a8a-ecb07712b95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a66b9085-f66a-411e-a02a-7153244a91af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf2a0e5-83d2-47c9-b5a5-2ea60f5a2f31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cbbf50-6eb0-4a7f-94fe-932be9d30880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355c18c0-9e64-4c44-9118-2587d4d57869",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfca6a6-4373-4fb8-98e3-291288598882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06464774-c647-4d02-b3be-7b2767eac3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c58f24-56aa-4150-bd07-bcfc236cbc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dc105a-bc69-4cef-9fc5-d9ff30b3dbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66df493-ea08-4b38-90c3-aabe7aa01973",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba65813e-9d05-4963-8d1f-d86f056efc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32af8f7-d213-4ae5-8331-489ad9b2e79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e958ac9-8b03-441e-84e8-4da2208b7774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a866034-2187-4cfd-b817-fb2568bb903c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc71a6e-e323-4c6b-b872-62cf5a84b2a4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7c712c-02b3-4927-befa-9fdc642ad507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28246c3-e160-47a4-ae6a-cee8b81e84f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e4d381-7474-4c23-99b7-a69e2ee89f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f1ec67-28f4-4163-baf3-32fe6390d85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9437c259-ce25-4c7c-9975-a828007253e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f148698-8f68-4aa8-8a2d-585c6401e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9e7b79-9773-48e9-8e61-51f3c227b197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9129fc6-b290-4193-a987-97286fb7e8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fb2613-08a3-4229-9129-d4c5f492eb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e4b9fc-5f70-4e85-880c-6f3d2c830ae2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5766f045-8767-4cd4-9a90-84975074230a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b9decf-666c-48f0-a793-12e340693927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c51696-3391-40a2-bd80-ab4d4a6f2cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310f6b40-ce38-4e40-92c1-681fbf5c86bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e71e2a2-d8ba-48ba-8bca-b9a247d2e0f6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c63801-676c-4aba-8270-5705d64336a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aab0d2f-56d2-4c0b-aa5e-ecf54679708e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359b320-d198-47f5-b51f-92607ca0b5b9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8507ecac-b6df-482f-b386-c62384a8ec6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71218d50-226f-41cc-bff2-51ec2ddcca93",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c2dd1b-586f-4d31-bc9d-defba0bf495f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b80725-4b1f-40d7-a1fd-96f926c56785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3598fa68-262e-4fa7-b9e6-c44776d2a461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d97ea7-db9a-490e-8a70-5396815f1d67"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e90c15ec-2105-41bd-8e21-2691339d17e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e8e6423-7a01-4524-ac22-2d52202da167"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b72ad8ad-f82d-414e-a608-1a384aa86915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc0d10a0-5ef4-44db-be58-24c3831aeba2"
                    }
                  }
                ]
              },
              {
                "id": "fbc0511f-a9b8-40fb-bc6e-dae40319b9cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8802abaa-115b-4506-bb23-a424c30fa845",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790d9e58-a4fd-4d26-98f1-24d9bdca89fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5655d651-5937-45ca-a0ab-1c5bd4f7ce7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fda62f-bf18-4cd2-a04a-46cb9c1bf351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f0541e0-6d12-487d-9052-044ae55ce51b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43f1385d-0a60-4977-b90f-e0908f7a77b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6b72cf7-1ffc-4dea-8026-ec901a350be6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b7d4327-c30b-48c6-893e-19f576810976",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "150c909a-9d5d-4540-a66a-b2faa5bdae89"
                    }
                  }
                ]
              },
              {
                "id": "1cbd6422-df5f-477e-81a7-cd4f9b784091",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79896fc2-294b-4902-a91c-e0a1ae455b81",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e5014-5957-4778-93b3-56f5de067459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f6cfb90c-ac7c-4991-9102-21eb6ab3991b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617c65f7-88d6-44c8-b7cf-c0f900ab4ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb1e5b5-1c52-42b0-96d3-3ab5dda6283b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1251a46b-e345-4d55-a59c-263142eef605",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7b00edd-c2ce-4641-a962-2390d19c6993",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95896b25-5ecb-4eb2-9212-02c73ceee377",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cc381eb3-18fc-41a0-981e-61c22d6629de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8e82c1b-62bc-4622-b629-929c8b99ee37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ecfb3b7-d1f1-4205-b079-4c8421bc8dcb"
                    }
                  }
                ]
              },
              {
                "id": "1f06bbc6-6fb6-4b96-b444-76781a5b6af5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f5ab78a-8caf-4460-989c-84728cb29665",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94fe062c-8368-42b4-a2f9-20dd1ac4f41b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25397f77-b680-4927-89ae-adf22313d54f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "055cade6-cbd1-4717-adae-7b906602030c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46a6fe8d-df86-4a07-ac9d-2f11a4ac9683",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9e33ed00-cf00-4caa-8c35-5204523fe4ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36ece723-c125-4742-bf94-b38402bb82d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ac5dc46-eda4-4ca6-9481-74cba044fc9a"
            }
          }
        ]
      },
      {
        "id": "04c9ab6d-26e2-4495-b0d5-1ab718395d16",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "91f81d19-7273-4f22-8ce6-83886ba33ae2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e001e05-1302-4f8f-a002-52495daf8c00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2baa4e84-99e5-4a73-82a7-a45da4876e93",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f089a28e-185d-454d-8847-cdc55ae8366d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f049bd35-c487-4888-97b7-051eb83a8731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3644c7a-8d5a-4ed2-8d0f-81d315ffe17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1080b32-263e-4de4-8906-9c75061115f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4ff7ba5-c060-401e-a72a-5c98a5f73556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b66afc1-22af-46ae-9f0c-ea136f59d611"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d1daaff-9ec6-4ac7-9b66-7e51942300d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d6d9919-eb4e-4e06-a13d-f1aa6af54352"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f9c895f-5138-4fdd-86af-d68b9f42b0dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cd359dd2-9224-421a-96fa-dba3689fb3c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0aec745-9008-48c8-9af6-fdc215b3753c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f0d82ae-5233-4155-a40e-ff390c855265"
            }
          }
        ]
      },
      {
        "id": "0f92cdaf-317a-4890-948e-abe9befb9e40",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2906b12f-0483-48f9-a6b7-7e1f9298eccc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87494edd-5e40-4454-8588-93f79b79fe33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98106819-c478-481f-9abb-7798a02ae11c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4d4838-3636-4b2b-848a-16824906e75c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e1cd775-3f30-4b54-802e-a6585d9ef964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947e7f23-e36c-4bb2-81ae-857e178a42d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a32cbe4-b905-4def-8a22-035c9caff317"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b566053-130e-4e4d-9b69-e72daa3c0719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e8f5be3-60b3-4dff-9153-292f1821ddd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5057132-29a6-41aa-9fb4-b3c1adb85b3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e326178-ce16-4b98-83e6-0c2124b8a3d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c673eb30-8e46-4cff-bdd1-ccf7840874fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "000d01b3-54d4-4af4-9ba1-dfe60ae7442d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3ea8236-294c-4a34-b4ca-1f12ce6cea40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f3395ee-6921-4dae-a109-2eebbe006d15"
            }
          }
        ]
      },
      {
        "id": "97952148-b66b-4659-a346-a2d88bea6393",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "45572163-6a53-4bf6-9073-30ae378bd58c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6bc8a7a-371d-4ab4-9127-f8b88120c724",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e76e389-571c-43de-aa6f-571a8bc2f7ab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5a255f-ff6f-471d-b253-066d00cdeecb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b7bccb9-dcc6-42ff-b43b-a8a98449600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c127df59-8023-4c8e-94c6-a167c09e4b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3373223-5874-40fd-9043-8b4f39c568e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf90fa3f-b3e8-4ab7-adac-5e5d2f50ed1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f53f816-1ff9-456d-8e49-a1f6f3efdf13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e446b1b9-f47d-4f06-b22f-4d814f55b1df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae81830e-fe6c-4ffd-8ea6-5989cd30ca41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae53624e-3906-46cc-b746-3aa8e87efeae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42e93723-4a7f-49ec-a63d-a347f0bc1955"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98cb8a85-d843-49b7-af61-7d236a25699b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "383bc838-6c41-4174-96db-1266a8d40543"
            }
          }
        ]
      },
      {
        "id": "37a75a1a-ac12-47a9-9374-ae09364ad90a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27b95c96-edd2-4f9c-8b13-2434847fbdde",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9504b99c-3bac-498e-8421-a67fae0a6608",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ae36758-f5b5-49ba-b0db-f4df44436f4f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a7a053e-2b1c-4881-add4-cddee95d7a5e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "906ef006-613b-4862-a281-55245751223e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.690476190476184,
      "responseMin": 2,
      "responseMax": 725,
      "responseSd": 49.8413298705533,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726188185361,
      "completed": 1726188195611
    },
    "executions": [
      {
        "id": "f2e7cd38-1d44-46db-bbfc-6ca89abfd0d1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c15e3cd-e554-47cc-8c55-c9a539aa87d1",
          "httpRequestId": "c8b172c0-9fae-442a-9db7-41c0225bcd73"
        },
        "item": {
          "id": "f2e7cd38-1d44-46db-bbfc-6ca89abfd0d1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09cafda4-98bd-459b-bc40-d00c14c43356",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "fb77fc1b-9826-4437-b1e5-b15c27c7ff2a",
        "cursor": {
          "ref": "4ee66998-e39a-402b-8275-2d54966a794d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "277dadc3-845e-4083-b719-47f343b18c20"
        },
        "item": {
          "id": "fb77fc1b-9826-4437-b1e5-b15c27c7ff2a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "318d2906-c168-456c-a02d-8b338b566678",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "5215ba1a-5c78-4891-b1c7-888e52043f7e",
        "cursor": {
          "ref": "0290c557-0a93-4515-bf68-58fed8afcdc3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a921e92-39c0-4025-ab56-9d3a765f16f6"
        },
        "item": {
          "id": "5215ba1a-5c78-4891-b1c7-888e52043f7e",
          "name": "did_json"
        },
        "response": {
          "id": "808cd26b-ca51-4ba3-886f-713a576fa5f5",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c97efb-65a6-4e77-96d8-9e3855637d10",
        "cursor": {
          "ref": "5b07ff33-1c07-4798-83ad-eec4bc4b54b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c0cefe7b-69c5-4646-95bc-def08eb711eb"
        },
        "item": {
          "id": "38c97efb-65a6-4e77-96d8-9e3855637d10",
          "name": "did:invalid"
        },
        "response": {
          "id": "adc5df32-6e28-40e5-ac86-ea65830b5b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c97efb-65a6-4e77-96d8-9e3855637d10",
        "cursor": {
          "ref": "5b07ff33-1c07-4798-83ad-eec4bc4b54b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c0cefe7b-69c5-4646-95bc-def08eb711eb"
        },
        "item": {
          "id": "38c97efb-65a6-4e77-96d8-9e3855637d10",
          "name": "did:invalid"
        },
        "response": {
          "id": "adc5df32-6e28-40e5-ac86-ea65830b5b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba629d-0434-4bb2-9427-de4d82dcca32",
        "cursor": {
          "ref": "3bd4722a-7e83-4d50-8d05-77cc0431508a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e1c66f6-a2fa-40f1-83d9-ddc9312628aa"
        },
        "item": {
          "id": "2eba629d-0434-4bb2-9427-de4d82dcca32",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6d8a59df-e9cf-4320-a95e-73f9818c6a46",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e8ca6b-d0cd-4acf-8dd7-b7c75014887a",
        "cursor": {
          "ref": "38982dd0-853b-40b8-a83f-e8c4629a7ccb",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "db846c1d-3b50-43b6-94a3-3ddfbde80a06"
        },
        "item": {
          "id": "c2e8ca6b-d0cd-4acf-8dd7-b7c75014887a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3feb7004-c77e-4eee-8ae1-1dd5d6ba2c4a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03a5ddf-bb03-4e5d-b02d-46f48b967478",
        "cursor": {
          "ref": "6f99e75a-d451-4b32-a27d-e0e8b1cbd075",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10690299-3efd-4562-9714-6f480b4da284"
        },
        "item": {
          "id": "d03a5ddf-bb03-4e5d-b02d-46f48b967478",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bf745a39-694c-40e6-86f1-960175699778",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529596e-6d47-4083-b72a-fdccc6ef7383",
        "cursor": {
          "ref": "502787ba-8aba-42df-b002-51cf13fc09a0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dc3b8344-bf97-493e-a3d6-886d63bc826a"
        },
        "item": {
          "id": "2529596e-6d47-4083-b72a-fdccc6ef7383",
          "name": "identifiers"
        },
        "response": {
          "id": "0cf6ddac-8d91-4e9e-99c3-e4fabb0c0343",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebc823a-d053-46da-b91a-1aea6265135c",
        "cursor": {
          "ref": "df9bd52e-98ee-4a1e-b5c4-517e05d577cc",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ab814d68-fc1f-41b5-be36-bc5ffb9c091c"
        },
        "item": {
          "id": "aebc823a-d053-46da-b91a-1aea6265135c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d8f14224-4259-4c0a-b5fe-ff4ea899be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c77aaf-a2bb-4c20-b6a5-343ff6cfd836",
        "cursor": {
          "ref": "76be2ae0-aa62-41a2-9353-fc0f6f7bbcb8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d18ad906-7859-4957-8a3a-cb9d93ac700b"
        },
        "item": {
          "id": "39c77aaf-a2bb-4c20-b6a5-343ff6cfd836",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2af71ca3-6134-446a-a27e-762a7af08d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88cc7fd-3a12-4a21-81e0-44624f1e370e",
        "cursor": {
          "ref": "c02bac78-dc84-4c44-bf43-9323976b52db",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6e9257b2-05cf-40dc-aa63-b754f80a3e07"
        },
        "item": {
          "id": "d88cc7fd-3a12-4a21-81e0-44624f1e370e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b662ebf0-4f9c-4ab2-830c-7765a0b71329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046166df-af00-4534-a6e2-615a695d87b1",
        "cursor": {
          "ref": "72dc6e74-5194-4e6f-8bb7-5d5165250ef7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4765cbda-7a9a-48fc-a420-f636f7766128"
        },
        "item": {
          "id": "046166df-af00-4534-a6e2-615a695d87b1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49e3ced3-5bcf-4a20-a3ce-af54a1caa702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd097781-860d-4c73-916b-9caafcf7e7b8",
        "cursor": {
          "ref": "9524fa34-f12e-4ccb-b67d-fa7a2f3a0043",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b6307900-80b4-44cd-a9b5-ffd0ca320da4"
        },
        "item": {
          "id": "fd097781-860d-4c73-916b-9caafcf7e7b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "44caeb51-bb63-4661-9495-416ede345c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735439b6-9b82-4747-ad5c-88f70cd5b88d",
        "cursor": {
          "ref": "f5a06d88-74c3-4bd3-9a90-ca8667d42b70",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7895e0be-4844-43b4-8735-1a112461dfbd"
        },
        "item": {
          "id": "735439b6-9b82-4747-ad5c-88f70cd5b88d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cf3143a2-b931-4c39-8521-e82ca5ef1c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e6ae52-b3bc-44e1-abce-c218bfe57861",
        "cursor": {
          "ref": "87541bfd-e0e0-407c-8b5b-71b0e6f4e88e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bd426f20-61a2-41a7-a126-1f665b3a7097"
        },
        "item": {
          "id": "a9e6ae52-b3bc-44e1-abce-c218bfe57861",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d15c6f20-b905-43ee-8186-534c96b492ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4fd0ef-b1a7-4a8a-988c-049bf966a708",
        "cursor": {
          "ref": "c4765852-8a65-48b6-bb4f-af6803d051fa",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "19f78ab8-de35-49dd-b2d1-9938d0cf3d66"
        },
        "item": {
          "id": "ed4fd0ef-b1a7-4a8a-988c-049bf966a708",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6624c13a-2a2d-40ef-9091-9c42f1e8e7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4214728-1a59-46f9-929f-97c6bbdcf796",
        "cursor": {
          "ref": "5b99489f-1806-474e-b50e-1e3e5a286c82",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cc37a0e5-8b35-4811-933a-46c8c14d3f46"
        },
        "item": {
          "id": "f4214728-1a59-46f9-929f-97c6bbdcf796",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7d117479-675a-4ad0-bee9-b72a52d4ad1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8beecdb-941d-426c-820c-52bdf941d0f0",
        "cursor": {
          "ref": "f4b14ca7-0c55-4cdd-9a63-e982c0b9374a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d45c1bdd-9f68-4b8a-a668-e218af2e6752"
        },
        "item": {
          "id": "a8beecdb-941d-426c-820c-52bdf941d0f0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f7123739-99ae-45af-9b58-6f0e94e96bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535c0b19-f16a-4e9f-b313-4438c7a5f1b7",
        "cursor": {
          "ref": "2ea39c6e-dbf2-4aaf-a74e-701099b9da1c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "96d3e8f6-81b7-49a5-9998-d2bc57013f4d"
        },
        "item": {
          "id": "535c0b19-f16a-4e9f-b313-4438c7a5f1b7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cd3283e3-0f67-45e0-9221-7a672420dab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c9fb54-63b7-4738-bd45-f03ebe0b5304",
        "cursor": {
          "ref": "553152d6-c60b-4e43-92a2-52270a8d5b63",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e3f9b6f-9ccd-459b-bdf9-adee20762f7d"
        },
        "item": {
          "id": "d5c9fb54-63b7-4738-bd45-f03ebe0b5304",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e39b1042-c098-4b22-bc0a-33075d318d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15978d2-d40c-4b4c-b4b5-be79274f4523",
        "cursor": {
          "ref": "36225230-e229-46e0-98c5-23112a2a6577",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d03a2d56-a21a-46ff-97fd-03944c8a97a0"
        },
        "item": {
          "id": "d15978d2-d40c-4b4c-b4b5-be79274f4523",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8b6e07d8-acac-4327-a7e6-8cff1b552e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2295e5-c94b-483b-858a-3bbc2718ae6b",
        "cursor": {
          "ref": "06200ebe-9f3c-4adb-a76c-92f67ffc3f2d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3bfa2c0a-c6db-44c2-a49b-97400379790b"
        },
        "item": {
          "id": "be2295e5-c94b-483b-858a-3bbc2718ae6b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7df93277-80b4-4101-9796-f95889897bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035c229f-30ff-4bb2-b8e6-ceadd169d324",
        "cursor": {
          "ref": "ba466132-8339-4942-9f93-5e2502ed4dec",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7ab20399-106e-434c-850e-e6ac857ef1fa"
        },
        "item": {
          "id": "035c229f-30ff-4bb2-b8e6-ceadd169d324",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a360ef73-f821-4591-bfbe-9cd3f9ede993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e4ee83-339c-4d1c-9136-c4c3063bb38d",
        "cursor": {
          "ref": "551ad54f-92fa-4592-a49d-3324d8f42339",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "09c68cc4-136a-457d-b81b-13709b985cf5"
        },
        "item": {
          "id": "f2e4ee83-339c-4d1c-9136-c4c3063bb38d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e8ca6d98-ba9c-456d-90f7-58e0c99a10ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b056aa7-951d-4e3b-8bf9-2573a8c84ad3",
        "cursor": {
          "ref": "50ba6878-9474-4d64-886f-92e01369a340",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "84710663-003f-41ec-beef-c9f5f3195d2d"
        },
        "item": {
          "id": "5b056aa7-951d-4e3b-8bf9-2573a8c84ad3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df2f0a8b-6e61-4288-8aa3-d3e86e736d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f94015d-f695-4606-ae35-07df49531b26",
        "cursor": {
          "ref": "620e3715-4dcc-4f4f-ab44-493cef89831b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "70fb0be4-268e-4060-8bdb-8b67a7302dd6"
        },
        "item": {
          "id": "8f94015d-f695-4606-ae35-07df49531b26",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "685283f7-4f39-497d-b459-9d3db5991858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292cd62d-ab75-4c35-800b-f601af1dc7cb",
        "cursor": {
          "ref": "54b43115-d7fc-440c-869d-ddaee1d06795",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f6add940-0dff-4c5b-91c0-d03887e32cf1"
        },
        "item": {
          "id": "292cd62d-ab75-4c35-800b-f601af1dc7cb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ed040fac-1c9c-4c32-aedc-2d09ec5f4f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606b84e8-5c63-461b-bdad-7fa6aafd66ab",
        "cursor": {
          "ref": "a316b3b5-ee9b-4daf-beeb-0a7830913178",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cc5fcdbd-9323-4667-adde-e01f960e0d28"
        },
        "item": {
          "id": "606b84e8-5c63-461b-bdad-7fa6aafd66ab",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "945e5e47-a11c-4c03-a2dd-69efd2cac6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b986f4-4732-4be9-8cc7-63f1c6cb98f5",
        "cursor": {
          "ref": "262711f9-eff7-490f-9864-7697f193d927",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "01a30c9a-a3b5-4de6-8c4d-a100ebf9dcdf"
        },
        "item": {
          "id": "c6b986f4-4732-4be9-8cc7-63f1c6cb98f5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c88e347-60ff-420f-b8a9-ad958f6c5e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc16053-aff3-41f3-ac9d-28749f73059a",
        "cursor": {
          "ref": "f9f87bad-99a0-438f-8700-54bc5bb8bb7f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31f0797c-30b0-46f2-a5e1-0377ca18f411"
        },
        "item": {
          "id": "ebc16053-aff3-41f3-ac9d-28749f73059a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fe057ad6-ede7-4ff2-b60c-07bb11200ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f0a6b7-6d4d-4185-91c0-9dc05b8b85a0",
        "cursor": {
          "ref": "f8c15640-ce84-46bd-a7da-e1de75e0e1ce",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "002d83bb-3321-4c7f-a157-0854b39a1995"
        },
        "item": {
          "id": "62f0a6b7-6d4d-4185-91c0-9dc05b8b85a0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b0d6a438-f8f5-4f12-87ae-314c94f2b1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdd24c1-3959-4a20-9ba2-2d7142f9b034",
        "cursor": {
          "ref": "7919abbf-f716-4e4f-b70a-47c26c1aabb9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "be685a65-4dcf-460b-8a58-f8d9ed6bc968"
        },
        "item": {
          "id": "0fdd24c1-3959-4a20-9ba2-2d7142f9b034",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7f497d32-1917-462b-a9e2-4f34792fcf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151b630e-fefe-4253-9767-78ffef7e41ce",
        "cursor": {
          "ref": "93e0ec14-4705-4fbb-8a2f-0468c9141f3d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2eb5b145-15dc-40b5-b783-6398d468010d"
        },
        "item": {
          "id": "151b630e-fefe-4253-9767-78ffef7e41ce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "20a74312-7efe-48be-8149-bf01ea27fab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3323f374-2393-4c47-ac31-ffdfbb9f14d7",
        "cursor": {
          "ref": "492cd610-ad4e-46fc-b6fd-c71c41293a4e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ab2283f2-c143-4865-b11f-371804c3103a"
        },
        "item": {
          "id": "3323f374-2393-4c47-ac31-ffdfbb9f14d7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "70d2a16e-2587-443c-b180-9b7fc963839c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef7086-ee24-4bc5-abef-050796052414",
        "cursor": {
          "ref": "5daf784a-3b9b-4210-870e-980d313ba5d7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "70dc6746-8f52-4b9a-8c12-0a40ce2c9f9a"
        },
        "item": {
          "id": "2bef7086-ee24-4bc5-abef-050796052414",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5f17c8b6-2070-453b-abe7-f816e26469b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87ac822-160b-4cbb-8507-f63bacf35f43",
        "cursor": {
          "ref": "eb4e211b-35de-4494-a941-73855c20c8a2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1867b25f-824a-48b5-9017-64299c2a27bc"
        },
        "item": {
          "id": "c87ac822-160b-4cbb-8507-f63bacf35f43",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "740e860f-1543-4b48-8f8c-0a18f8db729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e82930d-6858-4b66-8ac7-f582cdc58297",
        "cursor": {
          "ref": "c65c9f1f-77e3-410d-b48d-1688579be2b4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "85561c5f-2be1-4f05-b3ea-8f22540f0538"
        },
        "item": {
          "id": "5e82930d-6858-4b66-8ac7-f582cdc58297",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f3a53ae2-57e0-499d-b5d0-739aa3bde677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dd1212-c888-4e71-a357-6ec960ef5550",
        "cursor": {
          "ref": "b3571e86-918b-48ba-b2cc-baf363a3fe54",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9505eb5d-33fb-4d25-8127-9c1cb428ccc9"
        },
        "item": {
          "id": "85dd1212-c888-4e71-a357-6ec960ef5550",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b9b0a356-0cb4-43df-af67-1285fdd18737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915f8bc6-618b-4275-a8d5-06075f584fcb",
        "cursor": {
          "ref": "954b8212-466b-41ae-8b80-09444d3ffae4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "af9d4671-fdb7-411d-81fb-bda47757da51"
        },
        "item": {
          "id": "915f8bc6-618b-4275-a8d5-06075f584fcb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fffc0b71-6f30-401a-bdcd-a7c581d38f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891fd19-1579-4f0e-8357-ebb925629d56",
        "cursor": {
          "ref": "451504c0-6794-4d50-87f4-fc97d7539b48",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c19db14-32bd-43dc-9708-0fe88915f9ca"
        },
        "item": {
          "id": "3891fd19-1579-4f0e-8357-ebb925629d56",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ae37dece-2ec0-4f97-bb6e-50f0cdb6a313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523fb2c3-6a39-4db5-b3b1-ebf3fc4f4c2a",
        "cursor": {
          "ref": "d6c428b4-7c1f-4bcd-a6d3-3f3c1f34d3ea",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2f8c277d-8a45-4e67-ba82-b9088f9ab332"
        },
        "item": {
          "id": "523fb2c3-6a39-4db5-b3b1-ebf3fc4f4c2a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9631ab6-9c90-432f-8783-3286711923dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f0017b-b844-4168-9907-6188aa116f28",
        "cursor": {
          "ref": "0273b30d-b043-4e45-9349-1e8cca7914e0",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ca3d00e7-5d62-43a6-a3f7-ebb58c3c9e90"
        },
        "item": {
          "id": "b8f0017b-b844-4168-9907-6188aa116f28",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "578b7896-8408-444d-aa4f-a548c5a30889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116409ff-2665-449b-baa3-a43ed657aceb",
        "cursor": {
          "ref": "9b7ac8c6-1518-4ce6-bd1c-291988162029",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5923ae91-1380-4e78-9c44-ebe8b4b7815e"
        },
        "item": {
          "id": "116409ff-2665-449b-baa3-a43ed657aceb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ce0789f4-d7e2-4bae-afd8-2f3b79f88b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd594ae8-a26f-408e-8e4a-7082fcd5eacb",
        "cursor": {
          "ref": "bf08f36e-c2be-42e6-bf47-2eb7a436d938",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fd3dcabe-e78c-4981-ba2e-9ceb8cde59c1"
        },
        "item": {
          "id": "cd594ae8-a26f-408e-8e4a-7082fcd5eacb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "822b3d3f-b179-4b60-8af5-327018f92eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a158c0-188d-4254-92bf-646a7f40752e",
        "cursor": {
          "ref": "7e9dbf37-81f3-47d1-9a32-b0ad4c7c4268",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d06898f8-75b6-4d0f-b361-82227ce6881d"
        },
        "item": {
          "id": "e6a158c0-188d-4254-92bf-646a7f40752e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4268f6d0-2666-4872-aeb4-a5be578b945b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77499ea8-548e-487d-9ee3-b137befc2515",
        "cursor": {
          "ref": "e16eca36-ef6a-4041-bd9f-2c98c125e03c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9785812f-6183-4731-93da-69ebb85a3f65"
        },
        "item": {
          "id": "77499ea8-548e-487d-9ee3-b137befc2515",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e33a6ae8-32f3-4258-89af-afeaa4aa8128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476538e6-5f05-42ea-adaf-b50c4abc1ae4",
        "cursor": {
          "ref": "e9cd3719-195a-44b1-b64f-76e3f977b0d0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e3926ab5-72b0-4dc7-a19b-d0c4c778478c"
        },
        "item": {
          "id": "476538e6-5f05-42ea-adaf-b50c4abc1ae4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2521dc10-6eec-4b93-9c6c-af3fb896d128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d300fc75-b96b-4d44-a311-16b6fd200cb8",
        "cursor": {
          "ref": "d36b14fd-e0bd-492d-9ed5-0ff0f420a10a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5b31d071-6eb7-4b64-bd67-a9ef34e80a58"
        },
        "item": {
          "id": "d300fc75-b96b-4d44-a311-16b6fd200cb8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a2869752-f24f-4663-b3a8-4515efad76ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1071fb-3dfb-40b2-8dda-c5da986c8bf0",
        "cursor": {
          "ref": "c4dad489-5fa4-4708-a3df-ebc8a4cf7896",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "22bc98b1-5842-43bd-81b1-2335aff50527"
        },
        "item": {
          "id": "fe1071fb-3dfb-40b2-8dda-c5da986c8bf0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4d84e133-f35f-456d-96d4-737653a221d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec8028-7fc9-4469-b725-207987e3071e",
        "cursor": {
          "ref": "1d50d448-5cae-471a-854a-92528b457b17",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8a896571-28cf-4402-9328-53c166f3e0e8"
        },
        "item": {
          "id": "02ec8028-7fc9-4469-b725-207987e3071e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f8a80347-c920-468c-9f98-f0b73735d864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37c82f4-4c09-432f-863f-d08cd64db847",
        "cursor": {
          "ref": "dbd74d70-beb6-44b0-932b-bb3c79154457",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b32c5be5-656d-4f76-8de4-1a9a5756bbf9"
        },
        "item": {
          "id": "e37c82f4-4c09-432f-863f-d08cd64db847",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cb4371da-0c8d-4c58-ad57-e0cafc1c9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16906bf5-8daf-4796-8ab7-58124c4fdabd",
        "cursor": {
          "ref": "8f145f64-568e-4dcf-9af9-17a3e3137daa",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "98159fb3-bfbe-427f-b66f-d61857191493"
        },
        "item": {
          "id": "16906bf5-8daf-4796-8ab7-58124c4fdabd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bedb5f12-8fe1-47af-8240-0f4357824e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e19dac3-035a-4303-a88b-4fc619c9c179",
        "cursor": {
          "ref": "3fee0bec-dd4c-4993-9137-a86cfb2a75ff",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "98091fef-9724-450f-93a6-9f55439eeeb3"
        },
        "item": {
          "id": "6e19dac3-035a-4303-a88b-4fc619c9c179",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae5403a0-500c-4b84-9b6c-b1186c9e56b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f10cb19-9e1a-4c48-809b-7c244812424f",
        "cursor": {
          "ref": "b072a640-caca-4774-9ecb-98425de62a24",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d69c775c-f8b3-4228-9d00-d4ac879b0980"
        },
        "item": {
          "id": "3f10cb19-9e1a-4c48-809b-7c244812424f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8f3281f8-27a8-48f9-bf64-909f115c23b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc0b752-7d44-4c25-9a2d-24b82234d830",
        "cursor": {
          "ref": "d627a6ee-41a6-4244-ba01-2ccc25f2adfb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b2083091-5a83-4974-816b-9ea339f6ce12"
        },
        "item": {
          "id": "5cc0b752-7d44-4c25-9a2d-24b82234d830",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "274651d2-3439-49de-951b-9d64ce7e2dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24c40c2-ba1d-4135-aa54-4f76be839341",
        "cursor": {
          "ref": "284a87f0-cb8b-43d0-8d26-2943889e1b5b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "144fb496-3b13-4e24-a6cd-df14c7725af8"
        },
        "item": {
          "id": "f24c40c2-ba1d-4135-aa54-4f76be839341",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "24245c95-d815-4515-bde8-aadb44ccbf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93510213-ea60-49bd-9047-6456ecfe555e",
        "cursor": {
          "ref": "4f561df0-d822-4f6d-9e42-ea95f9189464",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9d56fbf9-8580-44d1-adcb-5866aa79ddfb"
        },
        "item": {
          "id": "93510213-ea60-49bd-9047-6456ecfe555e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "beb5c0f2-ddc1-4afa-856b-34372f5b28e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0b5f11-dd8f-41b5-8d1c-bf2c8c0d0c29",
        "cursor": {
          "ref": "308f43be-f241-4129-a869-aa3ec2cde714",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "32a136bd-040b-40fe-987d-a05d195b8b4f"
        },
        "item": {
          "id": "bc0b5f11-dd8f-41b5-8d1c-bf2c8c0d0c29",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd16e4d5-c480-45ad-b8c1-211c60ed9b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6671457c-4410-41e8-b1ea-9872b1dad6b4",
        "cursor": {
          "ref": "7caf6c08-085d-4129-9c42-baed42def850",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "62bc23ae-5d8f-43a7-9b46-768a776f5c96"
        },
        "item": {
          "id": "6671457c-4410-41e8-b1ea-9872b1dad6b4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ed82bfee-d138-4e93-946c-73b1fc86f4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b33e9-d81b-4a94-a189-eed6dc9a74bc",
        "cursor": {
          "ref": "4492d714-2e45-4ea1-be0b-fa9a43cfe42f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "75e33353-1705-4627-82b3-7aad6d388a3a"
        },
        "item": {
          "id": "250b33e9-d81b-4a94-a189-eed6dc9a74bc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "21841bf6-33b8-4168-824c-1fd464dc457f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12248e1-3ae5-4958-ae4b-f131b62b9be6",
        "cursor": {
          "ref": "d0610770-52f0-4c88-9620-ccdc8c5181bc",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "455dc684-7b45-4bc8-a65a-3dbb56d6a2b7"
        },
        "item": {
          "id": "e12248e1-3ae5-4958-ae4b-f131b62b9be6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "76f522f0-16b6-4c83-806a-335bf4a27a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceddbb9-2bcd-4156-8f41-c3eb40ecb87c",
        "cursor": {
          "ref": "63923e97-e357-4704-914a-311ace16be3b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2da3ea2a-e000-4f69-9d92-b1879ba2774b"
        },
        "item": {
          "id": "0ceddbb9-2bcd-4156-8f41-c3eb40ecb87c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "86328f47-089a-4300-a3a6-f5ada9f3846c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3431a8d-38da-4497-b264-9b8de68dafcf",
        "cursor": {
          "ref": "fc9a59ac-e828-4591-b4f1-e9018e7f0768",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7b3692e1-b8f3-4166-9ae6-f436b11aba41"
        },
        "item": {
          "id": "d3431a8d-38da-4497-b264-9b8de68dafcf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6ab9e9d9-89c7-4463-9c30-5ab58079d19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44462cc1-3750-4d2b-8811-5c842f22c91c",
        "cursor": {
          "ref": "aec64753-e45b-4767-93bb-59671fb1e446",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "de413dc9-6679-414d-89e0-5663895fa5d1"
        },
        "item": {
          "id": "44462cc1-3750-4d2b-8811-5c842f22c91c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d33d893c-e81e-4414-bfef-52927bad7c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e430f3-d33d-4aa0-ba65-3afad60327df",
        "cursor": {
          "ref": "7beeede8-1cc5-4727-a197-b02b4cd02d35",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e44e1239-7e6d-46d3-b796-8e6d5dcf6b24"
        },
        "item": {
          "id": "c3e430f3-d33d-4aa0-ba65-3afad60327df",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aa697c65-2605-4314-a6fc-521680ee8c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c8493e-50b0-479e-82f2-2e058845d167",
        "cursor": {
          "ref": "4482602d-3093-4828-8c78-52674d5e652a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d63bb02f-beaa-4abc-b5c8-18f27ceae5a8"
        },
        "item": {
          "id": "61c8493e-50b0-479e-82f2-2e058845d167",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a13b65e0-1d2f-4287-99d6-a6b5c6917c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877bbfce-9b25-4e50-ac28-e53a5e671664",
        "cursor": {
          "ref": "33ca9023-30ef-4a92-a7db-c816fe088840",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "daddec33-2ab0-4dd6-b375-f7b4a8d9d606"
        },
        "item": {
          "id": "877bbfce-9b25-4e50-ac28-e53a5e671664",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c595550e-7483-47e0-88af-efac6ede5d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47108a1d-b1d3-46a1-87c2-9298f1e75cbe",
        "cursor": {
          "ref": "da47b862-9e42-47b9-8cc5-448233e1a16d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1449c1e7-fc8a-42ef-a7c5-a02ced7f717f"
        },
        "item": {
          "id": "47108a1d-b1d3-46a1-87c2-9298f1e75cbe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b0359c2e-de5c-41cf-942d-1a3f92709157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b407625b-45ce-4926-966f-a74c21b927da",
        "cursor": {
          "ref": "e6cde3da-c80e-4500-a48d-568586004975",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "78a3314c-8fc8-4f56-a65d-f930de6e682f"
        },
        "item": {
          "id": "b407625b-45ce-4926-966f-a74c21b927da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f1284e34-4cdd-48d9-8405-96d978ffcfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d3fbad-b910-47a6-886f-1f15001d6a11",
        "cursor": {
          "ref": "e79ee31a-aead-4b0b-8353-297cf596a280",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f4e9ae4f-e024-42e4-a2b4-b385dde8a26d"
        },
        "item": {
          "id": "24d3fbad-b910-47a6-886f-1f15001d6a11",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b814a76b-60aa-4fad-a380-7305c98d9205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb74e9-7115-48b7-9653-d1ca5c2c9493",
        "cursor": {
          "ref": "391d614a-ff51-4af7-97be-3888c148d46e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "176db2fb-c4d5-48b3-8307-8151ec17b64e"
        },
        "item": {
          "id": "62bb74e9-7115-48b7-9653-d1ca5c2c9493",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f18d86b0-8b0e-415e-96de-f7aaccd50941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f573cdc-48e6-42c6-8f40-ab82d253ee09",
        "cursor": {
          "ref": "d2998a6f-aa65-4ef7-a167-eff77cbb97c5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bbe6fe17-96e5-4290-bab2-5e5959d2d70e"
        },
        "item": {
          "id": "1f573cdc-48e6-42c6-8f40-ab82d253ee09",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b06503cc-d686-4f55-9913-213d98917c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c397d50a-d354-4090-ad83-dad4a7c9f555",
        "cursor": {
          "ref": "815a1059-7b80-4862-a5ea-299f8c3a6e93",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "239e0a39-882f-489a-83a5-dd1277e2fa45"
        },
        "item": {
          "id": "c397d50a-d354-4090-ad83-dad4a7c9f555",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0fbb1cd4-d875-46f2-b03a-33e60f8622d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e10636b-564f-4bf2-9be8-49f29ed1249e",
        "cursor": {
          "ref": "cf2572ea-7070-4420-9592-34353efe7c23",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d18bdb2a-1a25-419a-8c03-19a0842c265e"
        },
        "item": {
          "id": "5e10636b-564f-4bf2-9be8-49f29ed1249e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a3cc5b13-2bc7-4770-9aa0-a11014fb2990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a04700-b380-4bfa-8b1b-8138d5b5df49",
        "cursor": {
          "ref": "3ba2f714-08f5-467c-bfb5-3dbac1eff484",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7930937b-1346-42eb-ab3d-8a141f8ced24"
        },
        "item": {
          "id": "91a04700-b380-4bfa-8b1b-8138d5b5df49",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3e4a8c5f-9f8d-4a3a-ba6c-53a3dcbc64dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e43e1f-7709-4dce-a40e-ea8a9761e730",
        "cursor": {
          "ref": "59ec85f2-a303-423e-a235-37d1a39e7371",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "44bf0a29-fb69-4a13-bf01-611dd3c0ea62"
        },
        "item": {
          "id": "96e43e1f-7709-4dce-a40e-ea8a9761e730",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "99874f93-2e14-49f2-b516-d74a5535e6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef13baa-f6a9-4610-a616-9b774fefd191",
        "cursor": {
          "ref": "aa15f5fd-236a-4800-9d4b-e5107ab6a9b4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "17ce8ca0-7a5c-487c-b6fe-600afe44d4ab"
        },
        "item": {
          "id": "5ef13baa-f6a9-4610-a616-9b774fefd191",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "316fec55-d865-4ed3-9e87-135f76c8f0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e6e7aa-d966-4c03-86ae-276685712e39",
        "cursor": {
          "ref": "b4eeb6ba-1145-4041-bf8b-0cb0216f7c36",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "39586a9e-5723-423c-8a07-3336f7de5db5"
        },
        "item": {
          "id": "04e6e7aa-d966-4c03-86ae-276685712e39",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a4726442-27c9-4dc8-9344-dddbe7a6f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295c9b20-39dc-4744-8498-edb7dcd97925",
        "cursor": {
          "ref": "3874b8b7-ef6c-46a0-8974-b75ca223166d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b80f8986-f597-4424-b635-cab0f3d6ed1b"
        },
        "item": {
          "id": "295c9b20-39dc-4744-8498-edb7dcd97925",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e4524288-f3e3-4d51-927f-6fedf2ac23b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3612e6-3453-4856-b72e-d34f7a4df1c0",
        "cursor": {
          "ref": "96a507ed-f1f8-4ef5-8b91-82b82e6c6144",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06e92391-b811-408b-8925-a697e667b69f"
        },
        "item": {
          "id": "3a3612e6-3453-4856-b72e-d34f7a4df1c0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "35f0f175-7619-4132-b42e-e49b422976fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b24bb54-5a17-41dd-96cb-8b5f410f3b98",
        "cursor": {
          "ref": "4583ada4-707a-49d5-b7c8-c2517fe5b74e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cff7d5b9-0564-4c39-8fd6-a66a0c7d4242"
        },
        "item": {
          "id": "1b24bb54-5a17-41dd-96cb-8b5f410f3b98",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "36e62303-0b0e-40eb-a6b6-8df5b214e099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ddebb4-c568-4912-b16a-20723fbe2c19",
        "cursor": {
          "ref": "655c5281-4d52-4da6-ba25-bd9bdf213aeb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fc987403-d92e-4f6d-9802-012742cc3251"
        },
        "item": {
          "id": "f7ddebb4-c568-4912-b16a-20723fbe2c19",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "29983c5a-dc52-4f05-8334-239554e725e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47860bf-90ae-40a9-b467-85e974d43760",
        "cursor": {
          "ref": "a36e0e14-672d-4f1f-8ef9-d3cd4c0e5fec",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1635b56f-acfd-41d7-8cec-a3ab0597e143"
        },
        "item": {
          "id": "f47860bf-90ae-40a9-b467-85e974d43760",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f364d5c5-be24-4df8-991c-4de0344ac503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8565c3d-9eb1-4b28-bf78-7f4d55272178",
        "cursor": {
          "ref": "69b534ff-340b-441f-8b6e-5499702c854a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "107c167a-7a59-454b-b4eb-e301b7292bc5"
        },
        "item": {
          "id": "d8565c3d-9eb1-4b28-bf78-7f4d55272178",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4f859290-1b2f-457e-8ed9-d7a82861df70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358095f6-48ef-44a1-882d-c6ba0f69550e",
        "cursor": {
          "ref": "5097c359-6f45-4fec-b0fb-dce43638ff49",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5816250a-c22f-4e12-a208-7a1fb7177588"
        },
        "item": {
          "id": "358095f6-48ef-44a1-882d-c6ba0f69550e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "76619df6-17a4-45f3-8046-6f4473a6a57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feab7537-5099-4a03-8bd1-1fab02ee45bf",
        "cursor": {
          "ref": "e11bce07-4bad-4113-a827-8c469d2e06f6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e2bef85b-8995-4a77-9f4a-5977b22c771e"
        },
        "item": {
          "id": "feab7537-5099-4a03-8bd1-1fab02ee45bf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "10164105-b492-455c-b1a2-233a89467964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78138fa4-fd9d-40f6-aec5-2a2d35ea2673",
        "cursor": {
          "ref": "58fba3a4-c188-49d9-97ff-8f0145f4dcfd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4051093a-6bf0-4626-bc9e-9e1f11f1ed31"
        },
        "item": {
          "id": "78138fa4-fd9d-40f6-aec5-2a2d35ea2673",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fc77b1ac-7e97-42e2-8adb-792a7f16d0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1edade-f3c2-4159-8fc1-ed72cd00bd22",
        "cursor": {
          "ref": "91017b00-c042-45f3-88c2-f7c35de5578a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "963be4b6-caac-4fcf-b18a-8af42f2a9cf5"
        },
        "item": {
          "id": "4b1edade-f3c2-4159-8fc1-ed72cd00bd22",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5072f086-c2ea-404d-bf74-6519f34ca162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c76813-a953-4172-898d-620532ae3cb4",
        "cursor": {
          "ref": "ff8376a5-1627-480d-952c-265c025e0991",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "351a7438-2c8d-4f18-a5e6-65fe920e1cd8"
        },
        "item": {
          "id": "42c76813-a953-4172-898d-620532ae3cb4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed938647-2ef7-407a-b256-e9b992aaf262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c3f59a-3410-494e-8106-ba6de1388ee2",
        "cursor": {
          "ref": "4f8c8d05-82b1-4d46-b091-57906708cede",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f831ea9c-0b9e-453f-8cf9-10b573072a01"
        },
        "item": {
          "id": "21c3f59a-3410-494e-8106-ba6de1388ee2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c26fac77-ff60-4524-a6cd-2de05f2cea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bed64a-3ab6-4ce7-91e2-0e03955b7007",
        "cursor": {
          "ref": "527725c4-bedb-48a7-b093-11476fce024e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f9838ee8-620e-44a7-9ad0-7c23068bea1b"
        },
        "item": {
          "id": "00bed64a-3ab6-4ce7-91e2-0e03955b7007",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6660867b-9dc6-4cd7-bebb-08ea97e39f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b703ea-25f9-4ed8-843f-44c8ee3b6468",
        "cursor": {
          "ref": "555d6989-e84d-4de1-bd75-7f0811790742",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1fc06600-3b16-43f9-baf8-2a2b58330c97"
        },
        "item": {
          "id": "76b703ea-25f9-4ed8-843f-44c8ee3b6468",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1346a459-61fe-48fb-8803-f03c41823dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8212fc9e-c091-40f7-8134-3d318bdd1867",
        "cursor": {
          "ref": "84bc388c-1f53-474e-859a-825f8adab339",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d0ebaf60-909b-4be4-b5c5-e126c67e3afb"
        },
        "item": {
          "id": "8212fc9e-c091-40f7-8134-3d318bdd1867",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a7cc59fc-accd-4f3e-a6da-741cac7cefcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba535586-2925-4c57-a4c3-b0cfad652f50",
        "cursor": {
          "ref": "e658f81a-678a-41ef-ac8d-225ac4da0ef6",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d3f019ff-231f-4972-9fd3-1d208968299c"
        },
        "item": {
          "id": "ba535586-2925-4c57-a4c3-b0cfad652f50",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "93fde8e5-19a1-4efb-b993-33e386724dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b1d1c1-8bea-4005-a085-5c05b429c02f",
        "cursor": {
          "ref": "7b3dca8c-e186-47ae-89dd-0f5896a12de5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d8a49d92-3c71-4dc5-9ee6-72499fef4bf1"
        },
        "item": {
          "id": "d2b1d1c1-8bea-4005-a085-5c05b429c02f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "160c1c39-4cf9-4e23-8722-4dcab6b677da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd673dd-8b40-43fd-ad31-2718c9630782",
        "cursor": {
          "ref": "09a68a58-8607-4f39-b84f-a5207428030d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ce0f24a9-3acc-47de-ab89-ad357cde0835"
        },
        "item": {
          "id": "bcd673dd-8b40-43fd-ad31-2718c9630782",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "59bc9481-0ae4-45dc-aaa9-1067d3475cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05282c1-754e-4b80-84d1-5b4dc3f56ad3",
        "cursor": {
          "ref": "52241960-10f0-4735-8334-c44354b2c066",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "882c5e7d-38e3-4b38-b3ab-22dbdbf7dad3"
        },
        "item": {
          "id": "c05282c1-754e-4b80-84d1-5b4dc3f56ad3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "79f928ce-0df6-4f27-8f18-fc498931c522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0920709-4273-4814-bbea-70c4828ccbdb",
        "cursor": {
          "ref": "dec0ad08-1871-454e-9619-c939f73ce589",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "391201bc-6fcf-4258-b9e7-e0e06dc9cc95"
        },
        "item": {
          "id": "f0920709-4273-4814-bbea-70c4828ccbdb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "93966aee-dae1-46c8-80aa-ed3ca2edd9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268c5648-dfcb-45ec-bac8-9eb53b167ea1",
        "cursor": {
          "ref": "6d0682b0-2e38-41d8-a806-235a866fa749",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "263a223a-ca42-4564-ba6d-1ab20ffb5ff7"
        },
        "item": {
          "id": "268c5648-dfcb-45ec-bac8-9eb53b167ea1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "18f57e6f-bccb-46b5-b057-1c1a1c323d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4331fb5-1679-4db7-82c5-76c070862bbe",
        "cursor": {
          "ref": "75680d3e-46c9-47d0-8d4a-1dda2c21059a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f6d5d8dd-185f-4b04-af38-d225b9e4c736"
        },
        "item": {
          "id": "e4331fb5-1679-4db7-82c5-76c070862bbe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8125a9ae-e7c8-4594-aeeb-dd313e14bd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6ec1a1-57d3-4beb-a960-4b71b8180fda",
        "cursor": {
          "ref": "1c4d887b-5cd8-4bda-8806-1b835abcae35",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9b92499d-5f91-4b11-b2e6-a115280182a7"
        },
        "item": {
          "id": "8b6ec1a1-57d3-4beb-a960-4b71b8180fda",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0d3ae172-b8ed-43da-bdb6-4bd43af60a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6916b8b-867d-4bc7-9219-9b82b97d2b23",
        "cursor": {
          "ref": "7ccd7302-5d9c-428c-8222-461068035d8d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac0aa641-0a04-47ee-aea5-c38464aed5fd"
        },
        "item": {
          "id": "e6916b8b-867d-4bc7-9219-9b82b97d2b23",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bf0eb3a6-973f-4155-842a-f98927f65451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aeb549d3-00e9-480e-a2ea-dc02b8c2d15b",
        "cursor": {
          "ref": "e73e46fe-2025-4094-9149-ff0fa08333ea",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9f0b305a-b69c-40e4-9a6a-4ccc7a161cd5"
        },
        "item": {
          "id": "aeb549d3-00e9-480e-a2ea-dc02b8c2d15b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d7bcafda-2e69-49f0-ba8c-6a7461767637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "74b2fd50-13d7-4dbf-bec1-d31487241f6c",
        "cursor": {
          "ref": "71e6d4b2-889b-44ed-b011-0d4269415db4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8199b64f-d54d-4d95-9794-17b4d37812f9"
        },
        "item": {
          "id": "74b2fd50-13d7-4dbf-bec1-d31487241f6c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "92214b08-f80c-4329-a27d-239027aeba30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7db5cdf2-7d32-4aaa-b7bd-112ebccee841",
        "cursor": {
          "ref": "e6066960-76fa-4389-a78e-857d358aaf63",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ac33fe2b-e6c6-424e-aace-0767a06b8853"
        },
        "item": {
          "id": "7db5cdf2-7d32-4aaa-b7bd-112ebccee841",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "367b0c7e-9266-4eeb-85b5-d6dceb3f81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "544b4152-74ca-4f77-b2bf-2ad625f64057",
        "cursor": {
          "ref": "fe723be8-e1a6-4fe6-b02c-8616a8e293b8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "44fc7dba-fdf3-4d12-87bb-6ff06859fd98"
        },
        "item": {
          "id": "544b4152-74ca-4f77-b2bf-2ad625f64057",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "29ee1f2f-3f9a-411f-9092-469e284f9cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "aea66289-a6f9-4b6f-a307-59692d919d52",
        "cursor": {
          "ref": "7a28c960-e5b4-4c7e-9b62-c2d97a343acf",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b6e3b037-b58d-401b-8ffc-f7e40b8bf0b5"
        },
        "item": {
          "id": "aea66289-a6f9-4b6f-a307-59692d919d52",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9b703d8d-4b7e-452e-9f35-62e4cdf0f5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f6da3636-33b9-430e-b58c-1d87b385d201",
        "cursor": {
          "ref": "1a9728a2-43da-4468-bf8e-859fac496abd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b1aeda28-5a90-44d2-b27a-87648d5538cf"
        },
        "item": {
          "id": "f6da3636-33b9-430e-b58c-1d87b385d201",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "60451709-a137-46eb-a230-66c949ac5739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "38a80e56-d01f-4f6f-ad0d-f3309fe34271",
        "cursor": {
          "ref": "1b0c3243-bc00-45f9-8a07-706335a616f8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2efa818d-319f-449a-8a84-78c722386698"
        },
        "item": {
          "id": "38a80e56-d01f-4f6f-ad0d-f3309fe34271",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "960a2aa7-100c-446a-8f5e-b886725a1897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52bfe23-5aeb-4ad5-a1a5-5ba8539ce3a8",
        "cursor": {
          "ref": "45c5ed90-fb79-42eb-bed8-41ad66d15820",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c2684db9-d5f8-47ed-bbec-ea884b50c227"
        },
        "item": {
          "id": "a52bfe23-5aeb-4ad5-a1a5-5ba8539ce3a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ea22817c-a9d5-4b73-a403-be3c177cf460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa947fc3-c454-4e0c-bf74-eb8cad695462",
        "cursor": {
          "ref": "b8450060-9504-468b-bc25-b89d39ecf0e2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e71394a7-13f0-43e6-80b8-33aec949db99"
        },
        "item": {
          "id": "fa947fc3-c454-4e0c-bf74-eb8cad695462",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eeb1e28d-45cb-4f8b-b6b6-be554e4df13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4f4906-044c-4491-81c0-d4fc23fc248f",
        "cursor": {
          "ref": "53d2c1e7-ea6d-410a-8e0e-98030b553a9e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "16d6a648-c0e3-48c9-b634-96da8ddd154a"
        },
        "item": {
          "id": "3d4f4906-044c-4491-81c0-d4fc23fc248f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c49f1d47-66a8-4288-bcb7-f5772aac80ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c89c52-a2bc-4a46-8341-048121e6087b",
        "cursor": {
          "ref": "326799cc-278a-4d30-9753-bd9efff7f9ec",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fbb2c0a0-dd3e-4a82-ae19-1bd40cbb3021"
        },
        "item": {
          "id": "a3c89c52-a2bc-4a46-8341-048121e6087b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a46c6e61-7bba-4835-8984-ca00d1ae8aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f6f1aa-53de-4951-b219-5f2ee5a45431",
        "cursor": {
          "ref": "78751534-de16-472d-bddb-5d3280424b6e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "58c6bcf0-133f-4fa1-8ae1-ce5fddc539b0"
        },
        "item": {
          "id": "33f6f1aa-53de-4951-b219-5f2ee5a45431",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8a1946d-307c-4783-a587-6ad3946c4a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af749db-da8e-49af-ad00-644d034b12c7",
        "cursor": {
          "ref": "2d982013-308c-4f3c-874f-aa8d9c8e82fd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f55b10f0-8711-4447-952e-7f47313814de"
        },
        "item": {
          "id": "5af749db-da8e-49af-ad00-644d034b12c7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0e947a8f-4ee1-4ebf-9019-07f3962f9cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c944fa9-b386-4d20-a592-b7c0dee4fbe1",
        "cursor": {
          "ref": "af1b3277-33c1-4bf3-b5e7-0c4da73181a9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "386a9593-ee67-4874-9977-32a9f4b3f996"
        },
        "item": {
          "id": "4c944fa9-b386-4d20-a592-b7c0dee4fbe1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b868200-6fc9-4d6b-9c39-6f32f36a5c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5163e5fc-070d-43ba-933b-d685450d58ec",
        "cursor": {
          "ref": "5e9349f0-69cd-44ef-bd3b-b351892e8860",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9a999467-4c48-47d1-b55c-2d19e644ed4b"
        },
        "item": {
          "id": "5163e5fc-070d-43ba-933b-d685450d58ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d75afbee-0763-417d-afe5-4a55f3d12361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d03ede-4c26-4266-b117-23d403a46000",
        "cursor": {
          "ref": "814473df-c282-4f3f-8305-f5e7e64806e7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c9f08904-4f5d-419e-91ad-886201ff0de5"
        },
        "item": {
          "id": "54d03ede-4c26-4266-b117-23d403a46000",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "091d3405-fadb-49d4-88fe-96fa9db50aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2f4af1-733e-4998-a854-fff68cc6e4cc",
        "cursor": {
          "ref": "25c509d2-9b32-4e0a-bbff-8b0b102a2b29",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "67086de6-2f62-49c8-aeae-50c04f05a690"
        },
        "item": {
          "id": "ff2f4af1-733e-4998-a854-fff68cc6e4cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8dd45400-4709-427e-859b-7ab0e3da1670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff667ed-0bc9-45c3-b489-b57b899b3b81",
        "cursor": {
          "ref": "43ae5285-378b-4b83-b2e5-04371b15f21b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2caa6f25-3a33-48ec-a7ef-ee3c1bd7845b"
        },
        "item": {
          "id": "9ff667ed-0bc9-45c3-b489-b57b899b3b81",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "50f8cfa2-2758-498a-b9e0-3ad73afea376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3862aa6-f9f6-4e7a-9ea3-42ae0637f868",
        "cursor": {
          "ref": "ec987429-6de1-4c40-bf22-47dc2c9bee61",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1b048205-3cfd-4545-9232-c69ee72a7558"
        },
        "item": {
          "id": "b3862aa6-f9f6-4e7a-9ea3-42ae0637f868",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62931e88-2277-4c5b-8a2e-18c46b9a74a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92e8bee-1d97-46c3-a489-c0ea18c39da7",
        "cursor": {
          "ref": "9086d8ed-6f30-4dcc-a742-f08aab5d42e4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "62ada711-4dfd-4827-b680-1666a47d61fc"
        },
        "item": {
          "id": "b92e8bee-1d97-46c3-a489-c0ea18c39da7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6f4625d-179f-4f24-a613-71733f935a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b671828-b61a-4bf7-a5dd-6d668faf0943",
        "cursor": {
          "ref": "e0a0cbe9-213c-4175-8d8f-d18e76f6a941",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "336349c7-f719-41ca-bec5-53db9998bc11"
        },
        "item": {
          "id": "4b671828-b61a-4bf7-a5dd-6d668faf0943",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0a0e5df0-a4dc-4815-aefe-47b0d358e060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883e4e32-5255-4b2d-a2e3-8901fb5051d3",
        "cursor": {
          "ref": "e201c851-5d20-4db7-8f75-2c17edb3eb50",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "52def1b5-3910-4b66-8613-a0b92e0b8346"
        },
        "item": {
          "id": "883e4e32-5255-4b2d-a2e3-8901fb5051d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "535b167a-7771-4b16-9fa2-2b1120367a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e724631d-be97-4ecd-b8f3-d4831992007e",
        "cursor": {
          "ref": "3c87f24d-a01c-4a43-9c8a-f9013ba0eb71",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee9bd9bb-f38e-47b2-9a31-8c1452421163"
        },
        "item": {
          "id": "e724631d-be97-4ecd-b8f3-d4831992007e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "758adb97-5e90-47fa-977c-2d4ef8f29cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d0de50-6513-4681-a8df-665514a1ae98",
        "cursor": {
          "ref": "3b8d4227-9205-41a2-bae3-4d5d70c68ee7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "49004c21-3b3b-4830-b72e-d48bb2a28f26"
        },
        "item": {
          "id": "f0d0de50-6513-4681-a8df-665514a1ae98",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4147ee9-4641-46d7-9445-02da8f9ea8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39230ac0-9599-4907-a44d-d45c6220b5a5",
        "cursor": {
          "ref": "497cfd87-73d1-4c1a-bcb6-270dc0290a49",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "da404ac8-ab41-4e32-9e36-46c4e574df5d"
        },
        "item": {
          "id": "39230ac0-9599-4907-a44d-d45c6220b5a5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e4ffc69a-a7de-4e9d-adcc-a93d7fa83c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cef9dc-afd1-4504-95d0-c446ff5b8f22",
        "cursor": {
          "ref": "30eff057-de58-4292-a2dd-6a14289607f5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "010ac93f-87d8-4a8d-a5ec-13cbf97f1a9f"
        },
        "item": {
          "id": "37cef9dc-afd1-4504-95d0-c446ff5b8f22",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "20c41e03-3a58-43cd-9b1e-998f1ea6686a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de209c-67eb-4110-a97f-7979e2d7bf87",
        "cursor": {
          "ref": "cbe0bb3a-0634-4db7-99dd-95b9163992dc",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "583ef916-6746-4194-8a50-62587d6f2c1d"
        },
        "item": {
          "id": "18de209c-67eb-4110-a97f-7979e2d7bf87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "217d2a42-ffac-4b0b-8019-eb8ce5ee3b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513cedc9-c95b-4524-b69d-56048403c295",
        "cursor": {
          "ref": "853f5d5c-40fe-4b3c-9ec7-ef2fe00d2496",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3e82dc36-13e4-47dd-926b-3b0fda76bfdd"
        },
        "item": {
          "id": "513cedc9-c95b-4524-b69d-56048403c295",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b632c851-7cae-4630-975c-e2a660d2642b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f7db7b-66cd-4950-aab3-463449562275",
        "cursor": {
          "ref": "3b6e2fbd-815a-4c15-a8df-9cdee3620f71",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3c70baaa-f39a-4816-8c5d-b320fa3cefa3"
        },
        "item": {
          "id": "42f7db7b-66cd-4950-aab3-463449562275",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4e8aa1a9-3029-4a24-9aa3-707cf788d7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e2ad76-66ed-488b-b89e-881e18e50a6d",
        "cursor": {
          "ref": "364a3868-f686-47cd-b767-5a96512b36d6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f9d8b105-9a17-4a9f-927a-c0ae9c7d3ea2"
        },
        "item": {
          "id": "45e2ad76-66ed-488b-b89e-881e18e50a6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f28dd3cb-764d-4df3-95bc-54f4a5746c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8354d731-a0b3-4145-894d-9e1d12321d7a",
        "cursor": {
          "ref": "00e61926-79f3-4236-90f2-397130ae19d9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2904e8d0-c8b5-4019-bdd7-8d7962eb9693"
        },
        "item": {
          "id": "8354d731-a0b3-4145-894d-9e1d12321d7a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "be811899-2b7d-4126-a0cb-0a565c8d0114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1beba3c-28f7-4623-ab9b-8e9d514f7963",
        "cursor": {
          "ref": "66e268d6-537f-4de4-aa06-c2ca16316362",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a091e6a4-a571-4265-ae22-7a740a6fb06d"
        },
        "item": {
          "id": "f1beba3c-28f7-4623-ab9b-8e9d514f7963",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14b7bc64-911c-465c-95b7-1e9966c966cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925c9494-0002-4337-9c84-baeac9059ed2",
        "cursor": {
          "ref": "897f9d79-ac44-4201-a662-348c1894c744",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cf6941d0-2381-44d5-84c8-eee40fc63e7c"
        },
        "item": {
          "id": "925c9494-0002-4337-9c84-baeac9059ed2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "64613b82-e82b-461a-8085-a4542ad4958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b6df66-a557-40e6-afbb-b81f853bd8f1",
        "cursor": {
          "ref": "907b95ce-9bb6-43ee-b8b6-b1ba9e011ae9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3c31c873-1317-494b-aa91-feb4edd511a4"
        },
        "item": {
          "id": "a1b6df66-a557-40e6-afbb-b81f853bd8f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e551c1d-d108-4256-98b1-969203775663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e3ed8-7b99-4e1e-bab6-2ca0f6625a92",
        "cursor": {
          "ref": "b06b7f75-2a45-42b3-9a2f-20bdc2f9b36b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "93ef15a0-3a73-431f-b4c1-815121cdc309"
        },
        "item": {
          "id": "977e3ed8-7b99-4e1e-bab6-2ca0f6625a92",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0af4bb2-e584-4595-bdf4-ee988f0b8ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e25791-f751-4138-a07c-e14255645848",
        "cursor": {
          "ref": "78a3f7ce-a0de-4415-a933-479a26aa2ae9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a94c9e87-b5dd-4765-bc43-55cc4b5ca0f9"
        },
        "item": {
          "id": "66e25791-f751-4138-a07c-e14255645848",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb4e3c2e-b0ab-4fa6-9759-10773ed580b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a71c9-8f8b-4087-830c-bb33c3e1c32f",
        "cursor": {
          "ref": "50d8d522-bf68-44f1-acb9-be8d0fea8dbe",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "81ba471d-d6a1-4e64-a0ed-40d09c81d4cc"
        },
        "item": {
          "id": "237a71c9-8f8b-4087-830c-bb33c3e1c32f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "41b0ae97-0a0d-4890-aa67-8f896fc82b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e31389-da12-4ef4-8b6c-33b4344c4951",
        "cursor": {
          "ref": "b059f6a6-9f83-46ce-a660-02b73b1face1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ef33c408-8112-4538-8a96-72b39f35a3e4"
        },
        "item": {
          "id": "b1e31389-da12-4ef4-8b6c-33b4344c4951",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6cdb9fd3-63f8-4bca-905e-9e2659e48d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f922b3a6-0871-4049-9d31-5128063135d5",
        "cursor": {
          "ref": "ebee9716-47fe-42c3-94ca-750cc8e05dc4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b0b8d47a-9dee-4696-8e94-b6707b31db8a"
        },
        "item": {
          "id": "f922b3a6-0871-4049-9d31-5128063135d5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5461843a-6fb7-49be-a683-4bb40a813c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18edb6a7-2776-49b9-8c4c-663d4bfc1174",
        "cursor": {
          "ref": "e75a1df2-352b-4a9e-85b6-48fbef7df2f7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "11ea212a-56e6-42b9-9df4-2c9ed31c0e8a"
        },
        "item": {
          "id": "18edb6a7-2776-49b9-8c4c-663d4bfc1174",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c4358fb3-cabf-44f6-b713-dd48ceaee4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9678ec-5077-40ce-9c87-fec4f65e9f45",
        "cursor": {
          "ref": "c0a04ebc-cc57-4bba-92e8-90856b41a0e8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "94f6c8bd-47c7-4262-ba97-a74d5c68e020"
        },
        "item": {
          "id": "2e9678ec-5077-40ce-9c87-fec4f65e9f45",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7b86d552-8a5a-45eb-a5c7-790fe5f0c324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e85529-959e-48d4-bcc2-992dddda32d6",
        "cursor": {
          "ref": "0f318b95-d481-476a-94cd-1ce94d35932d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "106d4c2f-31b8-4282-9228-f35916a18968"
        },
        "item": {
          "id": "d1e85529-959e-48d4-bcc2-992dddda32d6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "233ff0b8-cd81-4951-983e-17ee3b3c9fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78b6578-c427-4b10-9af8-55e628a3b9ac",
        "cursor": {
          "ref": "0dcbef4b-583e-4694-849f-26e446ed8d7c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4f0832ff-a305-4378-bfdd-678bdd7a3076"
        },
        "item": {
          "id": "e78b6578-c427-4b10-9af8-55e628a3b9ac",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "67b90c86-d1fb-41fa-ad68-fdebc7bc6de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e588c1c-eff0-4279-9057-fad962042736",
        "cursor": {
          "ref": "776f712e-3c3b-4da4-af08-57e739a42e54",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e6aa70e-5ff1-4ae3-aa4a-918f8e146ccc"
        },
        "item": {
          "id": "9e588c1c-eff0-4279-9057-fad962042736",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cef520a-3fed-4f03-be29-5bb6457104f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb66cdc0-82af-4318-8048-b70482aa1ffd",
        "cursor": {
          "ref": "48122e59-1d2c-402e-b843-520da19ce59c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0637c357-5749-4a79-9855-1e37153be0b3"
        },
        "item": {
          "id": "fb66cdc0-82af-4318-8048-b70482aa1ffd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6beb3de9-adc0-4779-b261-ab23f1b24ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6987783b-c854-4788-8ce6-34ce07fb99f3",
        "cursor": {
          "ref": "254c0fa5-85e2-42e8-b554-4f289382a543",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "72fe9836-a87c-4de3-9b9f-a1d77f5fbe7c"
        },
        "item": {
          "id": "6987783b-c854-4788-8ce6-34ce07fb99f3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8d1a48bb-971b-4461-ae8b-de1ec868afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52545cb4-2510-48b4-84e3-a49315f37ae4",
        "cursor": {
          "ref": "c67dc42a-f822-4152-ba36-a8fe667f27ba",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fb2dda73-06ca-40fb-b10a-39554793b347"
        },
        "item": {
          "id": "52545cb4-2510-48b4-84e3-a49315f37ae4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3d58a868-357e-43a6-8da7-69209404702e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c04905e-e2f2-4755-aac3-72bdbde37e3b",
        "cursor": {
          "ref": "601d2261-aaee-4fd4-b7d7-5044a72e9868",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d0116b3f-6383-4dfe-8e99-f502244f0698"
        },
        "item": {
          "id": "3c04905e-e2f2-4755-aac3-72bdbde37e3b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "816ae620-4059-47f9-bfc4-3054a5ca18e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37226447-67d2-4ba5-adc8-f954e054a45f",
        "cursor": {
          "ref": "989ffef7-6c5e-4885-8b96-044507c4cd67",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4e441324-257e-4d29-ad5c-f2b8045659d6"
        },
        "item": {
          "id": "37226447-67d2-4ba5-adc8-f954e054a45f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "548c6bc7-468d-449e-be39-84a6ed209c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85de665-aade-418e-8647-3dd71911dc04",
        "cursor": {
          "ref": "9e01e079-80ea-4c74-85be-79a70ad2765a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0b34f823-38c7-4f59-9c3f-11066ede0d1f"
        },
        "item": {
          "id": "f85de665-aade-418e-8647-3dd71911dc04",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4206e6d9-8548-489e-aa52-f43c97161634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c01e95-2075-401c-975c-59a46c19b418",
        "cursor": {
          "ref": "3eff22b9-3ce3-49d7-9ff8-85fee932c4d9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f560a503-e3a3-4deb-a5d3-4a7a150fd70c"
        },
        "item": {
          "id": "01c01e95-2075-401c-975c-59a46c19b418",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "de2d6e2f-475c-48b6-9e52-451bcc7efc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0387c4d-3ce3-4d5a-9a6a-16122f4a98b5",
        "cursor": {
          "ref": "e497e4b5-2f15-4c3d-9882-05adec725eab",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0e8b733d-7592-4cbd-8248-d62c72f2fd92"
        },
        "item": {
          "id": "c0387c4d-3ce3-4d5a-9a6a-16122f4a98b5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7d8b0a39-dd12-45ef-9a6a-3a189119a39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ddd10e-88d3-46df-92b3-1333b0d1eb40",
        "cursor": {
          "ref": "fbb5acd1-7d74-457c-a7d5-56e325eb78d1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a0b64e22-47a6-4b62-9b5c-ae159157242c"
        },
        "item": {
          "id": "c8ddd10e-88d3-46df-92b3-1333b0d1eb40",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5611f61b-b6a2-4d5c-a476-5aa787ecad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69ded3d-64b4-4692-90fb-3cd95ab8ba94",
        "cursor": {
          "ref": "04c5b117-55a7-4630-9de4-6639eab65390",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1cad6a4c-014d-40a9-9bcf-5259cde514c2"
        },
        "item": {
          "id": "e69ded3d-64b4-4692-90fb-3cd95ab8ba94",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ea335b54-30bc-4c8f-af67-ad87b01da3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbccf61-b06b-4132-8efd-ec6680b3a41a",
        "cursor": {
          "ref": "85dd2f3d-2524-4f66-b801-4ec78951961b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5c50a07c-6194-43bd-87b8-1dd576889af6"
        },
        "item": {
          "id": "0fbccf61-b06b-4132-8efd-ec6680b3a41a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b3b29503-af6a-41e0-baed-1e9e6a803e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fc80e1-b3ec-47a5-8c17-a6e2388f2b7f",
        "cursor": {
          "ref": "696a80f5-2946-40b6-b400-2e4c94d86964",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6722c447-2726-467b-bd95-e246b4b849c4"
        },
        "item": {
          "id": "42fc80e1-b3ec-47a5-8c17-a6e2388f2b7f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0d416149-7c47-4542-80cf-8672ecb3d078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1a3cd3-171a-41d0-8043-c17bc02f2162",
        "cursor": {
          "ref": "1675f4d5-22ba-4d02-82ea-751d9847bd91",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "86b87217-ff63-4f5f-8f29-e0b03e3c4562"
        },
        "item": {
          "id": "9b1a3cd3-171a-41d0-8043-c17bc02f2162",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "688e5b13-1b35-4815-913e-fbd437edb9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65a6404-577f-4c9c-97b7-a1993fea0cf7",
        "cursor": {
          "ref": "9153857a-ecb8-4891-98f9-512af40e9b5c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "858f1b39-9e98-4409-bed0-e48c1f2b798c"
        },
        "item": {
          "id": "d65a6404-577f-4c9c-97b7-a1993fea0cf7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e7860861-dce1-44ca-9f7e-c71047925c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc7d65-6b39-47ce-9805-2012e60c5f92",
        "cursor": {
          "ref": "29c05b46-c09f-41a2-ae05-fc3e9228babf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "65d7e50e-6771-4b13-abab-440ec951cddd"
        },
        "item": {
          "id": "5afc7d65-6b39-47ce-9805-2012e60c5f92",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c28fc163-3fed-465f-9661-f18a654cd39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb038aef-cb9e-49e8-9774-6ffd9c4044c1",
        "cursor": {
          "ref": "9ce76ece-5abd-4369-80de-def39097aa0f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1119ec98-44ee-44eb-bb68-e8399ec54cad"
        },
        "item": {
          "id": "bb038aef-cb9e-49e8-9774-6ffd9c4044c1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3443f3b1-81b9-46dd-82f1-3607a267d81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65561fdf-aded-44cf-aba8-87c840a300e0",
        "cursor": {
          "ref": "0d0a0dca-4d94-41fa-84ca-27c7a03ff949",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "53febb2d-d991-4fd1-bbf9-01f63e7d8160"
        },
        "item": {
          "id": "65561fdf-aded-44cf-aba8-87c840a300e0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "36e3d382-0454-4726-a660-f43805dc5f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e40ec59-15b9-4c00-8ccb-0300ebf62f67",
        "cursor": {
          "ref": "fbc3babd-c70c-48d3-a36d-838cc325878a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c018a965-6734-4c90-9355-9b80369701b7"
        },
        "item": {
          "id": "7e40ec59-15b9-4c00-8ccb-0300ebf62f67",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f4ff831c-1b50-4194-b025-23f5e4146869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b522ab8-17b1-4eee-90ff-2bf8a58b2772",
        "cursor": {
          "ref": "a3d86986-7217-425e-b36b-4c04e7cebce2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f13f632-1a4a-47d0-aa6b-99b8af94df79"
        },
        "item": {
          "id": "8b522ab8-17b1-4eee-90ff-2bf8a58b2772",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7682c968-605f-4e96-a46d-c948248542dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60346638-9431-415c-abee-7788d2b0db74",
        "cursor": {
          "ref": "8179320c-bd8f-4f41-9e4d-9a88e4e9aa55",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d08f0d54-198d-4ea0-834a-a787f58c09fc"
        },
        "item": {
          "id": "60346638-9431-415c-abee-7788d2b0db74",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "44dba6d7-4117-416a-b1fd-7fac0fc8a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe014ad-233b-4b69-8b8f-84520459c63e",
        "cursor": {
          "ref": "49f6f187-5ffb-40bd-b357-d398c2cbd2dc",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3411efe2-1447-480e-82da-14b4b365b975"
        },
        "item": {
          "id": "fbe014ad-233b-4b69-8b8f-84520459c63e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e5f4d00f-2659-490f-a486-2fa4f264ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b0a403-3efe-4d0f-a14d-236c1883c4b8",
        "cursor": {
          "ref": "02028ddb-530d-4e57-abca-7ea3f8c0538d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e849863-a10f-4f32-a433-2ee498f0cfa2"
        },
        "item": {
          "id": "d1b0a403-3efe-4d0f-a14d-236c1883c4b8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd9bb09d-51fe-43f2-8a9a-e8d3ee5baef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db28db8-5a71-49a6-ad83-e5504383c2df",
        "cursor": {
          "ref": "155d5916-70c3-4651-a554-b4d718d7afed",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aa2a13f1-50e4-4edf-9c14-df19ac1f27a8"
        },
        "item": {
          "id": "6db28db8-5a71-49a6-ad83-e5504383c2df",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a0d9efcf-acd2-4039-862c-bc344211c338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28daa626-f43c-4d8f-a1b5-8d436bea8cc9",
        "cursor": {
          "ref": "c9b4b7b0-508b-45f7-8fbf-1ed60c3a2074",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d46cff10-5ffc-42af-ae06-2e9dd806992a"
        },
        "item": {
          "id": "28daa626-f43c-4d8f-a1b5-8d436bea8cc9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fdfb934e-43fa-4092-9a9a-96f7fdfe91df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76db7c3-757c-4a29-a625-18791edf9ae6",
        "cursor": {
          "ref": "da7335d8-e520-4cf5-8b85-2d71f3c1d100",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d6e35237-db27-493c-8495-cfe32a8fcf49"
        },
        "item": {
          "id": "e76db7c3-757c-4a29-a625-18791edf9ae6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "07f3008c-8d89-4f9e-8cd9-d0fc3846b440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a500b0e6-d21e-4f2e-af72-afd4954c2b6f",
        "cursor": {
          "ref": "925025b9-8467-448b-8b94-0ebb9fcc90d4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1192a919-3709-4dc0-b751-edc3d8c90353"
        },
        "item": {
          "id": "a500b0e6-d21e-4f2e-af72-afd4954c2b6f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a4ad543d-bbbe-449b-a968-714661a1f658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c16fd-3b17-4ed5-af50-0d4b9f0b8a66",
        "cursor": {
          "ref": "ad9e68eb-95b1-4da6-8566-85644c94e5ea",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bbf57041-ff30-40b9-ba02-b7f25e96fa97"
        },
        "item": {
          "id": "839c16fd-3b17-4ed5-af50-0d4b9f0b8a66",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "49dee46a-6bde-483a-8b76-ac1b4ab740c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4683f9b3-bf16-48f6-97ca-1b7f61f1bd25",
        "cursor": {
          "ref": "5b55fc5e-99a1-4633-9525-3e7c6dacf2ba",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f635a40-37a9-4880-b0f5-bd6a224da9b5"
        },
        "item": {
          "id": "4683f9b3-bf16-48f6-97ca-1b7f61f1bd25",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e6c1c9a6-6f7f-48a0-885d-caf8ab48c754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2820e8-2ed5-4122-a955-8214badbaef1",
        "cursor": {
          "ref": "76728567-92eb-41cc-9343-3cd1665a9ea6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0a8b37aa-1ea6-4312-a198-f53f7a3bec5e"
        },
        "item": {
          "id": "9c2820e8-2ed5-4122-a955-8214badbaef1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8f0fa2da-3e48-4930-a0bb-31b5c551332b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3604b7-06fd-423c-bb5d-1440e43a43a3",
        "cursor": {
          "ref": "1af9a04a-da15-47bb-8188-c1aa174f4f7f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a295bfcb-457c-45cb-a71f-5dbe8dd1a9df"
        },
        "item": {
          "id": "ae3604b7-06fd-423c-bb5d-1440e43a43a3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d0cce59-9dd2-416c-9819-db2fe3965d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d13c0cb-4c3f-4912-8ed3-265a1375d95b",
        "cursor": {
          "ref": "89be4d4c-0c28-4c46-9460-04e2baaf7c87",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2deb2b8-42f7-48e3-967d-a0ee667e6f98"
        },
        "item": {
          "id": "0d13c0cb-4c3f-4912-8ed3-265a1375d95b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4a08ed07-a325-4e06-8245-cdf6269791f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dc9928-79bf-4356-83e0-bd08e3a61239",
        "cursor": {
          "ref": "1f3cb713-6588-43dc-9a7a-fa13cf561a3c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a8ca0757-ef79-4d83-a545-506de4f0632e"
        },
        "item": {
          "id": "91dc9928-79bf-4356-83e0-bd08e3a61239",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "abcd32fd-4279-4a1f-9e87-2ba6915c23bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c288ef7-9fb0-464a-b986-c8101e6cb358",
        "cursor": {
          "ref": "2f72a068-e4de-4d34-964f-b72923e353b9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "52f855e4-73fe-4fda-a2ca-cc789571bc2e"
        },
        "item": {
          "id": "0c288ef7-9fb0-464a-b986-c8101e6cb358",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a339fb38-f032-4cd0-be35-dc91620d56f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53ce0eb-45da-4e4b-9d3b-86f211cb76a6",
        "cursor": {
          "ref": "19262420-a04e-4d02-998a-cc791f748e1a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "96a42fa3-47ef-450c-bb41-61af04af4378"
        },
        "item": {
          "id": "f53ce0eb-45da-4e4b-9d3b-86f211cb76a6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d88c1636-8ebf-420a-80a9-2242927fccbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1332a9-f980-4cb3-9f2a-aa09c5d05d11",
        "cursor": {
          "ref": "86043931-6069-4cc0-996a-4e93906e7448",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6ab03246-d71f-4495-bfa7-e05615679a15"
        },
        "item": {
          "id": "fa1332a9-f980-4cb3-9f2a-aa09c5d05d11",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d09bda09-73fe-4b75-99b7-5cb62aafbda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f068ee-1063-4520-aaa3-aa316dd6cc55",
        "cursor": {
          "ref": "f68a76af-77d2-484c-b2b1-cf61c7cdfff5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "08324eae-256a-4b14-b283-f21e6fd7f5aa"
        },
        "item": {
          "id": "80f068ee-1063-4520-aaa3-aa316dd6cc55",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2f40f95a-8ca2-488e-9e06-3fc467a72615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57015216-68ae-43bd-b3b0-b23ab2a8a994",
        "cursor": {
          "ref": "e21ea9bc-ff75-4dba-b772-3d2b6dab9346",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cafee182-b94c-4fbd-a4c3-38e8577be163"
        },
        "item": {
          "id": "57015216-68ae-43bd-b3b0-b23ab2a8a994",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "58aa6165-6e49-45a2-a070-aae48ad09016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58ca77d-26bf-4743-8c46-e07de4c87bb7",
        "cursor": {
          "ref": "b3de336a-7ce5-41b5-b2d4-681fe559229a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "52494b02-08c2-4a18-8542-201875e08811"
        },
        "item": {
          "id": "f58ca77d-26bf-4743-8c46-e07de4c87bb7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "17635684-65c1-4c60-b644-fce2469b4e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9ae8e1-3e2f-45a3-a1ef-6d3019f4c825",
        "cursor": {
          "ref": "dfc9ce69-c94b-45de-8dee-aa36c1dcb37d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f28d3e56-189e-430a-a711-c56078bc09db"
        },
        "item": {
          "id": "0e9ae8e1-3e2f-45a3-a1ef-6d3019f4c825",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3fceb853-e3cd-4fb0-874b-dc14033cd0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0694a4-0c0a-4401-b40e-d24a28608b07",
        "cursor": {
          "ref": "c3cfc5db-c108-4f45-9c3d-a94c62842dd5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "627a9b40-62c8-4eec-b4c3-4498ab09997b"
        },
        "item": {
          "id": "7a0694a4-0c0a-4401-b40e-d24a28608b07",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fb610489-6830-40d0-8e7e-685a9817ff57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd4df13-84f1-46ef-bd89-5f1ad7890e25",
        "cursor": {
          "ref": "d8747215-b210-4a70-82d4-ebb5c6876a1a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3d0deee0-d292-4dba-956e-0dac1a63730c"
        },
        "item": {
          "id": "9cd4df13-84f1-46ef-bd89-5f1ad7890e25",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dd949084-b65b-43a7-8ed2-c6ac83107961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da2edff-5033-4754-b1c0-e5c690d09c0d",
        "cursor": {
          "ref": "b05576d0-d635-4903-a638-e46c07012ed0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8d88c2fe-1220-4878-8792-36e0c792396d"
        },
        "item": {
          "id": "9da2edff-5033-4754-b1c0-e5c690d09c0d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "619b30d2-8bd4-43ec-a0fb-05068d40fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df6f2e0-bf40-4952-8f97-420172a8850f",
        "cursor": {
          "ref": "f9ab5dd4-d46d-4f41-8eef-52d3bdab1c44",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4aa7a68c-7f52-43e5-93ba-ce6e2847f4bd"
        },
        "item": {
          "id": "7df6f2e0-bf40-4952-8f97-420172a8850f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bd52a8c6-8c58-4c29-9007-fb5df799b9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c80bfb-a3c6-45e4-bf2b-0ebfda83f5f2",
        "cursor": {
          "ref": "7234abc0-4058-4336-9c4a-01fd66b328a1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "32527596-e449-4107-b8a8-a6472f67c8f8"
        },
        "item": {
          "id": "14c80bfb-a3c6-45e4-bf2b-0ebfda83f5f2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cda24b24-b5f1-46f0-a01d-0091aae77649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c360a5b-12c5-4792-9ae6-ff586d85dfde",
        "cursor": {
          "ref": "8de2c411-33df-429d-b9a2-155262e430b6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5e0b4579-a9a9-481a-92e9-6f0e96dd82c4"
        },
        "item": {
          "id": "5c360a5b-12c5-4792-9ae6-ff586d85dfde",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a83717e1-2c7b-4e95-93be-1805ef82ffd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e90d730-3965-4aa5-8a4b-008e4057712e",
        "cursor": {
          "ref": "b190fab3-22e7-4a4d-8be9-cfd993f66d7a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7193eaa8-a4e5-4e0f-b7cd-2535eaac0c3e"
        },
        "item": {
          "id": "1e90d730-3965-4aa5-8a4b-008e4057712e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "90da11f2-0eb6-46c0-9832-b1a185442c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2faae4-df9c-4f8f-b8e0-7d3d810eb08c",
        "cursor": {
          "ref": "b71a5654-ed15-4ba1-858f-28e43ca30eac",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d7c83129-f48e-4ad5-b22a-d553fee4b4d6"
        },
        "item": {
          "id": "2f2faae4-df9c-4f8f-b8e0-7d3d810eb08c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "62e952dd-46b3-4276-96aa-bac678b5f539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b645c5-290c-48d4-aefd-30edfcb7442a",
        "cursor": {
          "ref": "ac6f6206-dc19-4806-b0b9-67b7d3ac3158",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f81a2b3-6951-4157-90e3-30bbde4d682d"
        },
        "item": {
          "id": "d5b645c5-290c-48d4-aefd-30edfcb7442a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f117700-ffca-44aa-be2a-528b2a2920fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9973e16-ce10-4eb0-b37b-2a27fadf14e9",
        "cursor": {
          "ref": "051cb0cc-a5c5-4bc1-93e5-ec8bec842f41",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "df864a8f-5332-4397-9d25-8e275819df90"
        },
        "item": {
          "id": "a9973e16-ce10-4eb0-b37b-2a27fadf14e9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7e8c27a2-b973-458e-89e6-7cce8d7454c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2cb4df-a24c-49a3-88bc-1756ec104283",
        "cursor": {
          "ref": "72785087-6315-4715-a56a-72686df8c237",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "561a15a0-c31d-4006-a34a-1d8ddd8f1a95"
        },
        "item": {
          "id": "cf2cb4df-a24c-49a3-88bc-1756ec104283",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9d9b36ab-c085-47ce-9a6f-a917cd25c2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df519fb7-fbb5-4a74-902e-3da7f590bf00",
        "cursor": {
          "ref": "e9ac630e-dc23-4eed-bc5e-4fa28b4dd2af",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2782092e-7edf-4d76-9064-431defebdc88"
        },
        "item": {
          "id": "df519fb7-fbb5-4a74-902e-3da7f590bf00",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8f7163e4-57bc-433d-b6e7-1f2df0a29578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15a15b0-ca5d-4a42-8f4b-559be302992d",
        "cursor": {
          "ref": "f9e6efde-4396-4578-a3aa-23240f76f75f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b60b28ad-5155-49b1-b738-cadc77985615"
        },
        "item": {
          "id": "a15a15b0-ca5d-4a42-8f4b-559be302992d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a29fa3d5-cf17-4d55-a59b-e30f2a1720a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d27cde7-dfa3-4638-a9f3-135cfc37fb59",
        "cursor": {
          "ref": "fb22918c-3a5c-4b11-a926-7c4370ae5919",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "54dc8bee-f727-48b9-a50e-4e0e18260666"
        },
        "item": {
          "id": "3d27cde7-dfa3-4638-a9f3-135cfc37fb59",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6a8144de-1bdc-424e-ae5c-fe1be95b852f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282c53b3-12fa-4d3e-851d-c7d168063934",
        "cursor": {
          "ref": "2852ec8f-426d-4df8-a09f-dfc26b58f4d5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aebbda38-d634-471c-9f10-8205cf6d75de"
        },
        "item": {
          "id": "282c53b3-12fa-4d3e-851d-c7d168063934",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f38386ea-40fb-4a31-abe4-d2ae817e24bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7cc28e-9adc-4ef0-883c-a024f73a346b",
        "cursor": {
          "ref": "af865481-389c-4a7c-a3da-26de897bd98d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7a62151e-e3dd-4414-a1ad-8e1ac17d9e67"
        },
        "item": {
          "id": "0a7cc28e-9adc-4ef0-883c-a024f73a346b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d29ef8ef-2d23-44f6-8516-e1be1662a252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b699fe52-c773-4166-ad84-8f681afb35a0",
        "cursor": {
          "ref": "969d9af0-2e5d-4f75-bea5-bf9ed26464c4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8eb3e704-14ea-499d-860e-f449ec7a6abf"
        },
        "item": {
          "id": "b699fe52-c773-4166-ad84-8f681afb35a0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1db32386-8ae1-4b4f-a1cf-2d4428cac7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e149f9-29e6-4175-b7d6-924d9a9c90dd",
        "cursor": {
          "ref": "fc5ac71f-2582-4276-8ec6-9260b042cf39",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3245a1e4-b651-4e65-b72e-640d247c59b7"
        },
        "item": {
          "id": "72e149f9-29e6-4175-b7d6-924d9a9c90dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "39bb7b93-3d2e-4e08-bad9-cd79478a82e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65d0ea0-5398-4322-84f7-45bafdb7655e",
        "cursor": {
          "ref": "6b3642c7-8297-4b9b-9dcd-fa675184b452",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "451f7501-8681-4482-8b25-9079cf8c285f"
        },
        "item": {
          "id": "e65d0ea0-5398-4322-84f7-45bafdb7655e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8847f1ad-bf55-4061-8734-3e577f1bdff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be30ffe-a20e-4523-aa3f-3a63ec68e540",
        "cursor": {
          "ref": "a8c04bcc-e3f6-4939-8133-d1642e3a4689",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a138ce0-fbbb-4b40-b1cd-74300b1b8b22"
        },
        "item": {
          "id": "7be30ffe-a20e-4523-aa3f-3a63ec68e540",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "183b4290-cb8d-4980-a93c-ca1479b39bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1250e2-65de-49b7-bc0f-1657ef1878b0",
        "cursor": {
          "ref": "4adf9a2f-fe61-4b66-a249-e797081912ec",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "352bae00-62e3-4a9e-ab27-9e5472a635c4"
        },
        "item": {
          "id": "cb1250e2-65de-49b7-bc0f-1657ef1878b0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7fa68952-23a0-4ea0-84b7-a04c770f96f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81233879-bccd-4708-9872-60dcf2668d8d",
        "cursor": {
          "ref": "57f1b3c4-3357-4d3d-99ee-3a36760fb733",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8c01a484-446f-47e5-aa12-cc4fb76d525d"
        },
        "item": {
          "id": "81233879-bccd-4708-9872-60dcf2668d8d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bca33ae2-c925-4e68-b501-ef5d8249404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3998c4b4-4073-4a92-abfa-dac25b8cb679",
        "cursor": {
          "ref": "93fc7671-665e-4232-b846-4d3ed5651874",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8918078d-ba37-435d-bae8-8df404ca9d48"
        },
        "item": {
          "id": "3998c4b4-4073-4a92-abfa-dac25b8cb679",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f0aedde0-85de-463c-a651-ef83593f0f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74ba1cb-78cc-45fb-b9fa-9d1bf8fee439",
        "cursor": {
          "ref": "ec589b70-efd5-45e3-be64-773bae1a4890",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8a011980-30a1-4b70-8b3e-0bf202a44169"
        },
        "item": {
          "id": "f74ba1cb-78cc-45fb-b9fa-9d1bf8fee439",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "655e5dd7-c4a0-44d5-8672-8caeebc7f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdc2083-297b-41a4-9052-6a6e970bdf26",
        "cursor": {
          "ref": "10f14722-5fc6-4292-aef3-8095af3d5b70",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "05d917be-60ab-4cbc-8538-c73534b8eadb"
        },
        "item": {
          "id": "8bdc2083-297b-41a4-9052-6a6e970bdf26",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "34a840f4-12b8-4eb0-9d40-f1e0654aa8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46fe168-450e-4756-a329-441a8d76ec5c",
        "cursor": {
          "ref": "dfa39f22-cd31-4c8c-ac61-30233e78cd98",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "778829f5-a183-4319-a0f8-b61c7a323605"
        },
        "item": {
          "id": "e46fe168-450e-4756-a329-441a8d76ec5c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9e87b5e0-a645-49b6-85f3-c9b0d07169a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5119c5-7c1b-4365-a648-5e59a55628f8",
        "cursor": {
          "ref": "26104702-017c-4b38-a132-c59f8f9cb870",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e97d2cb-6bab-4ac1-96c5-ae56a4cce02b"
        },
        "item": {
          "id": "ec5119c5-7c1b-4365-a648-5e59a55628f8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "23914eb2-4da0-4403-a267-04976d036f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b59a0e-c57b-4dca-b74a-c12540af020a",
        "cursor": {
          "ref": "c850b711-fb91-4c23-9547-17f81df3b0db",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cca0002f-292e-4cfe-a298-a5d774985071"
        },
        "item": {
          "id": "18b59a0e-c57b-4dca-b74a-c12540af020a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1df45d2b-c2c6-415c-b40a-eaaa2ce28d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15788c48-90f6-47a7-9d64-2fee86f4249b",
        "cursor": {
          "ref": "d4c21248-3e08-4969-9471-1d7e67c1095d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "98a91b87-b03b-42ff-81a3-7b689c21ee5a"
        },
        "item": {
          "id": "15788c48-90f6-47a7-9d64-2fee86f4249b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "01592682-0757-4d9f-8852-62d06686e551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba14c5d-cc83-4896-b35b-92acc976be31",
        "cursor": {
          "ref": "bc88321b-3191-43b0-b57c-b786d91cb404",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "70ca50c3-8046-44eb-ae89-5ddb1b6f4b5e"
        },
        "item": {
          "id": "8ba14c5d-cc83-4896-b35b-92acc976be31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d6ddf0c3-3643-47ff-96bf-85eeb3ecd356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ff80ad-66f2-41a4-b618-0fb6c0f5b8d9",
        "cursor": {
          "ref": "bb521d31-08dd-4987-9b50-5d64dbf42888",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6b515fba-b5f3-4e8a-8d4e-4c5b4da01d86"
        },
        "item": {
          "id": "18ff80ad-66f2-41a4-b618-0fb6c0f5b8d9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5dc14adc-9a4f-47cd-a899-7d98b66594da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c607fd7-3a36-4327-b801-91ca4e06037b",
        "cursor": {
          "ref": "7bb16b8e-9100-4dc1-8aa3-dd7bb0d7c86e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9de03e17-9e23-4c49-bc40-a71754c3dafd"
        },
        "item": {
          "id": "5c607fd7-3a36-4327-b801-91ca4e06037b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "38800877-be94-4924-a588-e2e0b71e6767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5829d13-bf65-4e91-bb0b-4637e537799f",
        "cursor": {
          "ref": "555ce68c-8fc1-4b5b-aa1b-db413e03f0f4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "35ca097e-3c5e-4eeb-8131-350d786f86da"
        },
        "item": {
          "id": "f5829d13-bf65-4e91-bb0b-4637e537799f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9fc008f1-9f97-4660-b650-86ca51aa9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33ca070-c610-4193-a5b0-50217cc612c1",
        "cursor": {
          "ref": "de6ca2a9-507d-4ca3-addf-9c1a44225759",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f7f57f67-a538-4fcc-b694-74dbc8c1b095"
        },
        "item": {
          "id": "f33ca070-c610-4193-a5b0-50217cc612c1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1b2bb2a5-7bc9-414c-88e5-4761fb464c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df2788-8f28-44cc-a5ea-807182d5e5b4",
        "cursor": {
          "ref": "dab97c7b-9fca-45f3-aaac-51f41acec718",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "da55590a-91de-4cd2-b165-fd3283b86e23"
        },
        "item": {
          "id": "62df2788-8f28-44cc-a5ea-807182d5e5b4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "39d4ab08-df90-4ecb-9cb3-06d12cef649b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31eac53-8fac-42ba-9f67-1997abd63588",
        "cursor": {
          "ref": "5e6727fd-da05-4fd5-abd1-3cb293a53ea0",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cc63ef48-cc09-4835-8496-418b0ff7e1ee"
        },
        "item": {
          "id": "d31eac53-8fac-42ba-9f67-1997abd63588",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1b1fe6ce-864b-4554-9daf-245fd620580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3ffdc7-dcad-48e2-851b-32cf01cd0320",
        "cursor": {
          "ref": "0770a69e-fb0e-4015-b7fa-744350f6665e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5650be39-743a-4c5e-8010-d084b5f2a8d1"
        },
        "item": {
          "id": "3e3ffdc7-dcad-48e2-851b-32cf01cd0320",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "16a596bd-adf8-476a-9b0f-22e92790b2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32880d82-43ef-4e2c-86b8-32e32c94a7c7",
        "cursor": {
          "ref": "0a82b3c5-2b04-4771-a6d3-ac8ea9e92c8a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c6319aca-25dd-4dd0-aa41-83d2013f78ba"
        },
        "item": {
          "id": "32880d82-43ef-4e2c-86b8-32e32c94a7c7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7dc47a91-dd7f-4e0e-b948-6131a4043732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a21380-d06a-4060-8428-dcf1926cef5a",
        "cursor": {
          "ref": "a574a810-5543-4cf7-a9d3-a5948cb7da6b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2344fcf2-32e6-46ac-9442-6ce18951af78"
        },
        "item": {
          "id": "49a21380-d06a-4060-8428-dcf1926cef5a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dcb81fe3-19f8-4f7f-b87b-4b3ae3201a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec51afe3-3ed0-4c5f-bd18-955ec4f096dd",
        "cursor": {
          "ref": "0a89e8c7-9c7a-48c2-9033-910a739453bd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e8a33322-c4b5-4597-a97d-59c8a1d9afde"
        },
        "item": {
          "id": "ec51afe3-3ed0-4c5f-bd18-955ec4f096dd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "32abec54-b83d-41db-96e4-8bb5009bd422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f00ad2-5bd0-4334-8813-b0dfe4a48527",
        "cursor": {
          "ref": "57134802-2a2d-4c30-8ce6-266000370f65",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "da926fdf-70b1-4aeb-8e15-b192224d7e96"
        },
        "item": {
          "id": "01f00ad2-5bd0-4334-8813-b0dfe4a48527",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a9c5a5bb-7c97-440a-882c-44fbf8667aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849a6521-f358-46dc-b943-93cb1e88b106",
        "cursor": {
          "ref": "fd9e65a2-75cc-4725-947c-eefcf8dc1a3b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b52007cb-6dc9-410f-95e9-de47daabe9c3"
        },
        "item": {
          "id": "849a6521-f358-46dc-b943-93cb1e88b106",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5949c80e-5a84-4f04-82e8-14ce300ec7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422f3c5-48a7-4831-b919-71cd92a50f4a",
        "cursor": {
          "ref": "e3853a03-01b3-4657-99a3-4bd87561fd90",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cfc2c0b4-d190-4263-b4d9-28f5abb084c7"
        },
        "item": {
          "id": "9422f3c5-48a7-4831-b919-71cd92a50f4a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3e5017a0-333e-45e7-88b0-2b54db62f813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1132486-a243-4edd-b9ae-4b72ef5a2113",
        "cursor": {
          "ref": "94075769-f4e8-444f-af1c-d20d8c7446f0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6e3e84e5-da62-4263-9abc-8d401f8e9be8"
        },
        "item": {
          "id": "e1132486-a243-4edd-b9ae-4b72ef5a2113",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d39e6f4-c46b-4b8e-b1d8-4a86b5e5fa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d749eca-c16c-4cc6-b110-e00be4c1ef78",
        "cursor": {
          "ref": "5b9188a9-682a-4a69-9d81-c9fe91db7bc3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2e92ff9c-801e-4037-9292-603ddd9c81a5"
        },
        "item": {
          "id": "5d749eca-c16c-4cc6-b110-e00be4c1ef78",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a4fa17f1-415b-46be-9f19-9583fa5ba693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeeb27d3-9a1e-44b9-9631-8e9c816930f1",
        "cursor": {
          "ref": "5012cb4f-3216-480f-8fb0-35272ac2d048",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dc3dc422-b08b-414c-a11c-c36dfc1256f5"
        },
        "item": {
          "id": "eeeb27d3-9a1e-44b9-9631-8e9c816930f1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8e7cfdf1-24ec-4eb8-b61a-55b10f645e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a951240-b2de-4d36-85cd-dd0fa694c80d",
        "cursor": {
          "ref": "15473a12-1929-4528-9bda-fbdceeeb3bc6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4c4da688-c51a-4616-bef0-19e95c3149ca"
        },
        "item": {
          "id": "0a951240-b2de-4d36-85cd-dd0fa694c80d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9d02b3be-c876-4681-9563-a5dae62abaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549bd243-fc8a-4e31-92bc-60b83737beae",
        "cursor": {
          "ref": "1d63e26f-ce11-44f3-a052-9e42f03adaa8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e953a8e6-c195-4b0c-bd4f-f207e61dfe02"
        },
        "item": {
          "id": "549bd243-fc8a-4e31-92bc-60b83737beae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8c276c9f-9293-48da-ad1b-959d7decd2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a12371-4065-47d2-a521-568435068eff",
        "cursor": {
          "ref": "6487cca0-2a0b-423f-a25b-3a64923f689d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fba12a5b-ed15-4bd0-b62f-dd4f66afdff0"
        },
        "item": {
          "id": "04a12371-4065-47d2-a521-568435068eff",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "83bf982d-128a-4811-b80c-0392ab4ab81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b50c9-cc64-4862-951a-107416547af4",
        "cursor": {
          "ref": "225f895d-72ec-49d0-bf39-f2d646beaeca",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "93e92aa6-98ae-4824-bf50-c8cc455d04af"
        },
        "item": {
          "id": "420b50c9-cc64-4862-951a-107416547af4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6b9c635a-aedc-446a-b613-2a79b4916faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1bf792-258c-4dfd-96b3-3c4150053625",
        "cursor": {
          "ref": "f228bf34-3007-4ae6-9832-18b22d63efdb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "40472e04-db5d-4d41-9857-d8104eaf7180"
        },
        "item": {
          "id": "db1bf792-258c-4dfd-96b3-3c4150053625",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ee11dde6-af41-408b-b7a5-5a5c60b6725d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355c18c0-9e64-4c44-9118-2587d4d57869",
        "cursor": {
          "ref": "1e3bc84d-c2a3-41c3-9076-fd715322f049",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "896f8785-1c7b-4186-818f-255000508966"
        },
        "item": {
          "id": "355c18c0-9e64-4c44-9118-2587d4d57869",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9d768b96-923b-47f9-96a9-a584f87bccdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66df493-ea08-4b38-90c3-aabe7aa01973",
        "cursor": {
          "ref": "eec077d1-997f-4e70-87fa-012d799373de",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "310ddaa1-ad88-4795-880e-0cc6ef41ab22"
        },
        "item": {
          "id": "e66df493-ea08-4b38-90c3-aabe7aa01973",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5f9f9dbc-c05a-4856-9f24-611f8049d5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc71a6e-e323-4c6b-b872-62cf5a84b2a4",
        "cursor": {
          "ref": "520e7ce5-67e1-429b-b5d3-74f0ae5144ea",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b68dab9c-0d54-4493-8968-c1bfca700981"
        },
        "item": {
          "id": "1fc71a6e-e323-4c6b-b872-62cf5a84b2a4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "912f5d61-2882-4b25-b880-735ca272a853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9437c259-ce25-4c7c-9975-a828007253e4",
        "cursor": {
          "ref": "6d6bb04f-fea3-4451-be1e-3a02a48c3caa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a3958a82-d780-49ce-96b9-0cd4816770ba"
        },
        "item": {
          "id": "9437c259-ce25-4c7c-9975-a828007253e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "317279ff-137b-4463-b54d-86ad9b7a57e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e4b9fc-5f70-4e85-880c-6f3d2c830ae2",
        "cursor": {
          "ref": "cdf56b9e-c14c-439d-b2d7-1d0647eb82fd",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a4db4076-7989-40a2-bfdf-dab1a318c17a"
        },
        "item": {
          "id": "b4e4b9fc-5f70-4e85-880c-6f3d2c830ae2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f241fb37-daa1-4d5b-bfc2-3b748bd61c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e71e2a2-d8ba-48ba-8bca-b9a247d2e0f6",
        "cursor": {
          "ref": "6d3d28b4-f2a9-4af3-af53-1f9c45cec24e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c53acdd5-5c69-4a8e-9041-0707822adfc0"
        },
        "item": {
          "id": "6e71e2a2-d8ba-48ba-8bca-b9a247d2e0f6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5ab30529-a242-4eb7-8b81-db7f6a0e1573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71218d50-226f-41cc-bff2-51ec2ddcca93",
        "cursor": {
          "ref": "9cfac6a4-4514-499f-8105-681af3a7e6cb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "289de767-e99e-4769-b7af-aaf55e26c870"
        },
        "item": {
          "id": "71218d50-226f-41cc-bff2-51ec2ddcca93",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f5a44041-a93f-4ad6-a606-9a6aba48dff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8802abaa-115b-4506-bb23-a424c30fa845",
        "cursor": {
          "ref": "9ea74f2f-0b6f-45a9-aa74-d60b75f80b7f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2c11b313-2355-497e-98be-c1915d10f9b2"
        },
        "item": {
          "id": "8802abaa-115b-4506-bb23-a424c30fa845",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eeb0491d-f68c-44be-9204-621c5ccf0f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79896fc2-294b-4902-a91c-e0a1ae455b81",
        "cursor": {
          "ref": "f3e4eb71-2150-4047-b05a-3b4e946b053a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0384ca92-d579-45c0-8d9a-a30e64126e08"
        },
        "item": {
          "id": "79896fc2-294b-4902-a91c-e0a1ae455b81",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "375021b9-a8d9-4038-bafb-452fa9b0e7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "d7b00edd-c2ce-4641-a962-2390d19c6993",
        "cursor": {
          "ref": "290b3f3c-562f-442c-a464-756a8ae2beba",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71602ca8-1778-4bfd-aa26-ad7d94334cd0"
        },
        "item": {
          "id": "d7b00edd-c2ce-4641-a962-2390d19c6993",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a1460869-15c0-4a2c-ad2c-565dc9824859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "1f06bbc6-6fb6-4b96-b444-76781a5b6af5",
        "cursor": {
          "ref": "70ec36b4-a114-46fe-b44b-5047fb6a83e8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bdaf52fa-fb6e-4e20-a926-c3bec1a4280a"
        },
        "item": {
          "id": "1f06bbc6-6fb6-4b96-b444-76781a5b6af5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6fba796d-86ec-4a47-95e3-7e5cc9247373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "2baa4e84-99e5-4a73-82a7-a45da4876e93",
        "cursor": {
          "ref": "82803841-9970-487c-9a45-fbd40a116d1e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d147cf5e-15ae-47ff-9198-1d2d079eb091"
        },
        "item": {
          "id": "2baa4e84-99e5-4a73-82a7-a45da4876e93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2ab9b6c-22e2-49e9-9f37-037064bfbc7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baa4e84-99e5-4a73-82a7-a45da4876e93",
        "cursor": {
          "ref": "82803841-9970-487c-9a45-fbd40a116d1e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d147cf5e-15ae-47ff-9198-1d2d079eb091"
        },
        "item": {
          "id": "2baa4e84-99e5-4a73-82a7-a45da4876e93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2ab9b6c-22e2-49e9-9f37-037064bfbc7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98106819-c478-481f-9abb-7798a02ae11c",
        "cursor": {
          "ref": "be5c62f6-248d-4d74-98d1-166436dc8073",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a17414bd-42aa-4294-9128-250e46ee95fe"
        },
        "item": {
          "id": "98106819-c478-481f-9abb-7798a02ae11c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "413e2f49-49b5-4534-9578-6bd71f15c3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e76e389-571c-43de-aa6f-571a8bc2f7ab",
        "cursor": {
          "ref": "88d0a49d-c16d-4b6a-9a24-f26403cf31b5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c04d332a-cc41-41dc-9da8-2f5cb1d54982"
        },
        "item": {
          "id": "8e76e389-571c-43de-aa6f-571a8bc2f7ab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f67d6dfa-d3af-43fb-846f-91a4e79399c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}