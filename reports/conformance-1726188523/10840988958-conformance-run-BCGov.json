{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d3273135-c4ea-4e7e-84b8-54c1c5af72b9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "18c822d2-a721-4c2f-a8e4-2b9ff8908063",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6eb626aa-5ef9-4e63-8baf-8a15d79ce8e3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5fecdea5-30d2-4db5-adf9-feb026c1cb8d"
                }
              }
            ]
          },
          {
            "id": "259ae5d5-5e5e-4ead-94e9-7b23b160e41d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c54cac5-6ddb-4066-8ee4-3c715ec581d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ec50ebd-a09b-446a-a3d1-4f406f1b881f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2f76ee6e-3646-4ad0-9b3f-c17215af8b0a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5f0a5e90-4f32-46c8-a97f-7f7444869d22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e2153ab-cf9d-434a-af20-d36809046b06",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9f905ba-b2be-4e6b-9d4b-a7019bb1999d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f1523d6-275c-4e2a-88db-7a31f3171a75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ff0e692-c26c-4df4-a0b5-721393064f5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09240c13-badf-4773-9543-2ff7b92f9bb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eea3f648-bac8-4f1e-a059-c74aa9bb8c9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be814945-1d30-4286-8cd8-3228e79874ef"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "465e7c3d-e11d-44c0-8faa-9f34dd82fb60",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8597da3a-ba59-4503-8895-feaff9da43ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2aa2735-1ac8-4db4-a1de-36de694f242d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bccecab-4608-4e52-89c1-5aff620d81d3"
            }
          }
        ]
      },
      {
        "id": "c7950924-3b70-454d-bbd2-b6b61e56135b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e7d2e3d3-0cde-4f9e-a058-45dffa8461e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fda4cbde-f756-4c03-9687-306967981aff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4295264-17f2-4db0-91da-61fcad6128a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61d447-52c8-4730-b5ba-ec3ca9e116a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cadf5a4-4e12-4477-b455-125eb0a2445e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fcac7e-f130-45e7-b32c-875b74f41399",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a826c0-1520-4a7e-a9bd-3090266118de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2026a5ce-4909-4789-b26d-9945cc71e728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a788746-da55-4a3e-95f2-f51d047f80d1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e06fdf-d01a-4be0-99eb-1c0dca0b5afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c6f1b13-83c6-4752-ad2d-b20d997134a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0384db4-4ebb-4eac-a6b9-bfb9003755e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ace9659-c2cf-4b53-a1ca-46b73e365342",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627ed2fc-e709-43db-a7d0-ab3934a7f876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e09cb58-d821-44fd-b316-c1d82f3b1a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5894c1a-7922-4d4d-ab89-9ac46987defc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6674fc23-57eb-44dd-bfd2-3c949e2cc0ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1ce28f03-45a3-41da-a664-4ecdb8adfab5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ade7df62-325b-4150-913b-e9fce4d958bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcf1fd4c-d21c-4ad1-a8f7-1260fb0cac3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f123f1cd-2e5c-4a2d-b562-09187e1421a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "422d5628-9c97-44c8-bbde-83d10664e971",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "af0c7db8-f2cb-4e70-ba1c-c25e57ee7e6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61cba0fb-74d2-4593-875a-6f18c6a3703b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2b18366-19cc-4b49-9992-561a0d105d75"
            }
          }
        ]
      },
      {
        "id": "8e8742a4-a823-4a55-969b-f3e96f2d3de1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0f07c84b-0934-4a3c-a101-8ac6f2de3249",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52967f99-1c91-4bba-9076-14d49ee7b019",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bf378664-2838-4867-9d09-f6b73e370fdd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6dfbef-a9d9-4aee-8527-60fe5a2b4e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a588bcd-98ac-4896-b837-c39017c5720e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bab7162-fa28-4efc-bb9a-4b8153a0486a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f579e32-25b0-4f8a-a614-f0d802b0cc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f2b3f3-8f38-4c68-8ae3-8d6689fc8d01",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca83cbc8-391a-41ee-8ecc-a638bb4a62cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22043957-504e-4deb-955e-8a1c056fe81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891928c-f073-4cb6-b74a-6f1c39fb27de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "773d61bd-08e4-460f-b126-7971060e3fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb466210-2048-44df-b9a5-41217527b2c8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b847da-dfd1-42b4-8cbc-b8bcb896cc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f855851b-c8ac-4636-bb21-e1e299edcdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227e4a79-fa90-41c7-8e5c-f7fdbb434e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0a01c89-3cb9-4708-9919-ba8054540e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a4f0fd-5990-4f1b-83e8-74d2ed03b860",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c356f8-7078-467b-8c6c-d66738e07d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfd7979-4062-437d-94e1-d4584adb9e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e091f8d5-1f16-45f6-9cd0-9efee6c1c991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb051d8d-d252-4696-8adf-e3f19c132027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72a2826-136e-4c6d-a52d-69e15644876d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d04934a-4c73-4f1c-93ff-a1e32bc8892d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e58c373-007e-4e0e-bf25-26859dc80eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0df789d-a6d7-493a-ad20-7c81f4d5e769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e511bb2b-b64f-4257-9afe-d11abeeade5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf99d36a-2e9c-4f11-bbc9-a5a244d337fd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c26ee2-8ddf-4874-9136-f3e57623a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e84566-e082-40e3-a416-a849b33f5f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0368d0b-97b8-4904-a54f-eaf140ab63c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7018ccbe-d873-4e82-b31b-17d910698fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b5ce19-f598-41ff-835b-88a01914e1ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1d3b65-e145-4899-91cb-6ba30bc995b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea4d1ef-8eb0-4054-ae18-f513c3261a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca3f0ea-7ca2-4691-bd5f-6aaf16abdd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2610351-c309-4fa3-adde-2bff12eba76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9e4e84-08f2-42a1-89b8-a007bcc96dc4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037103e5-e992-403d-8bbb-fc522e6bff85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592c25a2-a4b4-4bc9-9720-4d587820c1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9b9657-3a31-49d4-921d-93aea8b18cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0acb89d-8f8a-4a1b-b9d2-b72aea6e52b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab3b860-c6e6-487d-b1a3-8098d5b1bc1b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f4ecc1-a5d0-46f8-b164-452a5c0ef8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebd9f43-dbcd-402a-89ce-72970d55c68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edf7a35-e961-4c14-a178-a0c0c1b9fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3276e213-ab76-4361-a5fa-743511a965b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be40898b-fef5-4c75-9e3d-35bf8925de75",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d119fe01-55cc-4636-b858-3b84bc3e5a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b2cee8-1e28-4be3-b7e4-87e705d23389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0e99c0-39d4-43c8-b228-3c0a75e705a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f0b8523-2899-4c31-a251-cace78b88106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260daeb7-b0b6-4e63-a8db-915535b6eee1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08794f4-e94e-4f3f-bf57-f5f34f44307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a61a46-6861-40fd-8458-5d1adc343c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9adf93-275c-42f7-bbe7-1f8d1829a37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1825ca64-8ad0-4995-9dd7-b067ca9adb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecbaf08-6393-43f1-8bc6-6a6f61536dd2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b7b989-23b4-4c06-bf8b-9b910870da15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08a54e7-3b98-45fe-9a3a-6c659a484b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8318f3b-41bc-4a88-972c-1b16bb2051ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18398b8f-b91e-43d8-9fe7-0130f5484bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7528349-352f-44d8-9d38-0698173dbf9b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8d7900-da04-47d2-a9f5-858101ba9f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a53af2a-7688-4579-a26d-9a228d090b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bebb31-7bc2-4a93-a2da-0e4412d89d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb17805f-c419-4111-9c79-5a2d82a54b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599f19f2-f93e-47e7-977b-28eb5357b7e3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe6d89e-6c0f-4902-a428-fe706accbf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef2f3a2-f87f-4825-8dd7-7d06ab672c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0f2b74-3582-4525-a907-b4d016b6c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe80596e-9a8f-4934-a434-903ef964891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798d9a71-8d06-4624-a44c-b94a7be78351",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c553d4bd-5f19-4769-a221-d93839b38216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6a5b9f-f8c1-42aa-8f63-e646d3f3c39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a3fab9-7039-42dc-b4f0-9ecfe9988f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcedc66e-dfd3-4e8a-996a-e4e66c5f3b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cddf2b-14e5-4fd8-9dad-e714a7db1a87",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa2d206-a6d7-4df9-8176-55c390c9dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90459b52-9a6e-4290-8636-17140bd38f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11b45bc-aca5-4b1e-a208-55245e4224a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25e5c1b2-3df3-45cf-9df0-3174c0e413a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c28bea5-01fc-4be0-ab97-0180f9c3713b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe502c1d-2830-44a4-b38e-1ecae3cfb33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bbcdd7-0b1e-43c1-92f8-af00e89d3251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073053e7-41a4-4fd5-a5ac-c4d8b1799da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b415b6-abe1-4da2-84e9-9371e2c89f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d670f0-e055-480e-8065-48ae340fc785",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73d6083-9037-40cc-9256-8d2b8a19219d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9444f5d1-4991-4927-b002-056287aaf5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb8d1ea-e94f-4741-a8f2-12bb689a2044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6a9d14-4945-445b-926a-9618d5aa1ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723d1f12-cb34-4494-bc1f-1c8b8d9da30f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf84a3-5d39-42c6-a298-441360e46cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17761af6-cd6b-4372-ad68-a526fdfabb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc77a9-df84-4f6e-971f-e12d0addca94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3b5f60-5a65-42f6-bd07-26c4bf595d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd42c4ce-34d4-41b6-add1-e1e1c736a13a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31890cba-5db7-4b6f-a6ee-33e8d1a4c275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb79defe-3d37-4d20-b89d-d568eda6175d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab8c57-2793-408b-8898-5955b919668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f592d74e-cc24-4de4-bdad-3a52f23eafce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dda9793-149b-413c-80dd-2f2a3451dd20",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ca8757-b741-4665-8a71-299c568b3b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e309e23-0b42-4056-9212-2c4930768f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daf7d7d-d257-4e18-91cc-9471d8c60320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62fd8cf-80b5-45e6-81e0-56509d3956e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc74c82e-8fe3-466c-9c98-ebe1c9c58cce",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde14e8f-e918-4478-9ab7-eb0fc1849956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c6948d-fdfe-492b-bcf9-8f24e42ea30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04dc7dc-0467-4400-8786-376d36c4f827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d28a45e1-4809-4970-a9d1-97b5f5d7d06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1669e276-ec70-4680-933f-af8109432091",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87789413-8ace-4cfc-8f86-21899e943cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7724893a-75e8-4c5d-bbac-49e2ca7793c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff82dfd-63d0-4453-8f20-38a9a351490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31cb4f6b-fa6a-4a26-88b4-8ceb597687f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209a4edc-5dc2-4f60-9a08-3ebfe65f4be6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f586ece-8783-453e-beb2-ebacdef9ca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd251cc-ff13-4521-a502-a627af01b2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93701ce-7e1c-4088-9298-71c150719492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "783cb558-2ece-400d-b556-1f7a8f9748ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f96f11-934d-4650-b940-2308be9313a9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5773c9-348e-42e0-a30a-2dfcaf4cc1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c805a8-fbc3-4a69-9382-e28e2ea8a1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7c4c30-6812-428c-9aa3-6d760e440295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02904920-4303-4f33-9b1e-9c374eca736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02d3f02-9417-4197-9ed9-7e3d2ec7cf87",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8926747c-ceea-45f0-b93d-0218be650121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41534dd-e26c-4afb-90ee-d16da562c397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658774ad-2f5a-4747-9293-9677cd67433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "756ff217-e216-4a27-ba40-1a739b0bb359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1476800-bd51-4c67-a64a-360fced46934",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595d8178-c312-4b1a-852e-8ad8c18e4617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de55e57b-2e3b-423f-844c-0d408248bec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e60365-1cd2-42a2-bdd7-a1f87807356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d813b63-052e-4b76-993d-cc460d222597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d873c84f-0780-407f-a1a9-44b39cd32c11",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b8dc7e-d99b-4bd5-a1ba-86406468ccf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fad0dbb-1d48-4d97-8845-79a0496bbf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e84962-91f5-43d0-bb8b-213de0b33df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e3ff19-b44e-4fb5-916d-32094abab796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5601d28-55a6-4f7a-9534-15ba44ce7238",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ddeaad-4265-435e-9f59-ee0b03abfb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafec28e-0e02-48b8-9674-ff5e9a241cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3ad9e9-fd57-4fc5-aa33-94bdb4d60907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29bda142-e83f-41ac-9ef8-285a80a9489c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68720ec7-e466-4bd9-ba9b-f0ae7d6e23c1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf69946-ccb0-4e1c-9a27-2c18ecb15a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dc993c-9f85-4a05-bdaa-6f1b432d49fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea29c32a-57f2-4277-b469-992b4ba2e281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51b4c7a-d6ef-4c35-aff3-f6a0592f36da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c891998e-3c03-4aee-a702-c7da33c37d52",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1349fe27-d16c-45c7-a3e1-d0c1a51f0759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae00469-156b-48f8-9769-b41c2831c588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a278fe06-d258-4f8e-a6b7-1711f010592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aff45b7-ebd6-41b0-8a53-a76cd7b841ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6b6f9d-9c7d-449c-9c22-c071fb70d38c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e830bb7-3949-425b-b182-b4de1cc51aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9e0d4b-5da6-474f-8e78-92bcf26cae46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e728a35c-97a6-4e8d-ac2f-b9b4237df338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66f45e42-a590-47b9-bf37-cf9ae4248e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365dc728-ad57-4d74-a60a-b8a1444c6798",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5034ce-f574-42a9-b15d-6775411dc2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09975479-db9e-4105-862e-526552f93316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c25c821-fbe8-4a30-afd1-242959be70d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be0b43c-f971-45da-83c3-dfe14e2b3c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4768f214-314f-4b0e-b418-934862b067cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03347833-458b-4b4b-b410-2201f4a69131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b27b70-f9b2-4dcc-b03d-893851838f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb0ad6b-053f-476e-83cb-c62b42bcfa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4890a5-3670-4ccd-972c-e70e099dd262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd05c2f8-81b6-4e82-887f-a087c309daf7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e59cb21-285c-4b0b-8233-b9f75aca5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fba964-a470-4a25-8bc8-e2c00b619b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c4d13-8d10-40ec-b68c-55ef9e06ab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf9ac90-1d6e-475c-b5e8-df2a17d4dbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a28fe3-4386-43b9-a12c-44e36e372cd6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fa6020-fefc-45d4-839d-05dffea9097d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05472693-ca72-4d56-af1a-5178717a725f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f033869-d1aa-49ba-8464-40efb7e600e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3e48ef-d865-4f80-80d0-1c40c0cca6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b26cf18-104c-45be-87d1-2addb1c33cce",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02b893f-8f50-4fe9-978d-7b80561f6ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b648f106-1843-4ff4-9912-34701794cf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72cbbcc-b9aa-4c22-a99d-e01b1acbb6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a05e45ef-5cc2-4fd7-a814-40306a966498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426b441c-8703-4a87-b94f-b271dc3077ac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99769418-68f3-4331-a424-3bb0f237d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00fc4c9-b4f2-4563-9688-f54c8789fee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab3ef8d-bde2-4d83-8c71-fd997ec88020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "efd08430-b2b3-4172-b496-6c88c16e35d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86cd6bb-41a1-45b2-84dc-ba86c26bafd1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26693a6b-becd-435f-8315-570a05be818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e4c83b-b551-48f4-aaaa-8f4b12caeb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae369515-1ced-452e-9a4a-130452946e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa18ee0b-c3c8-4a61-9177-c19fb979b95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd10596-4cf2-443c-8ffe-767d874752eb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd14e23e-a117-40c3-95a0-18f5a8f8c187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3959e387-59f8-4b0b-8f60-179307e027c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194c3cdd-09e0-4149-b982-d7c36b0130aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13816b3c-d91b-423e-8422-77e1ec35fff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304b1af0-ee93-4fac-b046-f5862cbe22cd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603b03d6-69eb-4b34-b054-961ecebb31ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fcf29d-9d9a-4230-8cef-d012f19b5d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2cfa9e-c37c-4c24-93b4-924cf714f632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4cd21d-211a-420f-8e7a-3e892f550abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50909021-0d82-4115-ab98-3dd8376d011e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2b286e-4610-4e2f-884a-c942c8358583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c125f085-fb32-4962-be6b-13112729a8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa9c4a4-0f5d-4b4b-b671-c78f97b2f3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f59094a1-46d7-4325-b11c-94f461a1258b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d1c8c3-5252-4c03-bb4e-55e6547e9a2e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f715b3f-a5f6-4e6c-bf26-dee7c1f91431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c54896-492a-4199-b688-6143f53bf78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87420787-8087-4936-a7bf-01f7de652c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "28afba59-3bba-497d-a2f1-36c2f969a0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abcd36b-ad0a-4064-9ff1-8649d4423464",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc27f3f-5c25-47bf-8089-7f60ea608826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6776f35-6822-4422-979e-610378ea66ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaf53f5-9342-4a07-ba63-906f884a2749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbffddf7-d419-42e9-a3fa-c1c414512360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7368ddc3-79bd-4abd-bdfc-05c61134d54c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade8c4b2-016e-456d-a07e-8bfa73b1d2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554face7-22e8-4f85-8e00-fb44d6b7446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848aa3df-6019-4ec1-8ff2-35252450fd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f994c9ca-a748-437b-8d24-483c19142de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffd8814-b8af-4d09-8349-158e8ab8848a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b867c3-a0e8-467b-9d74-d9608a5ad71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014bbc24-e17f-43fe-8419-2cc37c8f3cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f1e0fd-1b02-4d8f-b073-17bc4204e606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2434d317-f950-4327-94e5-be94a8419478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d320847-93b6-4cf0-8fb7-28ea6677a926",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639e95a0-bfe3-401e-a0b4-ee495c1c6669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59efe48c-1a25-4910-8906-b545413f42f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0781ddb8-81f8-4bca-98d7-45ac9c9be824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b291df2a-38e1-4677-8e9b-46a083f946eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad47ec20-fba4-4e7d-afa4-e24f49849906",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be6e18a-40d8-4082-a080-56f548501df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09214714-20d0-47f5-a182-d7c05e4685e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d875ef34-890a-4d4b-8e88-e80e2b2c264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aefdc67d-5798-4c34-8fa9-eb630b027510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe50194-790e-49f4-bc1e-17fdd19d8363",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ac0b68-6691-461e-baf3-cf6adf5676e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25547cd8-f66f-4360-9ab7-efcc183559ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8e9d1c-ae15-49d5-a8b1-40af6b4bd059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1997fa96-357a-4bdf-88b4-192a53e9b8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d4272-363e-44f1-a399-fb3daac31b56",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a600c4bf-6f52-430b-9355-117a178ed820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b01f17c-fe28-4ee2-9f31-0287bb5c3dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ff7c05-5a09-4943-b8da-54af9f51f4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca939cb1-f355-4c26-bafa-229c1fd1fbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6a8579-9a46-445b-97cc-307e19582008",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9295cf4b-972f-47c8-83b8-16a91a226a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5761a69-791f-4bbd-a72b-e00e02038eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af33270-5a15-4d65-8738-ee6f302f748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cdc5bb-c81d-4997-af77-a7d0295b50fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048e65cd-9bac-4435-a7b0-cd2c21fe0d4a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68648907-9822-4d98-b7f8-149ea3b9846b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5521acb2-9e19-4c07-8478-20fa4d1d11c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d843248-2419-4e4b-9602-fc0ee9168c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e558a0-b9fc-49e7-8c5c-63d6e4bb013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4af7da-f8d5-4393-9c72-a58619c07eec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931eeba3-14bd-4f6c-8735-1ae72b33ec9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19296615-2cec-499e-b58b-66351e0f0f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea8b155-84d8-4fe0-8613-4a29a62cab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db752c45-8a7c-4817-b963-df3e1caf099c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0525f32-7a78-4b3f-a5f0-68251225e0f0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fe363a-fea1-46ef-8603-78b333eaaa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d542e8-020e-4c97-9e56-596d8e0400a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8831950a-3d65-429b-9698-cdb935784627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e1b326-8e0d-4c21-92b1-9bf716cadbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbea2539-d715-450e-9ef9-0ac8520fb53c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161f8289-0808-48c6-b2a7-c458fea049bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9831a0-7131-433e-9a85-7a75de4f078d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c666639-da72-48e3-aac9-668536e9c286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8931352d-0c8f-40a8-9708-e8670572b0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68873a3c-46b1-4389-b259-d4437e337645",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cce605c-54bb-47f6-b05f-97694b01c5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa90968-5a54-4d0d-986b-35d2cfa4aa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a1ff6b-343c-4d44-88d3-60f932dd332e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "52a90b19-8db4-44f9-873d-3305b53e0469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3821bdc4-4162-4b6d-8e4d-b29f05a0a875",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2994af2-d612-41fc-94dc-d2606cf218a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2229ea2-94d5-47af-b1f2-0470b887648b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3933fa0b-0d1e-4686-bcd2-7a5c09775341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb69856f-b061-4ec3-942d-c53dde773d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f9205-0606-4020-aaf6-e9de866df55c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d838c2-57a7-49ca-9b24-def631bcf389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117b204c-2e08-4762-afe3-797b76034efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffad9d01-107d-44e6-ac17-465229f225d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca369b7-3bcb-4d81-9d7b-2a8cf3996218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57bbcd9-9324-4ab7-938b-60d82dc0cc1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a86283-e170-4244-9790-50dd8141ee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065fec70-912f-45ef-9a86-f8cb8ecbdf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f53b0c-6959-46fa-889f-82cf3764c1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e850c06-74f2-437c-bde8-34f74e2b57a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ffc82-ba3d-4dbb-99a5-78be20a022d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ca414b-e34e-4a0c-9d31-c1bc30f51aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152c7adc-aa8b-4521-80a8-5a750c39014e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bee5170-9e8c-43fb-bbb8-f61e1862e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5657741b-0ba0-4762-998a-0bc72c9d7c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff6052-eddb-49e6-a2ce-390a81c60773",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb53d4bb-7095-4caf-ba7f-1c00a921defb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2573accb-0817-4fc1-b6c4-489664cf8e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dd090a-3969-426f-abcd-c63ea65910fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c4d50a-6731-4568-9163-7e406fecd32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aad85f-50d4-4226-bf54-1122e98ff954",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d246eadc-f33b-43e9-aa7a-16bf96b9d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d04c8e5-91e9-4544-8c61-df90e9cf4268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df09a8e4-fc75-4ed7-ac3f-10aeb26a38d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "db850a12-b489-4220-a369-5832a5f7603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39600e62-151b-46da-8d55-43cf6bc8fe6b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb961135-68c5-48c6-8837-f2c28edbca22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2876b97c-a30b-4460-89b8-de59b04a667d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99b5906-084b-49dd-9978-e2ca442c9744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d83acc1-8e36-44d0-9687-da8bf6a7d2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b441fefc-868e-4cab-87fa-d1e5c5bae1cf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e16b5-16d2-4230-a3b5-f9e8997ed50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcdcba2-2401-4aa1-87ca-22dbd66c3b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adb5711-4a10-434e-8f70-ef23cd0cd8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5547cd9-658f-468c-b3af-92fe541f5cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53af49c2-6a9e-4b44-9a97-8ef83a11ec83",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b536a47-3985-4489-bedf-87d93ff6c846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2e0645-f070-4e9d-9711-c33b1d389344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4f8457-051a-4d25-ac99-96ea5b01da64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9090437b-32e4-43da-bc29-bf6e7c434ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32935a7-c75e-48bc-a304-47d6dcef6c67",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b419c46-0cba-4d6e-91ec-338f94b6065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae34a230-f224-4222-8f05-1b30cdcbd88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c214a78-2dd0-436b-8d2d-3e4526e95908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c12455e-483c-4ab1-ac22-c944cc681f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ad620e-ee2d-4bf5-9384-638f9f69b497",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bea96c4-b31e-4ff5-b508-54987a558507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b33ae7d-a6c8-407b-a1f1-c0b37c866c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94802e8-7e63-40c8-b467-bfa6e79f7254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d494cea4-b9fe-43e5-976c-ccecb66d12e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cebcc4a-1ee1-43b2-85a7-8d8c70dfc478",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5794fda-6ce0-46c1-b7c6-b3771fafb47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00908946-90f9-42ac-89f5-f8f07835437c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c218a20-0dfa-4488-b6dd-01d234b41fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a062eed1-de19-46ed-9b5f-a982c3ce5fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f462c8-9508-479b-b15b-2924950dc929",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9b8645-6851-41ab-88ff-ca790c2259b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3e4996-dc82-4f99-9082-97463339658d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a21e4c2-1531-49d5-b88e-025ea23a5fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c01860-1efa-485b-bc7b-e9e775782e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26f2c1e-4a3f-42c5-b4b0-ba4f5816c58c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60789d08-10b5-40cf-8986-fedb0ea0e02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eec14fa-6c32-4d75-8273-91eb60404237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2de559-ebb5-4e70-9468-40e31e8dbac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c12b880-014a-4397-97d2-1991eb5fd4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9774cc8a-9eeb-4a71-8fec-5e92bfca792f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ae20f0-712a-4378-ae56-f871605c3c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16406be5-f46b-45dd-8144-4c1ce5eec0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825ba4c2-3b9f-432c-8165-802d7aad8466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53d069e-a5ba-4ae2-94f4-e296da9f6ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e91e1a-48a8-4999-bbd2-d43c73553d6b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bf75fc-edbd-4da0-b9b9-2a8ae4137275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5852562a-f9a2-4df4-bb83-26cadadbd598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a6a8a3-4338-42e9-9de2-3ae2591e1188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "213c3d45-1610-467e-85f8-b667f2bb399c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125d8a49-f599-4f53-b117-5f4d29102e77",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0b14b4-e8c0-4197-b1ae-21311d5aa8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dcb073-c6a5-477f-b9cf-ca5b8e555da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d426847d-9aa6-4767-a797-30d8b236d4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e51f82-72fd-491a-9546-97cf464939b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a515653-1086-4af3-af72-acec878e7ca1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1942e-a5de-4477-b15b-b52bea4d78e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58978e27-2c7c-46b8-adfc-10d7cad8d5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa341af9-b3fd-4eb0-8bcc-014ff7ecb4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82138635-1030-4bbb-a05e-15e0ff1c16da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e28ddfd-9e9a-4fbd-97ac-4b8dc25ddc78",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0979e87-9a67-451e-a488-d9f7cbfc6fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80abacb-0fe7-49dd-b787-e814cd54a2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6865cc-69e0-4d3e-a42f-0144370a9173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "befbd483-d5b3-4d7e-8353-19ca043eb792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253dcc58-a631-4d2d-99ce-191d8c8cf089",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80aa3138-5ccf-49dc-845b-08393a5579d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65cc768-6be0-40de-ace0-a3ca1cf1e62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2c033-6eb5-4a16-8baf-23883bac99b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4b8b89-851b-4728-a84a-8e4d5fc55a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d606da70-feb0-47b1-972e-b7e289f42e30",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb70a194-2e13-4a45-b8aa-6f88d878dd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c9bedb-bad8-478e-b929-71d55c7c4a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406829df-79f3-405f-872f-4a3df4a64a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69245d7-2b3b-4505-8d12-32dbbc9e66b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd66c3f2-614f-42b2-970c-162951054f1a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f52bc15-915b-4731-b7a3-0f32fb81c7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feafe9ef-27cd-47ae-9ab3-b03f8ee5df9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd5620e-56cf-478a-bf9d-cb302854f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19064f58-a9ed-4ebd-a8f4-599bfc4ee542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6d9994-09db-4d62-9f39-61fd56a771e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc4c352-31d1-4d20-8094-462cf6e63d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cc8d06-f29f-4a2b-967b-8a6351823f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d44496-0f7c-42ba-bbbc-311b3df107c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "104bf0c9-5aa3-41a2-bfbb-9b088f5fb07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daaae85-21c9-45ff-a926-5513a3990d44",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e43fd96-19ba-431d-99c0-efbc923d45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe9e20a-6834-485f-9692-3e169dab801a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9a1acd-c290-4f02-9031-74bdca2a5bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28e0f44e-1bc6-4db6-b3c7-53301e7c293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e08b69-3a8e-4069-91db-40f1dad70896",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176dbc7b-75d5-4ef8-942e-7b18ca5a9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1076cd3-05a9-45ec-9f1f-f606bdbadc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b64e61e-ba30-4b0d-b701-79fa91fc24da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "031a6142-daa8-4352-b70e-36684c9b7f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271ee63f-fb01-48b9-b374-16723da095b8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7630b-fb16-4e60-b689-9d9f106341f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df6bea1-ad82-48d6-b9a0-a9b23bf99f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e757d45-6338-48cb-a27d-00393ee2fe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "addba495-e996-458d-b946-3b2a6a5851be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad3632-8b3d-4f4a-bc56-94848ee1db1e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf298ac3-e786-471d-9aa0-823f10f98b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2445e9d8-f7d7-4c2e-9f9c-a7680e17b457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc34bba0-021d-4246-a1f8-b38c2729f639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37a0e23-7518-4801-ac32-0c8b67c77ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56c7555-966e-4bc9-a167-7f51d24fbd75",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981ad5e7-4e44-47c7-8be7-df9a5186b468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80bdd28-8a2e-4a4d-8391-4bb348a52e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5dbaa-309a-4193-88ec-93dd0a415e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1444bc-7dc1-4477-a676-09ed2fce3de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459c5767-9b98-4acd-aaf6-56d23c4c891e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1e30c3-f9c7-491b-b155-bf1af9490d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1b7551-6450-428b-8078-92b09a248c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a54a98-3791-43b8-9dbb-b29189724f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2917f906-7923-4686-87ea-c7ddee1aea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4370a5dc-220f-4db8-a7b7-456c148ef7b5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565947c8-f052-4bfb-8e8e-cd91c207a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe67a3c-a064-41fd-aa54-6406d033ea59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c1e153-540c-4a2e-ae2e-fd04e4ba339b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d57989e0-5d81-4d88-a5c2-e210ae9ede18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1c6662-6622-45f8-8fa9-d029119b9376",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6259f0-955c-4e07-a064-abf013f1a951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76f3884-64dd-4a60-8932-b00f1ce4568b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0768b02b-c922-4fe8-ac93-025112c6323a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7912bb-e0db-4e7c-974f-d8d1b6242ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616c7d9e-52cc-4b30-ab28-4c1a56ced3bf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93d68a5-9838-4631-b81b-d8c6da23ae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282dea32-5c88-4e38-b532-aa5adf396882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8029e77-4bf4-41ca-94f8-57302b4495f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b303425d-2e1a-4f6c-9c2a-b52428466628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b5f44a-b8e7-4862-b66f-66d88efaab36",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c06e5b-a1e2-4f91-99a2-b0c297c44162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad93247-ea1d-4eaa-9079-970ce869c43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e397ca-3fae-4398-bb0a-efb3801ea597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32b2f380-d8e1-4d66-93f2-7f5551b2aed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94bd4d2-13f8-4fc1-bb3e-e0c91a9ae56d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e861523b-611c-4711-a860-4706c37c2d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66552e00-9b74-4502-87be-86a2d6fb1031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9d6b13-3574-4892-9ef4-781fb36aed5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ad0450-0c8d-4f32-8fa0-8bbd0bd4c16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e478b34a-1bf8-48a1-afed-109de3f5494a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdfc83f-fd16-477f-bddf-f7546fa394f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73751d12-1622-4ba8-bb8d-30f148586767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6148e9-6962-45de-8d02-244d468fdbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6f0d16-651d-4d85-be53-3f9b8715d402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edcdec4-966a-496d-ad74-332eb6962b06",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23b48db-b329-4de6-9361-d5149b029520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca883fe4-3bd6-47ce-9b65-374e030df527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9f2a9-0ed3-4b62-8f71-4f965c6b1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d58a026-fedb-42b5-941a-c1f9c36d89e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb048743-0c9c-4854-ad8b-1087cd8dc7ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67f1b858-93e5-4147-9d24-4af2257082e5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64574ee4-4705-4337-8032-8c51586b8951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68dce867-f7a8-4c7b-a1d2-1559277b1f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28a9e32-d1af-40d9-859c-f47718716c36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27156f0a-f848-43e3-a565-ec0331355992"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68ad54db-3c4e-4dcc-8a1c-9aa6e58f6938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52560831-08e5-4f3f-9836-d79eee5f0d57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b215be-d7b3-4ec2-a649-c15a17bbe504",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c9b44f3-7530-4485-8d70-11f7278e8164"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d05b626-f845-4d37-86c1-0fa2d77f34f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16004e82-85cb-4dc9-85c6-e32e0d2cba6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae93904c-41e8-477f-8665-dd04ec105434",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21a3d8a2-af27-4cb2-be58-a68eba44bf33"
                }
              }
            ]
          },
          {
            "id": "982dd7e3-cd30-4624-88f4-5a2264c74161",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f320286-8eb4-4af8-b862-5693a7563060",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3fc1d0d7-c49d-4a30-95b3-1bd5366b6393",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113d2715-73a9-4fac-a1b5-a8d9edfb2f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b10af591-f07c-4530-92ad-bf5d8ed4508b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ab190-1486-4265-8e89-b758505b522d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cf82c4-a656-473b-bf41-f8e9a55628b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f587d887-f30f-4c3b-86a5-97ed49e8a4b0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb257ba-5419-4d32-8b71-fea42894998c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bc582d4-b0ca-4ff6-890c-2e8cd68ef5e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a2401c4-987e-4725-b5cc-44da5722a85c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0835fb2-744c-4b5e-9dcc-b235437c2fb6"
                    }
                  }
                ]
              },
              {
                "id": "886cfdd6-2f5e-415d-85b5-305e00aaf050",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f918f456-2de8-4988-80b0-13d7b284d0dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acf7fcc1-835f-4ea7-b581-9de35baf46e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2302d491-8528-45c0-84c2-1d321fedee41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7c9a2c9-1105-461a-81ee-ed5a3d3bd8f2"
                    }
                  }
                ]
              },
              {
                "id": "7bfbd738-f720-4e96-84da-893bb7b32a32",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67aa319d-5aa1-43ed-9d32-693d03947acf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79c7bb69-8961-431d-b5c6-97e1277ad02c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25352157-d035-4bee-a730-4c78327d88f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c7db44a-6cf2-4046-ae05-fcdfb4ab2267"
                    }
                  }
                ]
              },
              {
                "id": "5aa6ad23-4421-4b34-9e5d-2006b368e997",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa30d761-5dda-437e-9c33-18a05b14d729",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f29e0d31-eea3-46b4-bb6f-06f621e1fce0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a1354ca-5f39-4d52-8218-d2bebab67a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "970228ce-46a7-4c7a-b753-9ea51e2f64d5"
                    }
                  }
                ]
              },
              {
                "id": "e11e649e-0a09-48ad-9fc7-12f6290d61a5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaa5c4c2-0ac3-4c52-baa2-d00b1d0a291e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9244eeec-bc0d-4cf3-9683-fdfc69f18e0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de385904-6a7f-42ee-b1d7-bce1321913a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2fe9ba1b-4887-4493-a4d6-379999d381a9"
                    }
                  }
                ]
              },
              {
                "id": "ad732c85-34f8-4a28-ab75-4568b58ea893",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e86f2fbe-12f8-4599-b16b-0c90d0bf6023",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "046ee6f0-b864-4228-ae1a-0ad2a349a7f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2380ae61-3282-46c2-92c7-e1b2123af310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20d2e187-42e7-49b3-a3b9-ae52411ae3da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c53b0893-7d26-4af7-acbf-411a33651ecb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3b26eed-b6e6-4e4a-8d68-aed8177d30b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fdf11ff-7602-4b60-b7a1-cad0a18ffc9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "070a77fe-1bec-40dd-9eb4-d4217683ddd6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa5465ee-a5c4-4f72-971c-1f25be89893a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "36f0e8d2-d1b3-4f96-85d4-bfdd3d37f0df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d2bc3a4-631d-48db-922d-ee2d9df5f908",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5fa5dff-5cdb-432a-80b2-f7ef2ee819ad"
            }
          }
        ]
      },
      {
        "id": "1ab7bf03-5efa-46e1-997c-5bbd27138cee",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "082fb90c-0782-491f-be9f-69ee74b6a4ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f7c580-fe04-4924-a93a-6dea5adccde3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5aed7988-23b5-4f6b-a7c1-306b504c71ca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f79d9a-747b-460b-92b8-383d25f48101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0af1642-0ba2-45ef-b17d-610b5267cbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1eac2f-dada-4607-9b4e-31eb45b90847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e95f333-b5a4-4cd8-9496-7df118c4f8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88265267-90db-4032-ad12-1de3dc75041e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8afcb7-d2bf-4e84-978d-3ccd3118b3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1618516f-aff2-44b4-899b-30650643eabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f4d673-00db-468c-8d24-afa77d14d19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "459770a8-1067-4a1a-b00c-bfe1ac3c96cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3a74c3-27d3-4672-a4df-bc5331b80cbf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f207dbe9-ddae-48a9-ab10-5b50a2761a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faff4695-1fa0-4971-8280-4311f7c82dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af66639-9537-4215-999b-9df6f7ac883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4114f9fb-3389-4ae9-9527-76493792a695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179054cf-20cd-427b-b0c8-c46c7daf7bda",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec8872f-6ffa-4b0e-99a9-2f84ec8e410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468e13a9-96be-4f11-a576-48016b3bca71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecee48a-739a-496e-823a-d80f2b97554b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ad1367-ec11-4e86-bdb3-0d15679ad363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044fe5c6-d0df-45b2-a6e6-bb435b02e028",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0684c030-8b76-4446-901e-ccb6d0ed62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bfc5f5-e770-47ea-ae28-7143378c1ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90bc5b9-21a2-4bb0-b21c-4d1fabda669a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eabbdf6-3d4e-4b41-ad71-3ea9bb228859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3681da8-32c5-49fe-9f4a-2d010eedb7d8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6eb9b3-3676-412e-94b4-5a45fc5e8b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ac39dd-4a34-45bc-bc6e-b6def0dcd8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28a0b9d-d7c2-4b31-85c7-aa1e3e55b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff494525-c861-4e5b-8f9f-2f7a51b6f9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765637c3-84eb-4b58-9774-01e911a3bff3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b13bdf-d916-475f-998b-3948bdcee41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b42de2-c4d7-4553-9382-d7ad9d5ad72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b5882-0e11-4914-9efd-fe0f8a85c150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8639fd-a828-4aa4-b7ed-ebbaf9b3fc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197cdf1e-11c4-4641-abcf-31908b9aef07",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d769a-0a8c-487f-8297-10f4efcfec68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53f4ad4-af2b-4180-8eb0-86759367fd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1814c5b2-3dc5-4f77-879e-7ba0f79f210d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af4bbe5b-11f8-4744-b961-f77afc63a03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba53f43-ae70-418b-abbb-5bd30cf638fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b3f813-ab93-4b18-8a95-071c80bc2a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c04aeb-bf0e-40a0-abc4-902218890747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70860012-d668-4eea-b85c-b5f2316e510e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef50ebd-a220-4721-9e7d-d323117ac501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e48f2f-b6e5-43eb-82aa-1c4be267e181",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dbdee1-f23e-4801-8b83-f833384f027b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7d134c-42a6-49a7-97cc-d297e56f7ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc47fa3-395e-4a33-85ae-96e36879eb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d364a61b-a107-49a5-8322-461614b72357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f34696-1bc9-4052-bbe2-e81c5f763577",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0d18f-208c-4573-8001-fd15372ab523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c255f-250e-4c1a-803b-df3e9c7a72b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c98dc58-517b-408c-8abb-e49e3dca1a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "40894bdc-f73e-4847-a7e6-70f652b8de6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad7213e-1755-4f60-94db-2ef6da84d3d0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f4bc8-b799-4b9c-a934-90e1e75a7e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04693656-ba62-4194-9e06-b455d72bc4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1999eb11-c960-4319-8c09-7293c569c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02184166-a5f9-4191-809b-9273fb47c944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61ac8c3-7c41-4f73-9ad8-9a25ea787399",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cb115a-f89c-4b5a-9fd2-59bbf5c953bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d934819-bf56-48b3-9861-bc56354a24c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b205c0ef-d7d9-4665-ac26-4cd80f5d420f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "982def1d-ae6e-44a5-946b-7600cea641b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740a2283-9f26-4317-9705-399dcb51cd98",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14429e6-3cfe-4d76-8aec-48e7d1e265d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d3c83c-c8b8-44dc-98cf-9597a1464cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efba86b-d09f-481f-8e2e-2fdc4d5d3336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6f5fbc-7987-4357-b1aa-8035962d418b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467a9bf5-7b87-4e15-95db-a0a294b95d67",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d597c9f-37af-4578-a021-0a05b2860af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3ef8fe-6ce9-47a6-9929-ec2804bda314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad63a93e-3bbb-49ab-8e7f-b4073eb4a64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "219cf97d-002b-45ee-b539-fc8df80bab69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc227952-b813-43a6-95c7-8915d81434bf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c396e7dc-b634-4332-bb3d-407fa2101f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21737f4e-ad83-4985-9fbd-25446ae29b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9246f9-1792-403b-b5e1-6cbf14abb7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "852a0bbe-e9ac-4df9-879f-a76309a5cffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db75f567-7566-4ed5-a8a5-b318b6711072",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c299c9-549e-410f-a001-49cf48bb44f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5a61c1-3cb0-4dd6-9e31-13a67f2adfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561fc1c2-c196-460c-96c3-6c090ce1997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b583fa4-26d8-453b-8544-e4eac11ac08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471cedc9-e4e3-4065-86a5-9b674594213f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad42c8ad-52a0-428a-918e-da4d30460432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c98f54-5c79-4e50-9c81-c20aad6d7bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15245dcb-7ba6-4a07-9f76-1fc8564ab321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44bf37ba-6eeb-40e8-8655-4b5c90d97d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81966fdc-2a0b-4de8-ae6b-a22187c01a62",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8baeb3-ae11-49fb-8c2e-78e273de6f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f8baa3-1cc7-4704-b56a-22cc8d16e661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1c86ba-753c-41ad-82ff-e00c56ed8a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d600501-9ede-48c6-bb65-23d26d03a87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f96a94e-fcef-4f59-8af7-2bc142dd6fa4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977c7e48-dfbd-4635-9e49-feaa02970a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdf1478-839e-4455-9ad2-b302b10cc908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb68d9c-08b0-43ce-bd1c-5f7e61079fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5e86c9-4206-4da9-a752-8b7db57f9a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ed87ec-9e1d-4252-b4f6-c91ee8bcb1c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76df25d0-b508-4fb5-8698-a7fcf1eb1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0627299c-2961-4e9c-a193-d6e4d5494b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb499f76-36a6-48ca-b2a2-9e98ef3facc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e371a3-b4b4-410a-bb19-3cace78fece8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ef5d93-8495-4033-91b0-7567218b8d49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d25f1d-bf4c-41de-aa52-24c839a2f9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cd7d0e-d093-4491-ac83-e16e3fe1610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e54c3f-ad60-4c00-b608-66bbca607ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06b6159-3c91-4749-ae0d-7c387230c726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87f208f-8bed-4b89-a6ae-eb7548333cca",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5258bd8c-09f5-47f7-ab95-4a13d5becd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3fb5fd-93eb-4242-89bb-68f09f67f4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727a951b-de6f-4f13-9d91-32f63e2c1fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bbf3a5-4890-4719-8899-aa78980832d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c57cbf-e2a3-4189-99c9-96f7c8763a14",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5a4f7e-c964-456a-bbfe-48ebc0eed995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73479c6b-beeb-4670-89fa-1b49877be0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cb1b6f-1fb6-42e0-a709-ae68e12df29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7268ca5c-2144-4ee6-b5f9-84f8804d269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458f33dc-682c-4b2c-8037-ba1f8a7a7b41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c730b7e1-b290-437b-b959-24601c33ecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa84f3f-f9fe-4386-a0b4-82b914040bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72869101-d3bc-4002-a8be-e02fa1f5de38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d82a4f-b76d-48ba-92aa-0b94c124de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f67b994-04e8-451e-8481-a09ab3a30ebc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7879ed45-3cf7-403d-b612-fc17b7d1c3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a88a29-f574-49b7-9f69-77b5e8daa5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e36a43-073c-4232-8d15-9a4e729bd25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57364b29-9389-488c-a451-3b732f0eaca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aac8eb4-6c48-4888-a043-57e2de70f8fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f333e7-ef88-4463-a338-4772729e421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5079a7-d0fd-42f5-819e-9664cdd747b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544e9b06-a2b3-45d0-9d1c-6d60c201ccee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c47f8fa-eee6-4d32-b880-69d7d6ec44b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b06c26-f408-4b0e-80c9-edcdaa50c7df",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8889d1d4-dae2-4c63-ab92-5c38f7d8bff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf80f57-59b7-478d-99b3-42f39383099e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe284a8-d40f-4809-a1b3-f7b314978ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e58a42-ed9f-463b-832c-5e158ea51711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284a9f61-0daa-47b1-a5eb-0c6752714781",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6721fe-70e1-4c3f-ad33-5de053301442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a1a6c9-2dab-4e79-8e32-5aa566524c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500918e4-31f9-45c9-a242-fc056bcd6b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579d92a3-afef-4fdf-9032-57915d6c12be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f095991a-2d3a-4344-8b21-5bcf48552564",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0f0898-29d5-4e46-831c-4b6f3e6ae55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d213fd-71bb-480f-94a9-d31f2e40d158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a4dfda-3b5e-4462-a71d-8708476289f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded3d578-f58d-4bef-82a5-543af0ae34f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b405d8-91e0-4731-82d1-d2af206abfbb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e89e06-846d-42a1-9776-2ae166ae6f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168dae57-51a8-44bf-b716-055dee8f67fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5df871-bf9d-49cd-bc90-07fdb81a3816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e733044-d99d-4770-b0a0-432bf10f5461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cb3c95-13b1-46ef-9bf5-228df026c0d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25581fe6-6380-4e68-a0f1-236cf0a721b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7548e78c-0928-416d-ba50-03f86ad2460c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0cdcab-770e-4b77-82fe-73ca141a0fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9cd969-4749-4853-8801-c1a815f108da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8661d06d-d8d5-4b73-92d0-5f9a40d5d81d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f464aa76-dbe9-4622-a5cb-5e1b411a9fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113b9c52-7fc5-4cd2-b87d-b491b1a64869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ccad65-2359-4722-9d5f-aedc912b8cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8337d4-ee60-40ce-901a-ed7cbe836eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9dec55-e059-404b-8682-a26dbb3d5dc2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f047b9-657f-470b-866d-f2828f1fd2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd04997e-9e37-4edb-9be1-ed23f62cfdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb81ca-9e08-479e-8371-8f7e7c0dfe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8b289d-16ca-4fe3-8cf6-0f6e4ff8b837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cc7ef6-300a-4ad8-88f2-564b76dfa905",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacc81d8-c3b7-4cf0-9278-ec92b4f5cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf8a143-2c44-4c62-9fc3-efad465a2683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82da2f82-06b9-4e49-8036-cb5844e22e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b82c38-9d3a-4879-bc18-cf6c7d18c516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640bf9ed-3718-4dfd-ad61-e411f30bfecb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb05af1-da6d-431a-9242-b3333321d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03791ef-c1f4-40be-9894-635572d80776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb4c6ab-af3a-4c4e-a3f8-c16b3d8bcc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "850f946c-95ad-4f59-a06c-5f71ddcf0aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2933e57e-aef7-4a14-9fe4-84dd6304bdde",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372639c7-4c8f-4774-ac7d-48fc1fd9f4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53be0cb-e714-48e6-9039-a79f94596d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0503d66a-a6b0-4d00-b58b-e2102f9f6ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14277e27-3b83-4883-bbf1-5fbd8d7b8ea3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ab34874-bcc1-4b84-bf86-a7fab6c6e3a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "912148c9-ab52-4ac0-b511-fc57e2ae881c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a996e389-5238-4712-b571-3651a4db8e65",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "472dee94-e2e7-4981-a238-2ef839c2df16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b37a97-12b1-44c8-a85c-6edcaeaae481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43b8ce1e-65e0-4a68-b4f8-76bda82ba955"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bb82002-cec2-4019-ab31-51e2fef3d47d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41b0fb6c-b29c-476c-a02c-43e9e1cc8f6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcfd2b42-6c35-4350-8df0-f2919e132b53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83ee1296-7eb8-4bd6-9c9f-93f826eba2f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e782a21c-9760-4589-86fc-1d6a22c6e27f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8e43a29-9286-4b7e-ad0d-0929cec53600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa756adb-6859-4e96-9efe-0cc20ffe4e5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b88b8c2-a246-4089-93e0-f5fe655b43fe"
            }
          }
        ]
      },
      {
        "id": "93b1bad5-9043-4f88-a6b9-14d5197a03a9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "75d6f087-ee7e-4191-8957-c450ff020a79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca4a05fa-74ae-48cc-9053-4ec0000daadd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f51e4a0-da44-467b-8cd0-ce35d81d8b04",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfe1f45-ca2f-423b-a8c6-f8e43d6de0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d8b3fb-9487-4476-93c3-768d4bf7fa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12689809-1736-40fd-ab1f-9a7394d38b55",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac65c7f-5061-4ba1-b74d-dd04b49e438f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc415d5-2b38-428f-9b99-c72e3b98f4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda10000-56e7-41d4-9f4e-e4a7c9ff7c6a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dead49-9cdb-42b6-8fd1-cdd87364a8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc59e00d-a3e8-476e-ab44-ea74bc9b9790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e4d25a-b310-4a3d-be20-a676299d71e1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67521219-f2e3-4970-b2d2-85b77b1e8d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b96f018-ba36-4129-b781-b72ef2986556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a4d4cf-257d-4a30-97b7-aa7f6759a5cc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd03b2b-5265-4531-a04e-8e3fc2dfa996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f01f71-a2b9-44fd-bf1b-9cd0c8a72c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de23066-4da4-4e52-a4f3-a31c7dda9e71",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b3c51f-d9d9-4a2b-ae89-e0869ecc8eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b54ab0-8854-4225-af81-87b00ab0054c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fe5ead-37bb-4398-8ce5-fdd5f0ece4e2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ebdc10-9822-4240-add3-6e7724edd36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084362d1-4a46-49b4-8f02-8aa30af956a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75177ab-e602-4904-a7e1-30920690a7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae32e4b-24ea-4b50-93bf-35366e8768e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1dce65-bb2e-4023-b78d-b06057c55cd3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e45c28-4f62-4df7-9629-f269e3097d83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b2f553-fa63-46ac-b13e-642a5f91b21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0301bcf1-8107-48ea-ad38-76288515d492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1080c772-e204-4a6f-a868-f21a4dd8df05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7a7ce4-8cc4-4ed4-8d88-71c11cc4c3a3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8115d60-9617-47e9-9cb9-15e070549dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06de46c2-6795-418f-8a0b-339f2a67853e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813422b8-9f15-4adc-b6f4-75e81c14b9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa1bafa-2d6b-42af-b324-4149ae8bedb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fab595e-4dbf-4ba4-b382-7aa6392324a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ea0c61-265c-4a54-96ac-2811747d15b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f46c6e-3a86-440a-978e-98aa334e5da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b35d2c4-6939-4e32-a32d-da91b7f57e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbecb8f1-3bef-4640-9a32-de767e49f46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebb0b43-de0d-4a27-a988-6e928f71ea1c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23797860-618b-4822-98fb-b8e0d49bdb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b66d42-c2c1-492e-be4a-f80ef7571fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d755c9ca-ddef-405c-b547-f56e2337926f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a1dc16-01f4-4558-a2e9-a09d2f752272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9aa08f-e515-41e7-bfec-061bf73dc8f5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747e6014-3ed8-4947-b0d3-f0f405ec1a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bed202-2fb7-4c94-b0d1-722136fa7b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ee6279-d684-4f4b-937c-56ec6737864c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f44127-42bc-46d7-beff-73e93afdf063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb19a230-6972-428c-a815-0e98ee9b6017",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc1d7d6-acd1-4b82-9ca6-3f2d0dd50afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68494e57-843a-4737-aff7-d7004dcaede3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0a6df2-dda2-4772-b739-ee8ace8b273c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4a687f-4ef4-4cce-a4e0-ab5836c20f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad18a6-7583-4357-8054-097b1567b71b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648084cd-27bf-4602-b4ee-6a538af1b546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43575a58-59e6-4aa3-af06-a41903e5f81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76374fde-cb28-42ad-b163-6e423d00cbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a9cf50-11cb-4637-a9e8-8efdd6919898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64208e2b-b380-4cb7-808c-a2937bb39c28",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469ad74-8710-4b32-a623-2d290a7fa02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e4b519-6138-4460-a237-a316ca4af268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77d19af-fb8c-4c3f-ace8-20e86f90dbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca8f6c8-64cc-4255-9c58-c61c5ebd0768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795c145-9c63-47b1-84dc-affd586cc464",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a525d558-4fb8-49a2-b570-21bafe702d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b5719e-f619-41ad-b52c-b8e9ccef89e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6640c93-bf6b-47da-9a2d-9039a75ec689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e40aa2b-e451-4ba4-ab14-9abd62357d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4687564-3927-49fb-b9eb-97c24fa20704",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c0e550-dc38-4584-b031-de09f6d7df4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5d09da-311e-4573-92d6-70b13311c066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d376de24-61dc-4deb-8833-9678cbefb813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe6802-dc85-40d6-9aa2-0da8871ba78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b94fc0d-b777-4d58-b59a-1c0e06e0a747",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b29ab6b-4d25-4248-b6d4-c78ee8eba51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ce599b-f23c-4492-ac9d-fc9b3befb9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41186a81-cc0c-46cb-82d4-542b410f7205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0022369e-6a2e-4aaa-b543-248f517f533e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17aaa86-6e14-4a1a-b09a-6698d33a1337",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c89bb94-abfb-4930-9f20-dd0a0147d5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e796c6eb-a598-4d41-86b0-8c038211d5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de97017-958b-4c16-a90b-48f142903b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6aad99f-0701-453e-91b6-21311665677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f9ea3f-5756-4456-b908-f45f274493cd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69062f5-71b2-48a5-a140-8acaaae87488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67840eb-b718-4a87-b30f-e23a88e9a768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e58e37-5da7-40c3-8fd7-71ca37d88d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2377c2b2-d700-4ed4-aa5e-b08df578f614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afb07c6-481c-4380-969a-a8ab0732b3e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a71509-b03e-4ba6-a6fe-49f1822f973e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55030699-1cd7-453e-b9a4-419be90444b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca4c7fa-c0b6-4240-a77f-12a9c635b572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516c9bdb-e766-4cc3-8a77-4b090146f0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59274dda-80e3-413f-8280-d498dbfbe18a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439cf095-2ff3-4818-aae3-30b44c9f83ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac0c6db-1379-45c1-b071-884ab8cb563b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f4e48b-4569-4879-bb5c-117e9c704be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e7aa6c-1d1e-4a11-935c-241469d1d0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89333622-5780-4168-8d9d-4ee926ec07cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757f54e4-15f0-463d-bd5c-0f906fdce86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171a4614-53e2-42e8-822a-573c24911065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaebf76-83e2-442c-8240-1f762b00df71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa9a528-0005-4909-8e79-26838b23e5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a3508b-5100-4ad7-b849-fff64d235b9d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abcd434-002a-402b-a1d8-60aa331e7a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a88d931-b03f-483b-87bc-4e0a2a6697f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f717bb7-3545-4638-8246-fa287ca360f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90009655-39a9-4fa2-9b4b-8321b6427c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305b8d0d-7bb2-42c0-99d5-cf8398dafbb7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71eed24-24af-4f93-ac3b-0da5015705c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8719a44-80de-4c15-ad20-88fe6429cb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67252890-6105-48ef-8f47-ec34a4600368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289d5ca8-e3c8-42b9-887e-e51b4c439bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea246761-6c74-4168-b363-cfb9cd72fb3a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e10d08-1072-4a23-a6e5-9bf1026f786b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31adc0ce-c9bf-432c-b89e-0c740d306c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda870d-db5b-4337-8a91-759e93f6190c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f9d87d-81d3-4ce2-b0fb-4f5f83427b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a023b8-334c-4c56-9865-4726f086dbe8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faa1e25-c2c5-402a-bb34-b4f15a06cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb46216-17fa-4d48-89ae-25a14d9e0d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8483ce7a-2ac3-4d1d-8845-51d6f61ffb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73c69dd-0594-4108-9380-2eb1892ddc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1fde8a-f58d-408d-91d4-0279cb4410ec",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d50c895-161c-403e-9998-dfefd3ba09dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891bca81-35c1-44c9-a718-ef7efda35d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e2822a-ecb2-4817-bde0-1fab616f5cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafd17d1-7a83-41dd-86cc-ecd07776b90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc3375e-66dd-4050-b6d5-d5b8ded846b8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c780d0-11a4-4ca6-ba30-80adaab31583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb14905f-5dbf-4608-9ab4-7852629c9354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bfa3be-02ed-44e0-813e-c66af72f444d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5fbd08-860f-4a60-901c-feb325126f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a19715-eb77-4b41-92ed-8db48caff12b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d610dbeb-6776-4922-a127-cc93022fd7b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07098f68-7e73-4731-9bd7-406e01d12212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dbe27c-bb9d-44a0-a44a-4046ec9a41b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029f9c6a-923a-43fe-8f1e-5a4d347ac68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b7a7d-aa31-4843-8732-69bf3a6715a1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc4159-3b6d-4e5f-9945-edb851dc94dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd53e11b-071b-430a-8f9b-f83df2517793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bf727e-e01a-4f24-b5fa-6c05af708b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84df0d3-4ead-48b8-90ce-1fe23a936158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52acaafe-786d-406c-ae02-1c941d74c19a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9fedd4-d374-430a-b3ec-ec47b93868e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cb266f-48cc-4ee6-8d07-feb11436613c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f780cbb5-c38f-433b-9d39-46ffcf8d6854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2fc9b7-c1eb-446d-9003-f8cdd6f02dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a25a719-b0df-4527-b844-4f3c0a315ad6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd384f9e-5320-499e-9930-19d82cbd2473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d664dde2-2020-4dcb-9f53-5cdabaf13455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b6a71f-b400-40c3-842b-0233edc73403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad75f1aa-c8d6-48d6-8b6f-f3486c5fff63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fda2223-c2f6-47bc-a845-e6c6fa40c326",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a887355b-a8f3-4511-829d-e98891be1c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273b506f-a8fc-4e18-aab5-d6c576348516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01580c0-eb35-4e2f-91b7-b492ecc1cca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45378a0d-3c4d-4cdf-b46a-bc8f747eee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e894ed5-5afa-4f5e-ba1b-65e787559b2a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efa0412-3242-496f-bb31-ebb7246fa412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab49658-9cb1-46a8-aa33-a11efb28ea5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a1aa7b-c04e-4e58-b463-d6d4d0c3a53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b5ae03-3f60-43ae-8acd-29b6ec2433f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad9e4c8-cc00-45b1-a1c9-a525cb32c304",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761008a6-48c9-4578-aea9-6b5ab31032fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ed1718-e68c-4b1f-92d9-dc078320a361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a983c5d-5a45-4778-99f3-1ba8e88731c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25004137-cd33-46ef-8461-01a53d74e42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6119361d-d8be-4189-929d-3bc0ad32a84e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdcca8b-227a-483f-9b1c-9f091c7f66ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2784ff-27a1-4be2-88ac-c9471ba5f482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0512de-dc71-4598-878c-511cf3d73264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93079bd3-57a2-4d66-adb5-ecaec96c4ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe4e28-d87d-456b-a3dd-9c7bfa687bd0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb8d85f-6be6-47f9-afe8-060f2f12ada6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a0fc5e-3a9e-487b-a9f3-a78ec40f28b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde06f82-14b0-4fd5-bed1-5facd5b56323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9b0912-ffa2-4bb9-85c2-2b00efa94a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890e5db5-97f0-4336-b00b-f75bf1116de5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da728826-7b35-4185-a6aa-77261e9750b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab096e8f-7753-4428-b7d6-9782add20dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264c1548-481e-481a-8777-810c6fba8801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d16c1aa-1313-4b12-9db1-bd81ade50f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a3e091-99e8-4e5e-87b5-60526b69ea71",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627de7c0-b098-4342-8bea-5b52421dd20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbbecae-733b-4472-97cf-3eae1f3ebbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca9b14d-92d6-4bb7-a5b0-8f0371e0e189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52af5a24-0870-4c8c-ac70-c6c1196fb229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f77166-24ff-40df-abff-b0bbf1ccbc47",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733b0ee1-c5af-4312-8b4f-27fb2139ddef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca94370-fcc7-4d48-bbcf-ea6f2f3b640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516930ab-a29c-4098-a95b-26c4dc3d90a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51896238-7125-4043-a58f-8eba0b525a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f5a719-e2f2-48a8-8c4f-c4326fce357b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ae3565-a8dc-4b4c-a662-5c24af455df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2034cbc7-823d-42bd-ac50-fbda1e5ea2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e838e564-3a83-4cb2-ad0c-abc5799409e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5363aa8-e2a0-49da-9df4-4598928d9b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd8ab49-7dd8-444b-9793-70a8b3e7a25d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab82edc-d87d-4a8b-ad50-2e6d829912b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ab7a15-773c-4374-b5eb-b09fac7fe2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad1b8c2-fe84-4163-b2fa-1f7f6f532fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b51c5bd-006f-4ef7-b5f4-4628ae8221c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df5f0d5-31b8-4f76-b32d-168ec1eced87",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0537e5-cf3a-468a-a9ea-850d32cd3573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c936be-158c-45d6-90e5-f79d958216db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a060a7-c2fc-48d0-bfc1-b1f5f751c67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8b4a88-c905-4a3e-af66-03edf1863cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8386c5-13dd-4d21-b464-6d00e0adba6e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578c328-5ea5-44cf-b350-83fe16f06deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a498fe19-4f72-45bc-ae75-4d3e2adcadfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfd930b-671e-4626-93ac-39713bd86947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9664b213-4ee8-4584-9c3c-2ddf9fe82366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0ecbf6-86a4-4b43-b84b-7ca88f98a0b9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1512579-0f48-4d50-8ea6-757689db26ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d42165-2391-425e-a69e-3bdf0a6e2274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf5216e-57e1-4517-961a-bbf2eb2ab46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cdd63a-3e5d-484e-8f97-2fe2da3cdc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e0fd80-0ba7-4c7a-9c85-3463d886c265",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb38946-de2a-4a80-8d26-d692982ccb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4cc99e-77b2-4a33-a8f7-e8c48e3be41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9771b923-75cf-48ef-9391-1fb3b11c6bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c890bc30-6b41-401a-a30b-e370364e6ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f88506c-bb79-4de7-844d-72f1d4014f78",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cbe08f-babb-48a2-be8e-f7c9423b7e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a22ba0-471f-4e82-8fd8-c696a8284aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e2fbfc-8c56-45cb-8c6b-33d30786cd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe0c976-dd51-4ef4-b615-aeef66fe8a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffff93b-4feb-401c-ad32-a6af9431c5ea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516bf04c-8dc4-4ea0-9b62-59fbee7cf841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c19550-acd1-4baa-8a68-7285e183223a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e0abf7-0586-4a03-8585-beb3803e9fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2111d2fd-aa26-4c09-a8fb-794373a8f864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a50b7bc-1935-4e46-bea0-db7512273607",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c0e55-ca4f-42d8-b478-2f25ac8c3b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0bc8a6-5290-422d-ba02-e52a77a18e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4eb1c4-b2c6-4be3-8e31-927f78f4e6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9073a131-2fe0-4015-b12b-43f0adedff25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2ab75f-465f-43f8-98f3-2c96aae08ce5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb751ebb-ed82-4cd1-aae0-b48efea2da85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fe0716-c085-422a-ad9a-b0cc0cfa80f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13f579f-c64f-4181-baac-85222a11944f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552b8afb-e79e-4336-b003-8261c14c3c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fef0f1-916d-462a-9d0f-dab8ef060818",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79a6872-3151-46f7-9ec4-0666c535f67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6c457f-89f6-4392-94a6-ef291e001070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3744b32-194c-44f2-9f13-9efc1f5b9e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e6339f-7f86-423c-b9ad-915a2ebea38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0812f4a-25af-4217-bac4-bcce139f7e21",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75acd808-3566-43d8-a23c-46de04211299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71819fe-48e2-4ee4-8c99-4f73d2b8f59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9016bc0f-ee4c-4271-a352-0dfd9fab4aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14f09cc-8dcf-4857-b22c-99a2945c8940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d31cc4-083b-4649-9996-c8efacafa4c6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068a0886-a762-4931-bc40-e60a71969a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5836f4-4520-4c75-9027-06f7cb007dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337bd675-d600-4881-a417-7f68c00670f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5752e4c5-ce1a-46d3-a5ad-a85693c93081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9467a7a0-e001-4a3b-a756-02a127f08d70",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b7df7c-5f4d-4ba8-846a-f80b301c2ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b22fad3-e127-460a-b9e2-672a5f647680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11132c28-7847-49b2-952f-8d5158c50b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfb2d18-7344-4389-afd5-712a80cdec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75335b2d-65dc-4b24-9700-6c8261adfe02",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df72e9ba-c6ca-42dc-a403-d5a7d6c09042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4518df0-986d-4b02-8522-ded2fd2ccf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b19ab0-1453-43ed-8d98-e5881d2daf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13fbe40-8b9f-4f0b-8f0a-cffa0ce4f959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee793af-5d07-4047-86e3-98e48b9cbaef",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93796815-8a0e-4625-8fd8-7f0bba15628a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175f96b4-0965-4a33-a0f9-fabebbbfd6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f819fb1b-e66e-43e6-bd11-d6d0bbfc794a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cade4310-428a-420e-abd9-9e92015273da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e9a5ca-ecfd-4b39-8d1c-81d3bd4e95c3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dbfcda-9168-4b98-a358-6c6d1e53e689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feac42f8-a067-41f8-bd8d-809e79cd637a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b822692-8c00-4fa2-b9a8-45febb074aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc81a34b-e58c-4154-b24a-bfd145ba7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac9456-30da-4ed3-97b7-666235fdb668",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e7d4ca-1544-4ab8-b1c9-c74ae530beed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e4f115-cdf6-479b-a07c-82bd7d47b0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1b7948-f0b7-46ac-badc-942aa9e93059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db0ac91-3bf2-4d82-92e1-eb1dedbe55af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b4562d-e288-455b-93b2-34a47a78cf5d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8217eee7-abd1-4935-bf10-d89c28802346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d357dfbc-9bec-41a5-a2e5-c7e9bfe1114c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14490f91-64bf-4bad-9823-558e68d33f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c475cfc2-ea04-46fc-ba0d-c8ceedb41598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6038a53f-5f92-4bc8-9f9f-782f0637519c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ce870c-94d9-4195-9d29-2361032913e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ee7fff-461f-43bb-a70e-96e128e2e2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4945a529-7bd3-480e-9fe0-44c285fcf158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1df9132-3ec6-433a-9804-31fbbb6daf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b5136b-d4d9-44d3-8f6c-e896bfd012d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c45540-257e-4fc3-bfc9-bbfe407e0d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b3161c-ab38-464d-acce-6a57ed5c6676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe2bde0-3b41-4034-8e4b-7423b60531b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e41402-0337-408c-9c37-8b0ac87f9a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50e5116-d0a6-465d-929f-8d45c932958b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b91ba68-d95b-49e0-88a7-d7e64790ede5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb851652-6d97-4124-b9ec-2729195ac7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e21f2e-234b-4e41-a0b3-03e16c18cbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e6da47-400e-41a4-a00b-590c51d7f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742864a3-913c-4984-b486-98c5209dcf97",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8025e8f3-7143-4283-98bc-4fa55363ba53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802199ed-75cc-4bf2-907a-3822c3c07eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf858c9-cceb-407f-aef5-54af371ee48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadcb9ed-1894-4e0f-9d6a-a6c9f762ee3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8053370-6c4b-473a-b670-558b9c32c723",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cc80f9-7557-41a2-8628-0c08cea4113b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436c9dda-7360-48ee-a593-dcd8b0f16c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c4f9eb-0e24-42b4-b5da-0821e9ac98f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d3cd8b-bf4e-4bca-a8a4-da76b7b47a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf8b1af-82c8-491b-9c99-2e6661bd516e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708a8872-1c70-4182-9921-b94185b1bf58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74fd044-1cf5-47c0-b4a0-311e9b8760f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3ddcf3-da50-4a32-b637-15a21f937610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcebcb66-04c9-4a96-a35e-388acb8e8f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f19d49a-2129-4c52-8785-731b00d7ec69",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8a40d6-5627-4449-be86-be6a3eb8d358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edaf931c-d471-4f68-9c72-b7be3bc17bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e7a33c-77af-43fe-8990-67fa93af693c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285715f5-92b7-4623-91f5-77663f1d3b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fb0b10-0d03-409f-8dea-6421c17ccedf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d601f7-f632-446b-8ed2-89e5ca8b2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f58505-3bc5-4fb6-9ec0-fe629394ffcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f254c9-89a6-4f13-82c5-949305ecef7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04949b7-0113-4861-9ebb-396be25954f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff99b69f-15d5-41f8-9469-003dd1712e30",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c042c30-8549-4309-ae20-39a31b8be394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c2b2b0-fd96-4f2b-915e-2389e055d977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614290c3-908d-4b1e-b334-f9173162087a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0d8364-d2b9-4d10-ae3a-015b6ee40857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6799f750-ad8b-4d45-bf6e-babd12de5648",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886b0cd2-2953-4f51-8adf-7cf8aa5b770a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598437d9-e739-4b4e-9e1f-8f2019ca10b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69923c2c-9575-408c-8356-2e91cc8f5056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da889f65-6b2d-4d10-ab44-d4d03cb3bdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929d83ab-45dc-4d2c-84c8-88adbef7ae33",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a2c845-d1b6-4dd3-a1ce-ad9d0a3538eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075ccf4c-d565-4ea4-b88b-61170cc4759e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf9be67-e329-460b-a38f-49f1dd8d5569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37470980-ef0a-498f-b858-060e23f187e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6e1f09-c2c0-498f-aa7d-ee9206282e36",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888c0aa8-651d-4ae5-ab86-81c62b0dfd95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55d32dc-a393-4e5b-8753-dfefafa10cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34db0af-49d2-4ba3-aa88-704614b6db6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f507f4d-cfa0-491c-bb22-2ae78d8884cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cbafee-cd1a-465c-8ec3-386a0136d8b5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566a3bb1-2984-4471-bbe8-e27958605d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3da424-f4ad-4e1e-bce5-9e445711fa7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf9cda9-f89a-4f0e-8385-f7cb519c7bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12aa9537-cbe4-4fa2-8f74-4bc5fdb02397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c3c5b9-448e-4335-9d7d-701e76fd0ad4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad019b76-5573-4f33-a1b8-0e73f122e17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b329514-3f15-4ea6-95ac-0be771d7bf73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f198ff30-af9b-43a9-8605-1c8df2de5906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1e636a-ced9-4d5e-a552-231d3b539e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0badaf09-aba0-4660-846b-8f74930b7e78",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6bdf9-1598-4463-b121-20ce306defac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b516891b-826c-45ca-8f48-e9291461959c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fbc6fe-78d9-4a09-9bec-55fd792b611d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51e8f82-ce1f-48b1-8c99-6e62e63e83e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c567ad-20fb-4410-ae90-7459aff5c7ed",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26130dc1-21be-4f5e-bf82-cc156a8d9814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96aecef-8018-4a3d-b59a-a15f6ac75408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9fc85-5d33-4b5e-8ef1-a1960fdb1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73714aa0-1842-4810-9d3d-b6482c24b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1a61d0-a537-47a9-872f-78175527558a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a98b8c-7536-4fdb-aaf5-cc6b690973c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26da61ff-7fb1-4cba-bf78-9b76426fcd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97749b59-4b9b-42e0-a576-e7a5ad021853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7475065a-edd5-4c78-ad5c-869abbe57c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ddff22-f005-40aa-97fe-abec4d8a1714",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ceced0-f186-43ae-aec1-760482a9f960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f39d22f-b11f-4544-bd9e-7eec17fb478b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a416e1f-7698-4ed0-b672-c4b099e1016c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df2eb59-591b-4bc5-b71b-7de22e8145ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b85576-37b6-4d50-922b-5f5600640cd0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c9df9f-0242-4701-a8f6-821634239342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362fc6dc-5427-4d4a-9fef-32f325c0cf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89b85e5-1531-441e-8791-9651a45b020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec608514-7c51-43d3-b346-2fae99faa8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d37639b-4a6f-4264-b817-4b4c6353b2f7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c0b9ee-61ea-4215-92e0-9e2fe5bb4dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd88277a-da47-432b-ba0f-cd270ac5140e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638c4489-3d3c-4ecf-be03-3692c0cc701c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960fe3ad-ed2e-4f0a-8d3a-954ea45a372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d489fc-f175-4f95-b972-ed6d1c72462b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12f61de-e2d6-495a-8019-53b449980cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cde341a-2014-4d07-99c0-d47473d3a1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436b6ffa-706a-45fe-9a34-022f669222ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ba6961-c3ec-497e-82b1-c7c188f51c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724cbf6d-8bfa-4126-a48e-1639ce557daf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9f45a2-9a67-4f72-b039-fe8abd033f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e1c354-4749-4ca4-9c78-33a2f13bc6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca447f0-99c5-47de-abf9-54a2caca50de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2926e34e-9b7f-4723-833a-bfa0eac1d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c30cae-2971-4b29-b1b0-a64eb63d1532",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8f702a-821e-44ec-975b-6878e0d7ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d258eb-b02b-45d9-99bc-6f3fcf84e8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1ad6e8-0366-4d1e-8675-93a8501d871e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab14c30f-cd7e-47b4-8ffa-64a4a9b14fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfddf699-7f26-4f42-b477-5b267c0b75ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15eaa9a2-4052-44cc-aea4-4b983997e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8444d96-ca06-4b4b-9bb8-2f01f5056564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d81778f-33e5-4d66-88bd-a0f82994003d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43486126-9abf-4067-87af-aade76cac3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1256aa7d-372c-490b-b718-777b71c80d83",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5318066-1b65-4a7c-a112-abae2f0fb104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7b2762-102d-48ad-bc24-b05b87b5af85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bbdca0-343f-4449-8b5e-429fe868a507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93a59f2-77ab-43f5-8560-0d0c421c2386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece97362-efac-4b39-9b0f-ebd4b4eabca5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac4e4b7-aa92-4ebc-8000-dc0ac8fb01c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f20e00c-2e0a-4438-8daa-18fc68286881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4e9a8f-4d20-46d5-a3e8-9d00372993c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c6b7ba-d4d7-43e5-82e6-a5f7c07d48f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf10a62a-f4b5-4660-98b5-49f252bce3af",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2774b841-f2a6-4ce5-b291-9b30baabf871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4489cf1e-fc0c-487c-8974-f23f9111b4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d83a38-aa69-49c0-8e3f-e3d510634ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d664106-bd36-4d82-aed3-3169058dfe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f1800a-56f4-4e6a-9c23-cd2c4998332a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1f0332-33e7-47c4-a6fc-bdcf6d1bb2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf9ba6a-2e9c-4339-9da8-95351db6224a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7138089-6d66-4414-a2f5-02f417b2569a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb34513-458d-4436-9662-32508cb47176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e660eb-6ed9-4013-83a6-57633919a5fb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feb61ba-06f6-4b30-bbd9-63d1de4323e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb14359-9788-4dee-b8bf-9b001fe30678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4fa048-7218-46e0-8062-b650997e4370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394f4d8a-309f-4d32-8af6-2dd22aa0a99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aeeff8-dbcc-42f3-9206-70d4b7744d7d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d71a3a4-f055-4d5d-aa78-b58482bd4658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9664ea71-8c74-413b-ab93-261c2bd933ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478520ca-f9f5-4a8c-bb2d-436ca6e33142",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5220ac1-40c4-4382-98ed-7f6b379afcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb48c37-3bfb-44ce-8e33-790a7644856a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28606947-5b8c-414d-b2ac-87e2a5a9c923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fa8ce9-fbb6-4272-8c6c-8e2efe813b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2607cdc2-1d2a-4f0d-9c0c-70d7bfe076bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cf9b2f-55f3-4ea1-837f-dc35ef96c89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57cbc1c-4dcb-4c8f-90a7-779459ee1e3a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d6fc62-63d8-43a3-98b9-6ba4ceeddd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475441f4-f8ed-4afa-b1c4-2157d0539283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dfb47a-9b07-4002-973e-f803928f69ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0334fa4-1d8e-4d3d-9d17-d9b22a83ec07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9541dd-48ca-484a-8deb-56ae10806541",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c40477-2dee-41e2-a616-931cb77976f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa297f9-b8a9-4d33-afcf-d0902704d737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0b78a3-9566-483a-a58d-0e49c4a5d035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925e12eb-b6f0-4371-a5a8-58093051cf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09640ec4-790d-496c-b77d-725a804b3059",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83332d93-5b35-4144-8bfa-d6dd0140b00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c24610-8641-49c4-bb25-38d19ed07098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd4239c-ab65-45ba-8377-61f45512e476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fc9195-8beb-4dd9-b81c-12c35aca35f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d307f48-450c-46b9-b833-69c3d4b12777",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d62984-1f4f-46f5-bb15-0ac5b84c94a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30cca680-491c-47b9-9dc9-4c680d03dd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60368cbb-95be-40d1-be52-516f3429e698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9c99dd-c6f8-496c-9956-794f50a20f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec9f4b2-8042-4705-88b6-3a246ac5faa3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e10ebb9-655b-4821-ad3d-9367ab1460df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a10e3b-5dc6-4c01-a0a9-c9d33dfa0344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f84f23-d6a8-43dd-9af5-20bd6b8ee654",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88fce69-f886-4f25-9d9f-4c352e1bf0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f6e840-5e4b-4973-82e9-cd6c6416c74e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7c37b-5ac9-4ebe-b7cf-29cd959a235e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a697eb-6f63-4935-9045-2ab990a84f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c32c6c8-9cab-4dae-b5ea-e7947014a90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6b02da-5ca6-46e1-8275-ea4b91014874"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c9d6934-47d6-4e01-bcb9-be12f460ffa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d40b651-b48c-4b3c-809d-8ea6e4223b88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d88ad2d5-47b1-42af-b951-5f934d0bb155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26adf30d-dac1-4aea-8ae0-37b4719477e7"
                    }
                  }
                ]
              },
              {
                "id": "0e3b24b0-ed94-4e10-99f9-c46801814833",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49edce16-a9cf-4b0e-937d-3d38c7ddd3b1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88c163a-8975-44dc-be28-7c0b9b021e75",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "62ad9e28-bc49-442c-826c-c2b8b0871e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052b2468-44b2-4d9c-bb71-21c43b1486d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f90f89e-55d2-423a-8ed2-d4244fd2c702"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "183738bc-7736-42fe-a449-5c99e2ecda40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63704421-829e-4cea-80d2-52e844b1a24b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84ae1c74-ec4c-4ce0-9178-a605c90862eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b37ff57d-6d44-400f-9ff9-351293c038e2"
                    }
                  }
                ]
              },
              {
                "id": "75d301b4-b1f9-4fd5-b196-d73b4ee7fcbb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "20bf1ef6-8872-4bc6-9757-8eba4f52ec65",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2f78df-d001-43d1-9e5b-0905f8893b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c2235809-654e-483a-a047-ebddb3b02009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc02039-de6f-46e6-a6c5-ed057e527cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56946be6-50b3-4279-88d5-019b0bb5bc62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dfd7371-041d-4cd2-a566-f1f064ea6ece",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8410ac13-0570-40ca-ae2f-ed537400f6d8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61bd6f77-1976-435a-b18a-6d0e1083547c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3e87a19-5d45-4e45-831d-8a120eb1b151"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5e348b0-cff5-4db2-97c9-563210534b2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "628a29fd-211b-4b87-b672-c27817e46077"
                    }
                  }
                ]
              },
              {
                "id": "7775e081-7ff8-468c-b28d-aaa6e6a75aa5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49bcb25b-ab59-4d7c-b977-7fa76f12d957",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "87f2a864-f77b-4970-87ea-3cd912d9ec9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b814d381-edf9-4559-a41e-acf0bc3f0a57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b4388c-0120-4654-8721-921747d10051"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4153edd0-eb30-4aa8-a191-7f53f92113bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e45a66b3-577d-4410-b74b-3359ece55ccb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e864eb-d86b-44b9-9155-cdd924ea4001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62a1ab77-3bc7-4fd5-9087-d057c00af080"
            }
          }
        ]
      },
      {
        "id": "5f1d6236-9a5d-4496-8e06-c7755224b848",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3c484c55-a21d-4f21-9030-890f5b1f6bc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2766eeb8-c67b-4e6e-bad4-a0577201ab4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87d5c120-99e5-42bf-a099-363f21d6184f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aeccc4-7cd6-4205-af7c-ebc58906d4cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6b9ea02-3c7e-42a1-a253-dd0de1395452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e8f3d1-4691-4543-8e80-041bd43315b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2bd8ce4-519a-4859-a6a4-fd9d2043ab32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ed0d43-4a80-45a9-873d-01ec0a0e745f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bed91bc-f3d5-44ec-867d-bd6229758353"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a46dcbe4-7722-4b9c-8526-2e2144caae8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7bacd8c-e738-4055-8171-ef8b1e6a5a5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "141016ed-3d54-4b2a-af6d-34d708e9a0a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a6dd66b0-8433-4e37-a26c-1a924ecd8d40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bdb500c-33c5-4e72-98ea-507e6e896a01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7f1b8ce-b422-4d49-80f9-56afcf312fb2"
            }
          }
        ]
      },
      {
        "id": "26f21019-58ea-4354-86d3-3aa8c5ea49c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a3906877-7534-4207-bfa7-9fa0dca53050",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e84202d3-117b-41ce-9de3-e57640e65593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e16531c-5cfe-4016-9073-b9ea11fdd4f7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2b9148-2658-4920-a6be-95457461f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2e13841-99bc-466e-b0de-a48b754b6376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae47a98-dddf-4c67-8324-4a65f5eab681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "617d881a-25bb-4b9c-82b1-7776f0ed7ecd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d935c143-b261-450e-b3b6-48e484c65596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58cbab50-359b-40be-939a-745baacbf5aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0030fe9-68c6-4be9-a455-08f734420e68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e89dde9-0fb5-4730-afa9-b2c125aff0ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49437b3d-7488-49ef-9a6e-0438f26a3942",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "054e3e5a-081d-4a80-9394-759a11a0ad92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "988ef7f8-4913-4378-82de-e921ebcb68a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a92a8a8b-1d61-4020-b5bc-25ff7f2d9954"
            }
          }
        ]
      },
      {
        "id": "cacff3c5-6454-4d88-9186-8ee3a08a2312",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f1fd596b-f0f6-43f0-9801-d442c3e2c8ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5932f311-231e-41c1-b676-b183721c58c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df476ddb-8b90-4996-a4ed-8ed373d3babb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96423d70-8042-418a-9f69-6baaff9e65ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cc8c0ce-2384-464a-a236-6576cb9bf9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f440dd4b-89fb-4889-90f3-4458e2e81e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "679c43ae-b0bc-49ca-b40a-b0a9ddd3a706"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92a3e2e8-64e1-4e3b-8ff7-28d152b8a76e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54876fc6-6c4e-44b7-aa8b-9d3065c122ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4828474f-44f9-4a34-9961-77796bcac49c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc824229-c620-4f84-ba6f-5406934f9b7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b15d8a2-7c27-4a99-8e95-265f4aaa50d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "476fd543-96f0-4734-a8e9-4ab246d6786a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afd774d9-3360-4784-adaf-ab28bb4657e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4203ebd3-f94a-493f-896f-660d185d2550"
            }
          }
        ]
      },
      {
        "id": "5df25bdb-53f8-4444-8caa-1632b340a7ac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bf92298-1b46-4127-96de-ee87a5004d36",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "199592f8-aea0-4332-a335-1c3ed66c7b59",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "92547b5c-2cba-4a51-9e1f-cd7ba88ba64b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8809cfe-f34f-4808-aa4e-9ffba621955f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e41eb37e-98ff-4448-afe5-bf2d63921ac1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 465.78571428571445,
      "responseMin": 8,
      "responseMax": 14214,
      "responseSd": 2109.0881111112562,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726188187023,
      "completed": 1726188313087
    },
    "executions": [
      {
        "id": "18c822d2-a721-4c2f-a8e4-2b9ff8908063",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d80b8549-4253-4dce-91d9-2d46093fe284",
          "httpRequestId": "a07a5af8-a5ee-41b9-901c-1e1137145132"
        },
        "item": {
          "id": "18c822d2-a721-4c2f-a8e4-2b9ff8908063",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2b37a50d-a973-4f10-8649-0965622c8d91",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "259ae5d5-5e5e-4ead-94e9-7b23b160e41d",
        "cursor": {
          "ref": "52237021-66ee-418f-8df3-a4f103f0ba17",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "15f83ff8-1e12-43b3-b4d3-e276ce940b17"
        },
        "item": {
          "id": "259ae5d5-5e5e-4ead-94e9-7b23b160e41d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "66eee4b4-29f1-4f23-bb3d-05cf9b535a67",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "2e2153ab-cf9d-434a-af20-d36809046b06",
        "cursor": {
          "ref": "60cfbd72-49ce-43e6-ad52-3f88d92b757e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "769bbc54-6574-49c7-9bbe-3e5a829adde2"
        },
        "item": {
          "id": "2e2153ab-cf9d-434a-af20-d36809046b06",
          "name": "did_json"
        },
        "response": {
          "id": "5bf30cad-ae2d-48c7-bf6f-6cec04ac3366",
          "status": "OK",
          "code": 200,
          "responseTime": 286,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4295264-17f2-4db0-91da-61fcad6128a8",
        "cursor": {
          "ref": "060377c1-1539-4aa5-af56-c408ba87069d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1c1de39-2769-41ac-b027-10583320fe2c"
        },
        "item": {
          "id": "f4295264-17f2-4db0-91da-61fcad6128a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "27b0cbf2-c119-4a3a-adf3-a8b8ca9cec33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2369,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4295264-17f2-4db0-91da-61fcad6128a8",
        "cursor": {
          "ref": "060377c1-1539-4aa5-af56-c408ba87069d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1c1de39-2769-41ac-b027-10583320fe2c"
        },
        "item": {
          "id": "f4295264-17f2-4db0-91da-61fcad6128a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "27b0cbf2-c119-4a3a-adf3-a8b8ca9cec33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2369,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fcac7e-f130-45e7-b32c-875b74f41399",
        "cursor": {
          "ref": "95df86cf-b36b-4d0f-971a-460aa47769b2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b35ad6fd-1c89-4d4a-83da-796f143e5d3b"
        },
        "item": {
          "id": "45fcac7e-f130-45e7-b32c-875b74f41399",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8fc45646-f576-4879-b2d1-552387b85011",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2777,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a788746-da55-4a3e-95f2-f51d047f80d1",
        "cursor": {
          "ref": "3127574e-28b2-4ead-90e8-43814de5844c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9fc5d3e-c1f9-4d3b-abd3-e7ef982d65fa"
        },
        "item": {
          "id": "0a788746-da55-4a3e-95f2-f51d047f80d1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c9d112db-8a3c-46f4-b8cd-b481daea0eda",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2302,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ace9659-c2cf-4b53-a1ca-46b73e365342",
        "cursor": {
          "ref": "263bf079-67d2-4c0a-ad89-8980a0062e7d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cd44e074-ecc2-411d-bc12-3fac27eaeb04"
        },
        "item": {
          "id": "2ace9659-c2cf-4b53-a1ca-46b73e365342",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1a62bb9d-93bb-4d3f-9c01-a3a86628774b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade7df62-325b-4150-913b-e9fce4d958bb",
        "cursor": {
          "ref": "6fa244f3-6e39-4003-8894-a127182d2b19",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c10eea39-3c25-440d-a360-2d3a4b88d9e0"
        },
        "item": {
          "id": "ade7df62-325b-4150-913b-e9fce4d958bb",
          "name": "identifiers"
        },
        "response": {
          "id": "97c43625-0bab-4d91-affc-c52bf2949c3b",
          "status": "OK",
          "code": 200,
          "responseTime": 2135,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf378664-2838-4867-9d09-f6b73e370fdd",
        "cursor": {
          "ref": "87980f7f-0071-4abb-aaa2-1fae2c97d434",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5f1a352b-3ae6-4ec1-8723-77b7dc08944b"
        },
        "item": {
          "id": "bf378664-2838-4867-9d09-f6b73e370fdd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8290252a-629c-4d08-bc7e-31627f945652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f2b3f3-8f38-4c68-8ae3-8d6689fc8d01",
        "cursor": {
          "ref": "01d62278-6449-48c6-b7ae-d87ee4ac6304",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b1befda8-5c20-4953-a4a0-9f003e0421ad"
        },
        "item": {
          "id": "04f2b3f3-8f38-4c68-8ae3-8d6689fc8d01",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f5529670-46d8-41bd-93db-7cd6a2b813a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb466210-2048-44df-b9a5-41217527b2c8",
        "cursor": {
          "ref": "4ba7d6fc-9cd4-48e3-a993-2181652936b6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5c1cfd44-86c2-4e35-b5eb-22795438b708"
        },
        "item": {
          "id": "bb466210-2048-44df-b9a5-41217527b2c8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99dfabc8-81d7-48f4-88a0-53490062cd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a4f0fd-5990-4f1b-83e8-74d2ed03b860",
        "cursor": {
          "ref": "8af5267a-08b8-47c5-af71-96d9c7907e14",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2c167b1f-0dd4-4164-ae1c-710d2a28a116"
        },
        "item": {
          "id": "52a4f0fd-5990-4f1b-83e8-74d2ed03b860",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c15b602c-4b46-4765-b38f-967312d5b3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72a2826-136e-4c6d-a52d-69e15644876d",
        "cursor": {
          "ref": "3e575ae5-02e1-49b2-95c7-74422adbbb21",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a73c5544-11cb-4fe9-9efe-e879c8a2dfff"
        },
        "item": {
          "id": "b72a2826-136e-4c6d-a52d-69e15644876d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "68237485-33b3-46fa-9abe-834f9fba876f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf99d36a-2e9c-4f11-bbc9-a5a244d337fd",
        "cursor": {
          "ref": "4a3b0664-2a54-4a6c-866e-dcefcd0b7422",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2a9ab1c4-394a-43ef-a20d-2a6496d42680"
        },
        "item": {
          "id": "bf99d36a-2e9c-4f11-bbc9-a5a244d337fd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1be760de-50da-45cc-9745-ff15dd82bcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b5ce19-f598-41ff-835b-88a01914e1ea",
        "cursor": {
          "ref": "7070045a-9ce7-4799-9e8b-1600cd21fa19",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ab01e896-03cb-48af-a892-16e2eb75df00"
        },
        "item": {
          "id": "94b5ce19-f598-41ff-835b-88a01914e1ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a42b8e58-d4dd-47d1-ad29-8aff1048a407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9e4e84-08f2-42a1-89b8-a007bcc96dc4",
        "cursor": {
          "ref": "05389335-3387-4e65-a5c3-26692cfe52da",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a64f372a-74bb-4697-86f5-e7d5f51ff9e1"
        },
        "item": {
          "id": "bd9e4e84-08f2-42a1-89b8-a007bcc96dc4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2e5c1d7a-1f3e-4992-9497-677e4f7614ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab3b860-c6e6-487d-b1a3-8098d5b1bc1b",
        "cursor": {
          "ref": "e0431561-a959-46cd-9493-3852e6880f0a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "45b28c98-9b26-44ad-8f3d-96cddcbbe5a3"
        },
        "item": {
          "id": "dab3b860-c6e6-487d-b1a3-8098d5b1bc1b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "072a3d4b-ac72-44cd-a3b1-0daa6a34d702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be40898b-fef5-4c75-9e3d-35bf8925de75",
        "cursor": {
          "ref": "3a7cc918-428b-40a9-8f78-67b0da99630e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d51bd769-da30-404b-b7ff-ea0cbd4fadf2"
        },
        "item": {
          "id": "be40898b-fef5-4c75-9e3d-35bf8925de75",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0af38954-0734-4339-a9e9-e93ba29ee3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260daeb7-b0b6-4e63-a8db-915535b6eee1",
        "cursor": {
          "ref": "6d2aedfd-374b-42e0-8ea3-9a8b24631454",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dabbf29a-6c65-4e3e-9840-12bd7de23a43"
        },
        "item": {
          "id": "260daeb7-b0b6-4e63-a8db-915535b6eee1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a90d2517-700c-4a07-8654-7b449aba3124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecbaf08-6393-43f1-8bc6-6a6f61536dd2",
        "cursor": {
          "ref": "b89513e4-9b14-4b03-a31c-d1752ea7f560",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "265a10b9-2630-43b4-9cc4-8f6ebb6965d2"
        },
        "item": {
          "id": "cecbaf08-6393-43f1-8bc6-6a6f61536dd2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "daa07164-4cd2-4262-b12b-f62691fa9796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7528349-352f-44d8-9d38-0698173dbf9b",
        "cursor": {
          "ref": "40129b42-0423-45fc-b996-f0eacbe5541a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b92067ad-1ef2-4b66-80dc-4af198a5f698"
        },
        "item": {
          "id": "f7528349-352f-44d8-9d38-0698173dbf9b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3805ea35-32d1-45b8-bdd6-087495768144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599f19f2-f93e-47e7-977b-28eb5357b7e3",
        "cursor": {
          "ref": "a3c4f2af-b563-49c5-aa2f-664de9aa656d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "62b56191-cf5e-480c-8560-099b8f2b309c"
        },
        "item": {
          "id": "599f19f2-f93e-47e7-977b-28eb5357b7e3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5aedfcaa-1aeb-4fd5-9dfb-57c066b0e6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798d9a71-8d06-4624-a44c-b94a7be78351",
        "cursor": {
          "ref": "96eba09b-ba36-45fd-b441-25c16761ee21",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d531674-4f96-4ba7-acd9-ae8408062f14"
        },
        "item": {
          "id": "798d9a71-8d06-4624-a44c-b94a7be78351",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2b7d0237-b9e9-4ddd-b3d4-53b979d6a217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cddf2b-14e5-4fd8-9dad-e714a7db1a87",
        "cursor": {
          "ref": "ff993d36-f452-43a1-bf50-d1ef93164151",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8d87fc6e-113e-4ba5-a1e4-1353c52b0710"
        },
        "item": {
          "id": "89cddf2b-14e5-4fd8-9dad-e714a7db1a87",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb44c3ee-e247-4be3-84be-913b450fc81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c28bea5-01fc-4be0-ab97-0180f9c3713b",
        "cursor": {
          "ref": "49a64688-5595-4088-80ce-615f2a74d74c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "565780e3-fa35-478a-95c9-99d2505d58ab"
        },
        "item": {
          "id": "4c28bea5-01fc-4be0-ab97-0180f9c3713b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1ab2527c-957e-4a71-9fa0-fbc489e4ee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d670f0-e055-480e-8065-48ae340fc785",
        "cursor": {
          "ref": "0ddf5853-398f-4e4f-9cfb-664d78dd2e5a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "06d45b2d-2a57-46ea-9550-578722192847"
        },
        "item": {
          "id": "f0d670f0-e055-480e-8065-48ae340fc785",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "df437466-1e97-4a12-b889-b1c7b1071d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723d1f12-cb34-4494-bc1f-1c8b8d9da30f",
        "cursor": {
          "ref": "805b6fcf-9d3c-419d-9cfc-e1e2ba122819",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "591900e8-b4a1-4160-bbc7-ef21f4705703"
        },
        "item": {
          "id": "723d1f12-cb34-4494-bc1f-1c8b8d9da30f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0b86d8fb-9663-460f-9dfe-553ad97d7b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd42c4ce-34d4-41b6-add1-e1e1c736a13a",
        "cursor": {
          "ref": "ef54283c-0e2e-4e1c-9b49-d50ca9efc8be",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bca83522-90a5-4901-8a3d-8fca69550d14"
        },
        "item": {
          "id": "dd42c4ce-34d4-41b6-add1-e1e1c736a13a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6537bed0-fd81-4c1c-8a97-98787448ab78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dda9793-149b-413c-80dd-2f2a3451dd20",
        "cursor": {
          "ref": "200fdb11-33b1-4aab-880c-35d88d53f94a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35cf87cc-94f1-4403-8733-f84269caeefc"
        },
        "item": {
          "id": "1dda9793-149b-413c-80dd-2f2a3451dd20",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f08d93be-7c4a-4abf-885a-a3b3b78baff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc74c82e-8fe3-466c-9c98-ebe1c9c58cce",
        "cursor": {
          "ref": "8bea929e-1965-4a62-a122-e04e19f75069",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0ef63ec2-f86f-4070-9473-ab566a6ccf37"
        },
        "item": {
          "id": "fc74c82e-8fe3-466c-9c98-ebe1c9c58cce",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d3b29f44-5d0c-488a-90b8-c2117d19e092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1669e276-ec70-4680-933f-af8109432091",
        "cursor": {
          "ref": "e6492ffc-429a-40ef-a2b9-3ba774c9c5d7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "72d580e6-4808-4f61-8069-47b8a33fe99d"
        },
        "item": {
          "id": "1669e276-ec70-4680-933f-af8109432091",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0aa9bc4b-867a-44a8-a6b2-274dda85922b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209a4edc-5dc2-4f60-9a08-3ebfe65f4be6",
        "cursor": {
          "ref": "2c2399af-d61a-41ed-8f82-de57ec7b2036",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1be4221a-9287-472a-965e-ada35a1c367f"
        },
        "item": {
          "id": "209a4edc-5dc2-4f60-9a08-3ebfe65f4be6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d8ffc376-cd0c-4a1c-bcf1-aba4f0b0a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f96f11-934d-4650-b940-2308be9313a9",
        "cursor": {
          "ref": "d9964b74-1eff-4978-a508-3b9fea631da2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1d844198-cf09-46ff-9783-d31b60b8f8a0"
        },
        "item": {
          "id": "16f96f11-934d-4650-b940-2308be9313a9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "46f339aa-772a-43ae-850f-e689d0f8e71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02d3f02-9417-4197-9ed9-7e3d2ec7cf87",
        "cursor": {
          "ref": "5026c1b7-2d38-4cc6-a837-323373e7cd1e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cbaeff23-f545-4a83-989f-c283ba73cd17"
        },
        "item": {
          "id": "a02d3f02-9417-4197-9ed9-7e3d2ec7cf87",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "68b2945d-6d5b-4164-8edc-5abd6fda0b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1476800-bd51-4c67-a64a-360fced46934",
        "cursor": {
          "ref": "bc2658d2-d69c-4dfe-84b9-0b56f4c85942",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb563b80-d4a2-41a4-8d4a-cb8cfc2b3e4b"
        },
        "item": {
          "id": "c1476800-bd51-4c67-a64a-360fced46934",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "234e6e1c-7e53-4b85-8ea7-347ea030c43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d873c84f-0780-407f-a1a9-44b39cd32c11",
        "cursor": {
          "ref": "d7c5c9ba-90f3-468c-87d6-96715d96eda5",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b0dcd8d4-2809-4469-96aa-c80e9b2995da"
        },
        "item": {
          "id": "d873c84f-0780-407f-a1a9-44b39cd32c11",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e2e47060-4c84-4c28-b35f-a51710034203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5601d28-55a6-4f7a-9534-15ba44ce7238",
        "cursor": {
          "ref": "9ad6289c-ed82-46bd-86eb-bd8b913d61bd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a2a8fe32-3f63-43d7-8dcf-faf93d72650f"
        },
        "item": {
          "id": "d5601d28-55a6-4f7a-9534-15ba44ce7238",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "98ee575f-1b5a-45bb-9813-0301ee069e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68720ec7-e466-4bd9-ba9b-f0ae7d6e23c1",
        "cursor": {
          "ref": "bc23b782-8852-4c7b-9a32-2802ecb0a97e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "61024eb8-534a-4c75-a2d8-1be11899d247"
        },
        "item": {
          "id": "68720ec7-e466-4bd9-ba9b-f0ae7d6e23c1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "02a6aff2-fbd4-4558-9131-328613675723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c891998e-3c03-4aee-a702-c7da33c37d52",
        "cursor": {
          "ref": "5350edaa-fa9c-4afe-85ef-f3d6cab9409c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e8703d48-48ff-4d6e-8955-083be10763f1"
        },
        "item": {
          "id": "c891998e-3c03-4aee-a702-c7da33c37d52",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e73c6a67-7afd-47ce-b779-5f9672afd954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6b6f9d-9c7d-449c-9c22-c071fb70d38c",
        "cursor": {
          "ref": "f389164d-be45-48b3-b7a3-5a0b97547b21",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e1af04eb-45ae-4c58-b972-f2a27038819e"
        },
        "item": {
          "id": "cb6b6f9d-9c7d-449c-9c22-c071fb70d38c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35798807-b875-4b0c-a0c3-ee2e80f33ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365dc728-ad57-4d74-a60a-b8a1444c6798",
        "cursor": {
          "ref": "d45c057c-272a-4ecd-843d-a1ddefc8e5d8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "56f7fd49-6d64-4c0f-a1df-bb71b8501c36"
        },
        "item": {
          "id": "365dc728-ad57-4d74-a60a-b8a1444c6798",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2d90ef53-1524-450c-9ecf-28040422e2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4768f214-314f-4b0e-b418-934862b067cd",
        "cursor": {
          "ref": "35fa5cbb-beb1-4bf3-be58-6cebd0eddf0b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "20d0c9ec-30d3-4b81-8386-29a1cb764666"
        },
        "item": {
          "id": "4768f214-314f-4b0e-b418-934862b067cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "86f7bff6-2717-412b-96a6-1daf2731d174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd05c2f8-81b6-4e82-887f-a087c309daf7",
        "cursor": {
          "ref": "627ed0ec-9180-4d8f-8d64-17976b9fee2b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38d87455-6c96-4506-9313-bc3f4311ac43"
        },
        "item": {
          "id": "bd05c2f8-81b6-4e82-887f-a087c309daf7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3c5aa927-35c1-4444-ba7d-31f17a324c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a28fe3-4386-43b9-a12c-44e36e372cd6",
        "cursor": {
          "ref": "9c9d09a4-85ba-4ddc-8afb-62e9b2189888",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "71981e18-9264-43c6-9b33-e699a9242474"
        },
        "item": {
          "id": "56a28fe3-4386-43b9-a12c-44e36e372cd6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "81306c2f-a77e-40a1-87d6-f45eb2647bf4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b26cf18-104c-45be-87d1-2addb1c33cce",
        "cursor": {
          "ref": "a3a3c70e-e822-4f84-9253-fd26b92f1140",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7c8b166-e596-4c37-a8a0-2b83c3574ab0"
        },
        "item": {
          "id": "1b26cf18-104c-45be-87d1-2addb1c33cce",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8f9451a5-14b3-4af5-959d-23f52bd18821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426b441c-8703-4a87-b94f-b271dc3077ac",
        "cursor": {
          "ref": "9dafb68a-cef4-415b-80c3-ec5125c73ff7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "36258aa3-90d5-4457-991c-4be06525fbe0"
        },
        "item": {
          "id": "426b441c-8703-4a87-b94f-b271dc3077ac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "05e14b7f-1d51-4115-a4f7-c8677268b89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86cd6bb-41a1-45b2-84dc-ba86c26bafd1",
        "cursor": {
          "ref": "2fa23517-ca48-40a1-bf10-5c31611c83bd",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "21332757-9eea-4d86-b2b6-43b988ea08d8"
        },
        "item": {
          "id": "e86cd6bb-41a1-45b2-84dc-ba86c26bafd1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5b26dd35-4b7d-4be9-9dd3-1de983b9eb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd10596-4cf2-443c-8ffe-767d874752eb",
        "cursor": {
          "ref": "ca5166f7-13fc-4d26-b13c-9f67ee7e6eb7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aa542506-b2d3-4761-b88c-b3d7bd9d3526"
        },
        "item": {
          "id": "0dd10596-4cf2-443c-8ffe-767d874752eb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4dd2b057-d8fe-4239-b7ba-37d45510f336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304b1af0-ee93-4fac-b046-f5862cbe22cd",
        "cursor": {
          "ref": "daa76db8-4ec0-419a-9819-b2c5c2332e0e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "98e39e7b-3a44-4543-b698-9708575223bb"
        },
        "item": {
          "id": "304b1af0-ee93-4fac-b046-f5862cbe22cd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "199b9560-2815-4088-9794-34f7af1e31b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50909021-0d82-4115-ab98-3dd8376d011e",
        "cursor": {
          "ref": "400e9a5b-2b99-4cad-93e3-5f890a1d6817",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e53d422f-a3d6-469b-a214-fda0e43199f0"
        },
        "item": {
          "id": "50909021-0d82-4115-ab98-3dd8376d011e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fa1a0376-ab83-4e23-86c2-1c040888c27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d1c8c3-5252-4c03-bb4e-55e6547e9a2e",
        "cursor": {
          "ref": "d49ffb57-98f1-42d2-bc8c-ecdd5c27f4a0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "159c57f3-d59e-40f6-9815-ea6be7b8b6f2"
        },
        "item": {
          "id": "30d1c8c3-5252-4c03-bb4e-55e6547e9a2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a55ee568-2dfa-42e9-ae54-2d7e5694f4d9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abcd36b-ad0a-4064-9ff1-8649d4423464",
        "cursor": {
          "ref": "9f7c7374-2826-4af2-8d31-6bd6c823f82a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "783d5b7f-f909-4462-8d3b-47538d7227c7"
        },
        "item": {
          "id": "7abcd36b-ad0a-4064-9ff1-8649d4423464",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "afc08efc-2aaa-4f00-a4f6-3ed5118c3c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7368ddc3-79bd-4abd-bdfc-05c61134d54c",
        "cursor": {
          "ref": "ea1d63df-9c36-4003-9b4a-e041e2e412ef",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a7929fc8-dde3-495c-9dd5-fb7ba9f93ec9"
        },
        "item": {
          "id": "7368ddc3-79bd-4abd-bdfc-05c61134d54c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6e6ab437-4d37-46f4-a860-d12f0f7eec54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffd8814-b8af-4d09-8349-158e8ab8848a",
        "cursor": {
          "ref": "47f12496-b132-45ff-abce-541237bb083d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f44909ea-9b17-480b-958f-79ce1a767931"
        },
        "item": {
          "id": "7ffd8814-b8af-4d09-8349-158e8ab8848a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "61bab50b-3e8c-4569-b230-0e666f51fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d320847-93b6-4cf0-8fb7-28ea6677a926",
        "cursor": {
          "ref": "978b8720-5b6c-4c8a-9a2f-a415cb821d2b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "477eee4e-e434-43f5-b5d3-f5089913aa3b"
        },
        "item": {
          "id": "0d320847-93b6-4cf0-8fb7-28ea6677a926",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b7e99991-12cb-4c66-a483-6bd70fff95ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad47ec20-fba4-4e7d-afa4-e24f49849906",
        "cursor": {
          "ref": "81196bc1-3146-4ded-ac13-d0bd8083c1f1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0e1e870b-e0e2-46e1-bf71-0872da7cf909"
        },
        "item": {
          "id": "ad47ec20-fba4-4e7d-afa4-e24f49849906",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4fd355c6-12ed-41fe-937e-68fca0a5d260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe50194-790e-49f4-bc1e-17fdd19d8363",
        "cursor": {
          "ref": "3289737e-7bfb-46f8-96f5-04b4f224e5f6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4f7b732d-00fb-4ed9-bb73-b211feca04b9"
        },
        "item": {
          "id": "efe50194-790e-49f4-bc1e-17fdd19d8363",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1cd59090-0cd4-4766-9ce9-384ac7fb9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d4272-363e-44f1-a399-fb3daac31b56",
        "cursor": {
          "ref": "0f7edd5d-05f2-46a8-b72b-001ece772193",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bf8c3fd8-0300-4985-884c-47b9924e72ec"
        },
        "item": {
          "id": "d71d4272-363e-44f1-a399-fb3daac31b56",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "08060b08-c8ac-4ccd-9941-34766964c676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6a8579-9a46-445b-97cc-307e19582008",
        "cursor": {
          "ref": "8ea44aed-9429-40a8-bb4f-bafc46bb7b11",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17d87590-b4ae-4b37-8df4-5260af791b6c"
        },
        "item": {
          "id": "4e6a8579-9a46-445b-97cc-307e19582008",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c07ea16-4e36-498f-b3ad-11e8c6f44e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048e65cd-9bac-4435-a7b0-cd2c21fe0d4a",
        "cursor": {
          "ref": "fa95e10e-9269-4309-b6b4-bed8195bca14",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ee772961-883f-40f9-9636-b213e55422b7"
        },
        "item": {
          "id": "048e65cd-9bac-4435-a7b0-cd2c21fe0d4a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a8d470fd-e014-4dec-988d-d77916c588ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4af7da-f8d5-4393-9c72-a58619c07eec",
        "cursor": {
          "ref": "622499ae-6fde-43bb-8c44-a1c0ac41d006",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "db3d4d90-dc40-4f33-a48c-3647c19378ea"
        },
        "item": {
          "id": "ca4af7da-f8d5-4393-9c72-a58619c07eec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8670b336-6e89-4a61-91b9-005e216a0f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0525f32-7a78-4b3f-a5f0-68251225e0f0",
        "cursor": {
          "ref": "489983f0-7c85-4242-8f35-ee1b704a671c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "631f53d2-7d72-4f49-a96b-cd872ec625ce"
        },
        "item": {
          "id": "c0525f32-7a78-4b3f-a5f0-68251225e0f0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e9a72328-0c56-40e5-947f-44751b794d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbea2539-d715-450e-9ef9-0ac8520fb53c",
        "cursor": {
          "ref": "267cb827-c0c6-4dcf-9d94-3dca17e4f453",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b6737a16-db6e-4e5b-9fc4-f4698cecdc85"
        },
        "item": {
          "id": "cbea2539-d715-450e-9ef9-0ac8520fb53c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cd60acd2-7958-447f-99b7-0088af66044e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68873a3c-46b1-4389-b259-d4437e337645",
        "cursor": {
          "ref": "2daa039f-00b9-4caa-9300-6fa87953e666",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2eeed09b-030d-4d53-8362-181781520491"
        },
        "item": {
          "id": "68873a3c-46b1-4389-b259-d4437e337645",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3effd8f8-7d00-4011-b440-cdaf9823b027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3821bdc4-4162-4b6d-8e4d-b29f05a0a875",
        "cursor": {
          "ref": "0830ef47-349c-473a-96d8-65b4f709a701",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5ab43754-65df-40e3-8eb3-ef14861b7074"
        },
        "item": {
          "id": "3821bdc4-4162-4b6d-8e4d-b29f05a0a875",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f0b3f092-1f1c-431b-949f-8c5b3e010bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f9205-0606-4020-aaf6-e9de866df55c",
        "cursor": {
          "ref": "26040ea6-dbfd-4c57-b340-6b1f6dc1ca36",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57956e4d-5742-4fa2-8588-2605b7eac076"
        },
        "item": {
          "id": "572f9205-0606-4020-aaf6-e9de866df55c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bf351854-d0a0-426f-94fc-0bf0fdd9575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57bbcd9-9324-4ab7-938b-60d82dc0cc1c",
        "cursor": {
          "ref": "11b93dfd-d18a-4ccb-b607-61fc5fea80b7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4caf28bd-347e-48b2-a628-c28c92c1fc71"
        },
        "item": {
          "id": "c57bbcd9-9324-4ab7-938b-60d82dc0cc1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d8c5aadc-8819-4cac-84d4-27335b0cee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ffc82-ba3d-4dbb-99a5-78be20a022d3",
        "cursor": {
          "ref": "3f49860d-dea3-4c27-8c90-34577c8596f2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "38dd7db1-034d-4a0d-a7a8-98d536012d37"
        },
        "item": {
          "id": "de8ffc82-ba3d-4dbb-99a5-78be20a022d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bcdc51d9-6cc5-466b-814f-9aea29eafce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff6052-eddb-49e6-a2ce-390a81c60773",
        "cursor": {
          "ref": "4d688612-d194-4684-8ebe-b73fb67f570f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6b32cdef-ccad-4c31-a383-c640d4f09a3f"
        },
        "item": {
          "id": "61ff6052-eddb-49e6-a2ce-390a81c60773",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f09022eb-229f-4033-9a45-b0cdc16dd3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aad85f-50d4-4226-bf54-1122e98ff954",
        "cursor": {
          "ref": "8afde93b-ae37-4484-829d-42273e64c0f8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "58e54176-79ce-445e-b97e-926cc4950940"
        },
        "item": {
          "id": "b0aad85f-50d4-4226-bf54-1122e98ff954",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0746644f-2b5e-4c2a-a826-7ed8fb049298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39600e62-151b-46da-8d55-43cf6bc8fe6b",
        "cursor": {
          "ref": "1c383cbc-2076-48dc-9f31-d30c67394c96",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5b1514a0-d497-471b-a838-7e8530353c88"
        },
        "item": {
          "id": "39600e62-151b-46da-8d55-43cf6bc8fe6b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50e5d7fd-b622-4c23-96ac-340b8688e207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b441fefc-868e-4cab-87fa-d1e5c5bae1cf",
        "cursor": {
          "ref": "f4bb7b86-81d6-424f-8842-eea2dec3ac59",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "434f2267-7e0f-48e3-bf77-79ca6578f41e"
        },
        "item": {
          "id": "b441fefc-868e-4cab-87fa-d1e5c5bae1cf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6db34150-2fbb-40e7-ae18-2028cc3339ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53af49c2-6a9e-4b44-9a97-8ef83a11ec83",
        "cursor": {
          "ref": "fa50acec-3418-40a4-bdd0-70848216953a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a5acb6fc-9ccf-4e11-9d6c-ead1a7549c8c"
        },
        "item": {
          "id": "53af49c2-6a9e-4b44-9a97-8ef83a11ec83",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f87c8cbf-9a29-4787-9fed-b9aa23a72ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32935a7-c75e-48bc-a304-47d6dcef6c67",
        "cursor": {
          "ref": "0da629b4-1755-4f63-8f00-ac962b15cc4f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dcef5a54-4fda-4617-93ed-d293a6575a3f"
        },
        "item": {
          "id": "c32935a7-c75e-48bc-a304-47d6dcef6c67",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d61eb697-60c6-4839-9d87-6855a9ff82bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ad620e-ee2d-4bf5-9384-638f9f69b497",
        "cursor": {
          "ref": "1eb20ec1-70d7-47ff-9b8c-5fe3f019a2ff",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9485fb7f-324c-49dd-b622-e576eff1e8a6"
        },
        "item": {
          "id": "48ad620e-ee2d-4bf5-9384-638f9f69b497",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "85fd4cc9-d473-446d-ac5f-bf1c64a019ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cebcc4a-1ee1-43b2-85a7-8d8c70dfc478",
        "cursor": {
          "ref": "7bc92b77-094e-424f-aadb-67e3de3a45d9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b4d365bc-1fe0-4bea-a706-b3f3d3e0e4ec"
        },
        "item": {
          "id": "8cebcc4a-1ee1-43b2-85a7-8d8c70dfc478",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "65282708-7b3b-4c4c-8975-d63c27aa515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f462c8-9508-479b-b15b-2924950dc929",
        "cursor": {
          "ref": "c7e9c394-0307-4f3a-abb0-5db8fc985863",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f0e272e8-2fbc-45d0-b0a4-c2e59abafe9d"
        },
        "item": {
          "id": "29f462c8-9508-479b-b15b-2924950dc929",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "362f2ee4-dca5-4cf4-b98e-c514bba6d4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26f2c1e-4a3f-42c5-b4b0-ba4f5816c58c",
        "cursor": {
          "ref": "75a5ae26-3639-4f3d-972a-eca5ccaaa5c7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a357055b-7bff-48b9-9a5d-0a0f56e1a6f2"
        },
        "item": {
          "id": "b26f2c1e-4a3f-42c5-b4b0-ba4f5816c58c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "54746322-a97a-4261-8b42-be1190ed9314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9774cc8a-9eeb-4a71-8fec-5e92bfca792f",
        "cursor": {
          "ref": "f15195bb-38c4-48d9-b05c-c15ac9374c50",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "53b2c70c-0c6b-447d-93ba-3186e973857e"
        },
        "item": {
          "id": "9774cc8a-9eeb-4a71-8fec-5e92bfca792f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ef0bdcba-03b3-4559-8337-f8c5ac82864c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e91e1a-48a8-4999-bbd2-d43c73553d6b",
        "cursor": {
          "ref": "502ba791-ed8c-48a9-819f-0edba44baebc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dff93f74-617b-45c9-b691-0e37d6f72a47"
        },
        "item": {
          "id": "16e91e1a-48a8-4999-bbd2-d43c73553d6b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cdfb2a6a-04d7-4b02-a752-53e6592e2f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125d8a49-f599-4f53-b117-5f4d29102e77",
        "cursor": {
          "ref": "385755f2-5586-4129-9f0d-1b39f0fb2e65",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fc6e23b9-9355-4f35-83e7-bbb5016f458c"
        },
        "item": {
          "id": "125d8a49-f599-4f53-b117-5f4d29102e77",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b8e71f5-1b4b-4a5d-af4c-02e8e8ff39fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a515653-1086-4af3-af72-acec878e7ca1",
        "cursor": {
          "ref": "98d50e9d-f77e-4f90-9193-e4b6321ceee0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8158df9e-35f7-4afc-b762-cdaaec3b1872"
        },
        "item": {
          "id": "4a515653-1086-4af3-af72-acec878e7ca1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "118a2cf3-e8ba-4d2a-a224-5c0e3ba3661c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e28ddfd-9e9a-4fbd-97ac-4b8dc25ddc78",
        "cursor": {
          "ref": "71f3e2ba-e7e7-486d-b20d-17355e088389",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e55de622-0396-4c03-89d7-f5ef4202e292"
        },
        "item": {
          "id": "8e28ddfd-9e9a-4fbd-97ac-4b8dc25ddc78",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "591158b1-b0ac-443f-9f90-801dd141c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253dcc58-a631-4d2d-99ce-191d8c8cf089",
        "cursor": {
          "ref": "ba216524-8287-4765-8b2c-a7028c1b974e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8cd8b88b-21dc-45d5-a6b7-400c81e92dc8"
        },
        "item": {
          "id": "253dcc58-a631-4d2d-99ce-191d8c8cf089",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "41525d37-01a3-4e5c-9d3e-651a4de37892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d606da70-feb0-47b1-972e-b7e289f42e30",
        "cursor": {
          "ref": "623bb915-732a-45a9-b2cb-dbdc302d2d0e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bf1c3624-4208-4356-81d1-779388986b79"
        },
        "item": {
          "id": "d606da70-feb0-47b1-972e-b7e289f42e30",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3fdfa0bd-102a-4aaf-b61c-5208ac1affe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd66c3f2-614f-42b2-970c-162951054f1a",
        "cursor": {
          "ref": "3782c9b9-5cc7-439b-a2e5-3e07bab04510",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d263496d-4731-4d68-9b0f-ce0c89e73420"
        },
        "item": {
          "id": "fd66c3f2-614f-42b2-970c-162951054f1a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b979622f-1bbe-41e6-8598-682603f56ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6d9994-09db-4d62-9f39-61fd56a771e4",
        "cursor": {
          "ref": "4ece2cb8-ab2b-440a-a724-f8f28989d0c4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bdf0714e-a845-47f0-8781-40a62c2b6eb2"
        },
        "item": {
          "id": "5b6d9994-09db-4d62-9f39-61fd56a771e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e4aac3e3-2925-4039-8e18-e7fef0cad8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daaae85-21c9-45ff-a926-5513a3990d44",
        "cursor": {
          "ref": "ee8787e5-f634-450a-b417-3cc070870ec6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a0172f3-ba56-4ff8-bb42-d09e2a135f85"
        },
        "item": {
          "id": "4daaae85-21c9-45ff-a926-5513a3990d44",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cbecb58a-1e67-4c79-8886-e76571b99acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e08b69-3a8e-4069-91db-40f1dad70896",
        "cursor": {
          "ref": "b2f3646d-b8df-485f-bc0a-edfb1fe930d7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f4a99cbe-3d49-4dbf-978a-ca3e6ef21493"
        },
        "item": {
          "id": "30e08b69-3a8e-4069-91db-40f1dad70896",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6310068e-a0e5-462e-b45f-da66157aa62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271ee63f-fb01-48b9-b374-16723da095b8",
        "cursor": {
          "ref": "84e96fb5-3275-4abd-a458-c94e2b6ac665",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "036ac9c1-73ed-464e-9641-c3ca61c47ca9"
        },
        "item": {
          "id": "271ee63f-fb01-48b9-b374-16723da095b8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "94874271-3252-4da4-aba8-335a19fe50c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad3632-8b3d-4f4a-bc56-94848ee1db1e",
        "cursor": {
          "ref": "464e0d58-1668-4d6b-b060-167ba650c771",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "39961e2f-ef4d-47bb-9cce-5cb6aeeb974b"
        },
        "item": {
          "id": "c8ad3632-8b3d-4f4a-bc56-94848ee1db1e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "44f86eba-5cc5-402f-9caf-7ae1d5c67602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56c7555-966e-4bc9-a167-7f51d24fbd75",
        "cursor": {
          "ref": "f5919ba4-9f6c-4fa6-be5d-39c69adbfca6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6877420c-ea37-43db-985e-c3a9e39a8e09"
        },
        "item": {
          "id": "f56c7555-966e-4bc9-a167-7f51d24fbd75",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "01ba0445-265a-4e40-bd46-0a50bf822526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459c5767-9b98-4acd-aaf6-56d23c4c891e",
        "cursor": {
          "ref": "72d87f89-b145-456e-aa7f-38328c755d90",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2fa994e7-063b-438b-bcf2-907e3d8937d7"
        },
        "item": {
          "id": "459c5767-9b98-4acd-aaf6-56d23c4c891e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e90bbb64-8361-4bdb-87c3-ac570cee510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4370a5dc-220f-4db8-a7b7-456c148ef7b5",
        "cursor": {
          "ref": "92af3924-8b03-442d-acf1-311ab7b4e47a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "92ed69eb-eba5-407f-af5e-0f4bb477beda"
        },
        "item": {
          "id": "4370a5dc-220f-4db8-a7b7-456c148ef7b5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3a89febe-63bf-4d11-a109-70de2462a82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1c6662-6622-45f8-8fa9-d029119b9376",
        "cursor": {
          "ref": "22ae599c-251e-4448-b2d1-fc7e6acb59e0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5d7adcea-a074-4f0a-bbe1-356733fa26d6"
        },
        "item": {
          "id": "bc1c6662-6622-45f8-8fa9-d029119b9376",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "290d9297-5a19-43e3-8f4e-8f07a5f3b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616c7d9e-52cc-4b30-ab28-4c1a56ced3bf",
        "cursor": {
          "ref": "7c4dd574-3d1d-4662-b101-92346d11f5f6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cfebab8b-0285-4ef4-8cc9-74cb98aad0af"
        },
        "item": {
          "id": "616c7d9e-52cc-4b30-ab28-4c1a56ced3bf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bc52dd57-705b-48cb-88d1-2df3322541f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b5f44a-b8e7-4862-b66f-66d88efaab36",
        "cursor": {
          "ref": "c58d8fd9-9bb6-415d-bc9c-4555935b418d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ab6cf10d-36fd-4a7a-b14b-9b76e601ab7b"
        },
        "item": {
          "id": "d0b5f44a-b8e7-4862-b66f-66d88efaab36",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8c4b443f-e49e-484c-b93e-9e24dca86ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94bd4d2-13f8-4fc1-bb3e-e0c91a9ae56d",
        "cursor": {
          "ref": "c3407ff4-149c-4fe2-a047-284d10bc2693",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce634f85-1e42-4a35-bb75-cec52619e9da"
        },
        "item": {
          "id": "a94bd4d2-13f8-4fc1-bb3e-e0c91a9ae56d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f72a8579-512f-4a05-9640-098f63c244d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478b34a-1bf8-48a1-afed-109de3f5494a",
        "cursor": {
          "ref": "6f513ba6-73e1-4ce5-a7fe-6c8710b97000",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "50a68b50-9aec-4551-b5ab-895dc6d7eea0"
        },
        "item": {
          "id": "e478b34a-1bf8-48a1-afed-109de3f5494a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "824f395b-90c4-476c-9474-90d387c256bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edcdec4-966a-496d-ad74-332eb6962b06",
        "cursor": {
          "ref": "2b9194b3-2090-43bb-8f95-f61b498735d7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "878e1c94-1582-49cd-b6f2-d1100236d37a"
        },
        "item": {
          "id": "3edcdec4-966a-496d-ad74-332eb6962b06",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "04fd52af-634b-46c1-9a23-158028917893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f1b858-93e5-4147-9d24-4af2257082e5",
        "cursor": {
          "ref": "1cb3f353-d7aa-4a50-8206-e57588e032d2",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "559ef326-0ccd-4227-86d3-dca493473fce"
        },
        "item": {
          "id": "67f1b858-93e5-4147-9d24-4af2257082e5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "941789b2-31a9-4442-a135-b82a38132658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc1d0d7-c49d-4a30-95b3-1bd5366b6393",
        "cursor": {
          "ref": "8122a944-cf9e-4fda-a721-760120a0c2d0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7218c698-40e0-4bd6-8c53-da1ec26feefe"
        },
        "item": {
          "id": "3fc1d0d7-c49d-4a30-95b3-1bd5366b6393",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c9ed6eb1-d42e-486a-93e2-ea221644297b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f587d887-f30f-4c3b-86a5-97ed49e8a4b0",
        "cursor": {
          "ref": "72bb3226-5be1-4ebd-b7e8-84d51e28f019",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f27a3ee4-29ff-431e-8383-5e4877f964d6"
        },
        "item": {
          "id": "f587d887-f30f-4c3b-86a5-97ed49e8a4b0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5efbfd55-d33b-4d72-8e74-8d228244297c",
          "status": "Created",
          "code": 201,
          "responseTime": 14214,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "886cfdd6-2f5e-415d-85b5-305e00aaf050",
        "cursor": {
          "ref": "86f63049-3e24-4ee2-bcb5-425daaa64f5d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5ef7bea2-c703-41db-a475-a5adadb60938"
        },
        "item": {
          "id": "886cfdd6-2f5e-415d-85b5-305e00aaf050",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f7a90690-7203-4a01-8c66-640cadfd013e",
          "status": "Created",
          "code": 201,
          "responseTime": 13656,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfbd738-f720-4e96-84da-893bb7b32a32",
        "cursor": {
          "ref": "668d1762-b7b1-4fb3-bb4f-cf8fe810bf2b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c616c675-374b-4df1-a271-687151d90652"
        },
        "item": {
          "id": "7bfbd738-f720-4e96-84da-893bb7b32a32",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8e63d3a9-71ce-4712-8284-2e51c802d403",
          "status": "Created",
          "code": 201,
          "responseTime": 13385,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa6ad23-4421-4b34-9e5d-2006b368e997",
        "cursor": {
          "ref": "63053828-390d-47aa-856d-1f01554fae2a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fe3b253b-0e09-44af-874f-58b6fbeb052e"
        },
        "item": {
          "id": "5aa6ad23-4421-4b34-9e5d-2006b368e997",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0e681080-7e89-45e0-937c-db5e04ab1f7a",
          "status": "Created",
          "code": 201,
          "responseTime": 13793,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11e649e-0a09-48ad-9fc7-12f6290d61a5",
        "cursor": {
          "ref": "e046c5cb-3383-461e-aa16-8c8a584efb3b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "17e94638-1e12-419f-b199-a9e386ff9524"
        },
        "item": {
          "id": "e11e649e-0a09-48ad-9fc7-12f6290d61a5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4ba383a4-1c49-4ba1-903d-0387314dbbd7",
          "status": "Created",
          "code": 201,
          "responseTime": 13234,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-13T00:44:35Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-13T00:44:35Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ad732c85-34f8-4a28-ab75-4568b58ea893",
        "cursor": {
          "ref": "4f31d718-6301-462a-b7c1-7e991651262d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b648d8c4-1db8-45e2-8236-ba0d88448caf"
        },
        "item": {
          "id": "ad732c85-34f8-4a28-ab75-4568b58ea893",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9216a71c-08c7-4299-bab5-996cc9319710",
          "status": "Created",
          "code": 201,
          "responseTime": 13670,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aed7988-23b5-4f6b-a7c1-306b504c71ca",
        "cursor": {
          "ref": "1aa93de6-791f-4f3c-80a6-ff3cef078df9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2ca5309f-2dc6-438d-a70c-f28accffe0a5"
        },
        "item": {
          "id": "5aed7988-23b5-4f6b-a7c1-306b504c71ca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "69e8da7b-e314-40e8-a67a-07d31c4cf46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88265267-90db-4032-ad12-1de3dc75041e",
        "cursor": {
          "ref": "2f6c0529-b96b-4bb2-991e-ca7461f90f45",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "938fce10-f4c9-4948-a72c-8093be6f6f3c"
        },
        "item": {
          "id": "88265267-90db-4032-ad12-1de3dc75041e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81060b6d-7a07-4ab1-bee8-27215b7b7a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3a74c3-27d3-4672-a4df-bc5331b80cbf",
        "cursor": {
          "ref": "365a96a6-280e-440d-a889-c8e7c196282d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a774193c-6315-4e47-af0b-4ce8cec93179"
        },
        "item": {
          "id": "2b3a74c3-27d3-4672-a4df-bc5331b80cbf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8f5bdbc-93fe-40f8-ad3f-5a995fc5a749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179054cf-20cd-427b-b0c8-c46c7daf7bda",
        "cursor": {
          "ref": "270228b6-5ffa-4096-825f-eb4a3045071a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "eceb51f6-69ad-47a6-9388-a69e856bd4cd"
        },
        "item": {
          "id": "179054cf-20cd-427b-b0c8-c46c7daf7bda",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71a9c1b1-5a6f-4680-ae47-b0b736d45613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044fe5c6-d0df-45b2-a6e6-bb435b02e028",
        "cursor": {
          "ref": "6c511d3e-8817-4cc3-9a0e-39910eee48c8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "84496b23-0042-4a3f-b623-932cde8c5862"
        },
        "item": {
          "id": "044fe5c6-d0df-45b2-a6e6-bb435b02e028",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "436eb2fe-e32c-4042-b8c9-7d719874e679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3681da8-32c5-49fe-9f4a-2d010eedb7d8",
        "cursor": {
          "ref": "f699becf-20a2-4e35-9dfa-28092de0639d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d2e7d38a-5d83-48de-9fbd-8e4fb9305110"
        },
        "item": {
          "id": "f3681da8-32c5-49fe-9f4a-2d010eedb7d8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba6594e4-e217-4757-8a4b-c8b4fda82dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765637c3-84eb-4b58-9774-01e911a3bff3",
        "cursor": {
          "ref": "cbaba516-52d7-4a4f-9df0-e15b66034d91",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "445cc974-8049-499b-9d1a-64bc6c51df0e"
        },
        "item": {
          "id": "765637c3-84eb-4b58-9774-01e911a3bff3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2524b8ce-fe8c-43a4-b5f6-9f27896ac043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197cdf1e-11c4-4641-abcf-31908b9aef07",
        "cursor": {
          "ref": "a3ad191e-b916-4345-b18e-f00ee6ad7bb1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a5df7ee0-5c05-46f0-bc07-54b09db8be5f"
        },
        "item": {
          "id": "197cdf1e-11c4-4641-abcf-31908b9aef07",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "153c0cdc-2d09-4ecd-a60a-fe772d328ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba53f43-ae70-418b-abbb-5bd30cf638fc",
        "cursor": {
          "ref": "eb4d56f8-18c8-41dc-a3e1-7186adf5ad22",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c86e7b31-faf8-4bcf-9a28-8e3317d89d63"
        },
        "item": {
          "id": "7ba53f43-ae70-418b-abbb-5bd30cf638fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "23e81ee2-65fb-480a-a007-baa8315b014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e48f2f-b6e5-43eb-82aa-1c4be267e181",
        "cursor": {
          "ref": "99107402-7f57-4b0c-86a0-42ff44bc5b3a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62227826-058e-451c-9ecc-e14b71e3a9e8"
        },
        "item": {
          "id": "e5e48f2f-b6e5-43eb-82aa-1c4be267e181",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d72f7be5-e6b6-41ce-a4bf-49dadc4874ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f34696-1bc9-4052-bbe2-e81c5f763577",
        "cursor": {
          "ref": "b44c5f48-8f80-4dbf-bd58-2eaf8105a1f4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59554122-fd0d-4188-b372-218a10e17d74"
        },
        "item": {
          "id": "49f34696-1bc9-4052-bbe2-e81c5f763577",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f85cbb3-aeb4-4d1d-9b98-6b86317fd8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad7213e-1755-4f60-94db-2ef6da84d3d0",
        "cursor": {
          "ref": "8e3194c2-ae53-4431-953d-1ec8a631a1d0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "21e38d16-b70b-453d-b0b9-06fdc6fcd83a"
        },
        "item": {
          "id": "9ad7213e-1755-4f60-94db-2ef6da84d3d0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0e72d338-0063-4e4d-9657-a40ff4509a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61ac8c3-7c41-4f73-9ad8-9a25ea787399",
        "cursor": {
          "ref": "8bd29c36-dd67-429f-acaa-2e49b3e70280",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "57cc5b96-8373-432b-a911-f06bbc60677c"
        },
        "item": {
          "id": "f61ac8c3-7c41-4f73-9ad8-9a25ea787399",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0ebbc51-872f-4814-a3bb-f110345be5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740a2283-9f26-4317-9705-399dcb51cd98",
        "cursor": {
          "ref": "b258a14b-1650-44e9-9049-5868ae5ea677",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2e3a2c28-b546-4d48-876a-cca75fefb40d"
        },
        "item": {
          "id": "740a2283-9f26-4317-9705-399dcb51cd98",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b22521af-cb84-4fb0-8c63-a37f20e8ae7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467a9bf5-7b87-4e15-95db-a0a294b95d67",
        "cursor": {
          "ref": "8d581e47-4b50-48da-8327-4e189d8684da",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8d8607ac-318c-45a0-bbc3-69b95e6d561f"
        },
        "item": {
          "id": "467a9bf5-7b87-4e15-95db-a0a294b95d67",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a0be10ae-dd5d-4f7c-920c-822db5f621cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc227952-b813-43a6-95c7-8915d81434bf",
        "cursor": {
          "ref": "009acd68-2b64-4d35-97e7-7c50b5adcd26",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "14945ce5-6ff9-426f-b7db-a6c66e7c137b"
        },
        "item": {
          "id": "fc227952-b813-43a6-95c7-8915d81434bf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "91e25289-a38b-47ab-bee4-c0f210aaa756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db75f567-7566-4ed5-a8a5-b318b6711072",
        "cursor": {
          "ref": "99770c24-b9d9-49a4-be49-05985885a4e2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "70a5a45e-0bd8-481f-a2b6-01cd49a04443"
        },
        "item": {
          "id": "db75f567-7566-4ed5-a8a5-b318b6711072",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2e9da7c-0d02-4781-91cd-036858a85b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471cedc9-e4e3-4065-86a5-9b674594213f",
        "cursor": {
          "ref": "957c4b24-f4a3-40e4-ae6c-5d0f39905f24",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ad9c1ea2-1a35-41e8-b540-af270f98ae78"
        },
        "item": {
          "id": "471cedc9-e4e3-4065-86a5-9b674594213f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd6b3014-c312-4931-99df-392103d23067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81966fdc-2a0b-4de8-ae6b-a22187c01a62",
        "cursor": {
          "ref": "3d5fc50f-60e4-45f0-a0d5-28c5c53805bc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f682cb18-640c-47e7-8b10-523520780d1b"
        },
        "item": {
          "id": "81966fdc-2a0b-4de8-ae6b-a22187c01a62",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a5b066e6-aa28-4c93-bf0d-fbef74b2d7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f96a94e-fcef-4f59-8af7-2bc142dd6fa4",
        "cursor": {
          "ref": "12eb7cfa-c5c7-4d65-b4aa-45847e71ed83",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "84f9ca02-a89d-4c32-8794-cf2f11499dde"
        },
        "item": {
          "id": "1f96a94e-fcef-4f59-8af7-2bc142dd6fa4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5c723256-8772-4bed-88ca-4687bb1476bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ed87ec-9e1d-4252-b4f6-c91ee8bcb1c2",
        "cursor": {
          "ref": "722dfd8d-b973-4248-b483-5d86982448e2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "385c0e99-3634-4eae-be77-9d5a7d7a9612"
        },
        "item": {
          "id": "93ed87ec-9e1d-4252-b4f6-c91ee8bcb1c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ffa7cb52-4796-4360-993d-230becdef5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ef5d93-8495-4033-91b0-7567218b8d49",
        "cursor": {
          "ref": "86b38c39-1b4e-4829-8f32-507559b6a088",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2c15a9ff-4279-43ba-b52b-ea937d5b7501"
        },
        "item": {
          "id": "34ef5d93-8495-4033-91b0-7567218b8d49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "581773bd-7288-410c-99d9-f38c15ada817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87f208f-8bed-4b89-a6ae-eb7548333cca",
        "cursor": {
          "ref": "8a41315e-1ae6-46e3-979c-93a995296051",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bde31613-9755-4ab7-a532-c4d423e0bff9"
        },
        "item": {
          "id": "d87f208f-8bed-4b89-a6ae-eb7548333cca",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d0054058-589f-4628-982e-ba4d96dcf721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c57cbf-e2a3-4189-99c9-96f7c8763a14",
        "cursor": {
          "ref": "58286a0d-8465-4b7e-9461-005787df50b9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0919581-27d4-4d91-b2eb-c65be95d87e8"
        },
        "item": {
          "id": "f4c57cbf-e2a3-4189-99c9-96f7c8763a14",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3c5a394-5b13-4e0e-bdbd-b58332f64fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458f33dc-682c-4b2c-8037-ba1f8a7a7b41",
        "cursor": {
          "ref": "733d8e63-559b-422b-a205-269740cbd2d8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b2f4660f-bd03-4044-8eb7-2c69ee16ba1f"
        },
        "item": {
          "id": "458f33dc-682c-4b2c-8037-ba1f8a7a7b41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b09aeacc-3930-4f50-aa06-ec0632f4bb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f67b994-04e8-451e-8481-a09ab3a30ebc",
        "cursor": {
          "ref": "99f2f275-898d-445b-a3ad-a4c762b817ad",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "099980d0-f6b2-4032-a053-0da96e50b627"
        },
        "item": {
          "id": "1f67b994-04e8-451e-8481-a09ab3a30ebc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3e343256-58cf-410d-8add-545f4ac93f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aac8eb4-6c48-4888-a043-57e2de70f8fc",
        "cursor": {
          "ref": "26082047-7c32-4371-8d22-41c424050e9b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0f781b7e-34f4-4352-9789-7686356c95f5"
        },
        "item": {
          "id": "5aac8eb4-6c48-4888-a043-57e2de70f8fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6d0bfbdb-5d7f-4641-a25b-4c18373bbc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b06c26-f408-4b0e-80c9-edcdaa50c7df",
        "cursor": {
          "ref": "0f0b4f4c-4880-460f-a426-2e1b908ed6af",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a2f7f8be-b634-469b-948a-6df143282e4b"
        },
        "item": {
          "id": "b8b06c26-f408-4b0e-80c9-edcdaa50c7df",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "154ed0dc-828e-4373-abc8-4c80faa94fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284a9f61-0daa-47b1-a5eb-0c6752714781",
        "cursor": {
          "ref": "b65c0fd0-4831-4008-a304-253398fbd6b0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6d862e93-3d90-4af9-9c88-26fb7c9154be"
        },
        "item": {
          "id": "284a9f61-0daa-47b1-a5eb-0c6752714781",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a7eef80-b22e-4065-9f63-fad0835e71cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f095991a-2d3a-4344-8b21-5bcf48552564",
        "cursor": {
          "ref": "68fa7fff-1899-4a9e-b6d2-7969c9d6c686",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e9b61460-2c85-4818-9b5a-2375fdc650b3"
        },
        "item": {
          "id": "f095991a-2d3a-4344-8b21-5bcf48552564",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "85add20d-81b9-4b11-b51a-eab17217bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b405d8-91e0-4731-82d1-d2af206abfbb",
        "cursor": {
          "ref": "19338c32-5439-4b5e-8d85-0986c980e01d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c60ff68a-89c8-4c3d-b02e-250f5e631644"
        },
        "item": {
          "id": "99b405d8-91e0-4731-82d1-d2af206abfbb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "67aab261-cf7b-49d1-beb0-1a88bd6cb8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cb3c95-13b1-46ef-9bf5-228df026c0d5",
        "cursor": {
          "ref": "d197d680-90d8-4dac-91d4-2d59d3533ebe",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aeb88f44-faa2-4915-bde2-758a40e1c754"
        },
        "item": {
          "id": "02cb3c95-13b1-46ef-9bf5-228df026c0d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a7ab61a4-6c0f-473d-96b6-cb3bee667dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8661d06d-d8d5-4b73-92d0-5f9a40d5d81d",
        "cursor": {
          "ref": "4cb0fa57-da04-42c9-ae67-1861668bb753",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "84678ea1-2a9d-4976-b6ec-abf26aafe8fd"
        },
        "item": {
          "id": "8661d06d-d8d5-4b73-92d0-5f9a40d5d81d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fa295f55-3fab-4f4b-8753-4d35e0659b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9dec55-e059-404b-8682-a26dbb3d5dc2",
        "cursor": {
          "ref": "ecade31d-c70a-4c5d-9f6e-5dfd6a8f192a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c4144366-3fbd-4279-9143-401095e02525"
        },
        "item": {
          "id": "ad9dec55-e059-404b-8682-a26dbb3d5dc2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9e68faf2-4cb9-4547-a46c-ccc897fa81fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cc7ef6-300a-4ad8-88f2-564b76dfa905",
        "cursor": {
          "ref": "bac4991a-bdaf-4579-b38d-68e1489be7a5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a2f6f040-40a3-4aaa-9b9f-e596e2bcde1f"
        },
        "item": {
          "id": "58cc7ef6-300a-4ad8-88f2-564b76dfa905",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3c58de10-e6da-4853-adae-d944e39bf01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640bf9ed-3718-4dfd-ad61-e411f30bfecb",
        "cursor": {
          "ref": "5f0b52e9-aeb6-4040-a665-d1515e6de75f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e73d82f6-a294-41ff-a217-6afeca4c4ca0"
        },
        "item": {
          "id": "640bf9ed-3718-4dfd-ad61-e411f30bfecb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "31c29d9a-2e36-46be-a3bd-f9623cbdcf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2933e57e-aef7-4a14-9fe4-84dd6304bdde",
        "cursor": {
          "ref": "b8d8a77a-3ec0-4037-999a-8e259d09865c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cf8f812c-ec5b-41e5-acbd-e4777ff75114"
        },
        "item": {
          "id": "2933e57e-aef7-4a14-9fe4-84dd6304bdde",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6ef5ecf1-1b54-42c4-8451-1856124e8c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912148c9-ab52-4ac0-b511-fc57e2ae881c",
        "cursor": {
          "ref": "9aee209d-3c39-4b12-97c8-67340ecf2cff",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "329a06c9-6040-426a-ad5b-7bd8bdd88553"
        },
        "item": {
          "id": "912148c9-ab52-4ac0-b511-fc57e2ae881c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ba6b8310-01c0-4204-86ab-79b72ff0305a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f51e4a0-da44-467b-8cd0-ce35d81d8b04",
        "cursor": {
          "ref": "7dba8963-194e-4268-9c31-47586ab30879",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "80a0c7c8-5de4-4f29-aa2d-e1dcd89c9f95"
        },
        "item": {
          "id": "0f51e4a0-da44-467b-8cd0-ce35d81d8b04",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7ccaaecc-116b-47aa-bf15-842d45944328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12689809-1736-40fd-ab1f-9a7394d38b55",
        "cursor": {
          "ref": "573bc7b2-44c2-4505-8112-9ddace938502",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e2defa67-4121-4ebf-b04b-db65709ce46e"
        },
        "item": {
          "id": "12689809-1736-40fd-ab1f-9a7394d38b55",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8be8ef5b-b47f-427e-b89b-fe7563b25b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda10000-56e7-41d4-9f4e-e4a7c9ff7c6a",
        "cursor": {
          "ref": "703dfbf2-a17a-4043-a529-d468b24b8e0c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "626c5743-ac93-4f7a-94e6-c9802b68bee9"
        },
        "item": {
          "id": "eda10000-56e7-41d4-9f4e-e4a7c9ff7c6a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0545dc65-5c74-483b-b24f-796e5b62b4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e4d25a-b310-4a3d-be20-a676299d71e1",
        "cursor": {
          "ref": "a775cba8-d74e-47d7-9336-d74bfbb8ae9f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2cbadcda-1d2e-4cd9-a0be-9073545f7b66"
        },
        "item": {
          "id": "b7e4d25a-b310-4a3d-be20-a676299d71e1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "98aa0a5e-9e3d-4609-bfad-87931630bfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a4d4cf-257d-4a30-97b7-aa7f6759a5cc",
        "cursor": {
          "ref": "dc2bf703-6084-4916-be36-9cb3f4c0e9ae",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6a52e7f3-e343-48d5-8f62-0d5aaf967265"
        },
        "item": {
          "id": "65a4d4cf-257d-4a30-97b7-aa7f6759a5cc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2c74a1f8-e442-4d8f-be00-9c79165b1fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de23066-4da4-4e52-a4f3-a31c7dda9e71",
        "cursor": {
          "ref": "242e3eac-20e1-4be0-a0ee-23c6da9f5959",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7cf23c2e-33fe-4af5-b1fe-a12de60be865"
        },
        "item": {
          "id": "7de23066-4da4-4e52-a4f3-a31c7dda9e71",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c488925c-14e6-4738-8dbb-9ff43ef95922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fe5ead-37bb-4398-8ce5-fdd5f0ece4e2",
        "cursor": {
          "ref": "ca36a5f0-44e0-4645-b05a-9a23c39c3998",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3d88037c-f832-4060-97c7-bf3e495b030f"
        },
        "item": {
          "id": "34fe5ead-37bb-4398-8ce5-fdd5f0ece4e2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cff33e4d-c180-4fa4-a209-480d07175ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1dce65-bb2e-4023-b78d-b06057c55cd3",
        "cursor": {
          "ref": "fd648d0c-a543-4b94-8b36-0b191357af6e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7817e3f3-3742-450a-94f3-910bb782a316"
        },
        "item": {
          "id": "6d1dce65-bb2e-4023-b78d-b06057c55cd3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0be95cb3-0550-496e-8062-95f1ff27ed4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7a7ce4-8cc4-4ed4-8d88-71c11cc4c3a3",
        "cursor": {
          "ref": "f61e1d8d-cedd-49d4-aa0a-77d1810d1306",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "20293fca-09ee-40df-b9ba-6a58fa6d3345"
        },
        "item": {
          "id": "4e7a7ce4-8cc4-4ed4-8d88-71c11cc4c3a3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4710c24e-1924-4aed-a563-4bfff1f9f12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fab595e-4dbf-4ba4-b382-7aa6392324a4",
        "cursor": {
          "ref": "ea7549eb-16a5-4226-acef-0cedb9f8d5dc",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9c0386b2-d4a4-4128-adc7-5853142f8d09"
        },
        "item": {
          "id": "0fab595e-4dbf-4ba4-b382-7aa6392324a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "39ed2a37-a4ac-42db-a451-2cb5a43032e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebb0b43-de0d-4a27-a988-6e928f71ea1c",
        "cursor": {
          "ref": "ac0732db-a490-4751-8bf6-b5ed517aaac1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9f0c8fa9-f816-4529-b535-9aea7b00df8c"
        },
        "item": {
          "id": "bebb0b43-de0d-4a27-a988-6e928f71ea1c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a89e7d5e-f821-4e8f-9829-0c63c4244be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9aa08f-e515-41e7-bfec-061bf73dc8f5",
        "cursor": {
          "ref": "d7abdf0f-3905-4488-b524-3cf3f8f48b62",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "52731a87-e020-44ac-8f14-4d4eb5938e44"
        },
        "item": {
          "id": "df9aa08f-e515-41e7-bfec-061bf73dc8f5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5aaa6129-521c-4bde-b684-6ff0d7ebb7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb19a230-6972-428c-a815-0e98ee9b6017",
        "cursor": {
          "ref": "c3383fc4-bb91-4b80-88ad-382bc07ff4c8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d4289a5e-ca64-4936-bc5c-8d066cfc3322"
        },
        "item": {
          "id": "fb19a230-6972-428c-a815-0e98ee9b6017",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "51b6607e-e8d5-4e56-8a30-a55917f20f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad18a6-7583-4357-8054-097b1567b71b",
        "cursor": {
          "ref": "d3e3ddcf-680f-40fb-ad9b-f6950e785221",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "98b25fa6-b55a-4068-84d8-bfc44db0e6d6"
        },
        "item": {
          "id": "69ad18a6-7583-4357-8054-097b1567b71b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f372871e-47dc-4607-83a1-08ccfc627796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64208e2b-b380-4cb7-808c-a2937bb39c28",
        "cursor": {
          "ref": "f3db5e13-2f49-4dce-84b6-8694e85354b3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b021d1ea-0d0a-4cc4-904e-66feb113cca8"
        },
        "item": {
          "id": "64208e2b-b380-4cb7-808c-a2937bb39c28",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "27360d37-0cd2-45a0-82dd-64b5152e26ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795c145-9c63-47b1-84dc-affd586cc464",
        "cursor": {
          "ref": "2f29e3b7-900b-4b1b-9597-e192482cfa04",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "90e52f9d-f8d7-4bf4-81a1-c9d12ef0a0de"
        },
        "item": {
          "id": "0795c145-9c63-47b1-84dc-affd586cc464",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "29d76be8-e73d-4fe9-bec6-d2ef1382b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4687564-3927-49fb-b9eb-97c24fa20704",
        "cursor": {
          "ref": "4b02fed5-ae6b-40f8-9d40-e4eddeebb46b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f3ba445b-c6f8-4480-bc3f-5869f8fd7947"
        },
        "item": {
          "id": "b4687564-3927-49fb-b9eb-97c24fa20704",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eb4df883-bd04-4d55-ab84-017f5d25c9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b94fc0d-b777-4d58-b59a-1c0e06e0a747",
        "cursor": {
          "ref": "e6ea1c7b-2d94-4c2e-990e-7c08b35b8dbf",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8e0ed961-1ab1-4c4a-ab5e-1969f327f915"
        },
        "item": {
          "id": "3b94fc0d-b777-4d58-b59a-1c0e06e0a747",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d830f7f9-8312-4787-ad5c-c188609de255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17aaa86-6e14-4a1a-b09a-6698d33a1337",
        "cursor": {
          "ref": "771b0f7b-509a-4de0-b312-0b7b5241bc23",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2531b952-e76a-4b5b-9f31-cc17d8bc8ac2"
        },
        "item": {
          "id": "a17aaa86-6e14-4a1a-b09a-6698d33a1337",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f4944ab9-1ed9-4c78-b509-e10521987be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f9ea3f-5756-4456-b908-f45f274493cd",
        "cursor": {
          "ref": "4aae4ed0-bb37-4f2e-8c1f-7071c1baedde",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "10dbab9e-b7c5-478c-bd36-2507c78311f9"
        },
        "item": {
          "id": "b3f9ea3f-5756-4456-b908-f45f274493cd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9cfec380-80df-4f26-a98f-cd3229f6624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afb07c6-481c-4380-969a-a8ab0732b3e6",
        "cursor": {
          "ref": "cb0d9962-7b7a-4933-845a-df72143ef7ec",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "833031ca-ee4e-4e29-9d2a-486e038060b2"
        },
        "item": {
          "id": "6afb07c6-481c-4380-969a-a8ab0732b3e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a554dc36-590d-4cf4-9973-a8fd29964543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59274dda-80e3-413f-8280-d498dbfbe18a",
        "cursor": {
          "ref": "cbabd33a-2c4b-4e80-b921-b17971c8408c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "46ab1b03-e203-436b-9f60-f387995fcc3b"
        },
        "item": {
          "id": "59274dda-80e3-413f-8280-d498dbfbe18a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9efa75e0-c05f-491b-bfec-85436ebc3346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89333622-5780-4168-8d9d-4ee926ec07cd",
        "cursor": {
          "ref": "445e441b-a101-4fbe-a4a7-9b1941ecbacf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9f86eccd-208e-480d-b2ca-cf7756512a56"
        },
        "item": {
          "id": "89333622-5780-4168-8d9d-4ee926ec07cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e6d9863d-edef-4b30-b1e2-d6e9231ba5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a3508b-5100-4ad7-b849-fff64d235b9d",
        "cursor": {
          "ref": "e1066726-038b-4a60-ae79-f5ab83f9e680",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ad59563b-e264-42d5-bca5-3c3dda30b586"
        },
        "item": {
          "id": "94a3508b-5100-4ad7-b849-fff64d235b9d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1b96c8b8-8d57-45e4-9dea-20208ca7431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305b8d0d-7bb2-42c0-99d5-cf8398dafbb7",
        "cursor": {
          "ref": "90023aba-a300-4c11-8397-c44396445d03",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "99c433bc-4288-4f92-b67a-ac2ffe2a1999"
        },
        "item": {
          "id": "305b8d0d-7bb2-42c0-99d5-cf8398dafbb7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d8596b6-7454-4cbd-9bf2-c25b9e833600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea246761-6c74-4168-b363-cfb9cd72fb3a",
        "cursor": {
          "ref": "16ce7d66-b09c-4a51-b43f-74cb66cda5f6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0aaf23bc-142d-42b9-8a7a-dc6ce487202a"
        },
        "item": {
          "id": "ea246761-6c74-4168-b363-cfb9cd72fb3a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5ef5e126-9359-4c09-ac16-8a5dfa1d827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a023b8-334c-4c56-9865-4726f086dbe8",
        "cursor": {
          "ref": "80aaa794-61a5-4b2c-86f6-bcdd28f2dfc3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2081358a-5898-4bf4-9269-f191591d6f5f"
        },
        "item": {
          "id": "06a023b8-334c-4c56-9865-4726f086dbe8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca9c4646-f187-4aa4-8d9c-4d5cca469c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1fde8a-f58d-408d-91d4-0279cb4410ec",
        "cursor": {
          "ref": "47ea2e2a-a234-4058-917d-fd1612d3d3a3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5b14a875-db35-4146-803a-8229cc00c663"
        },
        "item": {
          "id": "1c1fde8a-f58d-408d-91d4-0279cb4410ec",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bdb2a600-f64b-4cbc-86d7-7adb70cbafdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc3375e-66dd-4050-b6d5-d5b8ded846b8",
        "cursor": {
          "ref": "f7870dc8-463b-491b-979e-5257a1d94c19",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ea2c02e3-248f-42c1-bbf0-3cce7b39e9d0"
        },
        "item": {
          "id": "fcc3375e-66dd-4050-b6d5-d5b8ded846b8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a19a9fd2-c203-4d2b-8f87-4ab89948faf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a19715-eb77-4b41-92ed-8db48caff12b",
        "cursor": {
          "ref": "da0bd084-8ba5-4189-a00f-5ac75eba2bc3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a5364fab-443a-4a70-8c66-c15634ee4e4f"
        },
        "item": {
          "id": "32a19715-eb77-4b41-92ed-8db48caff12b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6b029a56-08a0-4b78-ad43-cd3b0bf9f812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b7a7d-aa31-4843-8732-69bf3a6715a1",
        "cursor": {
          "ref": "036ef7af-7979-4bc0-bbec-c1f5316289c2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a6ed7de2-fc08-4a3a-ae86-e546281a25af"
        },
        "item": {
          "id": "607b7a7d-aa31-4843-8732-69bf3a6715a1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3b4703d9-9585-4783-ad7b-085d54698af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52acaafe-786d-406c-ae02-1c941d74c19a",
        "cursor": {
          "ref": "06e2186d-c6bf-481b-bf97-0451fc477ebb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4bbe858d-e09d-4d24-af38-20e9a0e1df95"
        },
        "item": {
          "id": "52acaafe-786d-406c-ae02-1c941d74c19a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "046dcd33-38a9-4f27-984f-46ae710f3e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25a719-b0df-4527-b844-4f3c0a315ad6",
        "cursor": {
          "ref": "f72c8ee2-d692-49a1-81c8-b1ce048064e2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "65beeec7-b011-41a9-b5c0-7f5095c7c7db"
        },
        "item": {
          "id": "8a25a719-b0df-4527-b844-4f3c0a315ad6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "38b06bbd-58a7-4421-8df5-357f61344bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fda2223-c2f6-47bc-a845-e6c6fa40c326",
        "cursor": {
          "ref": "15eb893c-542a-48c5-98e1-f13db170b1e8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "41e4de15-9997-4d99-b71b-a45d47fd6d49"
        },
        "item": {
          "id": "8fda2223-c2f6-47bc-a845-e6c6fa40c326",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "51640185-87b9-4b90-9520-27cdd2daf73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e894ed5-5afa-4f5e-ba1b-65e787559b2a",
        "cursor": {
          "ref": "d2cf8f11-c5e0-4552-a33a-3d2415c9e39f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "71f1a2fa-fd70-413d-97a6-3c1f835b4e0f"
        },
        "item": {
          "id": "1e894ed5-5afa-4f5e-ba1b-65e787559b2a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2b40ee9c-7e10-4118-b113-139ece1d4429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad9e4c8-cc00-45b1-a1c9-a525cb32c304",
        "cursor": {
          "ref": "fd03d4b3-4b5d-4634-bd75-960250c11e3c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7b6ae457-e028-4ec1-bd7c-cdcee9156e44"
        },
        "item": {
          "id": "4ad9e4c8-cc00-45b1-a1c9-a525cb32c304",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b2b38cd7-2aa9-43ad-82b7-d56d59161f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6119361d-d8be-4189-929d-3bc0ad32a84e",
        "cursor": {
          "ref": "8bc3e382-213b-46ef-b9ea-ab77a6a62bc8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "057b88c8-70a0-4bcd-aff2-ebb13f33219b"
        },
        "item": {
          "id": "6119361d-d8be-4189-929d-3bc0ad32a84e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "28a2fc4c-b0c8-4993-8766-42b3ebb7002c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe4e28-d87d-456b-a3dd-9c7bfa687bd0",
        "cursor": {
          "ref": "3a7a56c9-8352-49fa-9a6b-1ba49c2e404b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c179700e-d1a7-41d3-b68a-c20d6807cef3"
        },
        "item": {
          "id": "6abe4e28-d87d-456b-a3dd-9c7bfa687bd0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa45f5a6-aa8e-4460-aadd-f37617c72ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890e5db5-97f0-4336-b00b-f75bf1116de5",
        "cursor": {
          "ref": "a679ba65-1f4b-44e8-bbc4-a3f01e063025",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3d7f549c-14fc-474b-8fb2-653519fd2961"
        },
        "item": {
          "id": "890e5db5-97f0-4336-b00b-f75bf1116de5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd1e3871-fd35-4b93-a326-aa5547b45d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a3e091-99e8-4e5e-87b5-60526b69ea71",
        "cursor": {
          "ref": "24316c48-ebff-46f6-a394-8205f08cc20b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ce54bfb-05ae-4dad-a2c5-d81cc5c2f4b2"
        },
        "item": {
          "id": "11a3e091-99e8-4e5e-87b5-60526b69ea71",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f06269a2-c932-4e3e-bdce-b528441ee290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f77166-24ff-40df-abff-b0bbf1ccbc47",
        "cursor": {
          "ref": "dcbb0f45-51c9-4076-842c-18c557eaffbe",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a60b5a62-9c0e-4502-8cbe-0e0f71ef24bb"
        },
        "item": {
          "id": "94f77166-24ff-40df-abff-b0bbf1ccbc47",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3f20c2c7-65e9-43b9-bc20-3e378369bb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f5a719-e2f2-48a8-8c4f-c4326fce357b",
        "cursor": {
          "ref": "856fbbd0-7b69-492d-8093-7a2dfa420f5c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fc4a0fb8-b694-458c-8d1f-95c3b94331c3"
        },
        "item": {
          "id": "d7f5a719-e2f2-48a8-8c4f-c4326fce357b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2ed276a0-fded-4136-8a04-b28e5b4c9ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd8ab49-7dd8-444b-9793-70a8b3e7a25d",
        "cursor": {
          "ref": "2b61ab69-139c-4cb0-a496-7f1c4613b8e6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "705ccb58-acaa-4f14-8ef3-15e8fc8e9579"
        },
        "item": {
          "id": "bfd8ab49-7dd8-444b-9793-70a8b3e7a25d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ac1c6fb4-2e6f-4e05-ba99-986f552908d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df5f0d5-31b8-4f76-b32d-168ec1eced87",
        "cursor": {
          "ref": "af6a6481-71b7-43b2-9e27-46e25ea2dbd6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bbf06ea9-fd95-46da-ba18-3bd45b38bf6d"
        },
        "item": {
          "id": "9df5f0d5-31b8-4f76-b32d-168ec1eced87",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82176a31-e997-43a8-95cc-eced3a2ce857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8386c5-13dd-4d21-b464-6d00e0adba6e",
        "cursor": {
          "ref": "a6e41a65-b7ba-47b5-937e-945a6aef0b80",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a3298795-2e36-423d-881e-cc682b8fdfe9"
        },
        "item": {
          "id": "6f8386c5-13dd-4d21-b464-6d00e0adba6e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "28058b1d-b9cb-48ee-b5de-a45b1b59e540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0ecbf6-86a4-4b43-b84b-7ca88f98a0b9",
        "cursor": {
          "ref": "142775ed-3ea6-4a39-afdb-6f4abd32e95c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8acfa702-dec4-4cbb-960f-3fb7e5ea74c3"
        },
        "item": {
          "id": "3c0ecbf6-86a4-4b43-b84b-7ca88f98a0b9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1d5c38e5-ca6a-4313-98b1-9df9e7c52da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e0fd80-0ba7-4c7a-9c85-3463d886c265",
        "cursor": {
          "ref": "08298478-141f-4ff3-9107-aa30633771e2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "28b2d8bb-35fa-4315-9e26-6869688010b7"
        },
        "item": {
          "id": "d2e0fd80-0ba7-4c7a-9c85-3463d886c265",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bffac485-a635-4c1b-836e-75c15d1fa33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f88506c-bb79-4de7-844d-72f1d4014f78",
        "cursor": {
          "ref": "3cf6b7a8-dd99-49af-8cb7-220eb2c1626e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1790ac6b-7b5b-4d5e-9a8e-3f332169b5be"
        },
        "item": {
          "id": "7f88506c-bb79-4de7-844d-72f1d4014f78",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5830244b-a621-430f-be8d-877c441efbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffff93b-4feb-401c-ad32-a6af9431c5ea",
        "cursor": {
          "ref": "d7bd2927-7008-49f5-9116-e0fc83d2e69e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6c1d66e7-dc43-416b-b8c9-e6c62cd40066"
        },
        "item": {
          "id": "5ffff93b-4feb-401c-ad32-a6af9431c5ea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ffd380fa-1957-4bd1-ac70-21f871d4980f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a50b7bc-1935-4e46-bea0-db7512273607",
        "cursor": {
          "ref": "461c12c6-4f0b-43c2-93b5-444c67cbb3c7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ea061b17-5fd1-4909-b536-cb37d6fb53d8"
        },
        "item": {
          "id": "7a50b7bc-1935-4e46-bea0-db7512273607",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "15c95b70-33a1-4296-ae58-5a4f5ea8f736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2ab75f-465f-43f8-98f3-2c96aae08ce5",
        "cursor": {
          "ref": "16b7c375-8136-46d2-bce5-764a46759d82",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a4afde11-0953-4890-806f-cb78ffb1aca5"
        },
        "item": {
          "id": "5f2ab75f-465f-43f8-98f3-2c96aae08ce5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "68ccaa3b-7fee-436b-8d81-0ec5bdcc6896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fef0f1-916d-462a-9d0f-dab8ef060818",
        "cursor": {
          "ref": "2e6b51ae-89b0-4a44-957a-a6a6c936977c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ccde125c-7574-422b-817e-42f37ad885d8"
        },
        "item": {
          "id": "56fef0f1-916d-462a-9d0f-dab8ef060818",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2272a9d8-6ea1-47ab-83ce-b9a3af42d522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0812f4a-25af-4217-bac4-bcce139f7e21",
        "cursor": {
          "ref": "93fab212-9ea0-42e3-bc67-46c91924aa30",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "945fad71-cf84-499f-8018-27201be48c6c"
        },
        "item": {
          "id": "e0812f4a-25af-4217-bac4-bcce139f7e21",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "31a99ff5-688a-4638-b022-52e4a1d9a517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d31cc4-083b-4649-9996-c8efacafa4c6",
        "cursor": {
          "ref": "2d658e0c-245d-44fb-b0f2-e59b5fc23407",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2de068e-af54-4fea-8dc1-a817ada7d71c"
        },
        "item": {
          "id": "66d31cc4-083b-4649-9996-c8efacafa4c6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cc63b676-005d-43e2-a0ea-b2ea690ac42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9467a7a0-e001-4a3b-a756-02a127f08d70",
        "cursor": {
          "ref": "0dc553e4-f3d9-4384-96c1-283ac697f32e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "de9ce3b2-5dad-4437-a931-d2821898bbef"
        },
        "item": {
          "id": "9467a7a0-e001-4a3b-a756-02a127f08d70",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "66711592-5e9d-4718-a8eb-647a79bf5e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75335b2d-65dc-4b24-9700-6c8261adfe02",
        "cursor": {
          "ref": "e3ed252a-cdb6-4b21-9c0d-b0647f65932d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6e1167da-7d0e-41b4-97f1-c77980d19cca"
        },
        "item": {
          "id": "75335b2d-65dc-4b24-9700-6c8261adfe02",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fa5bcb35-f595-4cf8-a891-743363ea7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee793af-5d07-4047-86e3-98e48b9cbaef",
        "cursor": {
          "ref": "83a0969f-90ad-4086-9f13-4f33b16cc191",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ac5dbcbf-d8d6-4011-b882-06a963634be0"
        },
        "item": {
          "id": "8ee793af-5d07-4047-86e3-98e48b9cbaef",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0855b85a-136d-4995-991c-46642e3c1801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e9a5ca-ecfd-4b39-8d1c-81d3bd4e95c3",
        "cursor": {
          "ref": "05b30601-34ac-42f4-b38b-f3f6023bca7e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4b9b7619-2949-439a-b19f-2b920ef0aebe"
        },
        "item": {
          "id": "02e9a5ca-ecfd-4b39-8d1c-81d3bd4e95c3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5654e067-8b28-40ea-bfcd-c955d8850a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac9456-30da-4ed3-97b7-666235fdb668",
        "cursor": {
          "ref": "c11f9c29-4072-496c-9a43-b76942eed43b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "29920cea-8787-4f6f-a691-9fda02774614"
        },
        "item": {
          "id": "acac9456-30da-4ed3-97b7-666235fdb668",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ddb9c6d7-7403-43f4-9d2b-ee7b0e63687c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b4562d-e288-455b-93b2-34a47a78cf5d",
        "cursor": {
          "ref": "9865cc4a-e12f-40dd-97ab-e5fec1aa93eb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "189f5b7e-9374-42d0-b161-0ad9c85ec57d"
        },
        "item": {
          "id": "14b4562d-e288-455b-93b2-34a47a78cf5d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "12b45f85-7893-4663-9b9d-f139d3da09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6038a53f-5f92-4bc8-9f9f-782f0637519c",
        "cursor": {
          "ref": "5e63ed54-8d70-4d79-bc24-fa1ecf7d796b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6e94e2ad-680e-43e6-8087-b8b7e34ae48a"
        },
        "item": {
          "id": "6038a53f-5f92-4bc8-9f9f-782f0637519c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "510a1099-9f17-4e6c-bc01-740d7b679ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b5136b-d4d9-44d3-8f6c-e896bfd012d4",
        "cursor": {
          "ref": "ec322afc-41b3-4f3e-a37d-05ace0787a72",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eef3e966-1292-4f8d-8221-1be40e24486a"
        },
        "item": {
          "id": "08b5136b-d4d9-44d3-8f6c-e896bfd012d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b80a97f-37d3-486c-ae19-3f24aa8615f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50e5116-d0a6-465d-929f-8d45c932958b",
        "cursor": {
          "ref": "ad7ccbdf-ab13-4857-acee-d51019694aaa",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0a5e86c7-2547-4bf7-8b9c-2526611bcbda"
        },
        "item": {
          "id": "f50e5116-d0a6-465d-929f-8d45c932958b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "232f3651-3c46-468a-88c1-20d61f99c988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742864a3-913c-4984-b486-98c5209dcf97",
        "cursor": {
          "ref": "32b5fc2b-8a45-4cac-a7d8-68d7b4071d06",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ad4f8909-e1d9-4edb-aefa-26221e3d1f54"
        },
        "item": {
          "id": "742864a3-913c-4984-b486-98c5209dcf97",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d7d5a206-9c44-43e5-a899-fef4d6b6b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8053370-6c4b-473a-b670-558b9c32c723",
        "cursor": {
          "ref": "a726ff87-1256-4207-95c8-64db4dcfbe89",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f8132841-bd19-43b7-8b38-4502a92dd76b"
        },
        "item": {
          "id": "b8053370-6c4b-473a-b670-558b9c32c723",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "61cffea7-2feb-4ade-b776-203af252fbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf8b1af-82c8-491b-9c99-2e6661bd516e",
        "cursor": {
          "ref": "713e8ed2-1290-49f5-8ed1-617526563204",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "080850d3-9fda-44c9-a16f-1fef043762d5"
        },
        "item": {
          "id": "6cf8b1af-82c8-491b-9c99-2e6661bd516e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "04b7e871-97db-4286-9de3-d17e10278e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f19d49a-2129-4c52-8785-731b00d7ec69",
        "cursor": {
          "ref": "05a0f5bf-2743-4ca5-b15e-6bca1fb17f21",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e99b955d-3c91-4fb7-a396-23283ebfa667"
        },
        "item": {
          "id": "2f19d49a-2129-4c52-8785-731b00d7ec69",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3916facb-fb76-4267-a6d3-2ce83c6d5f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fb0b10-0d03-409f-8dea-6421c17ccedf",
        "cursor": {
          "ref": "981458f2-16c2-4c9a-aa7b-c19f80545063",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "558e12f2-ff2d-4a0f-bd7f-03a9f93ec78d"
        },
        "item": {
          "id": "62fb0b10-0d03-409f-8dea-6421c17ccedf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "180b888f-8f1d-4d9a-9730-1ce7aef469b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff99b69f-15d5-41f8-9469-003dd1712e30",
        "cursor": {
          "ref": "155a1d0b-0353-44e1-8e86-352dd4e94050",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "310e9bed-6012-4da0-aecf-057bd65129bc"
        },
        "item": {
          "id": "ff99b69f-15d5-41f8-9469-003dd1712e30",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b238618d-21b8-4950-9dfd-d1669ca7ac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6799f750-ad8b-4d45-bf6e-babd12de5648",
        "cursor": {
          "ref": "ed4d1d4c-5440-4b8e-9936-c0e915dbf13d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2c652b87-0e36-4376-9088-65c82221c0c0"
        },
        "item": {
          "id": "6799f750-ad8b-4d45-bf6e-babd12de5648",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f082807d-b980-4630-afd6-09066357a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929d83ab-45dc-4d2c-84c8-88adbef7ae33",
        "cursor": {
          "ref": "09c3ff53-9ba7-4605-8eb5-ccf563fb0f5a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4fa92dd3-1088-40b6-b1c7-a43a7fe3d34d"
        },
        "item": {
          "id": "929d83ab-45dc-4d2c-84c8-88adbef7ae33",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c52d4077-05e4-4a58-acb6-ce8ad03a96cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6e1f09-c2c0-498f-aa7d-ee9206282e36",
        "cursor": {
          "ref": "d908c725-789c-4d1a-82be-5d3d72d79e0e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "be236715-2738-4458-843c-247c040d59c0"
        },
        "item": {
          "id": "8c6e1f09-c2c0-498f-aa7d-ee9206282e36",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6a2bbb0e-047a-4909-be0e-ff651affe31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cbafee-cd1a-465c-8ec3-386a0136d8b5",
        "cursor": {
          "ref": "1aca21d9-0e38-491f-a348-ae97759f70db",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "82c94561-e29e-42de-8342-44d2e4ec7a6a"
        },
        "item": {
          "id": "08cbafee-cd1a-465c-8ec3-386a0136d8b5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7ab10f82-6db0-4af2-a8e9-bc8d76a921a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c3c5b9-448e-4335-9d7d-701e76fd0ad4",
        "cursor": {
          "ref": "7d5178de-e68b-4034-bab7-43689753466e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0e60967b-7d94-489c-826c-48122cc7d782"
        },
        "item": {
          "id": "36c3c5b9-448e-4335-9d7d-701e76fd0ad4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bcab210a-a821-4ed5-91d7-36465a437178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0badaf09-aba0-4660-846b-8f74930b7e78",
        "cursor": {
          "ref": "2d9c6873-ac40-459e-9067-621d6c481fba",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9add5746-a394-4bd3-9595-1eaf36c41140"
        },
        "item": {
          "id": "0badaf09-aba0-4660-846b-8f74930b7e78",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c61905cf-395a-4b9a-b163-caa6f401b7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c567ad-20fb-4410-ae90-7459aff5c7ed",
        "cursor": {
          "ref": "6de1e907-f036-4bab-abff-35d7ddcb7007",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "95946223-ae25-4236-9e64-3f58ee345c71"
        },
        "item": {
          "id": "63c567ad-20fb-4410-ae90-7459aff5c7ed",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b6d7b7d9-d7c9-4559-86dc-72c336ba34c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1a61d0-a537-47a9-872f-78175527558a",
        "cursor": {
          "ref": "21cb08ac-5a7b-4923-9a3a-f6fd9104d9b4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2bd70411-9c6c-4328-842f-df989f0b3612"
        },
        "item": {
          "id": "9d1a61d0-a537-47a9-872f-78175527558a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cb02dda0-8fd7-435e-b2d1-6e6476f56681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ddff22-f005-40aa-97fe-abec4d8a1714",
        "cursor": {
          "ref": "392de98e-475a-4077-aa76-cf3f53e403aa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3770655e-3f5f-4b25-9ad6-e22c0c6dbf29"
        },
        "item": {
          "id": "16ddff22-f005-40aa-97fe-abec4d8a1714",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5172fb14-7b41-40c7-a180-9a21a6f32e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b85576-37b6-4d50-922b-5f5600640cd0",
        "cursor": {
          "ref": "2bc6a261-bfdf-4a5f-af4e-72fabd9988d6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ca165abf-80c1-48f4-828c-108270a22e2f"
        },
        "item": {
          "id": "03b85576-37b6-4d50-922b-5f5600640cd0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bb5e38ff-f917-43cf-93f6-0aa2879d18db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d37639b-4a6f-4264-b817-4b4c6353b2f7",
        "cursor": {
          "ref": "f1cfb3f6-4811-4f8e-bba7-8e3bfba77673",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cd51045a-4109-40d7-bab0-61fe25bfae42"
        },
        "item": {
          "id": "7d37639b-4a6f-4264-b817-4b4c6353b2f7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9ed32f44-f98c-4287-b880-c34e3b16d9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d489fc-f175-4f95-b972-ed6d1c72462b",
        "cursor": {
          "ref": "5851880c-5e29-4c26-863c-ec4a5643a7de",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d464775a-4f95-41d5-a06f-86f37594c30c"
        },
        "item": {
          "id": "e9d489fc-f175-4f95-b972-ed6d1c72462b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9087eda1-1ce7-43e7-bf71-3ba8d858e8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724cbf6d-8bfa-4126-a48e-1639ce557daf",
        "cursor": {
          "ref": "2d834687-411c-421e-a268-9d8b2cc18c8e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ebaa46a8-688c-4b12-a8ef-d7ce2e474d32"
        },
        "item": {
          "id": "724cbf6d-8bfa-4126-a48e-1639ce557daf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "25cabea0-c7af-4ed0-98f9-15aceeecb5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c30cae-2971-4b29-b1b0-a64eb63d1532",
        "cursor": {
          "ref": "d754e9aa-8017-4c84-8b7f-563ac4a1058a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "25bf9c1a-3f93-43ce-ba48-bb19712d821b"
        },
        "item": {
          "id": "c5c30cae-2971-4b29-b1b0-a64eb63d1532",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "96fb62b3-8714-4311-a26d-d4d7fb43cc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfddf699-7f26-4f42-b477-5b267c0b75ed",
        "cursor": {
          "ref": "1f5c73d7-59fd-4bce-a989-2d7b8235a3c0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cdd993c1-f7f1-4882-a9ac-446b3fd6482c"
        },
        "item": {
          "id": "bfddf699-7f26-4f42-b477-5b267c0b75ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e991a062-6187-4808-ac60-77a66b8af691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1256aa7d-372c-490b-b718-777b71c80d83",
        "cursor": {
          "ref": "5faaed17-7f54-4026-b6c8-af70b2c62e74",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a79939d5-afc1-45af-a229-269053a0a99c"
        },
        "item": {
          "id": "1256aa7d-372c-490b-b718-777b71c80d83",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "852d10c8-f0a9-4490-aa1e-b3dc021f704f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece97362-efac-4b39-9b0f-ebd4b4eabca5",
        "cursor": {
          "ref": "b48735b3-66c3-4d7b-a608-e9c7f12d90a7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "de0d0bc8-bb95-44be-864c-3cc880f48a59"
        },
        "item": {
          "id": "ece97362-efac-4b39-9b0f-ebd4b4eabca5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "648ec1dc-c787-4527-810d-0702c5b6aeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf10a62a-f4b5-4660-98b5-49f252bce3af",
        "cursor": {
          "ref": "489e7ba3-46ab-472e-8462-19b33cfc2f64",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b32197f9-e1f0-41da-8bb7-6f63061e3e77"
        },
        "item": {
          "id": "bf10a62a-f4b5-4660-98b5-49f252bce3af",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "15427553-3b40-4ab2-9d8b-9497e4a049ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f1800a-56f4-4e6a-9c23-cd2c4998332a",
        "cursor": {
          "ref": "a2053bfa-acef-4a33-8543-8b41c0d46484",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0e4b4b29-0fe9-444d-a79e-442d9b0fedf2"
        },
        "item": {
          "id": "09f1800a-56f4-4e6a-9c23-cd2c4998332a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3ccd0e56-0348-4273-ae47-abbd4d064dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e660eb-6ed9-4013-83a6-57633919a5fb",
        "cursor": {
          "ref": "18307c85-2974-40bb-983c-0818bb3da86f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3ba35586-6bf9-419b-b942-cd65c9c5c4e2"
        },
        "item": {
          "id": "37e660eb-6ed9-4013-83a6-57633919a5fb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "73e3b033-4417-4ba5-b4fd-cce291d4d985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aeeff8-dbcc-42f3-9206-70d4b7744d7d",
        "cursor": {
          "ref": "32deab1c-1a38-4598-a991-84e2566976f0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "35423eb0-5a42-4fee-b287-1eefea7b1f12"
        },
        "item": {
          "id": "11aeeff8-dbcc-42f3-9206-70d4b7744d7d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "022007df-832a-4e96-a7f9-194957075571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb48c37-3bfb-44ce-8e33-790a7644856a",
        "cursor": {
          "ref": "308b0097-c624-4e64-8830-4a79155d0cc1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4f125805-1518-48cf-93f0-d49fea1f4f2d"
        },
        "item": {
          "id": "9cb48c37-3bfb-44ce-8e33-790a7644856a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39df46e1-0ed5-43c5-9d44-c055b2717caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57cbc1c-4dcb-4c8f-90a7-779459ee1e3a",
        "cursor": {
          "ref": "f697e6e4-3caa-40fe-ba59-59a3717be26f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "22131fe8-59f8-49c2-9426-1abfe0c9310a"
        },
        "item": {
          "id": "b57cbc1c-4dcb-4c8f-90a7-779459ee1e3a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4b931364-4e59-473e-9c91-c5b3100e9dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9541dd-48ca-484a-8deb-56ae10806541",
        "cursor": {
          "ref": "941face5-8f47-421a-b6a4-06bacf9d0c22",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "26fe1587-e2db-4551-ac8a-487177940a86"
        },
        "item": {
          "id": "3f9541dd-48ca-484a-8deb-56ae10806541",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "47195e3d-83a1-4fe2-8e59-5fd47a3c502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09640ec4-790d-496c-b77d-725a804b3059",
        "cursor": {
          "ref": "3895e457-34a4-44f1-9a0c-49e402eedd33",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "58ebeb6b-4c2c-4980-b3d5-3b216902d4a1"
        },
        "item": {
          "id": "09640ec4-790d-496c-b77d-725a804b3059",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "332abeac-02a5-4b52-aedc-1080e4b1e197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d307f48-450c-46b9-b833-69c3d4b12777",
        "cursor": {
          "ref": "e30877fe-57a3-41cc-ab48-de0711e159b7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eada5c0f-31fe-48ba-ac6d-0d4bde96afbe"
        },
        "item": {
          "id": "6d307f48-450c-46b9-b833-69c3d4b12777",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "74aa1a59-a14c-471b-80a4-25d1c6882d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec9f4b2-8042-4705-88b6-3a246ac5faa3",
        "cursor": {
          "ref": "a0865a16-21d6-408f-9e72-c824baf3956a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "63445872-b67f-48dc-8d84-6df32830abe0"
        },
        "item": {
          "id": "8ec9f4b2-8042-4705-88b6-3a246ac5faa3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "73531221-4cad-40bc-bf1a-034e3193d232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f6e840-5e4b-4973-82e9-cd6c6416c74e",
        "cursor": {
          "ref": "2338f5d2-3d2d-4a0d-ae62-0fba9e7a57cb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "baded7cc-c388-4547-a1d2-13fa7ae6423a"
        },
        "item": {
          "id": "83f6e840-5e4b-4973-82e9-cd6c6416c74e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f933979-571a-4694-b713-69b0b06c8110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49edce16-a9cf-4b0e-937d-3d38c7ddd3b1",
        "cursor": {
          "ref": "44ddb79d-d610-48aa-b76d-5c0bfdcc8237",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "55ad0c27-9b5a-4dd6-bea8-874941aa763d"
        },
        "item": {
          "id": "49edce16-a9cf-4b0e-937d-3d38c7ddd3b1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6f7c20ef-7405-47d0-b6f1-b28c197448de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bf1ef6-8872-4bc6-9757-8eba4f52ec65",
        "cursor": {
          "ref": "74e65f13-83c8-4e8a-a4f4-8d001b227c7a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ea287e16-8604-419e-ab90-9110f14ddeab"
        },
        "item": {
          "id": "20bf1ef6-8872-4bc6-9757-8eba4f52ec65",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d6e95721-1cde-4188-bf84-fe6cf4e7aa8f",
          "status": "OK",
          "code": 200,
          "responseTime": 2305,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8410ac13-0570-40ca-ae2f-ed537400f6d8",
        "cursor": {
          "ref": "683eb555-47dd-4adc-9619-b61b4255db43",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "935e62c1-cefd-4e1c-8fb1-21e893d43859"
        },
        "item": {
          "id": "8410ac13-0570-40ca-ae2f-ed537400f6d8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b528adce-0d82-41c5-b1da-392b7cb9852a",
          "status": "OK",
          "code": 200,
          "responseTime": 3751,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7775e081-7ff8-468c-b28d-aaa6e6a75aa5",
        "cursor": {
          "ref": "560eb752-7a21-4c98-ae67-a87600dc95f3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "05b70880-26c4-440f-8d3f-94e5ca035465"
        },
        "item": {
          "id": "7775e081-7ff8-468c-b28d-aaa6e6a75aa5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c92ec31b-ae9c-432a-a3d4-e8bf5ff368e5",
          "status": "OK",
          "code": 200,
          "responseTime": 3446,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d5c120-99e5-42bf-a099-363f21d6184f",
        "cursor": {
          "ref": "40e978ea-70fd-47ad-a11c-3e0b4644fc36",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28b7fdc1-0031-4e1f-9d6c-cfb85e21b5a8"
        },
        "item": {
          "id": "87d5c120-99e5-42bf-a099-363f21d6184f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2074a5ad-4097-44c8-abe0-84f16eb82648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d5c120-99e5-42bf-a099-363f21d6184f",
        "cursor": {
          "ref": "40e978ea-70fd-47ad-a11c-3e0b4644fc36",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28b7fdc1-0031-4e1f-9d6c-cfb85e21b5a8"
        },
        "item": {
          "id": "87d5c120-99e5-42bf-a099-363f21d6184f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2074a5ad-4097-44c8-abe0-84f16eb82648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e16531c-5cfe-4016-9073-b9ea11fdd4f7",
        "cursor": {
          "ref": "a13bc8d7-2658-41bf-8ac8-97f34a2a03ba",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "21a4b907-d9e7-4742-a4d3-9602bb898916"
        },
        "item": {
          "id": "1e16531c-5cfe-4016-9073-b9ea11fdd4f7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b290744b-4c00-4d57-96eb-36407fac93d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df476ddb-8b90-4996-a4ed-8ed373d3babb",
        "cursor": {
          "ref": "94800db8-fd61-42d0-951e-dcbed92a4a42",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "125b3a1a-96fc-4875-be49-dbc7719cbf9d"
        },
        "item": {
          "id": "df476ddb-8b90-4996-a4ed-8ed373d3babb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1148492d-dbc9-49d3-b37b-508651c252b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}